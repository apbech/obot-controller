ARM GAS  /tmp/ccfG3G71.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_msp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_PWR_DisableDeadBatteryPD,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	LL_PWR_DisableDeadBatteryPD:
  26              	.LFB358:
  27              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @file    stm32g4xx_ll_pwr.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief   Header file of PWR LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   ******************************************************************************
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #ifndef STM32G4xx_LL_PWR_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define STM32G4xx_LL_PWR_H
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #ifdef __cplusplus
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** extern "C" {
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #include "stm32g4xx.h"
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @addtogroup STM32G4xx_LL_Driver
ARM GAS  /tmp/ccfG3G71.s 			page 2


  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR)
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL PWR
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Private macros ------------------------------------------------------------*/
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Exported types ------------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Exported constants --------------------------------------------------------*/
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Constants PWR Exported Constants
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_CLEAR_FLAG Clear Flags Defines
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_WriteReg function
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CSBF                    PWR_SCR_CSBF
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF                    PWR_SCR_CWUF
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF5                   PWR_SCR_CWUF5
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF4                   PWR_SCR_CWUF4
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF3                   PWR_SCR_CWUF3
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF2                   PWR_SCR_CWUF2
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF1                   PWR_SCR_CWUF1
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GET_FLAG Get Flags Defines
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_ReadReg function
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUFI                    PWR_SR1_WUFI
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_SBF                     PWR_SR1_SBF
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF5                    PWR_SR1_WUF5
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF4                    PWR_SR1_WUF4
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF3                    PWR_SR1_WUF3
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF2                    PWR_SR1_WUF2
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF1                    PWR_SR1_WUF1
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_SR2_PVMO4)
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVMO4                   PWR_SR2_PVMO4
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_SR2_PVMO4 */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_SR2_PVMO3)
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVMO3                   PWR_SR2_PVMO3
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_SR2_PVMO3 */
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_SR2_PVMO2)
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVMO2                   PWR_SR2_PVMO2
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_SR2_PVMO2 */
ARM GAS  /tmp/ccfG3G71.s 			page 3


  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_SR2_PVMO1)
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVMO1                   PWR_SR2_PVMO1
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_SR2_PVMO1 */
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVDO                    PWR_SR2_PVDO
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_VOSF                    PWR_SR2_VOSF
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_REGLPF                  PWR_SR2_REGLPF
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_REGLPS                  PWR_SR2_REGLPS
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_VOLTAGE REGU VOLTAGE
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE1         (PWR_CR1_VOS_0)
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE2         (PWR_CR1_VOS_1)
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_MODE_PWR MODE PWR
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_MODE_STOP0                  (PWR_CR1_LPMS_STOP0)
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_MODE_STOP1                  (PWR_CR1_LPMS_STOP1)
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_MODE_STANDBY                (PWR_CR1_LPMS_STANDBY)
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_MODE_SHUTDOWN               (PWR_CR1_LPMS_SHUTDOWN)
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVM_VDDUSB_1 Peripheral voltage monitoring
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_PVME1)
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_COMP               (PWR_CR2_PVME1)     /* Monitoring VDDA vs. x.xV */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_PVME2)
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_FASTDAC            (PWR_CR2_PVME2)     /* Monitoring VDDA vs. x.xV */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_PVME3)
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_ADC                (PWR_CR2_PVME3)     /* Monitoring VDDA vs. 1.62V  */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_PVME4)
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_OPAMP_DAC          (PWR_CR2_PVME4)     /* Monitoring VDDA vs. 1x.xV   */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVDLEVEL PVDLEVEL
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_0                  (PWR_CR2_PLS_LEV0)  /* VPVD0 around 2.0 V */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_1                  (PWR_CR2_PLS_LEV1)  /* VPVD1 around 2.2 V */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_2                  (PWR_CR2_PLS_LEV2)  /* VPVD2 around 2.4 V */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_3                  (PWR_CR2_PLS_LEV3)  /* VPVD3 around 2.5 V */
ARM GAS  /tmp/ccfG3G71.s 			page 4


 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_4                  (PWR_CR2_PLS_LEV4)  /* VPVD4 around 2.6 V */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_5                  (PWR_CR2_PLS_LEV5)  /* VPVD5 around 2.8 V */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_6                  (PWR_CR2_PLS_LEV6)  /* VPVD6 around 2.9 V */
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_7                  (PWR_CR2_PLS_LEV7)  /* External input analog voltage   (
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_WAKEUP WAKEUP
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN1                 (PWR_CR3_EWUP1)
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN2                 (PWR_CR3_EWUP2)
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN3                 (PWR_CR3_EWUP3)
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN4                 (PWR_CR3_EWUP4)
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN5                 (PWR_CR3_EWUP5)
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_BATT_CHARG_RESISTOR BATT CHARG RESISTOR
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_BATT_CHARG_RESISTOR_5K      ((uint32_t)0x00000000)
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_BATT_CHARGRESISTOR_1_5K     (PWR_CR4_VBRS)
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GPIO GPIO
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_A                      ((uint32_t)(&(PWR->PUCRA)))
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_B                      ((uint32_t)(&(PWR->PUCRB)))
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_C                      ((uint32_t)(&(PWR->PUCRC)))
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_D                      ((uint32_t)(&(PWR->PUCRD)))
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_E                      ((uint32_t)(&(PWR->PUCRE)))
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_F                      ((uint32_t)(&(PWR->PUCRF)))
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_G                      ((uint32_t)(&(PWR->PUCRG)))
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GPIO_BIT GPIO BIT
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_0                  ((uint32_t)0x00000001)
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_1                  ((uint32_t)0x00000002)
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_2                  ((uint32_t)0x00000004)
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_3                  ((uint32_t)0x00000008)
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_4                  ((uint32_t)0x00000010)
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_5                  ((uint32_t)0x00000020)
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_6                  ((uint32_t)0x00000040)
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_7                  ((uint32_t)0x00000080)
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_8                  ((uint32_t)0x00000100)
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_9                  ((uint32_t)0x00000200)
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_10                 ((uint32_t)0x00000400)
ARM GAS  /tmp/ccfG3G71.s 			page 5


 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_11                 ((uint32_t)0x00000800)
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_12                 ((uint32_t)0x00001000)
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_13                 ((uint32_t)0x00002000)
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_14                 ((uint32_t)0x00004000)
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_15                 ((uint32_t)0x00008000)
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Exported macro ------------------------------------------------------------*/
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Macros PWR Exported Macros
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EM_WRITE_READ Common Write and read registers Macros
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Write a value in PWR register
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  __REG__ Register to be written
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  __VALUE__ Value to be written in the register
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WriteReg(__REG__, __VALUE__) WRITE_REG(PWR->__REG__, (__VALUE__))
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Read a value in PWR register
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  __REG__ Register to be read
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval Register value
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_ReadReg(__REG__) READ_REG(PWR->__REG__)
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Exported functions --------------------------------------------------------*/
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Functions PWR Exported Functions
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration Configuration
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Switch the regulator from main mode to low-power mode
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_EnableLowPowerRunMode
ARM GAS  /tmp/ccfG3G71.s 			page 6


 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableLowPowerRunMode(void)
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Switch the regulator from low-power mode to main mode
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_DisableLowPowerRunMode
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableLowPowerRunMode(void)
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if the regulator is in low-power mode
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_IsEnabledLowPowerRunMode
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledLowPowerRunMode(void)
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   uint32_t temp;
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   temp = READ_BIT(PWR->CR1, PWR_CR1_LPR);
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((temp == (PWR_CR1_LPR))?1U:0U);
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Switch from run main mode to run low-power mode.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_EnterLowPowerRunMode
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnterLowPowerRunMode(void)
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   LL_PWR_EnableLowPowerRunMode();
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Switch from run main mode to low-power mode.
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_ExitLowPowerRunMode
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_ExitLowPowerRunMode(void)
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   LL_PWR_DisableLowPowerRunMode();
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Set the main internal regulator output voltage
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          VOS           LL_PWR_SetRegulVoltageScaling
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  VoltageScaling This parameter can be one of the following values:
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
ARM GAS  /tmp/ccfG3G71.s 			page 7


 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRegulVoltageScaling(uint32_t VoltageScaling)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Get the main internal regulator output voltage
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          VOS           LL_PWR_GetRegulVoltageScaling
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRegulVoltageScaling(void)
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_VOS));
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR5_R1MODE)
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable main regulator voltage range 1 boost mode
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR5          R1MODE        LL_PWR_EnableRange1BoostMode
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableRange1BoostMode(void)
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable main regulator voltage range 1 boost mode
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR5          R1MODE        LL_PWR_DisableRange1BoostMode
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableRange1BoostMode(void)
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if the main regulator voltage range 1 boost mode is enabled
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR5          R1MODE        LL_PWR_IsEnabledRange1BoostMode
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval Inverted state of bit (0 or 1).
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledRange1BoostMode(void)
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   uint32_t temp;
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   temp = READ_BIT(PWR->CR5, PWR_CR5_R1MODE);
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((temp == (0U))?1U:0U);
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_CR5_R1MODE */
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable access to the backup domain
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          DBP           LL_PWR_EnableBkUpAccess
ARM GAS  /tmp/ccfG3G71.s 			page 8


 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableBkUpAccess(void)
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR1, PWR_CR1_DBP);
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable access to the backup domain
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          DBP           LL_PWR_DisableBkUpAccess
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableBkUpAccess(void)
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR1, PWR_CR1_DBP);
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if the backup domain is enabled
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          DBP           LL_PWR_IsEnabledBkUpAccess
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledBkUpAccess(void)
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   uint32_t temp;
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   temp = READ_BIT(PWR->CR1, PWR_CR1_DBP);
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((temp == (PWR_CR1_DBP))?1U:0U);
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Set Low-Power mode
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPMS          LL_PWR_SetPowerMode
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  LowPowerMode This parameter can be one of the following values:
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP0
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP1
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STANDBY
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_SHUTDOWN
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetPowerMode(uint32_t LowPowerMode)
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, LowPowerMode);
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Get Low-Power mode
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPMS          LL_PWR_GetPowerMode
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP0
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP1
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STANDBY
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_SHUTDOWN
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetPowerMode(void)
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
ARM GAS  /tmp/ccfG3G71.s 			page 9


 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_LPMS));
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR3_UCPD_STDBY)
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable (write 1) the USB Type-C and Power Delivery standby mode.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @note Enable just before entering standby when using UCPD1.
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          UCPD1_STDBY           LL_PWR_EnableUSBStandByModePD
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableUSBStandByModePD(void)
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY);
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable (write 0) USB Type-C and Power Delivery standby mode.
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @note Disable immediately after standby exit when using UCPD1,
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *      (and before writing any UCPD1 registers).
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          UCPD1_STDBY           LL_PWR_DisableUSBStandByModePD
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableUSBStandByModePD(void)
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY);
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check the USB Type-C and Power Delivery standby mode.
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          UCPD1_STDBY           LL_PWR_IsEnabledUSBStandByModePD
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledUSBStandByModePD(void)
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY) == (PWR_CR3_UCPD_STDBY))?1UL:0UL);
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_CR3_UCPD_STDBY */
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR3_UCPD_DBDIS)
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable (write 0) USB Type-C dead battery pull-down behavior
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * on UCPD1_CC1 and UCPD1_CC2 pins.
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @note After exiting reset, the USB Type-C “dead battery” behavior will be enabled,
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * which may have a pull-down effect on CC1 and CC2 pins. It is recommended to disable it
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * in all cases, either to stop this pull-down or to hand over control to the UCPD1
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * (which should therefore be initialized before doing the disable).
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          PWR_CR3_UCPD_DBDIS           LL_PWR_EnableUSBDeadBattery
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableUSBDeadBattery(void)
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
ARM GAS  /tmp/ccfG3G71.s 			page 10


 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable (write 1) USB Type-C dead battery pull-down behavior
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *  on UCPD1_CC1 and UCPD1_CC2 pins.
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @note After exiting reset, the USB Type-C “dead battery” behavior will be enabled,
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * which may have a pull-down effect on CC1 and CC2 pins. It is recommended to disable it
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * in all cases, either to stop this pull-down or to hand over control to the UCPD1
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * (which should therefore be initialized before doing the disable).
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          PWR_CR3_UCPD_DBDIS           LL_PWR_DisableUSBDeadBattery
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableUSBDeadBattery(void)
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check USB Type-C dead battery pull-down behavior
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         on UCPD1_CC1 and UCPD1_CC2 pins.
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @note After exiting reset, the USB Type-C “dead battery” behavior will be enabled,
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * which may have a pull-down effect on CC1 and CC2 pins. It is recommended to disable it
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * in all cases, either to stop this pull-down or to hand over control to the UCPD1
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * (which should therefore be initialized before doing the disable).
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          PWR_CR3_UCPD_DBDIS           LL_PWR_IsEnabledUSBDeadBattery
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit.
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledUSBDeadBattery(void)
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS) == (PWR_CR3_UCPD_DBDIS))?1UL:0UL);
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_CR3_UCPD_DBDIS */
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_USV)
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable VDDUSB supply
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          USV           LL_PWR_EnableVddUSB
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableVddUSB(void)
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR2, PWR_CR2_USV);
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable VDDUSB supply
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          USV           LL_PWR_DisableVddUSB
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableVddUSB(void)
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR2, PWR_CR2_USV);
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if VDDUSB supply is enabled
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          USV           LL_PWR_IsEnabledVddUSB
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccfG3G71.s 			page 11


 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledVddUSB(void)
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   uint32_t temp;
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   temp = READ_BIT(PWR->CR2, PWR_CR2_USV);
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((temp == (PWR_CR2_USV))?1U:0U);
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_IOSV)
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable VDDIO2 supply
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          IOSV          LL_PWR_EnableVddIO2
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableVddIO2(void)
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR2, PWR_CR2_IOSV);
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable VDDIO2 supply
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          IOSV          LL_PWR_DisableVddIO2
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableVddIO2(void)
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR2, PWR_CR2_IOSV);
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if VDDIO2 supply is enabled
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          IOSV          LL_PWR_IsEnabledVddIO2
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledVddIO2(void)
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   uint32_t temp;
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   temp = READ_BIT(PWR->CR2, PWR_CR2_IOSV);
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((temp == (PWR_CR2_IOSV))?1U:0U);
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable the Power Voltage Monitoring on a peripheral
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          PVME1         LL_PWR_EnablePVM\n
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME2         LL_PWR_EnablePVM\n
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME3         LL_PWR_EnablePVM\n
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME4         LL_PWR_EnablePVM
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  PeriphVoltage This parameter can be one of the following values:
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_COMP     (*)
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_FASTDAC  (*)
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_ADC      
ARM GAS  /tmp/ccfG3G71.s 			page 12


 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_OPAMP_DAC
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         (*) value not defined in all devices
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnablePVM(uint32_t PeriphVoltage)
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR2, PeriphVoltage);
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable the Power Voltage Monitoring on a peripheral
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          PVME1         LL_PWR_DisablePVM\n
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME2         LL_PWR_DisablePVM\n
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME3         LL_PWR_DisablePVM\n
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME4         LL_PWR_DisablePVM
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  PeriphVoltage This parameter can be one of the following values:
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_COMP     (*)
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_FASTDAC  (*)
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_ADC      
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_OPAMP_DAC
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         (*) value not defined in all devices
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisablePVM(uint32_t PeriphVoltage)
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR2, PeriphVoltage);
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if Power Voltage Monitoring is enabled on a peripheral
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          PVME1         LL_PWR_IsEnabledPVM\n
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME2         LL_PWR_IsEnabledPVM\n
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME3         LL_PWR_IsEnabledPVM\n
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         CR2          PVME4         LL_PWR_IsEnabledPVM
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  PeriphVoltage This parameter can be one of the following values:
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_COMP     (*)
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_FASTDAC  (*)
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_ADC      
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_OPAMP_DAC
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         (*) value not defined in all devices
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledPVM(uint32_t PeriphVoltage)
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   uint32_t temp;
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   temp = READ_BIT(PWR->CR2, PeriphVoltage);
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((temp == (PeriphVoltage))?1U:0U);
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Configure the voltage threshold detected by the Power Voltage Detector
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          PLS           LL_PWR_SetPVDLevel
ARM GAS  /tmp/ccfG3G71.s 			page 13


 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  PVDLevel This parameter can be one of the following values:
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_0
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_1
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_2
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_3
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_4
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_5
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_6
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_7
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetPVDLevel(uint32_t PVDLevel)
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   MODIFY_REG(PWR->CR2, PWR_CR2_PLS, PVDLevel);
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Get the voltage threshold detection
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          PLS           LL_PWR_GetPVDLevel
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_0
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_1
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_2
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_3
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_4
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_5
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_6
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_7
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetPVDLevel(void)
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR2, PWR_CR2_PLS));
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable Power Voltage Detector
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          PVDE          LL_PWR_EnablePVD
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnablePVD(void)
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR2, PWR_CR2_PVDE);
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable Power Voltage Detector
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          PVDE          LL_PWR_DisablePVD
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisablePVD(void)
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR2, PWR_CR2_PVDE);
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if Power Voltage Detector is enabled
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR2          PVDE          LL_PWR_IsEnabledPVD
ARM GAS  /tmp/ccfG3G71.s 			page 14


 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledPVD(void)
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   uint32_t temp;
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   temp = READ_BIT(PWR->CR2, PWR_CR2_PVDE);
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((temp == (PWR_CR2_PVDE))?1U:0U);
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable Internal Wake-up line
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          EIWF          LL_PWR_EnableInternWU
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableInternWU(void)
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable Internal Wake-up line
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          EIWF          LL_PWR_DisableInternWU
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableInternWU(void)
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if Internal Wake-up line is enabled
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          EIWF          LL_PWR_IsEnabledInternWU
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledInternWU(void)
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, PWR_CR3_EIWF) == (PWR_CR3_EIWF))?1UL:0UL);
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined (PWR_CR3_UCPD_DBDIS)
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable USB Type-C and Power Delivery Dead Battery disable
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          UCPD_DBDIS          LL_PWR_EnableDeadBatteryPD
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableDeadBatteryPD(void)
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Disable USB Type-C and Power Delivery Dead Battery disable
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR3          UCPD_DBDIS          LL_PWR_DisableDeadBatteryPD
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableDeadBatteryPD(void)
ARM GAS  /tmp/ccfG3G71.s 			page 15


 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
  28              		.loc 1 773 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
  40              		.loc 1 774 3
  41 0004 054B     		ldr	r3, .L2
  42 0006 9B68     		ldr	r3, [r3, #8]
  43 0008 044A     		ldr	r2, .L2
  44 000a 23F48043 		bic	r3, r3, #16384
  45 000e 9360     		str	r3, [r2, #8]
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
  46              		.loc 1 775 1
  47 0010 00BF     		nop
  48 0012 BD46     		mov	sp, r7
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 13
  51              		@ sp needed
  52 0014 5DF8047B 		ldr	r7, [sp], #4
  53              	.LCFI3:
  54              		.cfi_restore 7
  55              		.cfi_def_cfa_offset 0
  56 0018 7047     		bx	lr
  57              	.L3:
  58 001a 00BF     		.align	2
  59              	.L2:
  60 001c 00700040 		.word	1073770496
  61              		.cfi_endproc
  62              	.LFE358:
  64              		.section	.text.HAL_MspInit,"ax",%progbits
  65              		.align	1
  66              		.global	HAL_MspInit
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv4-sp-d16
  72              	HAL_MspInit:
  73              	.LFB406:
  74              		.file 2 "Src/stm32g4xx_hal_msp.c"
   1:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g4xx_hal_msp.c **** /**
   3:Src/stm32g4xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32g4xx_hal_msp.c ****   * File Name          : stm32g4xx_hal_msp.c
   5:Src/stm32g4xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32g4xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32g4xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32g4xx_hal_msp.c ****   * @attention
   9:Src/stm32g4xx_hal_msp.c ****   *
ARM GAS  /tmp/ccfG3G71.s 			page 16


  10:Src/stm32g4xx_hal_msp.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/stm32g4xx_hal_msp.c ****   * All rights reserved.</center></h2>
  12:Src/stm32g4xx_hal_msp.c ****   *
  13:Src/stm32g4xx_hal_msp.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/stm32g4xx_hal_msp.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/stm32g4xx_hal_msp.c ****   * the License. You may obtain a copy of the License at:
  16:Src/stm32g4xx_hal_msp.c ****   *                             www.st.com/SLA0044
  17:Src/stm32g4xx_hal_msp.c ****   *
  18:Src/stm32g4xx_hal_msp.c ****   ******************************************************************************
  19:Src/stm32g4xx_hal_msp.c ****   */
  20:Src/stm32g4xx_hal_msp.c **** /* USER CODE END Header */
  21:Src/stm32g4xx_hal_msp.c **** 
  22:Src/stm32g4xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/stm32g4xx_hal_msp.c **** #include "main.h"
  24:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32g4xx_hal_msp.c **** 
  26:Src/stm32g4xx_hal_msp.c **** /* USER CODE END Includes */
  27:Src/stm32g4xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_spi3_rx;
  28:Src/stm32g4xx_hal_msp.c **** 
  29:Src/stm32g4xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_spi3_tx;
  30:Src/stm32g4xx_hal_msp.c **** 
  31:Src/stm32g4xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  32:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN TD */
  33:Src/stm32g4xx_hal_msp.c **** 
  34:Src/stm32g4xx_hal_msp.c **** /* USER CODE END TD */
  35:Src/stm32g4xx_hal_msp.c **** 
  36:Src/stm32g4xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  37:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN Define */
  38:Src/stm32g4xx_hal_msp.c ****  
  39:Src/stm32g4xx_hal_msp.c **** /* USER CODE END Define */
  40:Src/stm32g4xx_hal_msp.c **** 
  41:Src/stm32g4xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  42:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  43:Src/stm32g4xx_hal_msp.c **** 
  44:Src/stm32g4xx_hal_msp.c **** /* USER CODE END Macro */
  45:Src/stm32g4xx_hal_msp.c **** 
  46:Src/stm32g4xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  47:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN PV */
  48:Src/stm32g4xx_hal_msp.c **** 
  49:Src/stm32g4xx_hal_msp.c **** /* USER CODE END PV */
  50:Src/stm32g4xx_hal_msp.c **** 
  51:Src/stm32g4xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  52:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  53:Src/stm32g4xx_hal_msp.c **** 
  54:Src/stm32g4xx_hal_msp.c **** /* USER CODE END PFP */
  55:Src/stm32g4xx_hal_msp.c **** 
  56:Src/stm32g4xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  57:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  58:Src/stm32g4xx_hal_msp.c **** 
  59:Src/stm32g4xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  60:Src/stm32g4xx_hal_msp.c **** 
  61:Src/stm32g4xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  62:Src/stm32g4xx_hal_msp.c **** 
  63:Src/stm32g4xx_hal_msp.c **** /* USER CODE END 0 */
  64:Src/stm32g4xx_hal_msp.c ****                         
  65:Src/stm32g4xx_hal_msp.c **** void HAL_HRTIM_MspPostInit(HRTIM_HandleTypeDef *hhrtim);
  66:Src/stm32g4xx_hal_msp.c ****                     /**
ARM GAS  /tmp/ccfG3G71.s 			page 17


  67:Src/stm32g4xx_hal_msp.c ****   * Initializes the Global MSP.
  68:Src/stm32g4xx_hal_msp.c ****   */
  69:Src/stm32g4xx_hal_msp.c **** void HAL_MspInit(void)
  70:Src/stm32g4xx_hal_msp.c **** {
  75              		.loc 2 70 1
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 8
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              	.LCFI4:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              	.LCFI5:
  86              		.cfi_def_cfa_offset 16
  87 0004 00AF     		add	r7, sp, #0
  88              	.LCFI6:
  89              		.cfi_def_cfa_register 7
  90              	.LBB2:
  71:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  72:Src/stm32g4xx_hal_msp.c **** 
  73:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  74:Src/stm32g4xx_hal_msp.c **** 
  75:Src/stm32g4xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  91              		.loc 2 75 3
  92 0006 0F4B     		ldr	r3, .L5
  93 0008 1B6E     		ldr	r3, [r3, #96]
  94 000a 0E4A     		ldr	r2, .L5
  95 000c 43F00103 		orr	r3, r3, #1
  96 0010 1366     		str	r3, [r2, #96]
  97 0012 0C4B     		ldr	r3, .L5
  98 0014 1B6E     		ldr	r3, [r3, #96]
  99 0016 03F00103 		and	r3, r3, #1
 100 001a 7B60     		str	r3, [r7, #4]
 101 001c 7B68     		ldr	r3, [r7, #4]
 102              	.LBE2:
 103              	.LBB3:
  76:Src/stm32g4xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 104              		.loc 2 76 3
 105 001e 094B     		ldr	r3, .L5
 106 0020 9B6D     		ldr	r3, [r3, #88]
 107 0022 084A     		ldr	r2, .L5
 108 0024 43F08053 		orr	r3, r3, #268435456
 109 0028 9365     		str	r3, [r2, #88]
 110 002a 064B     		ldr	r3, .L5
 111 002c 9B6D     		ldr	r3, [r3, #88]
 112 002e 03F08053 		and	r3, r3, #268435456
 113 0032 3B60     		str	r3, [r7]
 114 0034 3B68     		ldr	r3, [r7]
 115              	.LBE3:
  77:Src/stm32g4xx_hal_msp.c **** 
  78:Src/stm32g4xx_hal_msp.c ****   /* System interrupt init*/
  79:Src/stm32g4xx_hal_msp.c **** 
  80:Src/stm32g4xx_hal_msp.c ****   /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral 
  81:Src/stm32g4xx_hal_msp.c ****   */
  82:Src/stm32g4xx_hal_msp.c ****   LL_PWR_DisableDeadBatteryPD();
ARM GAS  /tmp/ccfG3G71.s 			page 18


 116              		.loc 2 82 3
 117 0036 FFF7FEFF 		bl	LL_PWR_DisableDeadBatteryPD
  83:Src/stm32g4xx_hal_msp.c **** 
  84:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  85:Src/stm32g4xx_hal_msp.c **** 
  86:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  87:Src/stm32g4xx_hal_msp.c **** }
 118              		.loc 2 87 1
 119 003a 00BF     		nop
 120 003c 0837     		adds	r7, r7, #8
 121              	.LCFI7:
 122              		.cfi_def_cfa_offset 8
 123 003e BD46     		mov	sp, r7
 124              	.LCFI8:
 125              		.cfi_def_cfa_register 13
 126              		@ sp needed
 127 0040 80BD     		pop	{r7, pc}
 128              	.L6:
 129 0042 00BF     		.align	2
 130              	.L5:
 131 0044 00100240 		.word	1073876992
 132              		.cfi_endproc
 133              	.LFE406:
 135              		.section	.bss.HAL_RCC_ADC12_CLK_ENABLED,"aw",%nobits
 136              		.align	2
 139              	HAL_RCC_ADC12_CLK_ENABLED:
 140 0000 00000000 		.space	4
 141              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_ADC_MspInit
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	HAL_ADC_MspInit:
 150              	.LFB407:
  88:Src/stm32g4xx_hal_msp.c **** 
  89:Src/stm32g4xx_hal_msp.c **** static uint32_t HAL_RCC_ADC12_CLK_ENABLED=0;
  90:Src/stm32g4xx_hal_msp.c **** 
  91:Src/stm32g4xx_hal_msp.c **** /**
  92:Src/stm32g4xx_hal_msp.c **** * @brief ADC MSP Initialization
  93:Src/stm32g4xx_hal_msp.c **** * This function configures the hardware resources used in this example
  94:Src/stm32g4xx_hal_msp.c **** * @param hadc: ADC handle pointer
  95:Src/stm32g4xx_hal_msp.c **** * @retval None
  96:Src/stm32g4xx_hal_msp.c **** */
  97:Src/stm32g4xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
  98:Src/stm32g4xx_hal_msp.c **** {
 151              		.loc 2 98 1
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 56
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0000 80B5     		push	{r7, lr}
 156              	.LCFI9:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 8EB0     		sub	sp, sp, #56
ARM GAS  /tmp/ccfG3G71.s 			page 19


 161              	.LCFI10:
 162              		.cfi_def_cfa_offset 64
 163 0004 00AF     		add	r7, sp, #0
 164              	.LCFI11:
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
  99:Src/stm32g4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 167              		.loc 2 99 20
 168 0008 07F12403 		add	r3, r7, #36
 169 000c 0022     		movs	r2, #0
 170 000e 1A60     		str	r2, [r3]
 171 0010 5A60     		str	r2, [r3, #4]
 172 0012 9A60     		str	r2, [r3, #8]
 173 0014 DA60     		str	r2, [r3, #12]
 174 0016 1A61     		str	r2, [r3, #16]
 100:Src/stm32g4xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 175              		.loc 2 100 10
 176 0018 7B68     		ldr	r3, [r7, #4]
 177 001a 1B68     		ldr	r3, [r3]
 178              		.loc 2 100 5
 179 001c B3F1A04F 		cmp	r3, #1342177280
 180 0020 4ED1     		bne	.L8
 101:Src/stm32g4xx_hal_msp.c ****   {
 102:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 103:Src/stm32g4xx_hal_msp.c **** 
 104:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 0 */
 105:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock enable */
 106:Src/stm32g4xx_hal_msp.c ****     HAL_RCC_ADC12_CLK_ENABLED++;
 181              		.loc 2 106 30
 182 0022 5B4B     		ldr	r3, .L14
 183 0024 1B68     		ldr	r3, [r3]
 184 0026 0133     		adds	r3, r3, #1
 185 0028 594A     		ldr	r2, .L14
 186 002a 1360     		str	r3, [r2]
 107:Src/stm32g4xx_hal_msp.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 187              		.loc 2 107 33
 188 002c 584B     		ldr	r3, .L14
 189 002e 1B68     		ldr	r3, [r3]
 190              		.loc 2 107 7
 191 0030 012B     		cmp	r3, #1
 192 0032 0BD1     		bne	.L9
 193              	.LBB4:
 108:Src/stm32g4xx_hal_msp.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 194              		.loc 2 108 7
 195 0034 574B     		ldr	r3, .L14+4
 196 0036 DB6C     		ldr	r3, [r3, #76]
 197 0038 564A     		ldr	r2, .L14+4
 198 003a 43F40053 		orr	r3, r3, #8192
 199 003e D364     		str	r3, [r2, #76]
 200 0040 544B     		ldr	r3, .L14+4
 201 0042 DB6C     		ldr	r3, [r3, #76]
 202 0044 03F40053 		and	r3, r3, #8192
 203 0048 3B62     		str	r3, [r7, #32]
 204 004a 3B6A     		ldr	r3, [r7, #32]
 205              	.L9:
 206              	.LBE4:
 207              	.LBB5:
ARM GAS  /tmp/ccfG3G71.s 			page 20


 109:Src/stm32g4xx_hal_msp.c ****     }
 110:Src/stm32g4xx_hal_msp.c ****   
 111:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 208              		.loc 2 111 5
 209 004c 514B     		ldr	r3, .L14+4
 210 004e DB6C     		ldr	r3, [r3, #76]
 211 0050 504A     		ldr	r2, .L14+4
 212 0052 43F00103 		orr	r3, r3, #1
 213 0056 D364     		str	r3, [r2, #76]
 214 0058 4E4B     		ldr	r3, .L14+4
 215 005a DB6C     		ldr	r3, [r3, #76]
 216 005c 03F00103 		and	r3, r3, #1
 217 0060 FB61     		str	r3, [r7, #28]
 218 0062 FB69     		ldr	r3, [r7, #28]
 219              	.LBE5:
 220              	.LBB6:
 112:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 221              		.loc 2 112 5
 222 0064 4B4B     		ldr	r3, .L14+4
 223 0066 DB6C     		ldr	r3, [r3, #76]
 224 0068 4A4A     		ldr	r2, .L14+4
 225 006a 43F00203 		orr	r3, r3, #2
 226 006e D364     		str	r3, [r2, #76]
 227 0070 484B     		ldr	r3, .L14+4
 228 0072 DB6C     		ldr	r3, [r3, #76]
 229 0074 03F00203 		and	r3, r3, #2
 230 0078 BB61     		str	r3, [r7, #24]
 231 007a BB69     		ldr	r3, [r7, #24]
 232              	.LBE6:
 113:Src/stm32g4xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 114:Src/stm32g4xx_hal_msp.c ****     PA0     ------> ADC1_IN1
 115:Src/stm32g4xx_hal_msp.c ****     PB1     ------> ADC1_IN12 
 116:Src/stm32g4xx_hal_msp.c ****     */
 117:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 233              		.loc 2 117 25
 234 007c 0123     		movs	r3, #1
 235 007e 7B62     		str	r3, [r7, #36]
 118:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 236              		.loc 2 118 26
 237 0080 0323     		movs	r3, #3
 238 0082 BB62     		str	r3, [r7, #40]
 119:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 2 119 26
 240 0084 0023     		movs	r3, #0
 241 0086 FB62     		str	r3, [r7, #44]
 120:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 242              		.loc 2 120 5
 243 0088 07F12403 		add	r3, r7, #36
 244 008c 1946     		mov	r1, r3
 245 008e 4FF09040 		mov	r0, #1207959552
 246 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 121:Src/stm32g4xx_hal_msp.c **** 
 122:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 247              		.loc 2 122 25
 248 0096 0223     		movs	r3, #2
 249 0098 7B62     		str	r3, [r7, #36]
 123:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /tmp/ccfG3G71.s 			page 21


 250              		.loc 2 123 26
 251 009a 0323     		movs	r3, #3
 252 009c BB62     		str	r3, [r7, #40]
 124:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 2 124 26
 254 009e 0023     		movs	r3, #0
 255 00a0 FB62     		str	r3, [r7, #44]
 125:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 256              		.loc 2 125 5
 257 00a2 07F12403 		add	r3, r7, #36
 258 00a6 1946     		mov	r1, r3
 259 00a8 3B48     		ldr	r0, .L14+8
 260 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 126:Src/stm32g4xx_hal_msp.c **** 
 127:Src/stm32g4xx_hal_msp.c ****     /* ADC1 interrupt Init */
 128:Src/stm32g4xx_hal_msp.c ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 261              		.loc 2 128 5
 262 00ae 0022     		movs	r2, #0
 263 00b0 0021     		movs	r1, #0
 264 00b2 1220     		movs	r0, #18
 265 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 129:Src/stm32g4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 266              		.loc 2 129 5
 267 00b8 1220     		movs	r0, #18
 268 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 130:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 131:Src/stm32g4xx_hal_msp.c **** 
 132:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 1 */
 133:Src/stm32g4xx_hal_msp.c ****   }
 134:Src/stm32g4xx_hal_msp.c ****   else if(hadc->Instance==ADC2)
 135:Src/stm32g4xx_hal_msp.c ****   {
 136:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 137:Src/stm32g4xx_hal_msp.c **** 
 138:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC2_MspInit 0 */
 139:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock enable */
 140:Src/stm32g4xx_hal_msp.c ****     HAL_RCC_ADC12_CLK_ENABLED++;
 141:Src/stm32g4xx_hal_msp.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 142:Src/stm32g4xx_hal_msp.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 143:Src/stm32g4xx_hal_msp.c ****     }
 144:Src/stm32g4xx_hal_msp.c ****   
 145:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 146:Src/stm32g4xx_hal_msp.c ****     /**ADC2 GPIO Configuration    
 147:Src/stm32g4xx_hal_msp.c ****     PB2     ------> ADC2_IN12 
 148:Src/stm32g4xx_hal_msp.c ****     */
 149:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 150:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 151:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 152:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 153:Src/stm32g4xx_hal_msp.c **** 
 154:Src/stm32g4xx_hal_msp.c ****     /* ADC2 interrupt Init */
 155:Src/stm32g4xx_hal_msp.c ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 156:Src/stm32g4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 157:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 158:Src/stm32g4xx_hal_msp.c **** 
 159:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC2_MspInit 1 */
 160:Src/stm32g4xx_hal_msp.c ****   }
 161:Src/stm32g4xx_hal_msp.c ****   else if(hadc->Instance==ADC3)
ARM GAS  /tmp/ccfG3G71.s 			page 22


 162:Src/stm32g4xx_hal_msp.c ****   {
 163:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspInit 0 */
 164:Src/stm32g4xx_hal_msp.c **** 
 165:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC3_MspInit 0 */
 166:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock enable */
 167:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_ADC345_CLK_ENABLE();
 168:Src/stm32g4xx_hal_msp.c ****   
 169:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 170:Src/stm32g4xx_hal_msp.c ****     /**ADC3 GPIO Configuration    
 171:Src/stm32g4xx_hal_msp.c ****     PB0     ------> ADC3_IN12 
 172:Src/stm32g4xx_hal_msp.c ****     */
 173:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 174:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 175:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 176:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 177:Src/stm32g4xx_hal_msp.c **** 
 178:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 179:Src/stm32g4xx_hal_msp.c **** 
 180:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC3_MspInit 1 */
 181:Src/stm32g4xx_hal_msp.c ****   }
 182:Src/stm32g4xx_hal_msp.c **** 
 183:Src/stm32g4xx_hal_msp.c **** }
 269              		.loc 2 183 1
 270 00be 63E0     		b	.L13
 271              	.L8:
 134:Src/stm32g4xx_hal_msp.c ****   {
 272              		.loc 2 134 15
 273 00c0 7B68     		ldr	r3, [r7, #4]
 274 00c2 1B68     		ldr	r3, [r3]
 134:Src/stm32g4xx_hal_msp.c ****   {
 275              		.loc 2 134 10
 276 00c4 354A     		ldr	r2, .L14+12
 277 00c6 9342     		cmp	r3, r2
 278 00c8 35D1     		bne	.L11
 140:Src/stm32g4xx_hal_msp.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==1){
 279              		.loc 2 140 30
 280 00ca 314B     		ldr	r3, .L14
 281 00cc 1B68     		ldr	r3, [r3]
 282 00ce 0133     		adds	r3, r3, #1
 283 00d0 2F4A     		ldr	r2, .L14
 284 00d2 1360     		str	r3, [r2]
 141:Src/stm32g4xx_hal_msp.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 285              		.loc 2 141 33
 286 00d4 2E4B     		ldr	r3, .L14
 287 00d6 1B68     		ldr	r3, [r3]
 141:Src/stm32g4xx_hal_msp.c ****       __HAL_RCC_ADC12_CLK_ENABLE();
 288              		.loc 2 141 7
 289 00d8 012B     		cmp	r3, #1
 290 00da 0BD1     		bne	.L12
 291              	.LBB7:
 142:Src/stm32g4xx_hal_msp.c ****     }
 292              		.loc 2 142 7
 293 00dc 2D4B     		ldr	r3, .L14+4
 294 00de DB6C     		ldr	r3, [r3, #76]
 295 00e0 2C4A     		ldr	r2, .L14+4
 296 00e2 43F40053 		orr	r3, r3, #8192
 297 00e6 D364     		str	r3, [r2, #76]
ARM GAS  /tmp/ccfG3G71.s 			page 23


 298 00e8 2A4B     		ldr	r3, .L14+4
 299 00ea DB6C     		ldr	r3, [r3, #76]
 300 00ec 03F40053 		and	r3, r3, #8192
 301 00f0 7B61     		str	r3, [r7, #20]
 302 00f2 7B69     		ldr	r3, [r7, #20]
 303              	.L12:
 304              	.LBE7:
 305              	.LBB8:
 145:Src/stm32g4xx_hal_msp.c ****     /**ADC2 GPIO Configuration    
 306              		.loc 2 145 5
 307 00f4 274B     		ldr	r3, .L14+4
 308 00f6 DB6C     		ldr	r3, [r3, #76]
 309 00f8 264A     		ldr	r2, .L14+4
 310 00fa 43F00203 		orr	r3, r3, #2
 311 00fe D364     		str	r3, [r2, #76]
 312 0100 244B     		ldr	r3, .L14+4
 313 0102 DB6C     		ldr	r3, [r3, #76]
 314 0104 03F00203 		and	r3, r3, #2
 315 0108 3B61     		str	r3, [r7, #16]
 316 010a 3B69     		ldr	r3, [r7, #16]
 317              	.LBE8:
 149:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 318              		.loc 2 149 25
 319 010c 0423     		movs	r3, #4
 320 010e 7B62     		str	r3, [r7, #36]
 150:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 2 150 26
 322 0110 0323     		movs	r3, #3
 323 0112 BB62     		str	r3, [r7, #40]
 151:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 324              		.loc 2 151 26
 325 0114 0023     		movs	r3, #0
 326 0116 FB62     		str	r3, [r7, #44]
 152:Src/stm32g4xx_hal_msp.c **** 
 327              		.loc 2 152 5
 328 0118 07F12403 		add	r3, r7, #36
 329 011c 1946     		mov	r1, r3
 330 011e 1E48     		ldr	r0, .L14+8
 331 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 155:Src/stm32g4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 332              		.loc 2 155 5
 333 0124 0022     		movs	r2, #0
 334 0126 0021     		movs	r1, #0
 335 0128 1220     		movs	r0, #18
 336 012a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 156:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 337              		.loc 2 156 5
 338 012e 1220     		movs	r0, #18
 339 0130 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 340              		.loc 2 183 1
 341 0134 28E0     		b	.L13
 342              	.L11:
 161:Src/stm32g4xx_hal_msp.c ****   {
 343              		.loc 2 161 15
 344 0136 7B68     		ldr	r3, [r7, #4]
 345 0138 1B68     		ldr	r3, [r3]
 161:Src/stm32g4xx_hal_msp.c ****   {
ARM GAS  /tmp/ccfG3G71.s 			page 24


 346              		.loc 2 161 10
 347 013a 194A     		ldr	r2, .L14+16
 348 013c 9342     		cmp	r3, r2
 349 013e 23D1     		bne	.L13
 350              	.LBB9:
 167:Src/stm32g4xx_hal_msp.c ****   
 351              		.loc 2 167 5
 352 0140 144B     		ldr	r3, .L14+4
 353 0142 DB6C     		ldr	r3, [r3, #76]
 354 0144 134A     		ldr	r2, .L14+4
 355 0146 43F48043 		orr	r3, r3, #16384
 356 014a D364     		str	r3, [r2, #76]
 357 014c 114B     		ldr	r3, .L14+4
 358 014e DB6C     		ldr	r3, [r3, #76]
 359 0150 03F48043 		and	r3, r3, #16384
 360 0154 FB60     		str	r3, [r7, #12]
 361 0156 FB68     		ldr	r3, [r7, #12]
 362              	.LBE9:
 363              	.LBB10:
 169:Src/stm32g4xx_hal_msp.c ****     /**ADC3 GPIO Configuration    
 364              		.loc 2 169 5
 365 0158 0E4B     		ldr	r3, .L14+4
 366 015a DB6C     		ldr	r3, [r3, #76]
 367 015c 0D4A     		ldr	r2, .L14+4
 368 015e 43F00203 		orr	r3, r3, #2
 369 0162 D364     		str	r3, [r2, #76]
 370 0164 0B4B     		ldr	r3, .L14+4
 371 0166 DB6C     		ldr	r3, [r3, #76]
 372 0168 03F00203 		and	r3, r3, #2
 373 016c BB60     		str	r3, [r7, #8]
 374 016e BB68     		ldr	r3, [r7, #8]
 375              	.LBE10:
 173:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 376              		.loc 2 173 25
 377 0170 0123     		movs	r3, #1
 378 0172 7B62     		str	r3, [r7, #36]
 174:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 379              		.loc 2 174 26
 380 0174 0323     		movs	r3, #3
 381 0176 BB62     		str	r3, [r7, #40]
 175:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 382              		.loc 2 175 26
 383 0178 0023     		movs	r3, #0
 384 017a FB62     		str	r3, [r7, #44]
 176:Src/stm32g4xx_hal_msp.c **** 
 385              		.loc 2 176 5
 386 017c 07F12403 		add	r3, r7, #36
 387 0180 1946     		mov	r1, r3
 388 0182 0548     		ldr	r0, .L14+8
 389 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 390              	.L13:
 391              		.loc 2 183 1
 392 0188 00BF     		nop
 393 018a 3837     		adds	r7, r7, #56
 394              	.LCFI12:
 395              		.cfi_def_cfa_offset 8
 396 018c BD46     		mov	sp, r7
ARM GAS  /tmp/ccfG3G71.s 			page 25


 397              	.LCFI13:
 398              		.cfi_def_cfa_register 13
 399              		@ sp needed
 400 018e 80BD     		pop	{r7, pc}
 401              	.L15:
 402              		.align	2
 403              	.L14:
 404 0190 00000000 		.word	HAL_RCC_ADC12_CLK_ENABLED
 405 0194 00100240 		.word	1073876992
 406 0198 00040048 		.word	1207960576
 407 019c 00010050 		.word	1342177536
 408 01a0 00040050 		.word	1342178304
 409              		.cfi_endproc
 410              	.LFE407:
 412              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 413              		.align	1
 414              		.global	HAL_ADC_MspDeInit
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	HAL_ADC_MspDeInit:
 421              	.LFB408:
 184:Src/stm32g4xx_hal_msp.c **** 
 185:Src/stm32g4xx_hal_msp.c **** /**
 186:Src/stm32g4xx_hal_msp.c **** * @brief ADC MSP De-Initialization
 187:Src/stm32g4xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 188:Src/stm32g4xx_hal_msp.c **** * @param hadc: ADC handle pointer
 189:Src/stm32g4xx_hal_msp.c **** * @retval None
 190:Src/stm32g4xx_hal_msp.c **** */
 191:Src/stm32g4xx_hal_msp.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 192:Src/stm32g4xx_hal_msp.c **** {
 422              		.loc 2 192 1
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              	.LCFI14:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 82B0     		sub	sp, sp, #8
 432              	.LCFI15:
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              	.LCFI16:
 436              		.cfi_def_cfa_register 7
 437 0006 7860     		str	r0, [r7, #4]
 193:Src/stm32g4xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 438              		.loc 2 193 10
 439 0008 7B68     		ldr	r3, [r7, #4]
 440 000a 1B68     		ldr	r3, [r3]
 441              		.loc 2 193 5
 442 000c B3F1A04F 		cmp	r3, #1342177280
 443 0010 18D1     		bne	.L17
 194:Src/stm32g4xx_hal_msp.c ****   {
 195:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
ARM GAS  /tmp/ccfG3G71.s 			page 26


 196:Src/stm32g4xx_hal_msp.c **** 
 197:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 198:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock disable */
 199:Src/stm32g4xx_hal_msp.c ****     HAL_RCC_ADC12_CLK_ENABLED--;
 444              		.loc 2 199 30
 445 0012 224B     		ldr	r3, .L23
 446 0014 1B68     		ldr	r3, [r3]
 447 0016 013B     		subs	r3, r3, #1
 448 0018 204A     		ldr	r2, .L23
 449 001a 1360     		str	r3, [r2]
 200:Src/stm32g4xx_hal_msp.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 450              		.loc 2 200 33
 451 001c 1F4B     		ldr	r3, .L23
 452 001e 1B68     		ldr	r3, [r3]
 453              		.loc 2 200 7
 454 0020 002B     		cmp	r3, #0
 455 0022 05D1     		bne	.L18
 201:Src/stm32g4xx_hal_msp.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 456              		.loc 2 201 7
 457 0024 1E4B     		ldr	r3, .L23+4
 458 0026 DB6C     		ldr	r3, [r3, #76]
 459 0028 1D4A     		ldr	r2, .L23+4
 460 002a 23F40053 		bic	r3, r3, #8192
 461 002e D364     		str	r3, [r2, #76]
 462              	.L18:
 202:Src/stm32g4xx_hal_msp.c ****     }
 203:Src/stm32g4xx_hal_msp.c ****   
 204:Src/stm32g4xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 205:Src/stm32g4xx_hal_msp.c ****     PA0     ------> ADC1_IN1
 206:Src/stm32g4xx_hal_msp.c ****     PB1     ------> ADC1_IN12 
 207:Src/stm32g4xx_hal_msp.c ****     */
 208:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 463              		.loc 2 208 5
 464 0030 0121     		movs	r1, #1
 465 0032 4FF09040 		mov	r0, #1207959552
 466 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 209:Src/stm32g4xx_hal_msp.c **** 
 210:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_1);
 467              		.loc 2 210 5
 468 003a 0221     		movs	r1, #2
 469 003c 1948     		ldr	r0, .L23+8
 470 003e FFF7FEFF 		bl	HAL_GPIO_DeInit
 211:Src/stm32g4xx_hal_msp.c **** 
 212:Src/stm32g4xx_hal_msp.c ****     /* ADC1 interrupt DeInit */
 213:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1:ADC1_2_IRQn disable */
 214:Src/stm32g4xx_hal_msp.c ****     /**
 215:Src/stm32g4xx_hal_msp.c ****     * Uncomment the line below to disable the "ADC1_2_IRQn" interrupt
 216:Src/stm32g4xx_hal_msp.c ****     * Be aware, disabling shared interrupt may affect other IPs
 217:Src/stm32g4xx_hal_msp.c ****     */
 218:Src/stm32g4xx_hal_msp.c ****     /* HAL_NVIC_DisableIRQ(ADC1_2_IRQn); */
 219:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC1:ADC1_2_IRQn disable */
 220:Src/stm32g4xx_hal_msp.c **** 
 221:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 222:Src/stm32g4xx_hal_msp.c **** 
 223:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 224:Src/stm32g4xx_hal_msp.c ****   }
 225:Src/stm32g4xx_hal_msp.c ****   else if(hadc->Instance==ADC2)
ARM GAS  /tmp/ccfG3G71.s 			page 27


 226:Src/stm32g4xx_hal_msp.c ****   {
 227:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 228:Src/stm32g4xx_hal_msp.c **** 
 229:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC2_MspDeInit 0 */
 230:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock disable */
 231:Src/stm32g4xx_hal_msp.c ****     HAL_RCC_ADC12_CLK_ENABLED--;
 232:Src/stm32g4xx_hal_msp.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 233:Src/stm32g4xx_hal_msp.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 234:Src/stm32g4xx_hal_msp.c ****     }
 235:Src/stm32g4xx_hal_msp.c ****   
 236:Src/stm32g4xx_hal_msp.c ****     /**ADC2 GPIO Configuration    
 237:Src/stm32g4xx_hal_msp.c ****     PB2     ------> ADC2_IN12 
 238:Src/stm32g4xx_hal_msp.c ****     */
 239:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 240:Src/stm32g4xx_hal_msp.c **** 
 241:Src/stm32g4xx_hal_msp.c ****     /* ADC2 interrupt DeInit */
 242:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2:ADC1_2_IRQn disable */
 243:Src/stm32g4xx_hal_msp.c ****     /**
 244:Src/stm32g4xx_hal_msp.c ****     * Uncomment the line below to disable the "ADC1_2_IRQn" interrupt
 245:Src/stm32g4xx_hal_msp.c ****     * Be aware, disabling shared interrupt may affect other IPs
 246:Src/stm32g4xx_hal_msp.c ****     */
 247:Src/stm32g4xx_hal_msp.c ****     /* HAL_NVIC_DisableIRQ(ADC1_2_IRQn); */
 248:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC2:ADC1_2_IRQn disable */
 249:Src/stm32g4xx_hal_msp.c **** 
 250:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 251:Src/stm32g4xx_hal_msp.c **** 
 252:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC2_MspDeInit 1 */
 253:Src/stm32g4xx_hal_msp.c ****   }
 254:Src/stm32g4xx_hal_msp.c ****   else if(hadc->Instance==ADC3)
 255:Src/stm32g4xx_hal_msp.c ****   {
 256:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 257:Src/stm32g4xx_hal_msp.c **** 
 258:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC3_MspDeInit 0 */
 259:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock disable */
 260:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_ADC345_CLK_DISABLE();
 261:Src/stm32g4xx_hal_msp.c ****   
 262:Src/stm32g4xx_hal_msp.c ****     /**ADC3 GPIO Configuration    
 263:Src/stm32g4xx_hal_msp.c ****     PB0     ------> ADC3_IN12 
 264:Src/stm32g4xx_hal_msp.c ****     */
 265:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0);
 266:Src/stm32g4xx_hal_msp.c **** 
 267:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 268:Src/stm32g4xx_hal_msp.c **** 
 269:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END ADC3_MspDeInit 1 */
 270:Src/stm32g4xx_hal_msp.c ****   }
 271:Src/stm32g4xx_hal_msp.c **** 
 272:Src/stm32g4xx_hal_msp.c **** }
 471              		.loc 2 272 1
 472 0042 27E0     		b	.L22
 473              	.L17:
 225:Src/stm32g4xx_hal_msp.c ****   {
 474              		.loc 2 225 15
 475 0044 7B68     		ldr	r3, [r7, #4]
 476 0046 1B68     		ldr	r3, [r3]
 225:Src/stm32g4xx_hal_msp.c ****   {
 477              		.loc 2 225 10
 478 0048 174A     		ldr	r2, .L23+12
ARM GAS  /tmp/ccfG3G71.s 			page 28


 479 004a 9342     		cmp	r3, r2
 480 004c 13D1     		bne	.L20
 231:Src/stm32g4xx_hal_msp.c ****     if(HAL_RCC_ADC12_CLK_ENABLED==0){
 481              		.loc 2 231 30
 482 004e 134B     		ldr	r3, .L23
 483 0050 1B68     		ldr	r3, [r3]
 484 0052 013B     		subs	r3, r3, #1
 485 0054 114A     		ldr	r2, .L23
 486 0056 1360     		str	r3, [r2]
 232:Src/stm32g4xx_hal_msp.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 487              		.loc 2 232 33
 488 0058 104B     		ldr	r3, .L23
 489 005a 1B68     		ldr	r3, [r3]
 232:Src/stm32g4xx_hal_msp.c ****       __HAL_RCC_ADC12_CLK_DISABLE();
 490              		.loc 2 232 7
 491 005c 002B     		cmp	r3, #0
 492 005e 05D1     		bne	.L21
 233:Src/stm32g4xx_hal_msp.c ****     }
 493              		.loc 2 233 7
 494 0060 0F4B     		ldr	r3, .L23+4
 495 0062 DB6C     		ldr	r3, [r3, #76]
 496 0064 0E4A     		ldr	r2, .L23+4
 497 0066 23F40053 		bic	r3, r3, #8192
 498 006a D364     		str	r3, [r2, #76]
 499              	.L21:
 239:Src/stm32g4xx_hal_msp.c **** 
 500              		.loc 2 239 5
 501 006c 0421     		movs	r1, #4
 502 006e 0D48     		ldr	r0, .L23+8
 503 0070 FFF7FEFF 		bl	HAL_GPIO_DeInit
 504              		.loc 2 272 1
 505 0074 0EE0     		b	.L22
 506              	.L20:
 254:Src/stm32g4xx_hal_msp.c ****   {
 507              		.loc 2 254 15
 508 0076 7B68     		ldr	r3, [r7, #4]
 509 0078 1B68     		ldr	r3, [r3]
 254:Src/stm32g4xx_hal_msp.c ****   {
 510              		.loc 2 254 10
 511 007a 0C4A     		ldr	r2, .L23+16
 512 007c 9342     		cmp	r3, r2
 513 007e 09D1     		bne	.L22
 260:Src/stm32g4xx_hal_msp.c ****   
 514              		.loc 2 260 5
 515 0080 074B     		ldr	r3, .L23+4
 516 0082 DB6C     		ldr	r3, [r3, #76]
 517 0084 064A     		ldr	r2, .L23+4
 518 0086 23F48043 		bic	r3, r3, #16384
 519 008a D364     		str	r3, [r2, #76]
 265:Src/stm32g4xx_hal_msp.c **** 
 520              		.loc 2 265 5
 521 008c 0121     		movs	r1, #1
 522 008e 0548     		ldr	r0, .L23+8
 523 0090 FFF7FEFF 		bl	HAL_GPIO_DeInit
 524              	.L22:
 525              		.loc 2 272 1
 526 0094 00BF     		nop
ARM GAS  /tmp/ccfG3G71.s 			page 29


 527 0096 0837     		adds	r7, r7, #8
 528              	.LCFI17:
 529              		.cfi_def_cfa_offset 8
 530 0098 BD46     		mov	sp, r7
 531              	.LCFI18:
 532              		.cfi_def_cfa_register 13
 533              		@ sp needed
 534 009a 80BD     		pop	{r7, pc}
 535              	.L24:
 536              		.align	2
 537              	.L23:
 538 009c 00000000 		.word	HAL_RCC_ADC12_CLK_ENABLED
 539 00a0 00100240 		.word	1073876992
 540 00a4 00040048 		.word	1207960576
 541 00a8 00010050 		.word	1342177536
 542 00ac 00040050 		.word	1342178304
 543              		.cfi_endproc
 544              	.LFE408:
 546              		.section	.text.HAL_HRTIM_MspInit,"ax",%progbits
 547              		.align	1
 548              		.global	HAL_HRTIM_MspInit
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv4-sp-d16
 554              	HAL_HRTIM_MspInit:
 555              	.LFB409:
 273:Src/stm32g4xx_hal_msp.c **** 
 274:Src/stm32g4xx_hal_msp.c **** /**
 275:Src/stm32g4xx_hal_msp.c **** * @brief HRTIM MSP Initialization
 276:Src/stm32g4xx_hal_msp.c **** * This function configures the hardware resources used in this example
 277:Src/stm32g4xx_hal_msp.c **** * @param hhrtim: HRTIM handle pointer
 278:Src/stm32g4xx_hal_msp.c **** * @retval None
 279:Src/stm32g4xx_hal_msp.c **** */
 280:Src/stm32g4xx_hal_msp.c **** void HAL_HRTIM_MspInit(HRTIM_HandleTypeDef* hhrtim)
 281:Src/stm32g4xx_hal_msp.c **** {
 556              		.loc 2 281 1
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 16
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560 0000 80B5     		push	{r7, lr}
 561              	.LCFI19:
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 84B0     		sub	sp, sp, #16
 566              	.LCFI20:
 567              		.cfi_def_cfa_offset 24
 568 0004 00AF     		add	r7, sp, #0
 569              	.LCFI21:
 570              		.cfi_def_cfa_register 7
 571 0006 7860     		str	r0, [r7, #4]
 282:Src/stm32g4xx_hal_msp.c ****   if(hhrtim->Instance==HRTIM1)
 572              		.loc 2 282 12
 573 0008 7B68     		ldr	r3, [r7, #4]
 574 000a 1B68     		ldr	r3, [r3]
 575              		.loc 2 282 5
ARM GAS  /tmp/ccfG3G71.s 			page 30


 576 000c 0D4A     		ldr	r2, .L28
 577 000e 9342     		cmp	r3, r2
 578 0010 13D1     		bne	.L27
 579              	.LBB11:
 283:Src/stm32g4xx_hal_msp.c ****   {
 284:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN HRTIM1_MspInit 0 */
 285:Src/stm32g4xx_hal_msp.c **** 
 286:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END HRTIM1_MspInit 0 */
 287:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock enable */
 288:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_HRTIM1_CLK_ENABLE();
 580              		.loc 2 288 5
 581 0012 0D4B     		ldr	r3, .L28+4
 582 0014 1B6E     		ldr	r3, [r3, #96]
 583 0016 0C4A     		ldr	r2, .L28+4
 584 0018 43F08063 		orr	r3, r3, #67108864
 585 001c 1366     		str	r3, [r2, #96]
 586 001e 0A4B     		ldr	r3, .L28+4
 587 0020 1B6E     		ldr	r3, [r3, #96]
 588 0022 03F08063 		and	r3, r3, #67108864
 589 0026 FB60     		str	r3, [r7, #12]
 590 0028 FB68     		ldr	r3, [r7, #12]
 591              	.LBE11:
 289:Src/stm32g4xx_hal_msp.c ****     /* HRTIM1 interrupt Init */
 290:Src/stm32g4xx_hal_msp.c ****     HAL_NVIC_SetPriority(HRTIM1_Master_IRQn, 0, 0);
 592              		.loc 2 290 5
 593 002a 0022     		movs	r2, #0
 594 002c 0021     		movs	r1, #0
 595 002e 4320     		movs	r0, #67
 596 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 291:Src/stm32g4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(HRTIM1_Master_IRQn);
 597              		.loc 2 291 5
 598 0034 4320     		movs	r0, #67
 599 0036 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 600              	.L27:
 292:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN HRTIM1_MspInit 1 */
 293:Src/stm32g4xx_hal_msp.c **** 
 294:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END HRTIM1_MspInit 1 */
 295:Src/stm32g4xx_hal_msp.c ****   }
 296:Src/stm32g4xx_hal_msp.c **** 
 297:Src/stm32g4xx_hal_msp.c **** }
 601              		.loc 2 297 1
 602 003a 00BF     		nop
 603 003c 1037     		adds	r7, r7, #16
 604              	.LCFI22:
 605              		.cfi_def_cfa_offset 8
 606 003e BD46     		mov	sp, r7
 607              	.LCFI23:
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0040 80BD     		pop	{r7, pc}
 611              	.L29:
 612 0042 00BF     		.align	2
 613              	.L28:
 614 0044 00680140 		.word	1073833984
 615 0048 00100240 		.word	1073876992
 616              		.cfi_endproc
 617              	.LFE409:
ARM GAS  /tmp/ccfG3G71.s 			page 31


 619              		.section	.text.HAL_HRTIM_MspPostInit,"ax",%progbits
 620              		.align	1
 621              		.global	HAL_HRTIM_MspPostInit
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	HAL_HRTIM_MspPostInit:
 628              	.LFB410:
 298:Src/stm32g4xx_hal_msp.c **** 
 299:Src/stm32g4xx_hal_msp.c **** void HAL_HRTIM_MspPostInit(HRTIM_HandleTypeDef* hhrtim)
 300:Src/stm32g4xx_hal_msp.c **** {
 629              		.loc 2 300 1
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 40
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633 0000 80B5     		push	{r7, lr}
 634              	.LCFI24:
 635              		.cfi_def_cfa_offset 8
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 8AB0     		sub	sp, sp, #40
 639              	.LCFI25:
 640              		.cfi_def_cfa_offset 48
 641 0004 00AF     		add	r7, sp, #0
 642              	.LCFI26:
 643              		.cfi_def_cfa_register 7
 644 0006 7860     		str	r0, [r7, #4]
 301:Src/stm32g4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 645              		.loc 2 301 20
 646 0008 07F11403 		add	r3, r7, #20
 647 000c 0022     		movs	r2, #0
 648 000e 1A60     		str	r2, [r3]
 649 0010 5A60     		str	r2, [r3, #4]
 650 0012 9A60     		str	r2, [r3, #8]
 651 0014 DA60     		str	r2, [r3, #12]
 652 0016 1A61     		str	r2, [r3, #16]
 302:Src/stm32g4xx_hal_msp.c ****   if(hhrtim->Instance==HRTIM1)
 653              		.loc 2 302 12
 654 0018 7B68     		ldr	r3, [r7, #4]
 655 001a 1B68     		ldr	r3, [r3]
 656              		.loc 2 302 5
 657 001c 284A     		ldr	r2, .L33
 658 001e 9342     		cmp	r3, r2
 659 0020 4AD1     		bne	.L32
 660              	.LBB12:
 303:Src/stm32g4xx_hal_msp.c ****   {
 304:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN HRTIM1_MspPostInit 0 */
 305:Src/stm32g4xx_hal_msp.c **** 
 306:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END HRTIM1_MspPostInit 0 */
 307:Src/stm32g4xx_hal_msp.c ****   
 308:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 661              		.loc 2 308 5
 662 0022 284B     		ldr	r3, .L33+4
 663 0024 DB6C     		ldr	r3, [r3, #76]
 664 0026 274A     		ldr	r2, .L33+4
 665 0028 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/ccfG3G71.s 			page 32


 666 002c D364     		str	r3, [r2, #76]
 667 002e 254B     		ldr	r3, .L33+4
 668 0030 DB6C     		ldr	r3, [r3, #76]
 669 0032 03F00403 		and	r3, r3, #4
 670 0036 3B61     		str	r3, [r7, #16]
 671 0038 3B69     		ldr	r3, [r7, #16]
 672              	.LBE12:
 673              	.LBB13:
 309:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 674              		.loc 2 309 5
 675 003a 224B     		ldr	r3, .L33+4
 676 003c DB6C     		ldr	r3, [r3, #76]
 677 003e 214A     		ldr	r2, .L33+4
 678 0040 43F00103 		orr	r3, r3, #1
 679 0044 D364     		str	r3, [r2, #76]
 680 0046 1F4B     		ldr	r3, .L33+4
 681 0048 DB6C     		ldr	r3, [r3, #76]
 682 004a 03F00103 		and	r3, r3, #1
 683 004e FB60     		str	r3, [r7, #12]
 684 0050 FB68     		ldr	r3, [r7, #12]
 685              	.LBE13:
 310:Src/stm32g4xx_hal_msp.c ****     /**HRTIM1 GPIO Configuration    
 311:Src/stm32g4xx_hal_msp.c ****     PC6     ------> HRTIM1_CHF1
 312:Src/stm32g4xx_hal_msp.c ****     PC7     ------> HRTIM1_CHF2
 313:Src/stm32g4xx_hal_msp.c ****     PC8     ------> HRTIM1_CHE1
 314:Src/stm32g4xx_hal_msp.c ****     PC9     ------> HRTIM1_CHE2
 315:Src/stm32g4xx_hal_msp.c ****     PA8     ------> HRTIM1_CHA1
 316:Src/stm32g4xx_hal_msp.c ****     PA9     ------> HRTIM1_CHA2 
 317:Src/stm32g4xx_hal_msp.c ****     */
 318:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 686              		.loc 2 318 25
 687 0052 C023     		movs	r3, #192
 688 0054 7B61     		str	r3, [r7, #20]
 319:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 689              		.loc 2 319 26
 690 0056 0223     		movs	r3, #2
 691 0058 BB61     		str	r3, [r7, #24]
 320:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 692              		.loc 2 320 26
 693 005a 0023     		movs	r3, #0
 694 005c FB61     		str	r3, [r7, #28]
 321:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 695              		.loc 2 321 27
 696 005e 0323     		movs	r3, #3
 697 0060 3B62     		str	r3, [r7, #32]
 322:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF13_HRTIM1;
 698              		.loc 2 322 31
 699 0062 0D23     		movs	r3, #13
 700 0064 7B62     		str	r3, [r7, #36]
 323:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 701              		.loc 2 323 5
 702 0066 07F11403 		add	r3, r7, #20
 703 006a 1946     		mov	r1, r3
 704 006c 1648     		ldr	r0, .L33+8
 705 006e FFF7FEFF 		bl	HAL_GPIO_Init
 324:Src/stm32g4xx_hal_msp.c **** 
 325:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
ARM GAS  /tmp/ccfG3G71.s 			page 33


 706              		.loc 2 325 25
 707 0072 4FF44073 		mov	r3, #768
 708 0076 7B61     		str	r3, [r7, #20]
 326:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 709              		.loc 2 326 26
 710 0078 0223     		movs	r3, #2
 711 007a BB61     		str	r3, [r7, #24]
 327:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 712              		.loc 2 327 26
 713 007c 0023     		movs	r3, #0
 714 007e FB61     		str	r3, [r7, #28]
 328:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 715              		.loc 2 328 27
 716 0080 0323     		movs	r3, #3
 717 0082 3B62     		str	r3, [r7, #32]
 329:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_HRTIM1;
 718              		.loc 2 329 31
 719 0084 0323     		movs	r3, #3
 720 0086 7B62     		str	r3, [r7, #36]
 330:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 721              		.loc 2 330 5
 722 0088 07F11403 		add	r3, r7, #20
 723 008c 1946     		mov	r1, r3
 724 008e 0E48     		ldr	r0, .L33+8
 725 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 331:Src/stm32g4xx_hal_msp.c **** 
 332:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 726              		.loc 2 332 25
 727 0094 4FF44073 		mov	r3, #768
 728 0098 7B61     		str	r3, [r7, #20]
 333:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 729              		.loc 2 333 26
 730 009a 0223     		movs	r3, #2
 731 009c BB61     		str	r3, [r7, #24]
 334:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 732              		.loc 2 334 26
 733 009e 0023     		movs	r3, #0
 734 00a0 FB61     		str	r3, [r7, #28]
 335:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 735              		.loc 2 335 27
 736 00a2 0323     		movs	r3, #3
 737 00a4 3B62     		str	r3, [r7, #32]
 336:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF13_HRTIM1;
 738              		.loc 2 336 31
 739 00a6 0D23     		movs	r3, #13
 740 00a8 7B62     		str	r3, [r7, #36]
 337:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 741              		.loc 2 337 5
 742 00aa 07F11403 		add	r3, r7, #20
 743 00ae 1946     		mov	r1, r3
 744 00b0 4FF09040 		mov	r0, #1207959552
 745 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 746              	.L32:
 338:Src/stm32g4xx_hal_msp.c **** 
 339:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN HRTIM1_MspPostInit 1 */
 340:Src/stm32g4xx_hal_msp.c **** 
 341:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END HRTIM1_MspPostInit 1 */
ARM GAS  /tmp/ccfG3G71.s 			page 34


 342:Src/stm32g4xx_hal_msp.c ****   }
 343:Src/stm32g4xx_hal_msp.c **** 
 344:Src/stm32g4xx_hal_msp.c **** }
 747              		.loc 2 344 1
 748 00b8 00BF     		nop
 749 00ba 2837     		adds	r7, r7, #40
 750              	.LCFI27:
 751              		.cfi_def_cfa_offset 8
 752 00bc BD46     		mov	sp, r7
 753              	.LCFI28:
 754              		.cfi_def_cfa_register 13
 755              		@ sp needed
 756 00be 80BD     		pop	{r7, pc}
 757              	.L34:
 758              		.align	2
 759              	.L33:
 760 00c0 00680140 		.word	1073833984
 761 00c4 00100240 		.word	1073876992
 762 00c8 00080048 		.word	1207961600
 763              		.cfi_endproc
 764              	.LFE410:
 766              		.section	.text.HAL_HRTIM_MspDeInit,"ax",%progbits
 767              		.align	1
 768              		.global	HAL_HRTIM_MspDeInit
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	HAL_HRTIM_MspDeInit:
 775              	.LFB411:
 345:Src/stm32g4xx_hal_msp.c **** /**
 346:Src/stm32g4xx_hal_msp.c **** * @brief HRTIM MSP De-Initialization
 347:Src/stm32g4xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 348:Src/stm32g4xx_hal_msp.c **** * @param hhrtim: HRTIM handle pointer
 349:Src/stm32g4xx_hal_msp.c **** * @retval None
 350:Src/stm32g4xx_hal_msp.c **** */
 351:Src/stm32g4xx_hal_msp.c **** void HAL_HRTIM_MspDeInit(HRTIM_HandleTypeDef* hhrtim)
 352:Src/stm32g4xx_hal_msp.c **** {
 776              		.loc 2 352 1
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 8
 779              		@ frame_needed = 1, uses_anonymous_args = 0
 780 0000 80B5     		push	{r7, lr}
 781              	.LCFI29:
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 82B0     		sub	sp, sp, #8
 786              	.LCFI30:
 787              		.cfi_def_cfa_offset 16
 788 0004 00AF     		add	r7, sp, #0
 789              	.LCFI31:
 790              		.cfi_def_cfa_register 7
 791 0006 7860     		str	r0, [r7, #4]
 353:Src/stm32g4xx_hal_msp.c ****   if(hhrtim->Instance==HRTIM1)
 792              		.loc 2 353 12
 793 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfG3G71.s 			page 35


 794 000a 1B68     		ldr	r3, [r3]
 795              		.loc 2 353 5
 796 000c 074A     		ldr	r2, .L38
 797 000e 9342     		cmp	r3, r2
 798 0010 08D1     		bne	.L37
 354:Src/stm32g4xx_hal_msp.c ****   {
 355:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN HRTIM1_MspDeInit 0 */
 356:Src/stm32g4xx_hal_msp.c **** 
 357:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END HRTIM1_MspDeInit 0 */
 358:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock disable */
 359:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_HRTIM1_CLK_DISABLE();
 799              		.loc 2 359 5
 800 0012 074B     		ldr	r3, .L38+4
 801 0014 1B6E     		ldr	r3, [r3, #96]
 802 0016 064A     		ldr	r2, .L38+4
 803 0018 23F08063 		bic	r3, r3, #67108864
 804 001c 1366     		str	r3, [r2, #96]
 360:Src/stm32g4xx_hal_msp.c **** 
 361:Src/stm32g4xx_hal_msp.c ****     /* HRTIM1 interrupt DeInit */
 362:Src/stm32g4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(HRTIM1_Master_IRQn);
 805              		.loc 2 362 5
 806 001e 4320     		movs	r0, #67
 807 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 808              	.L37:
 363:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN HRTIM1_MspDeInit 1 */
 364:Src/stm32g4xx_hal_msp.c **** 
 365:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END HRTIM1_MspDeInit 1 */
 366:Src/stm32g4xx_hal_msp.c ****   }
 367:Src/stm32g4xx_hal_msp.c **** 
 368:Src/stm32g4xx_hal_msp.c **** }
 809              		.loc 2 368 1
 810 0024 00BF     		nop
 811 0026 0837     		adds	r7, r7, #8
 812              	.LCFI32:
 813              		.cfi_def_cfa_offset 8
 814 0028 BD46     		mov	sp, r7
 815              	.LCFI33:
 816              		.cfi_def_cfa_register 13
 817              		@ sp needed
 818 002a 80BD     		pop	{r7, pc}
 819              	.L39:
 820              		.align	2
 821              	.L38:
 822 002c 00680140 		.word	1073833984
 823 0030 00100240 		.word	1073876992
 824              		.cfi_endproc
 825              	.LFE411:
 827              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 828              		.align	1
 829              		.global	HAL_SPI_MspInit
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu fpv4-sp-d16
 835              	HAL_SPI_MspInit:
 836              	.LFB412:
 369:Src/stm32g4xx_hal_msp.c **** 
ARM GAS  /tmp/ccfG3G71.s 			page 36


 370:Src/stm32g4xx_hal_msp.c **** /**
 371:Src/stm32g4xx_hal_msp.c **** * @brief SPI MSP Initialization
 372:Src/stm32g4xx_hal_msp.c **** * This function configures the hardware resources used in this example
 373:Src/stm32g4xx_hal_msp.c **** * @param hspi: SPI handle pointer
 374:Src/stm32g4xx_hal_msp.c **** * @retval None
 375:Src/stm32g4xx_hal_msp.c **** */
 376:Src/stm32g4xx_hal_msp.c **** void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
 377:Src/stm32g4xx_hal_msp.c **** {
 837              		.loc 2 377 1
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 48
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 80B5     		push	{r7, lr}
 842              	.LCFI34:
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 8CB0     		sub	sp, sp, #48
 847              	.LCFI35:
 848              		.cfi_def_cfa_offset 56
 849 0004 00AF     		add	r7, sp, #0
 850              	.LCFI36:
 851              		.cfi_def_cfa_register 7
 852 0006 7860     		str	r0, [r7, #4]
 378:Src/stm32g4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 853              		.loc 2 378 20
 854 0008 07F11C03 		add	r3, r7, #28
 855 000c 0022     		movs	r2, #0
 856 000e 1A60     		str	r2, [r3]
 857 0010 5A60     		str	r2, [r3, #4]
 858 0012 9A60     		str	r2, [r3, #8]
 859 0014 DA60     		str	r2, [r3, #12]
 860 0016 1A61     		str	r2, [r3, #16]
 379:Src/stm32g4xx_hal_msp.c ****   if(hspi->Instance==SPI2)
 861              		.loc 2 379 10
 862 0018 7B68     		ldr	r3, [r7, #4]
 863 001a 1B68     		ldr	r3, [r3]
 864              		.loc 2 379 5
 865 001c 5A4A     		ldr	r2, .L46
 866 001e 9342     		cmp	r3, r2
 867 0020 29D1     		bne	.L41
 868              	.LBB14:
 380:Src/stm32g4xx_hal_msp.c ****   {
 381:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI2_MspInit 0 */
 382:Src/stm32g4xx_hal_msp.c **** 
 383:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END SPI2_MspInit 0 */
 384:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock enable */
 385:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_SPI2_CLK_ENABLE();
 869              		.loc 2 385 5
 870 0022 5A4B     		ldr	r3, .L46+4
 871 0024 9B6D     		ldr	r3, [r3, #88]
 872 0026 594A     		ldr	r2, .L46+4
 873 0028 43F48043 		orr	r3, r3, #16384
 874 002c 9365     		str	r3, [r2, #88]
 875 002e 574B     		ldr	r3, .L46+4
 876 0030 9B6D     		ldr	r3, [r3, #88]
 877 0032 03F48043 		and	r3, r3, #16384
ARM GAS  /tmp/ccfG3G71.s 			page 37


 878 0036 BB61     		str	r3, [r7, #24]
 879 0038 BB69     		ldr	r3, [r7, #24]
 880              	.LBE14:
 881              	.LBB15:
 386:Src/stm32g4xx_hal_msp.c ****   
 387:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 882              		.loc 2 387 5
 883 003a 544B     		ldr	r3, .L46+4
 884 003c DB6C     		ldr	r3, [r3, #76]
 885 003e 534A     		ldr	r2, .L46+4
 886 0040 43F00203 		orr	r3, r3, #2
 887 0044 D364     		str	r3, [r2, #76]
 888 0046 514B     		ldr	r3, .L46+4
 889 0048 DB6C     		ldr	r3, [r3, #76]
 890 004a 03F00203 		and	r3, r3, #2
 891 004e 7B61     		str	r3, [r7, #20]
 892 0050 7B69     		ldr	r3, [r7, #20]
 893              	.LBE15:
 388:Src/stm32g4xx_hal_msp.c ****     /**SPI2 GPIO Configuration    
 389:Src/stm32g4xx_hal_msp.c ****     PB12     ------> SPI2_NSS
 390:Src/stm32g4xx_hal_msp.c ****     PB13     ------> SPI2_SCK
 391:Src/stm32g4xx_hal_msp.c ****     PB14     ------> SPI2_MISO
 392:Src/stm32g4xx_hal_msp.c ****     PB15     ------> SPI2_MOSI 
 393:Src/stm32g4xx_hal_msp.c ****     */
 394:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 894              		.loc 2 394 25
 895 0052 4FF47043 		mov	r3, #61440
 896 0056 FB61     		str	r3, [r7, #28]
 395:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 897              		.loc 2 395 26
 898 0058 0223     		movs	r3, #2
 899 005a 3B62     		str	r3, [r7, #32]
 396:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 900              		.loc 2 396 26
 901 005c 0023     		movs	r3, #0
 902 005e 7B62     		str	r3, [r7, #36]
 397:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 903              		.loc 2 397 27
 904 0060 0023     		movs	r3, #0
 905 0062 BB62     		str	r3, [r7, #40]
 398:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 906              		.loc 2 398 31
 907 0064 0523     		movs	r3, #5
 908 0066 FB62     		str	r3, [r7, #44]
 399:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 909              		.loc 2 399 5
 910 0068 07F11C03 		add	r3, r7, #28
 911 006c 1946     		mov	r1, r3
 912 006e 4848     		ldr	r0, .L46+8
 913 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 400:Src/stm32g4xx_hal_msp.c **** 
 401:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI2_MspInit 1 */
 402:Src/stm32g4xx_hal_msp.c **** 
 403:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END SPI2_MspInit 1 */
 404:Src/stm32g4xx_hal_msp.c ****   }
 405:Src/stm32g4xx_hal_msp.c ****   else if(hspi->Instance==SPI3)
 406:Src/stm32g4xx_hal_msp.c ****   {
ARM GAS  /tmp/ccfG3G71.s 			page 38


 407:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI3_MspInit 0 */
 408:Src/stm32g4xx_hal_msp.c **** 
 409:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END SPI3_MspInit 0 */
 410:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock enable */
 411:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_SPI3_CLK_ENABLE();
 412:Src/stm32g4xx_hal_msp.c ****   
 413:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 414:Src/stm32g4xx_hal_msp.c ****     /**SPI3 GPIO Configuration    
 415:Src/stm32g4xx_hal_msp.c ****     PC10     ------> SPI3_SCK
 416:Src/stm32g4xx_hal_msp.c ****     PC11     ------> SPI3_MISO
 417:Src/stm32g4xx_hal_msp.c ****     PC12     ------> SPI3_MOSI 
 418:Src/stm32g4xx_hal_msp.c ****     */
 419:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 420:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 421:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 422:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 423:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 424:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 425:Src/stm32g4xx_hal_msp.c **** 
 426:Src/stm32g4xx_hal_msp.c ****     /* SPI3 DMA Init */
 427:Src/stm32g4xx_hal_msp.c ****     /* SPI3_RX Init */
 428:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Instance = DMA1_Channel1;
 429:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.Request = DMA_REQUEST_SPI3_RX;
 430:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 431:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 432:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.MemInc = DMA_MINC_ENABLE;
 433:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 434:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 435:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.Mode = DMA_NORMAL;
 436:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.Priority = DMA_PRIORITY_LOW;
 437:Src/stm32g4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_spi3_rx) != HAL_OK)
 438:Src/stm32g4xx_hal_msp.c ****     {
 439:Src/stm32g4xx_hal_msp.c ****       Error_Handler();
 440:Src/stm32g4xx_hal_msp.c ****     }
 441:Src/stm32g4xx_hal_msp.c **** 
 442:Src/stm32g4xx_hal_msp.c ****     __HAL_LINKDMA(hspi,hdmarx,hdma_spi3_rx);
 443:Src/stm32g4xx_hal_msp.c **** 
 444:Src/stm32g4xx_hal_msp.c ****     /* SPI3_TX Init */
 445:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Instance = DMA1_Channel2;
 446:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.Request = DMA_REQUEST_SPI3_TX;
 447:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 448:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 449:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.MemInc = DMA_MINC_ENABLE;
 450:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 451:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 452:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.Mode = DMA_NORMAL;
 453:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.Priority = DMA_PRIORITY_LOW;
 454:Src/stm32g4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_spi3_tx) != HAL_OK)
 455:Src/stm32g4xx_hal_msp.c ****     {
 456:Src/stm32g4xx_hal_msp.c ****       Error_Handler();
 457:Src/stm32g4xx_hal_msp.c ****     }
 458:Src/stm32g4xx_hal_msp.c **** 
 459:Src/stm32g4xx_hal_msp.c ****     __HAL_LINKDMA(hspi,hdmatx,hdma_spi3_tx);
 460:Src/stm32g4xx_hal_msp.c **** 
 461:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI3_MspInit 1 */
 462:Src/stm32g4xx_hal_msp.c **** 
 463:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END SPI3_MspInit 1 */
ARM GAS  /tmp/ccfG3G71.s 			page 39


 464:Src/stm32g4xx_hal_msp.c ****   }
 465:Src/stm32g4xx_hal_msp.c **** 
 466:Src/stm32g4xx_hal_msp.c **** }
 914              		.loc 2 466 1
 915 0074 83E0     		b	.L45
 916              	.L41:
 405:Src/stm32g4xx_hal_msp.c ****   {
 917              		.loc 2 405 15
 918 0076 7B68     		ldr	r3, [r7, #4]
 919 0078 1B68     		ldr	r3, [r3]
 405:Src/stm32g4xx_hal_msp.c ****   {
 920              		.loc 2 405 10
 921 007a 464A     		ldr	r2, .L46+12
 922 007c 9342     		cmp	r3, r2
 923 007e 7ED1     		bne	.L45
 924              	.LBB16:
 411:Src/stm32g4xx_hal_msp.c ****   
 925              		.loc 2 411 5
 926 0080 424B     		ldr	r3, .L46+4
 927 0082 9B6D     		ldr	r3, [r3, #88]
 928 0084 414A     		ldr	r2, .L46+4
 929 0086 43F40043 		orr	r3, r3, #32768
 930 008a 9365     		str	r3, [r2, #88]
 931 008c 3F4B     		ldr	r3, .L46+4
 932 008e 9B6D     		ldr	r3, [r3, #88]
 933 0090 03F40043 		and	r3, r3, #32768
 934 0094 3B61     		str	r3, [r7, #16]
 935 0096 3B69     		ldr	r3, [r7, #16]
 936              	.LBE16:
 937              	.LBB17:
 413:Src/stm32g4xx_hal_msp.c ****     /**SPI3 GPIO Configuration    
 938              		.loc 2 413 5
 939 0098 3C4B     		ldr	r3, .L46+4
 940 009a DB6C     		ldr	r3, [r3, #76]
 941 009c 3B4A     		ldr	r2, .L46+4
 942 009e 43F00403 		orr	r3, r3, #4
 943 00a2 D364     		str	r3, [r2, #76]
 944 00a4 394B     		ldr	r3, .L46+4
 945 00a6 DB6C     		ldr	r3, [r3, #76]
 946 00a8 03F00403 		and	r3, r3, #4
 947 00ac FB60     		str	r3, [r7, #12]
 948 00ae FB68     		ldr	r3, [r7, #12]
 949              	.LBE17:
 419:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 950              		.loc 2 419 25
 951 00b0 4FF4E053 		mov	r3, #7168
 952 00b4 FB61     		str	r3, [r7, #28]
 420:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 953              		.loc 2 420 26
 954 00b6 0223     		movs	r3, #2
 955 00b8 3B62     		str	r3, [r7, #32]
 421:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 956              		.loc 2 421 26
 957 00ba 0023     		movs	r3, #0
 958 00bc 7B62     		str	r3, [r7, #36]
 422:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 959              		.loc 2 422 27
ARM GAS  /tmp/ccfG3G71.s 			page 40


 960 00be 0323     		movs	r3, #3
 961 00c0 BB62     		str	r3, [r7, #40]
 423:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 962              		.loc 2 423 31
 963 00c2 0623     		movs	r3, #6
 964 00c4 FB62     		str	r3, [r7, #44]
 424:Src/stm32g4xx_hal_msp.c **** 
 965              		.loc 2 424 5
 966 00c6 07F11C03 		add	r3, r7, #28
 967 00ca 1946     		mov	r1, r3
 968 00cc 3248     		ldr	r0, .L46+16
 969 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 428:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.Request = DMA_REQUEST_SPI3_RX;
 970              		.loc 2 428 27
 971 00d2 324B     		ldr	r3, .L46+20
 972 00d4 324A     		ldr	r2, .L46+24
 973 00d6 1A60     		str	r2, [r3]
 429:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 974              		.loc 2 429 31
 975 00d8 304B     		ldr	r3, .L46+20
 976 00da 0E22     		movs	r2, #14
 977 00dc 5A60     		str	r2, [r3, #4]
 430:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 978              		.loc 2 430 33
 979 00de 2F4B     		ldr	r3, .L46+20
 980 00e0 0022     		movs	r2, #0
 981 00e2 9A60     		str	r2, [r3, #8]
 431:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.MemInc = DMA_MINC_ENABLE;
 982              		.loc 2 431 33
 983 00e4 2D4B     		ldr	r3, .L46+20
 984 00e6 0022     		movs	r2, #0
 985 00e8 DA60     		str	r2, [r3, #12]
 432:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 986              		.loc 2 432 30
 987 00ea 2C4B     		ldr	r3, .L46+20
 988 00ec 8022     		movs	r2, #128
 989 00ee 1A61     		str	r2, [r3, #16]
 433:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 990              		.loc 2 433 43
 991 00f0 2A4B     		ldr	r3, .L46+20
 992 00f2 4FF48072 		mov	r2, #256
 993 00f6 5A61     		str	r2, [r3, #20]
 434:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.Mode = DMA_NORMAL;
 994              		.loc 2 434 40
 995 00f8 284B     		ldr	r3, .L46+20
 996 00fa 4FF48062 		mov	r2, #1024
 997 00fe 9A61     		str	r2, [r3, #24]
 435:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_rx.Init.Priority = DMA_PRIORITY_LOW;
 998              		.loc 2 435 28
 999 0100 264B     		ldr	r3, .L46+20
 1000 0102 0022     		movs	r2, #0
 1001 0104 DA61     		str	r2, [r3, #28]
 436:Src/stm32g4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_spi3_rx) != HAL_OK)
 1002              		.loc 2 436 32
 1003 0106 254B     		ldr	r3, .L46+20
 1004 0108 0022     		movs	r2, #0
 1005 010a 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccfG3G71.s 			page 41


 437:Src/stm32g4xx_hal_msp.c ****     {
 1006              		.loc 2 437 9
 1007 010c 2348     		ldr	r0, .L46+20
 1008 010e FFF7FEFF 		bl	HAL_DMA_Init
 1009 0112 0346     		mov	r3, r0
 437:Src/stm32g4xx_hal_msp.c ****     {
 1010              		.loc 2 437 8
 1011 0114 002B     		cmp	r3, #0
 1012 0116 01D0     		beq	.L43
 439:Src/stm32g4xx_hal_msp.c ****     }
 1013              		.loc 2 439 7
 1014 0118 FFF7FEFF 		bl	Error_Handler
 1015              	.L43:
 442:Src/stm32g4xx_hal_msp.c **** 
 1016              		.loc 2 442 5
 1017 011c 7B68     		ldr	r3, [r7, #4]
 1018 011e 1F4A     		ldr	r2, .L46+20
 1019 0120 9A65     		str	r2, [r3, #88]
 1020 0122 1E4A     		ldr	r2, .L46+20
 1021 0124 7B68     		ldr	r3, [r7, #4]
 1022 0126 9362     		str	r3, [r2, #40]
 445:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.Request = DMA_REQUEST_SPI3_TX;
 1023              		.loc 2 445 27
 1024 0128 1E4B     		ldr	r3, .L46+28
 1025 012a 1F4A     		ldr	r2, .L46+32
 1026 012c 1A60     		str	r2, [r3]
 446:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 1027              		.loc 2 446 31
 1028 012e 1D4B     		ldr	r3, .L46+28
 1029 0130 0F22     		movs	r2, #15
 1030 0132 5A60     		str	r2, [r3, #4]
 447:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 1031              		.loc 2 447 33
 1032 0134 1B4B     		ldr	r3, .L46+28
 1033 0136 1022     		movs	r2, #16
 1034 0138 9A60     		str	r2, [r3, #8]
 448:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.MemInc = DMA_MINC_ENABLE;
 1035              		.loc 2 448 33
 1036 013a 1A4B     		ldr	r3, .L46+28
 1037 013c 0022     		movs	r2, #0
 1038 013e DA60     		str	r2, [r3, #12]
 449:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 1039              		.loc 2 449 30
 1040 0140 184B     		ldr	r3, .L46+28
 1041 0142 8022     		movs	r2, #128
 1042 0144 1A61     		str	r2, [r3, #16]
 450:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 1043              		.loc 2 450 43
 1044 0146 174B     		ldr	r3, .L46+28
 1045 0148 4FF48072 		mov	r2, #256
 1046 014c 5A61     		str	r2, [r3, #20]
 451:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.Mode = DMA_NORMAL;
 1047              		.loc 2 451 40
 1048 014e 154B     		ldr	r3, .L46+28
 1049 0150 4FF48062 		mov	r2, #1024
 1050 0154 9A61     		str	r2, [r3, #24]
 452:Src/stm32g4xx_hal_msp.c ****     hdma_spi3_tx.Init.Priority = DMA_PRIORITY_LOW;
ARM GAS  /tmp/ccfG3G71.s 			page 42


 1051              		.loc 2 452 28
 1052 0156 134B     		ldr	r3, .L46+28
 1053 0158 0022     		movs	r2, #0
 1054 015a DA61     		str	r2, [r3, #28]
 453:Src/stm32g4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_spi3_tx) != HAL_OK)
 1055              		.loc 2 453 32
 1056 015c 114B     		ldr	r3, .L46+28
 1057 015e 0022     		movs	r2, #0
 1058 0160 1A62     		str	r2, [r3, #32]
 454:Src/stm32g4xx_hal_msp.c ****     {
 1059              		.loc 2 454 9
 1060 0162 1048     		ldr	r0, .L46+28
 1061 0164 FFF7FEFF 		bl	HAL_DMA_Init
 1062 0168 0346     		mov	r3, r0
 454:Src/stm32g4xx_hal_msp.c ****     {
 1063              		.loc 2 454 8
 1064 016a 002B     		cmp	r3, #0
 1065 016c 01D0     		beq	.L44
 456:Src/stm32g4xx_hal_msp.c ****     }
 1066              		.loc 2 456 7
 1067 016e FFF7FEFF 		bl	Error_Handler
 1068              	.L44:
 459:Src/stm32g4xx_hal_msp.c **** 
 1069              		.loc 2 459 5
 1070 0172 7B68     		ldr	r3, [r7, #4]
 1071 0174 0B4A     		ldr	r2, .L46+28
 1072 0176 5A65     		str	r2, [r3, #84]
 1073 0178 0A4A     		ldr	r2, .L46+28
 1074 017a 7B68     		ldr	r3, [r7, #4]
 1075 017c 9362     		str	r3, [r2, #40]
 1076              	.L45:
 1077              		.loc 2 466 1
 1078 017e 00BF     		nop
 1079 0180 3037     		adds	r7, r7, #48
 1080              	.LCFI37:
 1081              		.cfi_def_cfa_offset 8
 1082 0182 BD46     		mov	sp, r7
 1083              	.LCFI38:
 1084              		.cfi_def_cfa_register 13
 1085              		@ sp needed
 1086 0184 80BD     		pop	{r7, pc}
 1087              	.L47:
 1088 0186 00BF     		.align	2
 1089              	.L46:
 1090 0188 00380040 		.word	1073756160
 1091 018c 00100240 		.word	1073876992
 1092 0190 00040048 		.word	1207960576
 1093 0194 003C0040 		.word	1073757184
 1094 0198 00080048 		.word	1207961600
 1095 019c 00000000 		.word	hdma_spi3_rx
 1096 01a0 08000240 		.word	1073872904
 1097 01a4 00000000 		.word	hdma_spi3_tx
 1098 01a8 1C000240 		.word	1073872924
 1099              		.cfi_endproc
 1100              	.LFE412:
 1102              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 1103              		.align	1
ARM GAS  /tmp/ccfG3G71.s 			page 43


 1104              		.global	HAL_SPI_MspDeInit
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu fpv4-sp-d16
 1110              	HAL_SPI_MspDeInit:
 1111              	.LFB413:
 467:Src/stm32g4xx_hal_msp.c **** 
 468:Src/stm32g4xx_hal_msp.c **** /**
 469:Src/stm32g4xx_hal_msp.c **** * @brief SPI MSP De-Initialization
 470:Src/stm32g4xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 471:Src/stm32g4xx_hal_msp.c **** * @param hspi: SPI handle pointer
 472:Src/stm32g4xx_hal_msp.c **** * @retval None
 473:Src/stm32g4xx_hal_msp.c **** */
 474:Src/stm32g4xx_hal_msp.c **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
 475:Src/stm32g4xx_hal_msp.c **** {
 1112              		.loc 2 475 1
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              	.LCFI39:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 82B0     		sub	sp, sp, #8
 1122              	.LCFI40:
 1123              		.cfi_def_cfa_offset 16
 1124 0004 00AF     		add	r7, sp, #0
 1125              	.LCFI41:
 1126              		.cfi_def_cfa_register 7
 1127 0006 7860     		str	r0, [r7, #4]
 476:Src/stm32g4xx_hal_msp.c ****   if(hspi->Instance==SPI2)
 1128              		.loc 2 476 10
 1129 0008 7B68     		ldr	r3, [r7, #4]
 1130 000a 1B68     		ldr	r3, [r3]
 1131              		.loc 2 476 5
 1132 000c 164A     		ldr	r2, .L52
 1133 000e 9342     		cmp	r3, r2
 1134 0010 0BD1     		bne	.L49
 477:Src/stm32g4xx_hal_msp.c ****   {
 478:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI2_MspDeInit 0 */
 479:Src/stm32g4xx_hal_msp.c **** 
 480:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END SPI2_MspDeInit 0 */
 481:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock disable */
 482:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_SPI2_CLK_DISABLE();
 1135              		.loc 2 482 5
 1136 0012 164B     		ldr	r3, .L52+4
 1137 0014 9B6D     		ldr	r3, [r3, #88]
 1138 0016 154A     		ldr	r2, .L52+4
 1139 0018 23F48043 		bic	r3, r3, #16384
 1140 001c 9365     		str	r3, [r2, #88]
 483:Src/stm32g4xx_hal_msp.c ****   
 484:Src/stm32g4xx_hal_msp.c ****     /**SPI2 GPIO Configuration    
 485:Src/stm32g4xx_hal_msp.c ****     PB12     ------> SPI2_NSS
 486:Src/stm32g4xx_hal_msp.c ****     PB13     ------> SPI2_SCK
 487:Src/stm32g4xx_hal_msp.c ****     PB14     ------> SPI2_MISO
ARM GAS  /tmp/ccfG3G71.s 			page 44


 488:Src/stm32g4xx_hal_msp.c ****     PB15     ------> SPI2_MOSI 
 489:Src/stm32g4xx_hal_msp.c ****     */
 490:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15);
 1141              		.loc 2 490 5
 1142 001e 4FF47041 		mov	r1, #61440
 1143 0022 1348     		ldr	r0, .L52+8
 1144 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 491:Src/stm32g4xx_hal_msp.c **** 
 492:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI2_MspDeInit 1 */
 493:Src/stm32g4xx_hal_msp.c **** 
 494:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END SPI2_MspDeInit 1 */
 495:Src/stm32g4xx_hal_msp.c ****   }
 496:Src/stm32g4xx_hal_msp.c ****   else if(hspi->Instance==SPI3)
 497:Src/stm32g4xx_hal_msp.c ****   {
 498:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI3_MspDeInit 0 */
 499:Src/stm32g4xx_hal_msp.c **** 
 500:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END SPI3_MspDeInit 0 */
 501:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock disable */
 502:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_SPI3_CLK_DISABLE();
 503:Src/stm32g4xx_hal_msp.c ****   
 504:Src/stm32g4xx_hal_msp.c ****     /**SPI3 GPIO Configuration    
 505:Src/stm32g4xx_hal_msp.c ****     PC10     ------> SPI3_SCK
 506:Src/stm32g4xx_hal_msp.c ****     PC11     ------> SPI3_MISO
 507:Src/stm32g4xx_hal_msp.c ****     PC12     ------> SPI3_MOSI 
 508:Src/stm32g4xx_hal_msp.c ****     */
 509:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12);
 510:Src/stm32g4xx_hal_msp.c **** 
 511:Src/stm32g4xx_hal_msp.c ****     /* SPI3 DMA DeInit */
 512:Src/stm32g4xx_hal_msp.c ****     HAL_DMA_DeInit(hspi->hdmarx);
 513:Src/stm32g4xx_hal_msp.c ****     HAL_DMA_DeInit(hspi->hdmatx);
 514:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI3_MspDeInit 1 */
 515:Src/stm32g4xx_hal_msp.c **** 
 516:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END SPI3_MspDeInit 1 */
 517:Src/stm32g4xx_hal_msp.c ****   }
 518:Src/stm32g4xx_hal_msp.c **** 
 519:Src/stm32g4xx_hal_msp.c **** }
 1145              		.loc 2 519 1
 1146 0028 19E0     		b	.L51
 1147              	.L49:
 496:Src/stm32g4xx_hal_msp.c ****   {
 1148              		.loc 2 496 15
 1149 002a 7B68     		ldr	r3, [r7, #4]
 1150 002c 1B68     		ldr	r3, [r3]
 496:Src/stm32g4xx_hal_msp.c ****   {
 1151              		.loc 2 496 10
 1152 002e 114A     		ldr	r2, .L52+12
 1153 0030 9342     		cmp	r3, r2
 1154 0032 14D1     		bne	.L51
 502:Src/stm32g4xx_hal_msp.c ****   
 1155              		.loc 2 502 5
 1156 0034 0D4B     		ldr	r3, .L52+4
 1157 0036 9B6D     		ldr	r3, [r3, #88]
 1158 0038 0C4A     		ldr	r2, .L52+4
 1159 003a 23F40043 		bic	r3, r3, #32768
 1160 003e 9365     		str	r3, [r2, #88]
 509:Src/stm32g4xx_hal_msp.c **** 
 1161              		.loc 2 509 5
ARM GAS  /tmp/ccfG3G71.s 			page 45


 1162 0040 4FF4E051 		mov	r1, #7168
 1163 0044 0C48     		ldr	r0, .L52+16
 1164 0046 FFF7FEFF 		bl	HAL_GPIO_DeInit
 512:Src/stm32g4xx_hal_msp.c ****     HAL_DMA_DeInit(hspi->hdmatx);
 1165              		.loc 2 512 5
 1166 004a 7B68     		ldr	r3, [r7, #4]
 1167 004c 9B6D     		ldr	r3, [r3, #88]
 1168 004e 1846     		mov	r0, r3
 1169 0050 FFF7FEFF 		bl	HAL_DMA_DeInit
 513:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN SPI3_MspDeInit 1 */
 1170              		.loc 2 513 5
 1171 0054 7B68     		ldr	r3, [r7, #4]
 1172 0056 5B6D     		ldr	r3, [r3, #84]
 1173 0058 1846     		mov	r0, r3
 1174 005a FFF7FEFF 		bl	HAL_DMA_DeInit
 1175              	.L51:
 1176              		.loc 2 519 1
 1177 005e 00BF     		nop
 1178 0060 0837     		adds	r7, r7, #8
 1179              	.LCFI42:
 1180              		.cfi_def_cfa_offset 8
 1181 0062 BD46     		mov	sp, r7
 1182              	.LCFI43:
 1183              		.cfi_def_cfa_register 13
 1184              		@ sp needed
 1185 0064 80BD     		pop	{r7, pc}
 1186              	.L53:
 1187 0066 00BF     		.align	2
 1188              	.L52:
 1189 0068 00380040 		.word	1073756160
 1190 006c 00100240 		.word	1073876992
 1191 0070 00040048 		.word	1207960576
 1192 0074 003C0040 		.word	1073757184
 1193 0078 00080048 		.word	1207961600
 1194              		.cfi_endproc
 1195              	.LFE413:
 1197              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 1198              		.align	1
 1199              		.global	HAL_UART_MspInit
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu fpv4-sp-d16
 1205              	HAL_UART_MspInit:
 1206              	.LFB414:
 520:Src/stm32g4xx_hal_msp.c **** 
 521:Src/stm32g4xx_hal_msp.c **** /**
 522:Src/stm32g4xx_hal_msp.c **** * @brief UART MSP Initialization
 523:Src/stm32g4xx_hal_msp.c **** * This function configures the hardware resources used in this example
 524:Src/stm32g4xx_hal_msp.c **** * @param huart: UART handle pointer
 525:Src/stm32g4xx_hal_msp.c **** * @retval None
 526:Src/stm32g4xx_hal_msp.c **** */
 527:Src/stm32g4xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 528:Src/stm32g4xx_hal_msp.c **** {
 1207              		.loc 2 528 1
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 40
ARM GAS  /tmp/ccfG3G71.s 			page 46


 1210              		@ frame_needed = 1, uses_anonymous_args = 0
 1211 0000 80B5     		push	{r7, lr}
 1212              	.LCFI44:
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 7, -8
 1215              		.cfi_offset 14, -4
 1216 0002 8AB0     		sub	sp, sp, #40
 1217              	.LCFI45:
 1218              		.cfi_def_cfa_offset 48
 1219 0004 00AF     		add	r7, sp, #0
 1220              	.LCFI46:
 1221              		.cfi_def_cfa_register 7
 1222 0006 7860     		str	r0, [r7, #4]
 529:Src/stm32g4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1223              		.loc 2 529 20
 1224 0008 07F11403 		add	r3, r7, #20
 1225 000c 0022     		movs	r2, #0
 1226 000e 1A60     		str	r2, [r3]
 1227 0010 5A60     		str	r2, [r3, #4]
 1228 0012 9A60     		str	r2, [r3, #8]
 1229 0014 DA60     		str	r2, [r3, #12]
 1230 0016 1A61     		str	r2, [r3, #16]
 530:Src/stm32g4xx_hal_msp.c ****   if(huart->Instance==USART1)
 1231              		.loc 2 530 11
 1232 0018 7B68     		ldr	r3, [r7, #4]
 1233 001a 1B68     		ldr	r3, [r3]
 1234              		.loc 2 530 5
 1235 001c 174A     		ldr	r2, .L57
 1236 001e 9342     		cmp	r3, r2
 1237 0020 27D1     		bne	.L56
 1238              	.LBB18:
 531:Src/stm32g4xx_hal_msp.c ****   {
 532:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 533:Src/stm32g4xx_hal_msp.c **** 
 534:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 0 */
 535:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock enable */
 536:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 1239              		.loc 2 536 5
 1240 0022 174B     		ldr	r3, .L57+4
 1241 0024 1B6E     		ldr	r3, [r3, #96]
 1242 0026 164A     		ldr	r2, .L57+4
 1243 0028 43F48043 		orr	r3, r3, #16384
 1244 002c 1366     		str	r3, [r2, #96]
 1245 002e 144B     		ldr	r3, .L57+4
 1246 0030 1B6E     		ldr	r3, [r3, #96]
 1247 0032 03F48043 		and	r3, r3, #16384
 1248 0036 3B61     		str	r3, [r7, #16]
 1249 0038 3B69     		ldr	r3, [r7, #16]
 1250              	.LBE18:
 1251              	.LBB19:
 537:Src/stm32g4xx_hal_msp.c ****   
 538:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 1252              		.loc 2 538 5
 1253 003a 114B     		ldr	r3, .L57+4
 1254 003c DB6C     		ldr	r3, [r3, #76]
 1255 003e 104A     		ldr	r2, .L57+4
 1256 0040 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/ccfG3G71.s 			page 47


 1257 0044 D364     		str	r3, [r2, #76]
 1258 0046 0E4B     		ldr	r3, .L57+4
 1259 0048 DB6C     		ldr	r3, [r3, #76]
 1260 004a 03F00403 		and	r3, r3, #4
 1261 004e FB60     		str	r3, [r7, #12]
 1262 0050 FB68     		ldr	r3, [r7, #12]
 1263              	.LBE19:
 539:Src/stm32g4xx_hal_msp.c ****     /**USART1 GPIO Configuration    
 540:Src/stm32g4xx_hal_msp.c ****     PC4     ------> USART1_TX
 541:Src/stm32g4xx_hal_msp.c ****     PC5     ------> USART1_RX 
 542:Src/stm32g4xx_hal_msp.c ****     */
 543:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pin = USART1_TX_Pin|USART1_RX_Pin;
 1264              		.loc 2 543 25
 1265 0052 3023     		movs	r3, #48
 1266 0054 7B61     		str	r3, [r7, #20]
 544:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1267              		.loc 2 544 26
 1268 0056 0223     		movs	r3, #2
 1269 0058 BB61     		str	r3, [r7, #24]
 545:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1270              		.loc 2 545 26
 1271 005a 0023     		movs	r3, #0
 1272 005c FB61     		str	r3, [r7, #28]
 546:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1273              		.loc 2 546 27
 1274 005e 0023     		movs	r3, #0
 1275 0060 3B62     		str	r3, [r7, #32]
 547:Src/stm32g4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 1276              		.loc 2 547 31
 1277 0062 0723     		movs	r3, #7
 1278 0064 7B62     		str	r3, [r7, #36]
 548:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1279              		.loc 2 548 5
 1280 0066 07F11403 		add	r3, r7, #20
 1281 006a 1946     		mov	r1, r3
 1282 006c 0548     		ldr	r0, .L57+8
 1283 006e FFF7FEFF 		bl	HAL_GPIO_Init
 1284              	.L56:
 549:Src/stm32g4xx_hal_msp.c **** 
 550:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 551:Src/stm32g4xx_hal_msp.c **** 
 552:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 1 */
 553:Src/stm32g4xx_hal_msp.c ****   }
 554:Src/stm32g4xx_hal_msp.c **** 
 555:Src/stm32g4xx_hal_msp.c **** }
 1285              		.loc 2 555 1
 1286 0072 00BF     		nop
 1287 0074 2837     		adds	r7, r7, #40
 1288              	.LCFI47:
 1289              		.cfi_def_cfa_offset 8
 1290 0076 BD46     		mov	sp, r7
 1291              	.LCFI48:
 1292              		.cfi_def_cfa_register 13
 1293              		@ sp needed
 1294 0078 80BD     		pop	{r7, pc}
 1295              	.L58:
 1296 007a 00BF     		.align	2
ARM GAS  /tmp/ccfG3G71.s 			page 48


 1297              	.L57:
 1298 007c 00380140 		.word	1073821696
 1299 0080 00100240 		.word	1073876992
 1300 0084 00080048 		.word	1207961600
 1301              		.cfi_endproc
 1302              	.LFE414:
 1304              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1305              		.align	1
 1306              		.global	HAL_UART_MspDeInit
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1310              		.fpu fpv4-sp-d16
 1312              	HAL_UART_MspDeInit:
 1313              	.LFB415:
 556:Src/stm32g4xx_hal_msp.c **** 
 557:Src/stm32g4xx_hal_msp.c **** /**
 558:Src/stm32g4xx_hal_msp.c **** * @brief UART MSP De-Initialization
 559:Src/stm32g4xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 560:Src/stm32g4xx_hal_msp.c **** * @param huart: UART handle pointer
 561:Src/stm32g4xx_hal_msp.c **** * @retval None
 562:Src/stm32g4xx_hal_msp.c **** */
 563:Src/stm32g4xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 564:Src/stm32g4xx_hal_msp.c **** {
 1314              		.loc 2 564 1
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 8
 1317              		@ frame_needed = 1, uses_anonymous_args = 0
 1318 0000 80B5     		push	{r7, lr}
 1319              	.LCFI49:
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 7, -8
 1322              		.cfi_offset 14, -4
 1323 0002 82B0     		sub	sp, sp, #8
 1324              	.LCFI50:
 1325              		.cfi_def_cfa_offset 16
 1326 0004 00AF     		add	r7, sp, #0
 1327              	.LCFI51:
 1328              		.cfi_def_cfa_register 7
 1329 0006 7860     		str	r0, [r7, #4]
 565:Src/stm32g4xx_hal_msp.c ****   if(huart->Instance==USART1)
 1330              		.loc 2 565 11
 1331 0008 7B68     		ldr	r3, [r7, #4]
 1332 000a 1B68     		ldr	r3, [r3]
 1333              		.loc 2 565 5
 1334 000c 084A     		ldr	r2, .L62
 1335 000e 9342     		cmp	r3, r2
 1336 0010 09D1     		bne	.L61
 566:Src/stm32g4xx_hal_msp.c ****   {
 567:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 568:Src/stm32g4xx_hal_msp.c **** 
 569:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 0 */
 570:Src/stm32g4xx_hal_msp.c ****     /* Peripheral clock disable */
 571:Src/stm32g4xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 1337              		.loc 2 571 5
 1338 0012 084B     		ldr	r3, .L62+4
 1339 0014 1B6E     		ldr	r3, [r3, #96]
ARM GAS  /tmp/ccfG3G71.s 			page 49


 1340 0016 074A     		ldr	r2, .L62+4
 1341 0018 23F48043 		bic	r3, r3, #16384
 1342 001c 1366     		str	r3, [r2, #96]
 572:Src/stm32g4xx_hal_msp.c ****   
 573:Src/stm32g4xx_hal_msp.c ****     /**USART1 GPIO Configuration    
 574:Src/stm32g4xx_hal_msp.c ****     PC4     ------> USART1_TX
 575:Src/stm32g4xx_hal_msp.c ****     PC5     ------> USART1_RX 
 576:Src/stm32g4xx_hal_msp.c ****     */
 577:Src/stm32g4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOC, USART1_TX_Pin|USART1_RX_Pin);
 1343              		.loc 2 577 5
 1344 001e 3021     		movs	r1, #48
 1345 0020 0548     		ldr	r0, .L62+8
 1346 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1347              	.L61:
 578:Src/stm32g4xx_hal_msp.c **** 
 579:Src/stm32g4xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 580:Src/stm32g4xx_hal_msp.c **** 
 581:Src/stm32g4xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 1 */
 582:Src/stm32g4xx_hal_msp.c ****   }
 583:Src/stm32g4xx_hal_msp.c **** 
 584:Src/stm32g4xx_hal_msp.c **** }
 1348              		.loc 2 584 1
 1349 0026 00BF     		nop
 1350 0028 0837     		adds	r7, r7, #8
 1351              	.LCFI52:
 1352              		.cfi_def_cfa_offset 8
 1353 002a BD46     		mov	sp, r7
 1354              	.LCFI53:
 1355              		.cfi_def_cfa_register 13
 1356              		@ sp needed
 1357 002c 80BD     		pop	{r7, pc}
 1358              	.L63:
 1359 002e 00BF     		.align	2
 1360              	.L62:
 1361 0030 00380140 		.word	1073821696
 1362 0034 00100240 		.word	1073876992
 1363 0038 00080048 		.word	1207961600
 1364              		.cfi_endproc
 1365              	.LFE415:
 1367              		.text
 1368              	.Letext0:
 1369              		.file 3 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_types.h"
 1370              		.file 4 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 1371              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1372              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 1373              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 1374              		.file 8 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1375              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1376              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1377              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1378              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 1379              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 1380              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_hrtim.h"
 1381              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 1382              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 1383              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccfG3G71.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_msp.c
     /tmp/ccfG3G71.s:18     .text.LL_PWR_DisableDeadBatteryPD:0000000000000000 $t
     /tmp/ccfG3G71.s:25     .text.LL_PWR_DisableDeadBatteryPD:0000000000000000 LL_PWR_DisableDeadBatteryPD
     /tmp/ccfG3G71.s:60     .text.LL_PWR_DisableDeadBatteryPD:000000000000001c $d
     /tmp/ccfG3G71.s:65     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccfG3G71.s:72     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccfG3G71.s:131    .text.HAL_MspInit:0000000000000044 $d
     /tmp/ccfG3G71.s:136    .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 $d
     /tmp/ccfG3G71.s:139    .bss.HAL_RCC_ADC12_CLK_ENABLED:0000000000000000 HAL_RCC_ADC12_CLK_ENABLED
     /tmp/ccfG3G71.s:142    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccfG3G71.s:149    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccfG3G71.s:404    .text.HAL_ADC_MspInit:0000000000000190 $d
     /tmp/ccfG3G71.s:413    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccfG3G71.s:420    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccfG3G71.s:538    .text.HAL_ADC_MspDeInit:000000000000009c $d
     /tmp/ccfG3G71.s:547    .text.HAL_HRTIM_MspInit:0000000000000000 $t
     /tmp/ccfG3G71.s:554    .text.HAL_HRTIM_MspInit:0000000000000000 HAL_HRTIM_MspInit
     /tmp/ccfG3G71.s:614    .text.HAL_HRTIM_MspInit:0000000000000044 $d
     /tmp/ccfG3G71.s:620    .text.HAL_HRTIM_MspPostInit:0000000000000000 $t
     /tmp/ccfG3G71.s:627    .text.HAL_HRTIM_MspPostInit:0000000000000000 HAL_HRTIM_MspPostInit
     /tmp/ccfG3G71.s:760    .text.HAL_HRTIM_MspPostInit:00000000000000c0 $d
     /tmp/ccfG3G71.s:767    .text.HAL_HRTIM_MspDeInit:0000000000000000 $t
     /tmp/ccfG3G71.s:774    .text.HAL_HRTIM_MspDeInit:0000000000000000 HAL_HRTIM_MspDeInit
     /tmp/ccfG3G71.s:822    .text.HAL_HRTIM_MspDeInit:000000000000002c $d
     /tmp/ccfG3G71.s:828    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccfG3G71.s:835    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccfG3G71.s:1090   .text.HAL_SPI_MspInit:0000000000000188 $d
     /tmp/ccfG3G71.s:1103   .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccfG3G71.s:1110   .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccfG3G71.s:1189   .text.HAL_SPI_MspDeInit:0000000000000068 $d
     /tmp/ccfG3G71.s:1198   .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccfG3G71.s:1205   .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccfG3G71.s:1298   .text.HAL_UART_MspInit:000000000000007c $d
     /tmp/ccfG3G71.s:1305   .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccfG3G71.s:1312   .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccfG3G71.s:1361   .text.HAL_UART_MspDeInit:0000000000000030 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_DMA_Init
Error_Handler
hdma_spi3_rx
hdma_spi3_tx
HAL_DMA_DeInit
