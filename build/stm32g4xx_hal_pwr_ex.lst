ARM GAS  /tmp/cceiCkfa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWREx_GetVoltageRange
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_PWREx_GetVoltageRange:
  27              	.LFB325:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @file    stm32g4xx_hal_pwr_ex.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @attention
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * All rights reserved.</center></h2>
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * the "License"; You may not use this file except in compliance with the
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * License. You may obtain a copy of the License at:
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   ******************************************************************************
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #include "stm32g4xx_hal.h"
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @addtogroup STM32G4xx_HAL_Driver
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
ARM GAS  /tmp/cceiCkfa.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR Extended HAL module driver
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined (STM32G471xx) || defined (STM32G473xx) || defined (STM32G474xx) || defined (STM32G483xx
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTF_AVAILABLE_PINS   0x0000FFFFU /* PF0..PF15 */
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTG_AVAILABLE_PINS   0x000007FFU /* PG0..PG10 */
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #elif defined (STM32G431xx) || defined (STM32G441xx) || defined (STM32GBK1CB)
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTF_AVAILABLE_PINS   0x00000607U /* PF0..PF2 and PF9 and PF10 */
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_PORTG_AVAILABLE_PINS   0x00000400U /* PG10 */
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_PVM_Mode_Mask PWR PVM Mode Mask
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_MODE_IT               0x00010000U    /*!< Mask for interruption yielded by PVM threshol
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_MODE_EVT              0x00020000U    /*!< Mask for event yielded by PVM threshold cross
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE           0x00000001U    /*!< Mask for rising edge set as PVM trigger      
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE          0x00000002U    /*!< Mask for falling edge set as PVM trigger     
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50UL   /*!< Time out value for REGLPF and VO
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @}
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
ARM GAS  /tmp/cceiCkfa.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** @verbatim
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****  ===============================================================================
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****  ===============================================================================
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     [..]
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** @endverbatim
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @{
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1 or PWR_REGULATOR_VOLTAGE_SCALE2
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
  29              		.loc 1 111 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
  41              		.loc 1 112 7
  42 0004 0D4B     		ldr	r3, .L5
  43 0006 1B68     		ldr	r3, [r3]
  44 0008 03F4C063 		and	r3, r3, #1536
  45              		.loc 1 112 6
  46 000c B3F5806F 		cmp	r3, #1024
  47 0010 02D1     		bne	.L2
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE2;
  48              		.loc 1 114 12
  49 0012 4FF48063 		mov	r3, #1024
  50 0016 0BE0     		b	.L3
  51              	.L2:
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else if (READ_BIT(PWR->CR5, PWR_CR5_R1MODE) == PWR_CR5_R1MODE)
  52              		.loc 1 116 12
  53 0018 084B     		ldr	r3, .L5
  54 001a D3F88030 		ldr	r3, [r3, #128]
  55 001e 03F48073 		and	r3, r3, #256
  56              		.loc 1 116 11
ARM GAS  /tmp/cceiCkfa.s 			page 4


  57 0022 B3F5807F 		cmp	r3, #256
  58 0026 02D1     		bne	.L4
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit set means that Range 1 Boost is disabled */
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE1;
  59              		.loc 1 119 12
  60 0028 4FF40073 		mov	r3, #512
  61 002c 00E0     		b	.L3
  62              	.L4:
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
  63              		.loc 1 123 12
  64 002e 0023     		movs	r3, #0
  65              	.L3:
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
  66              		.loc 1 125 1
  67 0030 1846     		mov	r0, r3
  68 0032 BD46     		mov	sp, r7
  69              	.LCFI2:
  70              		.cfi_def_cfa_register 13
  71              		@ sp needed
  72 0034 5DF8047B 		ldr	r7, [sp], #4
  73              	.LCFI3:
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 0038 7047     		bx	lr
  77              	.L6:
  78 003a 00BF     		.align	2
  79              	.L5:
  80 003c 00700040 		.word	1073770496
  81              		.cfi_endproc
  82              	.LFE325:
  84              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
  85              		.align	1
  86              		.global	HAL_PWREx_ControlVoltageScaling
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	HAL_PWREx_ControlVoltageScaling:
  93              	.LFB326:
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  VoltageScaling: specifies the regulator output voltage to achieve
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when available, Regulator voltage outpu
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.28 V,
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 170 MHz.
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1 Regulator voltage output range 1 mode,
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,
ARM GAS  /tmp/cceiCkfa.s 			page 5


 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 150 MHz.
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE2 Regulator voltage output range 2 mode,
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *                                                system frequency up to 26 MHz.
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value below 26 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value up to 150 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When moving from Range 1 to Boost Mode Range 1, the system frequency can be increased to
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        a value up to 170 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
  94              		.loc 1 155 1
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 16
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              	.LCFI4:
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 7, -4
 103 0002 85B0     		sub	sp, sp, #20
 104              	.LCFI5:
 105              		.cfi_def_cfa_offset 24
 106 0004 00AF     		add	r7, sp, #0
 107              	.LCFI6:
 108              		.cfi_def_cfa_register 7
 109 0006 7860     		str	r0, [r7, #4]
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1_BOOST)
 110              		.loc 1 160 6
 111 0008 7B68     		ldr	r3, [r7, #4]
 112 000a 002B     		cmp	r3, #0
 113 000c 41D1     		bne	.L8
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 114              		.loc 1 163 9
 115 000e 4B4B     		ldr	r3, .L22
 116 0010 1B68     		ldr	r3, [r3]
 117 0012 03F4C063 		and	r3, r3, #1536
 118              		.loc 1 163 8
 119 0016 B3F5806F 		cmp	r3, #1024
 120 001a 31D1     		bne	.L9
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is enabled */
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 121              		.loc 1 166 7
 122 001c 474B     		ldr	r3, .L22
ARM GAS  /tmp/cceiCkfa.s 			page 6


 123 001e D3F88030 		ldr	r3, [r3, #128]
 124 0022 464A     		ldr	r2, .L22
 125 0024 23F48073 		bic	r3, r3, #256
 126 0028 C2F88030 		str	r3, [r2, #128]
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 127              		.loc 1 169 7
 128 002c 434B     		ldr	r3, .L22
 129 002e 1B68     		ldr	r3, [r3]
 130 0030 23F4C063 		bic	r3, r3, #1536
 131 0034 414A     		ldr	r2, .L22
 132 0036 43F40073 		orr	r3, r3, #512
 133 003a 1360     		str	r3, [r2]
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 134              		.loc 1 172 53
 135 003c 404B     		ldr	r3, .L22+4
 136 003e 1B68     		ldr	r3, [r3]
 137 0040 3222     		movs	r2, #50
 138 0042 02FB03F3 		mul	r3, r2, r3
 139              		.loc 1 172 72
 140 0046 3F4A     		ldr	r2, .L22+8
 141 0048 A2FB0323 		umull	r2, r3, r2, r3
 142 004c 9B0C     		lsrs	r3, r3, #18
 143              		.loc 1 172 23
 144 004e 0133     		adds	r3, r3, #1
 145 0050 FB60     		str	r3, [r7, #12]
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 146              		.loc 1 173 13
 147 0052 02E0     		b	.L10
 148              	.L12:
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         wait_loop_index--;
 149              		.loc 1 175 24
 150 0054 FB68     		ldr	r3, [r7, #12]
 151 0056 013B     		subs	r3, r3, #1
 152 0058 FB60     		str	r3, [r7, #12]
 153              	.L10:
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 154              		.loc 1 173 15
 155 005a 384B     		ldr	r3, .L22
 156 005c 5B69     		ldr	r3, [r3, #20]
 157 005e 03F48063 		and	r3, r3, #1024
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 158              		.loc 1 173 13
 159 0062 B3F5806F 		cmp	r3, #1024
 160 0066 02D1     		bne	.L11
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 161              		.loc 1 173 55 discriminator 1
 162 0068 FB68     		ldr	r3, [r7, #12]
 163 006a 002B     		cmp	r3, #0
 164 006c F2D1     		bne	.L12
 165              	.L11:
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
ARM GAS  /tmp/cceiCkfa.s 			page 7


 166              		.loc 1 177 11
 167 006e 334B     		ldr	r3, .L22
 168 0070 5B69     		ldr	r3, [r3, #20]
 169 0072 03F48063 		and	r3, r3, #1024
 170              		.loc 1 177 10
 171 0076 B3F5806F 		cmp	r3, #1024
 172 007a 58D1     		bne	.L15
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 173              		.loc 1 179 16
 174 007c 0323     		movs	r3, #3
 175 007e 57E0     		b	.L14
 176              	.L9:
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 1 normal or boost mode */
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     else
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Enable Range 1 Boost (no issue if bit already reset) */
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 177              		.loc 1 186 7
 178 0080 2E4B     		ldr	r3, .L22
 179 0082 D3F88030 		ldr	r3, [r3, #128]
 180 0086 2D4A     		ldr	r2, .L22
 181 0088 23F48073 		bic	r3, r3, #256
 182 008c C2F88030 		str	r3, [r2, #128]
 183 0090 4DE0     		b	.L15
 184              	.L8:
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 185              		.loc 1 189 11
 186 0092 7B68     		ldr	r3, [r7, #4]
 187 0094 B3F5007F 		cmp	r3, #512
 188 0098 41D1     		bne	.L16
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 189              		.loc 1 192 9
 190 009a 284B     		ldr	r3, .L22
 191 009c 1B68     		ldr	r3, [r3]
 192 009e 03F4C063 		and	r3, r3, #1536
 193              		.loc 1 192 8
 194 00a2 B3F5806F 		cmp	r3, #1024
 195 00a6 31D1     		bne	.L17
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is disabled */
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 196              		.loc 1 195 7
 197 00a8 244B     		ldr	r3, .L22
 198 00aa D3F88030 		ldr	r3, [r3, #128]
 199 00ae 234A     		ldr	r2, .L22
 200 00b0 43F48073 		orr	r3, r3, #256
 201 00b4 C2F88030 		str	r3, [r2, #128]
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/cceiCkfa.s 			page 8


 202              		.loc 1 198 7
 203 00b8 204B     		ldr	r3, .L22
 204 00ba 1B68     		ldr	r3, [r3]
 205 00bc 23F4C063 		bic	r3, r3, #1536
 206 00c0 1E4A     		ldr	r2, .L22
 207 00c2 43F40073 		orr	r3, r3, #512
 208 00c6 1360     		str	r3, [r2]
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 209              		.loc 1 201 53
 210 00c8 1D4B     		ldr	r3, .L22+4
 211 00ca 1B68     		ldr	r3, [r3]
 212 00cc 3222     		movs	r2, #50
 213 00ce 02FB03F3 		mul	r3, r2, r3
 214              		.loc 1 201 72
 215 00d2 1C4A     		ldr	r2, .L22+8
 216 00d4 A2FB0323 		umull	r2, r3, r2, r3
 217 00d8 9B0C     		lsrs	r3, r3, #18
 218              		.loc 1 201 23
 219 00da 0133     		adds	r3, r3, #1
 220 00dc FB60     		str	r3, [r7, #12]
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 221              		.loc 1 202 13
 222 00de 02E0     		b	.L18
 223              	.L20:
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         wait_loop_index--;
 224              		.loc 1 204 24
 225 00e0 FB68     		ldr	r3, [r7, #12]
 226 00e2 013B     		subs	r3, r3, #1
 227 00e4 FB60     		str	r3, [r7, #12]
 228              	.L18:
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 229              		.loc 1 202 15
 230 00e6 154B     		ldr	r3, .L22
 231 00e8 5B69     		ldr	r3, [r3, #20]
 232 00ea 03F48063 		and	r3, r3, #1024
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 233              		.loc 1 202 13
 234 00ee B3F5806F 		cmp	r3, #1024
 235 00f2 02D1     		bne	.L19
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 236              		.loc 1 202 55 discriminator 1
 237 00f4 FB68     		ldr	r3, [r7, #12]
 238 00f6 002B     		cmp	r3, #0
 239 00f8 F2D1     		bne	.L20
 240              	.L19:
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 241              		.loc 1 206 11
 242 00fa 104B     		ldr	r3, .L22
 243 00fc 5B69     		ldr	r3, [r3, #20]
 244 00fe 03F48063 		and	r3, r3, #1024
 245              		.loc 1 206 10
 246 0102 B3F5806F 		cmp	r3, #1024
 247 0106 12D1     		bne	.L15
ARM GAS  /tmp/cceiCkfa.s 			page 9


 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 248              		.loc 1 208 16
 249 0108 0323     		movs	r3, #3
 250 010a 11E0     		b	.L14
 251              	.L17:
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      /* If current range is range 1 normal or boost mode */
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     else
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     {
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Disable Range 1 Boost (no issue if bit already set) */
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 252              		.loc 1 215 7
 253 010c 0B4B     		ldr	r3, .L22
 254 010e D3F88030 		ldr	r3, [r3, #128]
 255 0112 0A4A     		ldr	r2, .L22
 256 0114 43F48073 		orr	r3, r3, #256
 257 0118 C2F88030 		str	r3, [r2, #128]
 258 011c 07E0     		b	.L15
 259              	.L16:
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     }
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Set Range 2 */
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 260              		.loc 1 221 5
 261 011e 074B     		ldr	r3, .L22
 262 0120 1B68     		ldr	r3, [r3]
 263 0122 23F4C063 		bic	r3, r3, #1536
 264 0126 054A     		ldr	r2, .L22
 265 0128 43F48063 		orr	r3, r3, #1024
 266 012c 1360     		str	r3, [r2]
 267              	.L15:
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* No need to wait for VOSF to be cleared for this transition */
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit setting has no effect in Range 2        */
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return HAL_OK;
 268              		.loc 1 226 10
 269 012e 0023     		movs	r3, #0
 270              	.L14:
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 271              		.loc 1 227 1
 272 0130 1846     		mov	r0, r3
 273 0132 1437     		adds	r7, r7, #20
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 4
 276 0134 BD46     		mov	sp, r7
 277              	.LCFI8:
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0136 5DF8047B 		ldr	r7, [sp], #4
 281              	.LCFI9:
 282              		.cfi_restore 7
 283              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cceiCkfa.s 			page 10


 284 013a 7047     		bx	lr
 285              	.L23:
 286              		.align	2
 287              	.L22:
 288 013c 00700040 		.word	1073770496
 289 0140 00000000 		.word	SystemCoreClock
 290 0144 83DE1B43 		.word	1125899907
 291              		.cfi_endproc
 292              	.LFE326:
 294              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 295              		.align	1
 296              		.global	HAL_PWREx_EnableBatteryCharging
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	HAL_PWREx_EnableBatteryCharging:
 303              	.LFB327:
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT thru an internal resistor.
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  ResistorSelection: specifies the resistor impedance.
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_5     5 kOhms resistor
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_1_5 1.5 kOhms resistor
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 304              		.loc 1 240 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0000 80B4     		push	{r7}
 310              	.LCFI10:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 83B0     		sub	sp, sp, #12
 314              	.LCFI11:
 315              		.cfi_def_cfa_offset 16
 316 0004 00AF     		add	r7, sp, #0
 317              	.LCFI12:
 318              		.cfi_def_cfa_register 7
 319 0006 7860     		str	r0, [r7, #4]
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Specify resistor selection */
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 320              		.loc 1 244 3
 321 0008 094B     		ldr	r3, .L25
 322 000a DB68     		ldr	r3, [r3, #12]
 323 000c 23F40072 		bic	r2, r3, #512
 324 0010 0749     		ldr	r1, .L25
 325 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cceiCkfa.s 			page 11


 326 0014 1343     		orrs	r3, r3, r2
 327 0016 CB60     		str	r3, [r1, #12]
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Enable battery charging */
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 328              		.loc 1 247 3
 329 0018 054B     		ldr	r3, .L25
 330 001a DB68     		ldr	r3, [r3, #12]
 331 001c 044A     		ldr	r2, .L25
 332 001e 43F48073 		orr	r3, r3, #256
 333 0022 D360     		str	r3, [r2, #12]
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 334              		.loc 1 248 1
 335 0024 00BF     		nop
 336 0026 0C37     		adds	r7, r7, #12
 337              	.LCFI13:
 338              		.cfi_def_cfa_offset 4
 339 0028 BD46     		mov	sp, r7
 340              	.LCFI14:
 341              		.cfi_def_cfa_register 13
 342              		@ sp needed
 343 002a 5DF8047B 		ldr	r7, [sp], #4
 344              	.LCFI15:
 345              		.cfi_restore 7
 346              		.cfi_def_cfa_offset 0
 347 002e 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0030 00700040 		.word	1073770496
 352              		.cfi_endproc
 353              	.LFE327:
 355              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 356              		.align	1
 357              		.global	HAL_PWREx_DisableBatteryCharging
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu fpv4-sp-d16
 363              	HAL_PWREx_DisableBatteryCharging:
 364              	.LFB328:
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable battery charging.
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 365              		.loc 1 256 1
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 80B4     		push	{r7}
 371              	.LCFI16:
 372              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cceiCkfa.s 			page 12


 373              		.cfi_offset 7, -4
 374 0002 00AF     		add	r7, sp, #0
 375              	.LCFI17:
 376              		.cfi_def_cfa_register 7
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE);
 377              		.loc 1 257 3
 378 0004 054B     		ldr	r3, .L28
 379 0006 DB68     		ldr	r3, [r3, #12]
 380 0008 044A     		ldr	r2, .L28
 381 000a 23F48073 		bic	r3, r3, #256
 382 000e D360     		str	r3, [r2, #12]
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 383              		.loc 1 258 1
 384 0010 00BF     		nop
 385 0012 BD46     		mov	sp, r7
 386              	.LCFI18:
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 0014 5DF8047B 		ldr	r7, [sp], #4
 390              	.LCFI19:
 391              		.cfi_restore 7
 392              		.cfi_def_cfa_offset 0
 393 0018 7047     		bx	lr
 394              	.L29:
 395 001a 00BF     		.align	2
 396              	.L28:
 397 001c 00700040 		.word	1073770496
 398              		.cfi_endproc
 399              	.LFE328:
 401              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_PWREx_EnableInternalWakeUpLine
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	HAL_PWREx_EnableInternalWakeUpLine:
 410              	.LFB329:
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line.
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 411              		.loc 1 266 1
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416 0000 80B4     		push	{r7}
 417              	.LCFI20:
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 00AF     		add	r7, sp, #0
 421              	.LCFI21:
ARM GAS  /tmp/cceiCkfa.s 			page 13


 422              		.cfi_def_cfa_register 7
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 423              		.loc 1 267 3
 424 0004 054B     		ldr	r3, .L31
 425 0006 9B68     		ldr	r3, [r3, #8]
 426 0008 044A     		ldr	r2, .L31
 427 000a 43F40043 		orr	r3, r3, #32768
 428 000e 9360     		str	r3, [r2, #8]
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 429              		.loc 1 268 1
 430 0010 00BF     		nop
 431 0012 BD46     		mov	sp, r7
 432              	.LCFI22:
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
 435 0014 5DF8047B 		ldr	r7, [sp], #4
 436              	.LCFI23:
 437              		.cfi_restore 7
 438              		.cfi_def_cfa_offset 0
 439 0018 7047     		bx	lr
 440              	.L32:
 441 001a 00BF     		.align	2
 442              	.L31:
 443 001c 00700040 		.word	1073770496
 444              		.cfi_endproc
 445              	.LFE329:
 447              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 448              		.align	1
 449              		.global	HAL_PWREx_DisableInternalWakeUpLine
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	HAL_PWREx_DisableInternalWakeUpLine:
 456              	.LFB330:
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line.
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 457              		.loc 1 276 1
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462 0000 80B4     		push	{r7}
 463              	.LCFI24:
 464              		.cfi_def_cfa_offset 4
 465              		.cfi_offset 7, -4
 466 0002 00AF     		add	r7, sp, #0
 467              	.LCFI25:
 468              		.cfi_def_cfa_register 7
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 469              		.loc 1 277 3
ARM GAS  /tmp/cceiCkfa.s 			page 14


 470 0004 054B     		ldr	r3, .L34
 471 0006 9B68     		ldr	r3, [r3, #8]
 472 0008 044A     		ldr	r2, .L34
 473 000a 23F40043 		bic	r3, r3, #32768
 474 000e 9360     		str	r3, [r2, #8]
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 475              		.loc 1 278 1
 476 0010 00BF     		nop
 477 0012 BD46     		mov	sp, r7
 478              	.LCFI26:
 479              		.cfi_def_cfa_register 13
 480              		@ sp needed
 481 0014 5DF8047B 		ldr	r7, [sp], #4
 482              	.LCFI27:
 483              		.cfi_restore 7
 484              		.cfi_def_cfa_offset 0
 485 0018 7047     		bx	lr
 486              	.L35:
 487 001a 00BF     		.align	2
 488              	.L34:
 489 001c 00700040 		.word	1073770496
 490              		.cfi_endproc
 491              	.LFE330:
 493              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 494              		.align	1
 495              		.global	HAL_PWREx_EnableGPIOPullUp
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	HAL_PWREx_EnableGPIOPullUp:
 502              	.LFB331:
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes.
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved.
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_G
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
ARM GAS  /tmp/cceiCkfa.s 			page 15


 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 503              		.loc 1 304 1
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 16
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              	.LCFI28:
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 7, -4
 512 0002 85B0     		sub	sp, sp, #20
 513              	.LCFI29:
 514              		.cfi_def_cfa_offset 24
 515 0004 00AF     		add	r7, sp, #0
 516              	.LCFI30:
 517              		.cfi_def_cfa_register 7
 518 0006 7860     		str	r0, [r7, #4]
 519 0008 3960     		str	r1, [r7]
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 520              		.loc 1 305 21
 521 000a 0023     		movs	r3, #0
 522 000c FB73     		strb	r3, [r7, #15]
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 523              		.loc 1 310 3
 524 000e 7B68     		ldr	r3, [r7, #4]
 525 0010 062B     		cmp	r3, #6
 526 0012 7FD8     		bhi	.L37
 527 0014 01A2     		adr	r2, .L39
 528 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 529 001a 00BF     		.p2align 2
 530              	.L39:
 531 001c 39000000 		.word	.L45+1
 532 0020 5D000000 		.word	.L44+1
 533 0024 7D000000 		.word	.L43+1
 534 0028 99000000 		.word	.L42+1
 535 002c B5000000 		.word	.L41+1
 536 0030 D1000000 		.word	.L40+1
 537 0034 F1000000 		.word	.L38+1
 538              		.p2align 1
 539              	.L45:
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 540              		.loc 1 313 8
 541 0038 3B4B     		ldr	r3, .L48
 542 003a 1A6A     		ldr	r2, [r3, #32]
 543 003c 3B68     		ldr	r3, [r7]
 544 003e 23F48043 		bic	r3, r3, #16384
 545 0042 3949     		ldr	r1, .L48
 546 0044 1343     		orrs	r3, r3, r2
 547 0046 0B62     		str	r3, [r1, #32]
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 548              		.loc 1 314 8
ARM GAS  /tmp/cceiCkfa.s 			page 16


 549 0048 374B     		ldr	r3, .L48
 550 004a 5A6A     		ldr	r2, [r3, #36]
 551 004c 3B68     		ldr	r3, [r7]
 552 004e 23F42043 		bic	r3, r3, #40960
 553 0052 DB43     		mvns	r3, r3
 554 0054 3449     		ldr	r1, .L48
 555 0056 1340     		ands	r3, r3, r2
 556 0058 4B62     		str	r3, [r1, #36]
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 557              		.loc 1 315 8
 558 005a 5EE0     		b	.L46
 559              	.L44:
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRB, GPIONumber);
 560              		.loc 1 317 8
 561 005c 324B     		ldr	r3, .L48
 562 005e 9A6A     		ldr	r2, [r3, #40]
 563 0060 3149     		ldr	r1, .L48
 564 0062 3B68     		ldr	r3, [r7]
 565 0064 1343     		orrs	r3, r3, r2
 566 0066 8B62     		str	r3, [r1, #40]
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 567              		.loc 1 318 8
 568 0068 2F4B     		ldr	r3, .L48
 569 006a DA6A     		ldr	r2, [r3, #44]
 570 006c 3B68     		ldr	r3, [r7]
 571 006e 23F01003 		bic	r3, r3, #16
 572 0072 DB43     		mvns	r3, r3
 573 0074 2C49     		ldr	r1, .L48
 574 0076 1340     		ands	r3, r3, r2
 575 0078 CB62     		str	r3, [r1, #44]
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 576              		.loc 1 319 8
 577 007a 4EE0     		b	.L46
 578              	.L43:
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRC, GPIONumber);
 579              		.loc 1 321 8
 580 007c 2A4B     		ldr	r3, .L48
 581 007e 1A6B     		ldr	r2, [r3, #48]
 582 0080 2949     		ldr	r1, .L48
 583 0082 3B68     		ldr	r3, [r7]
 584 0084 1343     		orrs	r3, r3, r2
 585 0086 0B63     		str	r3, [r1, #48]
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 586              		.loc 1 322 8
 587 0088 274B     		ldr	r3, .L48
 588 008a 5A6B     		ldr	r2, [r3, #52]
 589 008c 3B68     		ldr	r3, [r7]
 590 008e DB43     		mvns	r3, r3
 591 0090 2549     		ldr	r1, .L48
 592 0092 1340     		ands	r3, r3, r2
 593 0094 4B63     		str	r3, [r1, #52]
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 594              		.loc 1 323 8
 595 0096 40E0     		b	.L46
 596              	.L42:
ARM GAS  /tmp/cceiCkfa.s 			page 17


 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRD, GPIONumber);
 597              		.loc 1 325 8
 598 0098 234B     		ldr	r3, .L48
 599 009a 9A6B     		ldr	r2, [r3, #56]
 600 009c 2249     		ldr	r1, .L48
 601 009e 3B68     		ldr	r3, [r7]
 602 00a0 1343     		orrs	r3, r3, r2
 603 00a2 8B63     		str	r3, [r1, #56]
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 604              		.loc 1 326 8
 605 00a4 204B     		ldr	r3, .L48
 606 00a6 DA6B     		ldr	r2, [r3, #60]
 607 00a8 3B68     		ldr	r3, [r7]
 608 00aa DB43     		mvns	r3, r3
 609 00ac 1E49     		ldr	r1, .L48
 610 00ae 1340     		ands	r3, r3, r2
 611 00b0 CB63     		str	r3, [r1, #60]
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 612              		.loc 1 327 8
 613 00b2 32E0     		b	.L46
 614              	.L41:
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRE, GPIONumber);
 615              		.loc 1 329 8
 616 00b4 1C4B     		ldr	r3, .L48
 617 00b6 1A6C     		ldr	r2, [r3, #64]
 618 00b8 1B49     		ldr	r1, .L48
 619 00ba 3B68     		ldr	r3, [r7]
 620 00bc 1343     		orrs	r3, r3, r2
 621 00be 0B64     		str	r3, [r1, #64]
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 622              		.loc 1 330 8
 623 00c0 194B     		ldr	r3, .L48
 624 00c2 5A6C     		ldr	r2, [r3, #68]
 625 00c4 3B68     		ldr	r3, [r7]
 626 00c6 DB43     		mvns	r3, r3
 627 00c8 1749     		ldr	r1, .L48
 628 00ca 1340     		ands	r3, r3, r2
 629 00cc 4B64     		str	r3, [r1, #68]
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 630              		.loc 1 331 8
 631 00ce 24E0     		b	.L46
 632              	.L40:
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 633              		.loc 1 333 8
 634 00d0 154B     		ldr	r3, .L48
 635 00d2 9A6C     		ldr	r2, [r3, #72]
 636 00d4 3B68     		ldr	r3, [r7]
 637 00d6 9BB2     		uxth	r3, r3
 638 00d8 1349     		ldr	r1, .L48
 639 00da 1343     		orrs	r3, r3, r2
 640 00dc 8B64     		str	r3, [r1, #72]
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 641              		.loc 1 334 8
 642 00de 124B     		ldr	r3, .L48
ARM GAS  /tmp/cceiCkfa.s 			page 18


 643 00e0 DA6C     		ldr	r2, [r3, #76]
 644 00e2 3B68     		ldr	r3, [r7]
 645 00e4 9BB2     		uxth	r3, r3
 646 00e6 DB43     		mvns	r3, r3
 647 00e8 0F49     		ldr	r1, .L48
 648 00ea 1340     		ands	r3, r3, r2
 649 00ec CB64     		str	r3, [r1, #76]
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 650              		.loc 1 335 8
 651 00ee 14E0     		b	.L46
 652              	.L38:
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 653              		.loc 1 337 8
 654 00f0 0D4B     		ldr	r3, .L48
 655 00f2 1A6D     		ldr	r2, [r3, #80]
 656 00f4 3B68     		ldr	r3, [r7]
 657 00f6 C3F30A03 		ubfx	r3, r3, #0, #11
 658 00fa 0B49     		ldr	r1, .L48
 659 00fc 1343     		orrs	r3, r3, r2
 660 00fe 0B65     		str	r3, [r1, #80]
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 661              		.loc 1 338 8
 662 0100 094B     		ldr	r3, .L48
 663 0102 5A6D     		ldr	r2, [r3, #84]
 664 0104 3B68     		ldr	r3, [r7]
 665 0106 C3F30903 		ubfx	r3, r3, #0, #10
 666 010a DB43     		mvns	r3, r3
 667 010c 0649     		ldr	r1, .L48
 668 010e 1340     		ands	r3, r3, r2
 669 0110 4B65     		str	r3, [r1, #84]
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 670              		.loc 1 339 8
 671 0112 02E0     		b	.L46
 672              	.L37:
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 673              		.loc 1 341 14
 674 0114 0123     		movs	r3, #1
 675 0116 FB73     		strb	r3, [r7, #15]
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 676              		.loc 1 342 7
 677 0118 00BF     		nop
 678              	.L46:
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 679              		.loc 1 345 10
 680 011a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 681              		.loc 1 346 1
 682 011c 1846     		mov	r0, r3
 683 011e 1437     		adds	r7, r7, #20
 684              	.LCFI31:
 685              		.cfi_def_cfa_offset 4
 686 0120 BD46     		mov	sp, r7
 687              	.LCFI32:
ARM GAS  /tmp/cceiCkfa.s 			page 19


 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 0122 5DF8047B 		ldr	r7, [sp], #4
 691              	.LCFI33:
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 0126 7047     		bx	lr
 695              	.L49:
 696              		.align	2
 697              	.L48:
 698 0128 00700040 		.word	1073770496
 699              		.cfi_endproc
 700              	.LFE331:
 702              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 703              		.align	1
 704              		.global	HAL_PWREx_DisableGPIOPullUp
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv4-sp-d16
 710              	HAL_PWREx_DisableGPIOPullUp:
 711              	.LFB332:
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_G
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 712              		.loc 1 365 1
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 16
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 80B4     		push	{r7}
 718              	.LCFI34:
 719              		.cfi_def_cfa_offset 4
 720              		.cfi_offset 7, -4
 721 0002 85B0     		sub	sp, sp, #20
 722              	.LCFI35:
 723              		.cfi_def_cfa_offset 24
 724 0004 00AF     		add	r7, sp, #0
 725              	.LCFI36:
 726              		.cfi_def_cfa_register 7
 727 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cceiCkfa.s 			page 20


 728 0008 3960     		str	r1, [r7]
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 729              		.loc 1 366 21
 730 000a 0023     		movs	r3, #0
 731 000c FB73     		strb	r3, [r7, #15]
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 732              		.loc 1 371 3
 733 000e 7B68     		ldr	r3, [r7, #4]
 734 0010 062B     		cmp	r3, #6
 735 0012 4ED8     		bhi	.L51
 736 0014 01A2     		adr	r2, .L53
 737 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 738 001a 00BF     		.p2align 2
 739              	.L53:
 740 001c 39000000 		.word	.L59+1
 741 0020 4D000000 		.word	.L58+1
 742 0024 5D000000 		.word	.L57+1
 743 0028 6D000000 		.word	.L56+1
 744 002c 7D000000 		.word	.L55+1
 745 0030 8D000000 		.word	.L54+1
 746 0034 9F000000 		.word	.L52+1
 747              		.p2align 1
 748              	.L59:
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 749              		.loc 1 374 8
 750 0038 234B     		ldr	r3, .L62
 751 003a 1A6A     		ldr	r2, [r3, #32]
 752 003c 3B68     		ldr	r3, [r7]
 753 003e 23F48043 		bic	r3, r3, #16384
 754 0042 DB43     		mvns	r3, r3
 755 0044 2049     		ldr	r1, .L62
 756 0046 1340     		ands	r3, r3, r2
 757 0048 0B62     		str	r3, [r1, #32]
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 758              		.loc 1 375 8
 759 004a 35E0     		b	.L60
 760              	.L58:
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 761              		.loc 1 377 8
 762 004c 1E4B     		ldr	r3, .L62
 763 004e 9A6A     		ldr	r2, [r3, #40]
 764 0050 3B68     		ldr	r3, [r7]
 765 0052 DB43     		mvns	r3, r3
 766 0054 1C49     		ldr	r1, .L62
 767 0056 1340     		ands	r3, r3, r2
 768 0058 8B62     		str	r3, [r1, #40]
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 769              		.loc 1 378 8
 770 005a 2DE0     		b	.L60
 771              	.L57:
ARM GAS  /tmp/cceiCkfa.s 			page 21


 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 772              		.loc 1 380 8
 773 005c 1A4B     		ldr	r3, .L62
 774 005e 1A6B     		ldr	r2, [r3, #48]
 775 0060 3B68     		ldr	r3, [r7]
 776 0062 DB43     		mvns	r3, r3
 777 0064 1849     		ldr	r1, .L62
 778 0066 1340     		ands	r3, r3, r2
 779 0068 0B63     		str	r3, [r1, #48]
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 780              		.loc 1 381 8
 781 006a 25E0     		b	.L60
 782              	.L56:
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 783              		.loc 1 383 8
 784 006c 164B     		ldr	r3, .L62
 785 006e 9A6B     		ldr	r2, [r3, #56]
 786 0070 3B68     		ldr	r3, [r7]
 787 0072 DB43     		mvns	r3, r3
 788 0074 1449     		ldr	r1, .L62
 789 0076 1340     		ands	r3, r3, r2
 790 0078 8B63     		str	r3, [r1, #56]
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 791              		.loc 1 384 8
 792 007a 1DE0     		b	.L60
 793              	.L55:
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 794              		.loc 1 386 8
 795 007c 124B     		ldr	r3, .L62
 796 007e 1A6C     		ldr	r2, [r3, #64]
 797 0080 3B68     		ldr	r3, [r7]
 798 0082 DB43     		mvns	r3, r3
 799 0084 1049     		ldr	r1, .L62
 800 0086 1340     		ands	r3, r3, r2
 801 0088 0B64     		str	r3, [r1, #64]
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 802              		.loc 1 387 8
 803 008a 15E0     		b	.L60
 804              	.L54:
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 805              		.loc 1 389 8
 806 008c 0E4B     		ldr	r3, .L62
 807 008e 9A6C     		ldr	r2, [r3, #72]
 808 0090 3B68     		ldr	r3, [r7]
 809 0092 9BB2     		uxth	r3, r3
 810 0094 DB43     		mvns	r3, r3
 811 0096 0C49     		ldr	r1, .L62
 812 0098 1340     		ands	r3, r3, r2
 813 009a 8B64     		str	r3, [r1, #72]
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 814              		.loc 1 390 8
 815 009c 0CE0     		b	.L60
 816              	.L52:
ARM GAS  /tmp/cceiCkfa.s 			page 22


 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 817              		.loc 1 392 8
 818 009e 0A4B     		ldr	r3, .L62
 819 00a0 1A6D     		ldr	r2, [r3, #80]
 820 00a2 3B68     		ldr	r3, [r7]
 821 00a4 C3F30A03 		ubfx	r3, r3, #0, #11
 822 00a8 DB43     		mvns	r3, r3
 823 00aa 0749     		ldr	r1, .L62
 824 00ac 1340     		ands	r3, r3, r2
 825 00ae 0B65     		str	r3, [r1, #80]
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 826              		.loc 1 393 8
 827 00b0 02E0     		b	.L60
 828              	.L51:
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        status = HAL_ERROR;
 829              		.loc 1 395 15
 830 00b2 0123     		movs	r3, #1
 831 00b4 FB73     		strb	r3, [r7, #15]
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 832              		.loc 1 396 8
 833 00b6 00BF     		nop
 834              	.L60:
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 835              		.loc 1 399 10
 836 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 837              		.loc 1 400 1
 838 00ba 1846     		mov	r0, r3
 839 00bc 1437     		adds	r7, r7, #20
 840              	.LCFI37:
 841              		.cfi_def_cfa_offset 4
 842 00be BD46     		mov	sp, r7
 843              	.LCFI38:
 844              		.cfi_def_cfa_register 13
 845              		@ sp needed
 846 00c0 5DF8047B 		ldr	r7, [sp], #4
 847              	.LCFI39:
 848              		.cfi_restore 7
 849              		.cfi_def_cfa_offset 0
 850 00c4 7047     		bx	lr
 851              	.L63:
 852 00c6 00BF     		.align	2
 853              	.L62:
 854 00c8 00700040 		.word	1073770496
 855              		.cfi_endproc
 856              	.LFE332:
 858              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 859              		.align	1
 860              		.global	HAL_PWREx_EnableGPIOPullDown
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cceiCkfa.s 			page 23


 866              	HAL_PWREx_EnableGPIOPullDown:
 867              	.LFB333:
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes.
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved.
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_G
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 868              		.loc 1 426 1
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 16
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 873 0000 80B4     		push	{r7}
 874              	.LCFI40:
 875              		.cfi_def_cfa_offset 4
 876              		.cfi_offset 7, -4
 877 0002 85B0     		sub	sp, sp, #20
 878              	.LCFI41:
 879              		.cfi_def_cfa_offset 24
 880 0004 00AF     		add	r7, sp, #0
 881              	.LCFI42:
 882              		.cfi_def_cfa_register 7
 883 0006 7860     		str	r0, [r7, #4]
 884 0008 3960     		str	r1, [r7]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 885              		.loc 1 427 21
 886 000a 0023     		movs	r3, #0
 887 000c FB73     		strb	r3, [r7, #15]
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 888              		.loc 1 432 3
 889 000e 7B68     		ldr	r3, [r7, #4]
 890 0010 062B     		cmp	r3, #6
ARM GAS  /tmp/cceiCkfa.s 			page 24


 891 0012 7FD8     		bhi	.L65
 892 0014 01A2     		adr	r2, .L67
 893 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 894 001a 00BF     		.p2align 2
 895              	.L67:
 896 001c 39000000 		.word	.L73+1
 897 0020 5D000000 		.word	.L72+1
 898 0024 7D000000 		.word	.L71+1
 899 0028 99000000 		.word	.L70+1
 900 002c B5000000 		.word	.L69+1
 901 0030 D1000000 		.word	.L68+1
 902 0034 F1000000 		.word	.L66+1
 903              		.p2align 1
 904              	.L73:
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 905              		.loc 1 435 8
 906 0038 3B4B     		ldr	r3, .L76
 907 003a 5A6A     		ldr	r2, [r3, #36]
 908 003c 3B68     		ldr	r3, [r7]
 909 003e 23F42043 		bic	r3, r3, #40960
 910 0042 3949     		ldr	r1, .L76
 911 0044 1343     		orrs	r3, r3, r2
 912 0046 4B62     		str	r3, [r1, #36]
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 913              		.loc 1 436 8
 914 0048 374B     		ldr	r3, .L76
 915 004a 1A6A     		ldr	r2, [r3, #32]
 916 004c 3B68     		ldr	r3, [r7]
 917 004e 23F48043 		bic	r3, r3, #16384
 918 0052 DB43     		mvns	r3, r3
 919 0054 3449     		ldr	r1, .L76
 920 0056 1340     		ands	r3, r3, r2
 921 0058 0B62     		str	r3, [r1, #32]
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 922              		.loc 1 437 8
 923 005a 5EE0     		b	.L74
 924              	.L72:
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 925              		.loc 1 439 8
 926 005c 324B     		ldr	r3, .L76
 927 005e DA6A     		ldr	r2, [r3, #44]
 928 0060 3B68     		ldr	r3, [r7]
 929 0062 23F01003 		bic	r3, r3, #16
 930 0066 3049     		ldr	r1, .L76
 931 0068 1343     		orrs	r3, r3, r2
 932 006a CB62     		str	r3, [r1, #44]
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 933              		.loc 1 440 8
 934 006c 2E4B     		ldr	r3, .L76
 935 006e 9A6A     		ldr	r2, [r3, #40]
 936 0070 3B68     		ldr	r3, [r7]
 937 0072 DB43     		mvns	r3, r3
 938 0074 2C49     		ldr	r1, .L76
 939 0076 1340     		ands	r3, r3, r2
ARM GAS  /tmp/cceiCkfa.s 			page 25


 940 0078 8B62     		str	r3, [r1, #40]
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 941              		.loc 1 441 8
 942 007a 4EE0     		b	.L74
 943              	.L71:
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRC, GPIONumber);
 944              		.loc 1 443 8
 945 007c 2A4B     		ldr	r3, .L76
 946 007e 5A6B     		ldr	r2, [r3, #52]
 947 0080 2949     		ldr	r1, .L76
 948 0082 3B68     		ldr	r3, [r7]
 949 0084 1343     		orrs	r3, r3, r2
 950 0086 4B63     		str	r3, [r1, #52]
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 951              		.loc 1 444 8
 952 0088 274B     		ldr	r3, .L76
 953 008a 1A6B     		ldr	r2, [r3, #48]
 954 008c 3B68     		ldr	r3, [r7]
 955 008e DB43     		mvns	r3, r3
 956 0090 2549     		ldr	r1, .L76
 957 0092 1340     		ands	r3, r3, r2
 958 0094 0B63     		str	r3, [r1, #48]
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 959              		.loc 1 445 8
 960 0096 40E0     		b	.L74
 961              	.L70:
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRD, GPIONumber);
 962              		.loc 1 447 8
 963 0098 234B     		ldr	r3, .L76
 964 009a DA6B     		ldr	r2, [r3, #60]
 965 009c 2249     		ldr	r1, .L76
 966 009e 3B68     		ldr	r3, [r7]
 967 00a0 1343     		orrs	r3, r3, r2
 968 00a2 CB63     		str	r3, [r1, #60]
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 969              		.loc 1 448 8
 970 00a4 204B     		ldr	r3, .L76
 971 00a6 9A6B     		ldr	r2, [r3, #56]
 972 00a8 3B68     		ldr	r3, [r7]
 973 00aa DB43     		mvns	r3, r3
 974 00ac 1E49     		ldr	r1, .L76
 975 00ae 1340     		ands	r3, r3, r2
 976 00b0 8B63     		str	r3, [r1, #56]
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 977              		.loc 1 449 8
 978 00b2 32E0     		b	.L74
 979              	.L69:
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRE, GPIONumber);
 980              		.loc 1 451 8
 981 00b4 1C4B     		ldr	r3, .L76
 982 00b6 5A6C     		ldr	r2, [r3, #68]
 983 00b8 1B49     		ldr	r1, .L76
 984 00ba 3B68     		ldr	r3, [r7]
 985 00bc 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/cceiCkfa.s 			page 26


 986 00be 4B64     		str	r3, [r1, #68]
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 987              		.loc 1 452 8
 988 00c0 194B     		ldr	r3, .L76
 989 00c2 1A6C     		ldr	r2, [r3, #64]
 990 00c4 3B68     		ldr	r3, [r7]
 991 00c6 DB43     		mvns	r3, r3
 992 00c8 1749     		ldr	r1, .L76
 993 00ca 1340     		ands	r3, r3, r2
 994 00cc 0B64     		str	r3, [r1, #64]
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 995              		.loc 1 453 8
 996 00ce 24E0     		b	.L74
 997              	.L68:
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 998              		.loc 1 455 8
 999 00d0 154B     		ldr	r3, .L76
 1000 00d2 DA6C     		ldr	r2, [r3, #76]
 1001 00d4 3B68     		ldr	r3, [r7]
 1002 00d6 9BB2     		uxth	r3, r3
 1003 00d8 1349     		ldr	r1, .L76
 1004 00da 1343     		orrs	r3, r3, r2
 1005 00dc CB64     		str	r3, [r1, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 1006              		.loc 1 456 8
 1007 00de 124B     		ldr	r3, .L76
 1008 00e0 9A6C     		ldr	r2, [r3, #72]
 1009 00e2 3B68     		ldr	r3, [r7]
 1010 00e4 9BB2     		uxth	r3, r3
 1011 00e6 DB43     		mvns	r3, r3
 1012 00e8 0F49     		ldr	r1, .L76
 1013 00ea 1340     		ands	r3, r3, r2
 1014 00ec 8B64     		str	r3, [r1, #72]
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1015              		.loc 1 457 8
 1016 00ee 14E0     		b	.L74
 1017              	.L66:
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 1018              		.loc 1 459 8
 1019 00f0 0D4B     		ldr	r3, .L76
 1020 00f2 5A6D     		ldr	r2, [r3, #84]
 1021 00f4 3B68     		ldr	r3, [r7]
 1022 00f6 C3F30903 		ubfx	r3, r3, #0, #10
 1023 00fa 0B49     		ldr	r1, .L76
 1024 00fc 1343     		orrs	r3, r3, r2
 1025 00fe 4B65     		str	r3, [r1, #84]
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, (GPIONumber & PWR_PORTG_AVAILABLE_PINS));
 1026              		.loc 1 460 8
 1027 0100 094B     		ldr	r3, .L76
 1028 0102 1A6D     		ldr	r2, [r3, #80]
 1029 0104 3B68     		ldr	r3, [r7]
 1030 0106 C3F30A03 		ubfx	r3, r3, #0, #11
 1031 010a DB43     		mvns	r3, r3
 1032 010c 0649     		ldr	r1, .L76
 1033 010e 1340     		ands	r3, r3, r2
ARM GAS  /tmp/cceiCkfa.s 			page 27


 1034 0110 0B65     		str	r3, [r1, #80]
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1035              		.loc 1 461 8
 1036 0112 02E0     		b	.L74
 1037              	.L65:
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1038              		.loc 1 463 14
 1039 0114 0123     		movs	r3, #1
 1040 0116 FB73     		strb	r3, [r7, #15]
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 1041              		.loc 1 464 7
 1042 0118 00BF     		nop
 1043              	.L74:
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 1044              		.loc 1 467 10
 1045 011a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1046              		.loc 1 468 1
 1047 011c 1846     		mov	r0, r3
 1048 011e 1437     		adds	r7, r7, #20
 1049              	.LCFI43:
 1050              		.cfi_def_cfa_offset 4
 1051 0120 BD46     		mov	sp, r7
 1052              	.LCFI44:
 1053              		.cfi_def_cfa_register 13
 1054              		@ sp needed
 1055 0122 5DF8047B 		ldr	r7, [sp], #4
 1056              	.LCFI45:
 1057              		.cfi_restore 7
 1058              		.cfi_def_cfa_offset 0
 1059 0126 7047     		bx	lr
 1060              	.L77:
 1061              		.align	2
 1062              	.L76:
 1063 0128 00700040 		.word	1073770496
 1064              		.cfi_endproc
 1065              	.LFE333:
 1067              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 1068              		.align	1
 1069              		.global	HAL_PWREx_DisableGPIOPullDown
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1073              		.fpu fpv4-sp-d16
 1075              	HAL_PWREx_DisableGPIOPullDown:
 1076              	.LFB334:
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes.
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
ARM GAS  /tmp/cceiCkfa.s 			page 28


 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_G
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1077              		.loc 1 487 1
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 16
 1080              		@ frame_needed = 1, uses_anonymous_args = 0
 1081              		@ link register save eliminated.
 1082 0000 80B4     		push	{r7}
 1083              	.LCFI46:
 1084              		.cfi_def_cfa_offset 4
 1085              		.cfi_offset 7, -4
 1086 0002 85B0     		sub	sp, sp, #20
 1087              	.LCFI47:
 1088              		.cfi_def_cfa_offset 24
 1089 0004 00AF     		add	r7, sp, #0
 1090              	.LCFI48:
 1091              		.cfi_def_cfa_register 7
 1092 0006 7860     		str	r0, [r7, #4]
 1093 0008 3960     		str	r1, [r7]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1094              		.loc 1 488 21
 1095 000a 0023     		movs	r3, #0
 1096 000c FB73     		strb	r3, [r7, #15]
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (GPIO)
 1097              		.loc 1 493 3
 1098 000e 7B68     		ldr	r3, [r7, #4]
 1099 0010 062B     		cmp	r3, #6
 1100 0012 50D8     		bhi	.L79
 1101 0014 01A2     		adr	r2, .L81
 1102 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1103 001a 00BF     		.p2align 2
 1104              	.L81:
 1105 001c 39000000 		.word	.L87+1
 1106 0020 4D000000 		.word	.L86+1
 1107 0024 61000000 		.word	.L85+1
 1108 0028 71000000 		.word	.L84+1
 1109 002c 81000000 		.word	.L83+1
 1110 0030 91000000 		.word	.L82+1
 1111 0034 A3000000 		.word	.L80+1
 1112              		.p2align 1
 1113              	.L87:
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
ARM GAS  /tmp/cceiCkfa.s 			page 29


 1114              		.loc 1 496 8
 1115 0038 244B     		ldr	r3, .L90
 1116 003a 5A6A     		ldr	r2, [r3, #36]
 1117 003c 3B68     		ldr	r3, [r7]
 1118 003e 23F42043 		bic	r3, r3, #40960
 1119 0042 DB43     		mvns	r3, r3
 1120 0044 2149     		ldr	r1, .L90
 1121 0046 1340     		ands	r3, r3, r2
 1122 0048 4B62     		str	r3, [r1, #36]
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1123              		.loc 1 497 8
 1124 004a 37E0     		b	.L88
 1125              	.L86:
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 1126              		.loc 1 499 8
 1127 004c 1F4B     		ldr	r3, .L90
 1128 004e DA6A     		ldr	r2, [r3, #44]
 1129 0050 3B68     		ldr	r3, [r7]
 1130 0052 23F01003 		bic	r3, r3, #16
 1131 0056 DB43     		mvns	r3, r3
 1132 0058 1C49     		ldr	r1, .L90
 1133 005a 1340     		ands	r3, r3, r2
 1134 005c CB62     		str	r3, [r1, #44]
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1135              		.loc 1 500 8
 1136 005e 2DE0     		b	.L88
 1137              	.L85:
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 1138              		.loc 1 502 8
 1139 0060 1A4B     		ldr	r3, .L90
 1140 0062 5A6B     		ldr	r2, [r3, #52]
 1141 0064 3B68     		ldr	r3, [r7]
 1142 0066 DB43     		mvns	r3, r3
 1143 0068 1849     		ldr	r1, .L90
 1144 006a 1340     		ands	r3, r3, r2
 1145 006c 4B63     		str	r3, [r1, #52]
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1146              		.loc 1 503 8
 1147 006e 25E0     		b	.L88
 1148              	.L84:
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 1149              		.loc 1 505 8
 1150 0070 164B     		ldr	r3, .L90
 1151 0072 DA6B     		ldr	r2, [r3, #60]
 1152 0074 3B68     		ldr	r3, [r7]
 1153 0076 DB43     		mvns	r3, r3
 1154 0078 1449     		ldr	r1, .L90
 1155 007a 1340     		ands	r3, r3, r2
 1156 007c CB63     		str	r3, [r1, #60]
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1157              		.loc 1 506 8
 1158 007e 1DE0     		b	.L88
 1159              	.L83:
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
ARM GAS  /tmp/cceiCkfa.s 			page 30


 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 1160              		.loc 1 508 8
 1161 0080 124B     		ldr	r3, .L90
 1162 0082 5A6C     		ldr	r2, [r3, #68]
 1163 0084 3B68     		ldr	r3, [r7]
 1164 0086 DB43     		mvns	r3, r3
 1165 0088 1049     		ldr	r1, .L90
 1166 008a 1340     		ands	r3, r3, r2
 1167 008c 4B64     		str	r3, [r1, #68]
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1168              		.loc 1 509 8
 1169 008e 15E0     		b	.L88
 1170              	.L82:
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, (GPIONumber & PWR_PORTF_AVAILABLE_PINS));
 1171              		.loc 1 511 8
 1172 0090 0E4B     		ldr	r3, .L90
 1173 0092 DA6C     		ldr	r2, [r3, #76]
 1174 0094 3B68     		ldr	r3, [r7]
 1175 0096 9BB2     		uxth	r3, r3
 1176 0098 DB43     		mvns	r3, r3
 1177 009a 0C49     		ldr	r1, .L90
 1178 009c 1340     		ands	r3, r3, r2
 1179 009e CB64     		str	r3, [r1, #76]
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1180              		.loc 1 512 8
 1181 00a0 0CE0     		b	.L88
 1182              	.L80:
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, ((GPIONumber & PWR_PORTG_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_10))));
 1183              		.loc 1 514 8
 1184 00a2 0A4B     		ldr	r3, .L90
 1185 00a4 5A6D     		ldr	r2, [r3, #84]
 1186 00a6 3B68     		ldr	r3, [r7]
 1187 00a8 C3F30903 		ubfx	r3, r3, #0, #10
 1188 00ac DB43     		mvns	r3, r3
 1189 00ae 0749     		ldr	r1, .L90
 1190 00b0 1340     		ands	r3, r3, r2
 1191 00b2 4B65     		str	r3, [r1, #84]
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****        break;
 1192              		.loc 1 515 8
 1193 00b4 02E0     		b	.L88
 1194              	.L79:
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1195              		.loc 1 517 14
 1196 00b6 0123     		movs	r3, #1
 1197 00b8 FB73     		strb	r3, [r7, #15]
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 1198              		.loc 1 518 7
 1199 00ba 00BF     		nop
 1200              	.L88:
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 1201              		.loc 1 521 10
 1202 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/cceiCkfa.s 			page 31


 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1203              		.loc 1 522 1
 1204 00be 1846     		mov	r0, r3
 1205 00c0 1437     		adds	r7, r7, #20
 1206              	.LCFI49:
 1207              		.cfi_def_cfa_offset 4
 1208 00c2 BD46     		mov	sp, r7
 1209              	.LCFI50:
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 00c4 5DF8047B 		ldr	r7, [sp], #4
 1213              	.LCFI51:
 1214              		.cfi_restore 7
 1215              		.cfi_def_cfa_offset 0
 1216 00c8 7047     		bx	lr
 1217              	.L91:
 1218 00ca 00BF     		.align	2
 1219              	.L90:
 1220 00cc 00700040 		.word	1073770496
 1221              		.cfi_endproc
 1222              	.LFE334:
 1224              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 1225              		.align	1
 1226              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu fpv4-sp-d16
 1232              	HAL_PWREx_EnablePullUpPullDownConfig:
 1233              	.LFB335:
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher).
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1234              		.loc 1 537 1
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238              		@ link register save eliminated.
 1239 0000 80B4     		push	{r7}
 1240              	.LCFI52:
 1241              		.cfi_def_cfa_offset 4
 1242              		.cfi_offset 7, -4
 1243 0002 00AF     		add	r7, sp, #0
 1244              	.LCFI53:
 1245              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cceiCkfa.s 			page 32


 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 1246              		.loc 1 538 3
 1247 0004 054B     		ldr	r3, .L93
 1248 0006 9B68     		ldr	r3, [r3, #8]
 1249 0008 044A     		ldr	r2, .L93
 1250 000a 43F48063 		orr	r3, r3, #1024
 1251 000e 9360     		str	r3, [r2, #8]
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1252              		.loc 1 539 1
 1253 0010 00BF     		nop
 1254 0012 BD46     		mov	sp, r7
 1255              	.LCFI54:
 1256              		.cfi_def_cfa_register 13
 1257              		@ sp needed
 1258 0014 5DF8047B 		ldr	r7, [sp], #4
 1259              	.LCFI55:
 1260              		.cfi_restore 7
 1261              		.cfi_def_cfa_offset 0
 1262 0018 7047     		bx	lr
 1263              	.L94:
 1264 001a 00BF     		.align	2
 1265              	.L93:
 1266 001c 00700040 		.word	1073770496
 1267              		.cfi_endproc
 1268              	.LFE335:
 1270              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 1271              		.align	1
 1272              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu fpv4-sp-d16
 1278              	HAL_PWREx_DisablePullUpPullDownConfig:
 1279              	.LFB336:
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1280              		.loc 1 549 1
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 1, uses_anonymous_args = 0
 1284              		@ link register save eliminated.
 1285 0000 80B4     		push	{r7}
 1286              	.LCFI56:
 1287              		.cfi_def_cfa_offset 4
 1288              		.cfi_offset 7, -4
 1289 0002 00AF     		add	r7, sp, #0
 1290              	.LCFI57:
 1291              		.cfi_def_cfa_register 7
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
ARM GAS  /tmp/cceiCkfa.s 			page 33


 1292              		.loc 1 550 3
 1293 0004 054B     		ldr	r3, .L96
 1294 0006 9B68     		ldr	r3, [r3, #8]
 1295 0008 044A     		ldr	r2, .L96
 1296 000a 23F48063 		bic	r3, r3, #1024
 1297 000e 9360     		str	r3, [r2, #8]
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1298              		.loc 1 551 1
 1299 0010 00BF     		nop
 1300 0012 BD46     		mov	sp, r7
 1301              	.LCFI58:
 1302              		.cfi_def_cfa_register 13
 1303              		@ sp needed
 1304 0014 5DF8047B 		ldr	r7, [sp], #4
 1305              	.LCFI59:
 1306              		.cfi_restore 7
 1307              		.cfi_def_cfa_offset 0
 1308 0018 7047     		bx	lr
 1309              	.L97:
 1310 001a 00BF     		.align	2
 1311              	.L96:
 1312 001c 00700040 		.word	1073770496
 1313              		.cfi_endproc
 1314              	.LFE336:
 1316              		.section	.text.HAL_PWREx_EnableSRAM2ContentRetention,"ax",%progbits
 1317              		.align	1
 1318              		.global	HAL_PWREx_EnableSRAM2ContentRetention
 1319              		.syntax unified
 1320              		.thumb
 1321              		.thumb_func
 1322              		.fpu fpv4-sp-d16
 1324              	HAL_PWREx_EnableSRAM2ContentRetention:
 1325              	.LFB337:
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When RRS bit is set, SRAM2 is powered by the low-power regulator in
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         Standby mode and its content is kept.
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM2ContentRetention(void)
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1326              		.loc 1 562 1
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330              		@ link register save eliminated.
 1331 0000 80B4     		push	{r7}
 1332              	.LCFI60:
 1333              		.cfi_def_cfa_offset 4
 1334              		.cfi_offset 7, -4
 1335 0002 00AF     		add	r7, sp, #0
 1336              	.LCFI61:
 1337              		.cfi_def_cfa_register 7
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_RRS);
ARM GAS  /tmp/cceiCkfa.s 			page 34


 1338              		.loc 1 563 3
 1339 0004 054B     		ldr	r3, .L99
 1340 0006 9B68     		ldr	r3, [r3, #8]
 1341 0008 044A     		ldr	r2, .L99
 1342 000a 43F48073 		orr	r3, r3, #256
 1343 000e 9360     		str	r3, [r2, #8]
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1344              		.loc 1 564 1
 1345 0010 00BF     		nop
 1346 0012 BD46     		mov	sp, r7
 1347              	.LCFI62:
 1348              		.cfi_def_cfa_register 13
 1349              		@ sp needed
 1350 0014 5DF8047B 		ldr	r7, [sp], #4
 1351              	.LCFI63:
 1352              		.cfi_restore 7
 1353              		.cfi_def_cfa_offset 0
 1354 0018 7047     		bx	lr
 1355              	.L100:
 1356 001a 00BF     		.align	2
 1357              	.L99:
 1358 001c 00700040 		.word	1073770496
 1359              		.cfi_endproc
 1360              	.LFE337:
 1362              		.section	.text.HAL_PWREx_DisableSRAM2ContentRetention,"ax",%progbits
 1363              		.align	1
 1364              		.global	HAL_PWREx_DisableSRAM2ContentRetention
 1365              		.syntax unified
 1366              		.thumb
 1367              		.thumb_func
 1368              		.fpu fpv4-sp-d16
 1370              	HAL_PWREx_DisableSRAM2ContentRetention:
 1371              	.LFB338:
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When RRS bit is reset, SRAM2 is powered off in Standby mode
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and its content is lost.
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM2ContentRetention(void)
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1372              		.loc 1 574 1
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376              		@ link register save eliminated.
 1377 0000 80B4     		push	{r7}
 1378              	.LCFI64:
 1379              		.cfi_def_cfa_offset 4
 1380              		.cfi_offset 7, -4
 1381 0002 00AF     		add	r7, sp, #0
 1382              	.LCFI65:
 1383              		.cfi_def_cfa_register 7
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
 1384              		.loc 1 575 3
ARM GAS  /tmp/cceiCkfa.s 			page 35


 1385 0004 054B     		ldr	r3, .L102
 1386 0006 9B68     		ldr	r3, [r3, #8]
 1387 0008 044A     		ldr	r2, .L102
 1388 000a 23F48073 		bic	r3, r3, #256
 1389 000e 9360     		str	r3, [r2, #8]
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1390              		.loc 1 576 1
 1391 0010 00BF     		nop
 1392 0012 BD46     		mov	sp, r7
 1393              	.LCFI66:
 1394              		.cfi_def_cfa_register 13
 1395              		@ sp needed
 1396 0014 5DF8047B 		ldr	r7, [sp], #4
 1397              	.LCFI67:
 1398              		.cfi_restore 7
 1399              		.cfi_def_cfa_offset 0
 1400 0018 7047     		bx	lr
 1401              	.L103:
 1402 001a 00BF     		.align	2
 1403              	.L102:
 1404 001c 00700040 		.word	1073770496
 1405              		.cfi_endproc
 1406              	.LFE338:
 1408              		.section	.text.HAL_PWREx_EnablePVM1,"ax",%progbits
 1409              		.align	1
 1410              		.global	HAL_PWREx_EnablePVM1
 1411              		.syntax unified
 1412              		.thumb
 1413              		.thumb_func
 1414              		.fpu fpv4-sp-d16
 1416              	HAL_PWREx_EnablePVM1:
 1417              	.LFB339:
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 1: VDDA versus FASTCOMP minimum voltage.
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM1(void)
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1418              		.loc 1 587 1
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 0
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422              		@ link register save eliminated.
 1423 0000 80B4     		push	{r7}
 1424              	.LCFI68:
 1425              		.cfi_def_cfa_offset 4
 1426              		.cfi_offset 7, -4
 1427 0002 00AF     		add	r7, sp, #0
 1428              	.LCFI69:
 1429              		.cfi_def_cfa_register 7
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_1);
 1430              		.loc 1 588 3
ARM GAS  /tmp/cceiCkfa.s 			page 36


 1431 0004 054B     		ldr	r3, .L105
 1432 0006 5B68     		ldr	r3, [r3, #4]
 1433 0008 044A     		ldr	r2, .L105
 1434 000a 43F01003 		orr	r3, r3, #16
 1435 000e 5360     		str	r3, [r2, #4]
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1436              		.loc 1 589 1
 1437 0010 00BF     		nop
 1438 0012 BD46     		mov	sp, r7
 1439              	.LCFI70:
 1440              		.cfi_def_cfa_register 13
 1441              		@ sp needed
 1442 0014 5DF8047B 		ldr	r7, [sp], #4
 1443              	.LCFI71:
 1444              		.cfi_restore 7
 1445              		.cfi_def_cfa_offset 0
 1446 0018 7047     		bx	lr
 1447              	.L106:
 1448 001a 00BF     		.align	2
 1449              	.L105:
 1450 001c 00700040 		.word	1073770496
 1451              		.cfi_endproc
 1452              	.LFE339:
 1454              		.section	.text.HAL_PWREx_DisablePVM1,"ax",%progbits
 1455              		.align	1
 1456              		.global	HAL_PWREx_DisablePVM1
 1457              		.syntax unified
 1458              		.thumb
 1459              		.thumb_func
 1460              		.fpu fpv4-sp-d16
 1462              	HAL_PWREx_DisablePVM1:
 1463              	.LFB340:
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 1: VDDA versus FASTCOMP minimum voltage.
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM1(void)
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1464              		.loc 1 596 1
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 1, uses_anonymous_args = 0
 1468              		@ link register save eliminated.
 1469 0000 80B4     		push	{r7}
 1470              	.LCFI72:
 1471              		.cfi_def_cfa_offset 4
 1472              		.cfi_offset 7, -4
 1473 0002 00AF     		add	r7, sp, #0
 1474              	.LCFI73:
 1475              		.cfi_def_cfa_register 7
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_1);
 1476              		.loc 1 597 3
 1477 0004 054B     		ldr	r3, .L108
 1478 0006 5B68     		ldr	r3, [r3, #4]
 1479 0008 044A     		ldr	r2, .L108
 1480 000a 23F01003 		bic	r3, r3, #16
ARM GAS  /tmp/cceiCkfa.s 			page 37


 1481 000e 5360     		str	r3, [r2, #4]
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1482              		.loc 1 598 1
 1483 0010 00BF     		nop
 1484 0012 BD46     		mov	sp, r7
 1485              	.LCFI74:
 1486              		.cfi_def_cfa_register 13
 1487              		@ sp needed
 1488 0014 5DF8047B 		ldr	r7, [sp], #4
 1489              	.LCFI75:
 1490              		.cfi_restore 7
 1491              		.cfi_def_cfa_offset 0
 1492 0018 7047     		bx	lr
 1493              	.L109:
 1494 001a 00BF     		.align	2
 1495              	.L108:
 1496 001c 00700040 		.word	1073770496
 1497              		.cfi_endproc
 1498              	.LFE340:
 1500              		.section	.text.HAL_PWREx_EnablePVM2,"ax",%progbits
 1501              		.align	1
 1502              		.global	HAL_PWREx_EnablePVM2
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu fpv4-sp-d16
 1508              	HAL_PWREx_EnablePVM2:
 1509              	.LFB341:
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 2: VDDA versus FASTDAC minimum voltage.
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM2(void)
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1510              		.loc 1 608 1
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 1, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515 0000 80B4     		push	{r7}
 1516              	.LCFI76:
 1517              		.cfi_def_cfa_offset 4
 1518              		.cfi_offset 7, -4
 1519 0002 00AF     		add	r7, sp, #0
 1520              	.LCFI77:
 1521              		.cfi_def_cfa_register 7
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_2);
 1522              		.loc 1 609 3
 1523 0004 054B     		ldr	r3, .L111
 1524 0006 5B68     		ldr	r3, [r3, #4]
 1525 0008 044A     		ldr	r2, .L111
 1526 000a 43F02003 		orr	r3, r3, #32
 1527 000e 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cceiCkfa.s 			page 38


 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1528              		.loc 1 610 1
 1529 0010 00BF     		nop
 1530 0012 BD46     		mov	sp, r7
 1531              	.LCFI78:
 1532              		.cfi_def_cfa_register 13
 1533              		@ sp needed
 1534 0014 5DF8047B 		ldr	r7, [sp], #4
 1535              	.LCFI79:
 1536              		.cfi_restore 7
 1537              		.cfi_def_cfa_offset 0
 1538 0018 7047     		bx	lr
 1539              	.L112:
 1540 001a 00BF     		.align	2
 1541              	.L111:
 1542 001c 00700040 		.word	1073770496
 1543              		.cfi_endproc
 1544              	.LFE341:
 1546              		.section	.text.HAL_PWREx_DisablePVM2,"ax",%progbits
 1547              		.align	1
 1548              		.global	HAL_PWREx_DisablePVM2
 1549              		.syntax unified
 1550              		.thumb
 1551              		.thumb_func
 1552              		.fpu fpv4-sp-d16
 1554              	HAL_PWREx_DisablePVM2:
 1555              	.LFB342:
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 2: VDDA versus FASTDAC minimum voltage.
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM2(void)
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1556              		.loc 1 617 1
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 0
 1559              		@ frame_needed = 1, uses_anonymous_args = 0
 1560              		@ link register save eliminated.
 1561 0000 80B4     		push	{r7}
 1562              	.LCFI80:
 1563              		.cfi_def_cfa_offset 4
 1564              		.cfi_offset 7, -4
 1565 0002 00AF     		add	r7, sp, #0
 1566              	.LCFI81:
 1567              		.cfi_def_cfa_register 7
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_2);
 1568              		.loc 1 618 3
 1569 0004 054B     		ldr	r3, .L114
 1570 0006 5B68     		ldr	r3, [r3, #4]
 1571 0008 044A     		ldr	r2, .L114
 1572 000a 23F02003 		bic	r3, r3, #32
 1573 000e 5360     		str	r3, [r2, #4]
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1574              		.loc 1 619 1
 1575 0010 00BF     		nop
 1576 0012 BD46     		mov	sp, r7
ARM GAS  /tmp/cceiCkfa.s 			page 39


 1577              	.LCFI82:
 1578              		.cfi_def_cfa_register 13
 1579              		@ sp needed
 1580 0014 5DF8047B 		ldr	r7, [sp], #4
 1581              	.LCFI83:
 1582              		.cfi_restore 7
 1583              		.cfi_def_cfa_offset 0
 1584 0018 7047     		bx	lr
 1585              	.L115:
 1586 001a 00BF     		.align	2
 1587              	.L114:
 1588 001c 00700040 		.word	1073770496
 1589              		.cfi_endproc
 1590              	.LFE342:
 1592              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 1593              		.align	1
 1594              		.global	HAL_PWREx_EnablePVM3
 1595              		.syntax unified
 1596              		.thumb
 1597              		.thumb_func
 1598              		.fpu fpv4-sp-d16
 1600              	HAL_PWREx_EnablePVM3:
 1601              	.LFB343:
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus ADC minimum voltage 1.62V.
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1602              		.loc 1 628 1
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 1, uses_anonymous_args = 0
 1606              		@ link register save eliminated.
 1607 0000 80B4     		push	{r7}
 1608              	.LCFI84:
 1609              		.cfi_def_cfa_offset 4
 1610              		.cfi_offset 7, -4
 1611 0002 00AF     		add	r7, sp, #0
 1612              	.LCFI85:
 1613              		.cfi_def_cfa_register 7
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);
 1614              		.loc 1 629 3
 1615 0004 054B     		ldr	r3, .L117
 1616 0006 5B68     		ldr	r3, [r3, #4]
 1617 0008 044A     		ldr	r2, .L117
 1618 000a 43F04003 		orr	r3, r3, #64
 1619 000e 5360     		str	r3, [r2, #4]
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1620              		.loc 1 630 1
 1621 0010 00BF     		nop
 1622 0012 BD46     		mov	sp, r7
 1623              	.LCFI86:
 1624              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cceiCkfa.s 			page 40


 1625              		@ sp needed
 1626 0014 5DF8047B 		ldr	r7, [sp], #4
 1627              	.LCFI87:
 1628              		.cfi_restore 7
 1629              		.cfi_def_cfa_offset 0
 1630 0018 7047     		bx	lr
 1631              	.L118:
 1632 001a 00BF     		.align	2
 1633              	.L117:
 1634 001c 00700040 		.word	1073770496
 1635              		.cfi_endproc
 1636              	.LFE343:
 1638              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 1639              		.align	1
 1640              		.global	HAL_PWREx_DisablePVM3
 1641              		.syntax unified
 1642              		.thumb
 1643              		.thumb_func
 1644              		.fpu fpv4-sp-d16
 1646              	HAL_PWREx_DisablePVM3:
 1647              	.LFB344:
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus ADC minimum voltage 1.62V.
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1648              		.loc 1 637 1
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
 1651              		@ frame_needed = 1, uses_anonymous_args = 0
 1652              		@ link register save eliminated.
 1653 0000 80B4     		push	{r7}
 1654              	.LCFI88:
 1655              		.cfi_def_cfa_offset 4
 1656              		.cfi_offset 7, -4
 1657 0002 00AF     		add	r7, sp, #0
 1658              	.LCFI89:
 1659              		.cfi_def_cfa_register 7
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);
 1660              		.loc 1 638 3
 1661 0004 054B     		ldr	r3, .L120
 1662 0006 5B68     		ldr	r3, [r3, #4]
 1663 0008 044A     		ldr	r2, .L120
 1664 000a 23F04003 		bic	r3, r3, #64
 1665 000e 5360     		str	r3, [r2, #4]
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1666              		.loc 1 639 1
 1667 0010 00BF     		nop
 1668 0012 BD46     		mov	sp, r7
 1669              	.LCFI90:
 1670              		.cfi_def_cfa_register 13
 1671              		@ sp needed
 1672 0014 5DF8047B 		ldr	r7, [sp], #4
 1673              	.LCFI91:
 1674              		.cfi_restore 7
ARM GAS  /tmp/cceiCkfa.s 			page 41


 1675              		.cfi_def_cfa_offset 0
 1676 0018 7047     		bx	lr
 1677              	.L121:
 1678 001a 00BF     		.align	2
 1679              	.L120:
 1680 001c 00700040 		.word	1073770496
 1681              		.cfi_endproc
 1682              	.LFE344:
 1684              		.section	.text.HAL_PWREx_EnablePVM4,"ax",%progbits
 1685              		.align	1
 1686              		.global	HAL_PWREx_EnablePVM4
 1687              		.syntax unified
 1688              		.thumb
 1689              		.thumb_func
 1690              		.fpu fpv4-sp-d16
 1692              	HAL_PWREx_EnablePVM4:
 1693              	.LFB345:
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 4: VDDA versus OPAMP/DAC minimum voltage 1.8V.
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM4(void)
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1694              		.loc 1 647 1
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 1, uses_anonymous_args = 0
 1698              		@ link register save eliminated.
 1699 0000 80B4     		push	{r7}
 1700              	.LCFI92:
 1701              		.cfi_def_cfa_offset 4
 1702              		.cfi_offset 7, -4
 1703 0002 00AF     		add	r7, sp, #0
 1704              	.LCFI93:
 1705              		.cfi_def_cfa_register 7
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_4);
 1706              		.loc 1 648 3
 1707 0004 054B     		ldr	r3, .L123
 1708 0006 5B68     		ldr	r3, [r3, #4]
 1709 0008 044A     		ldr	r2, .L123
 1710 000a 43F08003 		orr	r3, r3, #128
 1711 000e 5360     		str	r3, [r2, #4]
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1712              		.loc 1 649 1
 1713 0010 00BF     		nop
 1714 0012 BD46     		mov	sp, r7
 1715              	.LCFI94:
 1716              		.cfi_def_cfa_register 13
 1717              		@ sp needed
 1718 0014 5DF8047B 		ldr	r7, [sp], #4
 1719              	.LCFI95:
 1720              		.cfi_restore 7
 1721              		.cfi_def_cfa_offset 0
 1722 0018 7047     		bx	lr
 1723              	.L124:
ARM GAS  /tmp/cceiCkfa.s 			page 42


 1724 001a 00BF     		.align	2
 1725              	.L123:
 1726 001c 00700040 		.word	1073770496
 1727              		.cfi_endproc
 1728              	.LFE345:
 1730              		.section	.text.HAL_PWREx_DisablePVM4,"ax",%progbits
 1731              		.align	1
 1732              		.global	HAL_PWREx_DisablePVM4
 1733              		.syntax unified
 1734              		.thumb
 1735              		.thumb_func
 1736              		.fpu fpv4-sp-d16
 1738              	HAL_PWREx_DisablePVM4:
 1739              	.LFB346:
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 4: VDDA versus OPAMP/DAC minimum voltage 1.8V.
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM4(void)
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1740              		.loc 1 656 1
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 1, uses_anonymous_args = 0
 1744              		@ link register save eliminated.
 1745 0000 80B4     		push	{r7}
 1746              	.LCFI96:
 1747              		.cfi_def_cfa_offset 4
 1748              		.cfi_offset 7, -4
 1749 0002 00AF     		add	r7, sp, #0
 1750              	.LCFI97:
 1751              		.cfi_def_cfa_register 7
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_4);
 1752              		.loc 1 657 3
 1753 0004 054B     		ldr	r3, .L126
 1754 0006 5B68     		ldr	r3, [r3, #4]
 1755 0008 044A     		ldr	r2, .L126
 1756 000a 23F08003 		bic	r3, r3, #128
 1757 000e 5360     		str	r3, [r2, #4]
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 1758              		.loc 1 658 1
 1759 0010 00BF     		nop
 1760 0012 BD46     		mov	sp, r7
 1761              	.LCFI98:
 1762              		.cfi_def_cfa_register 13
 1763              		@ sp needed
 1764 0014 5DF8047B 		ldr	r7, [sp], #4
 1765              	.LCFI99:
 1766              		.cfi_restore 7
 1767              		.cfi_def_cfa_offset 0
 1768 0018 7047     		bx	lr
 1769              	.L127:
 1770 001a 00BF     		.align	2
 1771              	.L126:
 1772 001c 00700040 		.word	1073770496
 1773              		.cfi_endproc
ARM GAS  /tmp/cceiCkfa.s 			page 43


 1774              	.LFE346:
 1776              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 1777              		.align	1
 1778              		.global	HAL_PWREx_ConfigPVM
 1779              		.syntax unified
 1780              		.thumb
 1781              		.thumb_func
 1782              		.fpu fpv4-sp-d16
 1784              	HAL_PWREx_ConfigPVM:
 1785              	.LFB347:
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param sConfigPVM: pointer to a PWR_PVMTypeDef structure that contains the
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        PVM configuration information.
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       called for each PVM used.
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL status
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 1786              		.loc 1 676 1
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 16
 1789              		@ frame_needed = 1, uses_anonymous_args = 0
 1790              		@ link register save eliminated.
 1791 0000 80B4     		push	{r7}
 1792              	.LCFI100:
 1793              		.cfi_def_cfa_offset 4
 1794              		.cfi_offset 7, -4
 1795 0002 85B0     		sub	sp, sp, #20
 1796              	.LCFI101:
 1797              		.cfi_def_cfa_offset 24
 1798 0004 00AF     		add	r7, sp, #0
 1799              	.LCFI102:
 1800              		.cfi_def_cfa_register 7
 1801 0006 7860     		str	r0, [r7, #4]
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1802              		.loc 1 677 21
 1803 0008 0023     		movs	r3, #0
 1804 000a FB73     		strb	r3, [r7, #15]
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Configure EXTI 35 to 38 interrupts if so required:
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      scan thru PVMType to detect which PVMx is set and
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
ARM GAS  /tmp/cceiCkfa.s 			page 44


 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
 1805              		.loc 1 687 21
 1806 000c 7B68     		ldr	r3, [r7, #4]
 1807 000e 1B68     		ldr	r3, [r3]
 1808              		.loc 1 687 3
 1809 0010 202B     		cmp	r3, #32
 1810 0012 55D0     		beq	.L129
 1811 0014 202B     		cmp	r3, #32
 1812 0016 02D8     		bhi	.L130
 1813 0018 102B     		cmp	r3, #16
 1814 001a 07D0     		beq	.L131
 1815 001c 2CE1     		b	.L132
 1816              	.L130:
 1817 001e 402B     		cmp	r3, #64
 1818 0020 00F09880 		beq	.L133
 1819 0024 802B     		cmp	r3, #128
 1820 0026 00F0DE80 		beq	.L134
 1821 002a 25E1     		b	.L132
 1822              	.L131:
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_1:
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_EVENT();
 1823              		.loc 1 692 7
 1824 002c 9B4B     		ldr	r3, .L157
 1825 002e 5B6A     		ldr	r3, [r3, #36]
 1826 0030 9A4A     		ldr	r2, .L157
 1827 0032 23F00803 		bic	r3, r3, #8
 1828 0036 5362     		str	r3, [r2, #36]
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 1829              		.loc 1 693 7
 1830 0038 984B     		ldr	r3, .L157
 1831 003a 1B6A     		ldr	r3, [r3, #32]
 1832 003c 974A     		ldr	r2, .L157
 1833 003e 23F00803 		bic	r3, r3, #8
 1834 0042 1362     		str	r3, [r2, #32]
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE();
 1835              		.loc 1 694 7
 1836 0044 954B     		ldr	r3, .L157
 1837 0046 DB6A     		ldr	r3, [r3, #44]
 1838 0048 944A     		ldr	r2, .L157
 1839 004a 23F00803 		bic	r3, r3, #8
 1840 004e D362     		str	r3, [r2, #44]
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 1841              		.loc 1 695 7
 1842 0050 924B     		ldr	r3, .L157
 1843 0052 9B6A     		ldr	r3, [r3, #40]
 1844 0054 914A     		ldr	r2, .L157
 1845 0056 23F00803 		bic	r3, r3, #8
 1846 005a 9362     		str	r3, [r2, #40]
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1847              		.loc 1 698 21
 1848 005c 7B68     		ldr	r3, [r7, #4]
 1849 005e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cceiCkfa.s 			page 45


 1850              		.loc 1 698 28
 1851 0060 03F48033 		and	r3, r3, #65536
 1852              		.loc 1 698 9
 1853 0064 002B     		cmp	r3, #0
 1854 0066 05D0     		beq	.L135
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_IT();
 1855              		.loc 1 700 9
 1856 0068 8C4B     		ldr	r3, .L157
 1857 006a 1B6A     		ldr	r3, [r3, #32]
 1858 006c 8B4A     		ldr	r2, .L157
 1859 006e 43F00803 		orr	r3, r3, #8
 1860 0072 1362     		str	r3, [r2, #32]
 1861              	.L135:
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1862              		.loc 1 704 21
 1863 0074 7B68     		ldr	r3, [r7, #4]
 1864 0076 5B68     		ldr	r3, [r3, #4]
 1865              		.loc 1 704 28
 1866 0078 03F40033 		and	r3, r3, #131072
 1867              		.loc 1 704 9
 1868 007c 002B     		cmp	r3, #0
 1869 007e 05D0     		beq	.L136
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_EVENT();
 1870              		.loc 1 706 9
 1871 0080 864B     		ldr	r3, .L157
 1872 0082 5B6A     		ldr	r3, [r3, #36]
 1873 0084 854A     		ldr	r2, .L157
 1874 0086 43F00803 		orr	r3, r3, #8
 1875 008a 5362     		str	r3, [r2, #36]
 1876              	.L136:
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1877              		.loc 1 710 21
 1878 008c 7B68     		ldr	r3, [r7, #4]
 1879 008e 5B68     		ldr	r3, [r3, #4]
 1880              		.loc 1 710 28
 1881 0090 03F00103 		and	r3, r3, #1
 1882              		.loc 1 710 9
 1883 0094 002B     		cmp	r3, #0
 1884 0096 05D0     		beq	.L137
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();
 1885              		.loc 1 712 9
 1886 0098 804B     		ldr	r3, .L157
 1887 009a 9B6A     		ldr	r3, [r3, #40]
 1888 009c 7F4A     		ldr	r2, .L157
 1889 009e 43F00803 		orr	r3, r3, #8
 1890 00a2 9362     		str	r3, [r2, #40]
 1891              	.L137:
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
ARM GAS  /tmp/cceiCkfa.s 			page 46


 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1892              		.loc 1 715 21
 1893 00a4 7B68     		ldr	r3, [r7, #4]
 1894 00a6 5B68     		ldr	r3, [r3, #4]
 1895              		.loc 1 715 28
 1896 00a8 03F00203 		and	r3, r3, #2
 1897              		.loc 1 715 9
 1898 00ac 002B     		cmp	r3, #0
 1899 00ae 00F0E680 		beq	.L153
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();
 1900              		.loc 1 717 9
 1901 00b2 7A4B     		ldr	r3, .L157
 1902 00b4 DB6A     		ldr	r3, [r3, #44]
 1903 00b6 794A     		ldr	r2, .L157
 1904 00b8 43F00803 		orr	r3, r3, #8
 1905 00bc D362     		str	r3, [r2, #44]
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 1906              		.loc 1 719 7
 1907 00be DEE0     		b	.L153
 1908              	.L129:
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_2:
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_EVENT();
 1909              		.loc 1 725 7
 1910 00c0 764B     		ldr	r3, .L157
 1911 00c2 5B6A     		ldr	r3, [r3, #36]
 1912 00c4 754A     		ldr	r2, .L157
 1913 00c6 23F01003 		bic	r3, r3, #16
 1914 00ca 5362     		str	r3, [r2, #36]
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 1915              		.loc 1 726 7
 1916 00cc 734B     		ldr	r3, .L157
 1917 00ce 1B6A     		ldr	r3, [r3, #32]
 1918 00d0 724A     		ldr	r2, .L157
 1919 00d2 23F01003 		bic	r3, r3, #16
 1920 00d6 1362     		str	r3, [r2, #32]
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();
 1921              		.loc 1 727 7
 1922 00d8 704B     		ldr	r3, .L157
 1923 00da DB6A     		ldr	r3, [r3, #44]
 1924 00dc 6F4A     		ldr	r2, .L157
 1925 00de 23F01003 		bic	r3, r3, #16
 1926 00e2 D362     		str	r3, [r2, #44]
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 1927              		.loc 1 728 7
 1928 00e4 6D4B     		ldr	r3, .L157
 1929 00e6 9B6A     		ldr	r3, [r3, #40]
 1930 00e8 6C4A     		ldr	r2, .L157
 1931 00ea 23F01003 		bic	r3, r3, #16
 1932 00ee 9362     		str	r3, [r2, #40]
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cceiCkfa.s 			page 47


 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1933              		.loc 1 731 21
 1934 00f0 7B68     		ldr	r3, [r7, #4]
 1935 00f2 5B68     		ldr	r3, [r3, #4]
 1936              		.loc 1 731 28
 1937 00f4 03F48033 		and	r3, r3, #65536
 1938              		.loc 1 731 9
 1939 00f8 002B     		cmp	r3, #0
 1940 00fa 05D0     		beq	.L140
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_IT();
 1941              		.loc 1 733 9
 1942 00fc 674B     		ldr	r3, .L157
 1943 00fe 1B6A     		ldr	r3, [r3, #32]
 1944 0100 664A     		ldr	r2, .L157
 1945 0102 43F01003 		orr	r3, r3, #16
 1946 0106 1362     		str	r3, [r2, #32]
 1947              	.L140:
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1948              		.loc 1 737 21
 1949 0108 7B68     		ldr	r3, [r7, #4]
 1950 010a 5B68     		ldr	r3, [r3, #4]
 1951              		.loc 1 737 28
 1952 010c 03F40033 		and	r3, r3, #131072
 1953              		.loc 1 737 9
 1954 0110 002B     		cmp	r3, #0
 1955 0112 05D0     		beq	.L141
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_EVENT();
 1956              		.loc 1 739 9
 1957 0114 614B     		ldr	r3, .L157
 1958 0116 5B6A     		ldr	r3, [r3, #36]
 1959 0118 604A     		ldr	r2, .L157
 1960 011a 43F01003 		orr	r3, r3, #16
 1961 011e 5362     		str	r3, [r2, #36]
 1962              	.L141:
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1963              		.loc 1 743 21
 1964 0120 7B68     		ldr	r3, [r7, #4]
 1965 0122 5B68     		ldr	r3, [r3, #4]
 1966              		.loc 1 743 28
 1967 0124 03F00103 		and	r3, r3, #1
 1968              		.loc 1 743 9
 1969 0128 002B     		cmp	r3, #0
 1970 012a 05D0     		beq	.L142
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();
 1971              		.loc 1 745 9
 1972 012c 5B4B     		ldr	r3, .L157
 1973 012e 9B6A     		ldr	r3, [r3, #40]
ARM GAS  /tmp/cceiCkfa.s 			page 48


 1974 0130 5A4A     		ldr	r2, .L157
 1975 0132 43F01003 		orr	r3, r3, #16
 1976 0136 9362     		str	r3, [r2, #40]
 1977              	.L142:
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1978              		.loc 1 748 21
 1979 0138 7B68     		ldr	r3, [r7, #4]
 1980 013a 5B68     		ldr	r3, [r3, #4]
 1981              		.loc 1 748 28
 1982 013c 03F00203 		and	r3, r3, #2
 1983              		.loc 1 748 9
 1984 0140 002B     		cmp	r3, #0
 1985 0142 00F09E80 		beq	.L154
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();
 1986              		.loc 1 750 9
 1987 0146 554B     		ldr	r3, .L157
 1988 0148 DB6A     		ldr	r3, [r3, #44]
 1989 014a 544A     		ldr	r2, .L157
 1990 014c 43F01003 		orr	r3, r3, #16
 1991 0150 D362     		str	r3, [r2, #44]
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 1992              		.loc 1 752 7
 1993 0152 96E0     		b	.L154
 1994              	.L133:
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_3:
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
 1995              		.loc 1 757 7
 1996 0154 514B     		ldr	r3, .L157
 1997 0156 5B6A     		ldr	r3, [r3, #36]
 1998 0158 504A     		ldr	r2, .L157
 1999 015a 23F02003 		bic	r3, r3, #32
 2000 015e 5362     		str	r3, [r2, #36]
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 2001              		.loc 1 758 7
 2002 0160 4E4B     		ldr	r3, .L157
 2003 0162 1B6A     		ldr	r3, [r3, #32]
 2004 0164 4D4A     		ldr	r2, .L157
 2005 0166 23F02003 		bic	r3, r3, #32
 2006 016a 1362     		str	r3, [r2, #32]
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
 2007              		.loc 1 759 7
 2008 016c 4B4B     		ldr	r3, .L157
 2009 016e DB6A     		ldr	r3, [r3, #44]
 2010 0170 4A4A     		ldr	r2, .L157
 2011 0172 23F02003 		bic	r3, r3, #32
 2012 0176 D362     		str	r3, [r2, #44]
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 2013              		.loc 1 760 7
 2014 0178 484B     		ldr	r3, .L157
 2015 017a 9B6A     		ldr	r3, [r3, #40]
ARM GAS  /tmp/cceiCkfa.s 			page 49


 2016 017c 474A     		ldr	r2, .L157
 2017 017e 23F02003 		bic	r3, r3, #32
 2018 0182 9362     		str	r3, [r2, #40]
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2019              		.loc 1 763 21
 2020 0184 7B68     		ldr	r3, [r7, #4]
 2021 0186 5B68     		ldr	r3, [r3, #4]
 2022              		.loc 1 763 28
 2023 0188 03F48033 		and	r3, r3, #65536
 2024              		.loc 1 763 9
 2025 018c 002B     		cmp	r3, #0
 2026 018e 05D0     		beq	.L144
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
 2027              		.loc 1 765 9
 2028 0190 424B     		ldr	r3, .L157
 2029 0192 1B6A     		ldr	r3, [r3, #32]
 2030 0194 414A     		ldr	r2, .L157
 2031 0196 43F02003 		orr	r3, r3, #32
 2032 019a 1362     		str	r3, [r2, #32]
 2033              	.L144:
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2034              		.loc 1 769 21
 2035 019c 7B68     		ldr	r3, [r7, #4]
 2036 019e 5B68     		ldr	r3, [r3, #4]
 2037              		.loc 1 769 28
 2038 01a0 03F40033 		and	r3, r3, #131072
 2039              		.loc 1 769 9
 2040 01a4 002B     		cmp	r3, #0
 2041 01a6 05D0     		beq	.L145
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_EVENT();
 2042              		.loc 1 771 9
 2043 01a8 3C4B     		ldr	r3, .L157
 2044 01aa 5B6A     		ldr	r3, [r3, #36]
 2045 01ac 3B4A     		ldr	r2, .L157
 2046 01ae 43F02003 		orr	r3, r3, #32
 2047 01b2 5362     		str	r3, [r2, #36]
 2048              	.L145:
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2049              		.loc 1 775 21
 2050 01b4 7B68     		ldr	r3, [r7, #4]
 2051 01b6 5B68     		ldr	r3, [r3, #4]
 2052              		.loc 1 775 28
 2053 01b8 03F00103 		and	r3, r3, #1
 2054              		.loc 1 775 9
 2055 01bc 002B     		cmp	r3, #0
 2056 01be 05D0     		beq	.L146
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
ARM GAS  /tmp/cceiCkfa.s 			page 50


 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
 2057              		.loc 1 777 9
 2058 01c0 364B     		ldr	r3, .L157
 2059 01c2 9B6A     		ldr	r3, [r3, #40]
 2060 01c4 354A     		ldr	r2, .L157
 2061 01c6 43F02003 		orr	r3, r3, #32
 2062 01ca 9362     		str	r3, [r2, #40]
 2063              	.L146:
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2064              		.loc 1 780 21
 2065 01cc 7B68     		ldr	r3, [r7, #4]
 2066 01ce 5B68     		ldr	r3, [r3, #4]
 2067              		.loc 1 780 28
 2068 01d0 03F00203 		and	r3, r3, #2
 2069              		.loc 1 780 9
 2070 01d4 002B     		cmp	r3, #0
 2071 01d6 56D0     		beq	.L155
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
 2072              		.loc 1 782 9
 2073 01d8 304B     		ldr	r3, .L157
 2074 01da DB6A     		ldr	r3, [r3, #44]
 2075 01dc 2F4A     		ldr	r2, .L157
 2076 01de 43F02003 		orr	r3, r3, #32
 2077 01e2 D362     		str	r3, [r2, #44]
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 2078              		.loc 1 784 7
 2079 01e4 4FE0     		b	.L155
 2080              	.L134:
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     case PWR_PVM_4:
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_EVENT();
 2081              		.loc 1 788 7
 2082 01e6 2D4B     		ldr	r3, .L157
 2083 01e8 5B6A     		ldr	r3, [r3, #36]
 2084 01ea 2C4A     		ldr	r2, .L157
 2085 01ec 23F04003 		bic	r3, r3, #64
 2086 01f0 5362     		str	r3, [r2, #36]
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
 2087              		.loc 1 789 7
 2088 01f2 2A4B     		ldr	r3, .L157
 2089 01f4 1B6A     		ldr	r3, [r3, #32]
 2090 01f6 294A     		ldr	r2, .L157
 2091 01f8 23F04003 		bic	r3, r3, #64
 2092 01fc 1362     		str	r3, [r2, #32]
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE();
 2093              		.loc 1 790 7
 2094 01fe 274B     		ldr	r3, .L157
 2095 0200 DB6A     		ldr	r3, [r3, #44]
 2096 0202 264A     		ldr	r2, .L157
 2097 0204 23F04003 		bic	r3, r3, #64
 2098 0208 D362     		str	r3, [r2, #44]
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
ARM GAS  /tmp/cceiCkfa.s 			page 51


 2099              		.loc 1 791 7
 2100 020a 244B     		ldr	r3, .L157
 2101 020c 9B6A     		ldr	r3, [r3, #40]
 2102 020e 234A     		ldr	r2, .L157
 2103 0210 23F04003 		bic	r3, r3, #64
 2104 0214 9362     		str	r3, [r2, #40]
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2105              		.loc 1 794 21
 2106 0216 7B68     		ldr	r3, [r7, #4]
 2107 0218 5B68     		ldr	r3, [r3, #4]
 2108              		.loc 1 794 28
 2109 021a 03F48033 		and	r3, r3, #65536
 2110              		.loc 1 794 9
 2111 021e 002B     		cmp	r3, #0
 2112 0220 05D0     		beq	.L148
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_IT();
 2113              		.loc 1 796 9
 2114 0222 1E4B     		ldr	r3, .L157
 2115 0224 1B6A     		ldr	r3, [r3, #32]
 2116 0226 1D4A     		ldr	r2, .L157
 2117 0228 43F04003 		orr	r3, r3, #64
 2118 022c 1362     		str	r3, [r2, #32]
 2119              	.L148:
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure event mode */
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2120              		.loc 1 800 21
 2121 022e 7B68     		ldr	r3, [r7, #4]
 2122 0230 5B68     		ldr	r3, [r3, #4]
 2123              		.loc 1 800 28
 2124 0232 03F40033 		and	r3, r3, #131072
 2125              		.loc 1 800 9
 2126 0236 002B     		cmp	r3, #0
 2127 0238 05D0     		beq	.L149
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_EVENT();
 2128              		.loc 1 802 9
 2129 023a 184B     		ldr	r3, .L157
 2130 023c 5B6A     		ldr	r3, [r3, #36]
 2131 023e 174A     		ldr	r2, .L157
 2132 0240 43F04003 		orr	r3, r3, #64
 2133 0244 5362     		str	r3, [r2, #36]
 2134              	.L149:
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       /* Configure the edge */
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2135              		.loc 1 806 21
 2136 0246 7B68     		ldr	r3, [r7, #4]
 2137 0248 5B68     		ldr	r3, [r3, #4]
 2138              		.loc 1 806 28
 2139 024a 03F00103 		and	r3, r3, #1
 2140              		.loc 1 806 9
ARM GAS  /tmp/cceiCkfa.s 			page 52


 2141 024e 002B     		cmp	r3, #0
 2142 0250 05D0     		beq	.L150
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();
 2143              		.loc 1 808 9
 2144 0252 124B     		ldr	r3, .L157
 2145 0254 9B6A     		ldr	r3, [r3, #40]
 2146 0256 114A     		ldr	r2, .L157
 2147 0258 43F04003 		orr	r3, r3, #64
 2148 025c 9362     		str	r3, [r2, #40]
 2149              	.L150:
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2150              		.loc 1 811 21
 2151 025e 7B68     		ldr	r3, [r7, #4]
 2152 0260 5B68     		ldr	r3, [r3, #4]
 2153              		.loc 1 811 28
 2154 0262 03F00203 		and	r3, r3, #2
 2155              		.loc 1 811 9
 2156 0266 002B     		cmp	r3, #0
 2157 0268 0FD0     		beq	.L156
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       {
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();
 2158              		.loc 1 813 9
 2159 026a 0C4B     		ldr	r3, .L157
 2160 026c DB6A     		ldr	r3, [r3, #44]
 2161 026e 0B4A     		ldr	r2, .L157
 2162 0270 43F04003 		orr	r3, r3, #64
 2163 0274 D362     		str	r3, [r2, #44]
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       }
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 2164              		.loc 1 815 7
 2165 0276 08E0     		b	.L156
 2166              	.L132:
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     default:
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 2167              		.loc 1 818 14
 2168 0278 0123     		movs	r3, #1
 2169 027a FB73     		strb	r3, [r7, #15]
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       break;
 2170              		.loc 1 819 7
 2171 027c 06E0     		b	.L139
 2172              	.L153:
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 2173              		.loc 1 719 7
 2174 027e 00BF     		nop
 2175 0280 04E0     		b	.L139
 2176              	.L154:
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 2177              		.loc 1 752 7
 2178 0282 00BF     		nop
 2179 0284 02E0     		b	.L139
 2180              	.L155:
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2181              		.loc 1 784 7
ARM GAS  /tmp/cceiCkfa.s 			page 53


 2182 0286 00BF     		nop
 2183 0288 00E0     		b	.L139
 2184              	.L156:
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 2185              		.loc 1 815 7
 2186 028a 00BF     		nop
 2187              	.L139:
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return status;
 2188              		.loc 1 822 10
 2189 028c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2190              		.loc 1 823 1
 2191 028e 1846     		mov	r0, r3
 2192 0290 1437     		adds	r7, r7, #20
 2193              	.LCFI103:
 2194              		.cfi_def_cfa_offset 4
 2195 0292 BD46     		mov	sp, r7
 2196              	.LCFI104:
 2197              		.cfi_def_cfa_register 13
 2198              		@ sp needed
 2199 0294 5DF8047B 		ldr	r7, [sp], #4
 2200              	.LCFI105:
 2201              		.cfi_restore 7
 2202              		.cfi_def_cfa_offset 0
 2203 0298 7047     		bx	lr
 2204              	.L158:
 2205 029a 00BF     		.align	2
 2206              	.L157:
 2207 029c 00040140 		.word	1073808384
 2208              		.cfi_endproc
 2209              	.LFE347:
 2211              		.section	.text.HAL_PWREx_EnableUSBDeadBatteryPD,"ax",%progbits
 2212              		.align	1
 2213              		.global	HAL_PWREx_EnableUSBDeadBatteryPD
 2214              		.syntax unified
 2215              		.thumb
 2216              		.thumb_func
 2217              		.fpu fpv4-sp-d16
 2219              	HAL_PWREx_EnableUSBDeadBatteryPD:
 2220              	.LFB348:
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_UCPD_DBDIS)
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the USB Type-C dead battery pull-down behavior
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        on UCPDx_CC1 and UCPDx_CC2 pins
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note After exiting reset, the USB Type-C dead battery behavior will be enabled,
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       which may have a pull-down effect on CC1 and CC2 pins.
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       It is recommended to disable it in all cases, either to stop this pull-down
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       or to hand over control to the UCPD (which should therefore be
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       initialized before doing the disable).
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUSBDeadBatteryPD(void)
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2221              		.loc 1 837 1
ARM GAS  /tmp/cceiCkfa.s 			page 54


 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 0
 2224              		@ frame_needed = 1, uses_anonymous_args = 0
 2225              		@ link register save eliminated.
 2226 0000 80B4     		push	{r7}
 2227              	.LCFI106:
 2228              		.cfi_def_cfa_offset 4
 2229              		.cfi_offset 7, -4
 2230 0002 00AF     		add	r7, sp, #0
 2231              	.LCFI107:
 2232              		.cfi_def_cfa_register 7
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    /* writing 0 to enable the USB Type-C dead battery pull-down behavior */
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 2233              		.loc 1 839 4
 2234 0004 054B     		ldr	r3, .L160
 2235 0006 9B68     		ldr	r3, [r3, #8]
 2236 0008 044A     		ldr	r2, .L160
 2237 000a 23F48043 		bic	r3, r3, #16384
 2238 000e 9360     		str	r3, [r2, #8]
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2239              		.loc 1 840 1
 2240 0010 00BF     		nop
 2241 0012 BD46     		mov	sp, r7
 2242              	.LCFI108:
 2243              		.cfi_def_cfa_register 13
 2244              		@ sp needed
 2245 0014 5DF8047B 		ldr	r7, [sp], #4
 2246              	.LCFI109:
 2247              		.cfi_restore 7
 2248              		.cfi_def_cfa_offset 0
 2249 0018 7047     		bx	lr
 2250              	.L161:
 2251 001a 00BF     		.align	2
 2252              	.L160:
 2253 001c 00700040 		.word	1073770496
 2254              		.cfi_endproc
 2255              	.LFE348:
 2257              		.section	.text.HAL_PWREx_DisableUSBDeadBatteryPD,"ax",%progbits
 2258              		.align	1
 2259              		.global	HAL_PWREx_DisableUSBDeadBatteryPD
 2260              		.syntax unified
 2261              		.thumb
 2262              		.thumb_func
 2263              		.fpu fpv4-sp-d16
 2265              	HAL_PWREx_DisableUSBDeadBatteryPD:
 2266              	.LFB349:
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the USB Type-C dead battery pull-down behavior
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        on UCPDx_CC1 and UCPDx_CC2 pins
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note After exiting reset, the USB Type-C dead battery behavior will be enabled,
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       which may have a pull-down effect on CC1 and CC2 pins.
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       It is recommended to disable it in all cases, either to stop this pull-down
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       or to hand over control to the UCPD (which should therefore be
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *       initialized before doing the disable).
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
ARM GAS  /tmp/cceiCkfa.s 			page 55


 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUSBDeadBatteryPD(void)
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2267              		.loc 1 853 1
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 1, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
 2272 0000 80B4     		push	{r7}
 2273              	.LCFI110:
 2274              		.cfi_def_cfa_offset 4
 2275              		.cfi_offset 7, -4
 2276 0002 00AF     		add	r7, sp, #0
 2277              	.LCFI111:
 2278              		.cfi_def_cfa_register 7
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    /* writing 1 to disable the USB Type-C dead battery pull-down behavior */
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    SET_BIT(PWR->CR3, PWR_CR3_UCPD_DBDIS);
 2279              		.loc 1 855 4
 2280 0004 054B     		ldr	r3, .L163
 2281 0006 9B68     		ldr	r3, [r3, #8]
 2282 0008 044A     		ldr	r2, .L163
 2283 000a 43F48043 		orr	r3, r3, #16384
 2284 000e 9360     		str	r3, [r2, #8]
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2285              		.loc 1 856 1
 2286 0010 00BF     		nop
 2287 0012 BD46     		mov	sp, r7
 2288              	.LCFI112:
 2289              		.cfi_def_cfa_register 13
 2290              		@ sp needed
 2291 0014 5DF8047B 		ldr	r7, [sp], #4
 2292              	.LCFI113:
 2293              		.cfi_restore 7
 2294              		.cfi_def_cfa_offset 0
 2295 0018 7047     		bx	lr
 2296              	.L164:
 2297 001a 00BF     		.align	2
 2298              	.L163:
 2299 001c 00700040 		.word	1073770496
 2300              		.cfi_endproc
 2301              	.LFE349:
 2303              		.section	.text.HAL_PWREx_EnableUSBStandByModePD,"ax",%progbits
 2304              		.align	1
 2305              		.global	HAL_PWREx_EnableUSBStandByModePD
 2306              		.syntax unified
 2307              		.thumb
 2308              		.thumb_func
 2309              		.fpu fpv4-sp-d16
 2311              	HAL_PWREx_EnableUSBStandByModePD:
 2312              	.LFB350:
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_UCPD_DBDIS */
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_UCPD_STDBY)
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enable the USB Type-C and Power Delivery standby mode
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableUSBStandByModePD(void)
ARM GAS  /tmp/cceiCkfa.s 			page 56


 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2313              		.loc 1 865 1
 2314              		.cfi_startproc
 2315              		@ args = 0, pretend = 0, frame = 0
 2316              		@ frame_needed = 1, uses_anonymous_args = 0
 2317              		@ link register save eliminated.
 2318 0000 80B4     		push	{r7}
 2319              	.LCFI114:
 2320              		.cfi_def_cfa_offset 4
 2321              		.cfi_offset 7, -4
 2322 0002 00AF     		add	r7, sp, #0
 2323              	.LCFI115:
 2324              		.cfi_def_cfa_register 7
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    /* Write 1 just before entering Standby when using UCPD */
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    SET_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY);
 2325              		.loc 1 867 4
 2326 0004 054B     		ldr	r3, .L166
 2327 0006 9B68     		ldr	r3, [r3, #8]
 2328 0008 044A     		ldr	r2, .L166
 2329 000a 43F40053 		orr	r3, r3, #8192
 2330 000e 9360     		str	r3, [r2, #8]
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2331              		.loc 1 868 1
 2332 0010 00BF     		nop
 2333 0012 BD46     		mov	sp, r7
 2334              	.LCFI116:
 2335              		.cfi_def_cfa_register 13
 2336              		@ sp needed
 2337 0014 5DF8047B 		ldr	r7, [sp], #4
 2338              	.LCFI117:
 2339              		.cfi_restore 7
 2340              		.cfi_def_cfa_offset 0
 2341 0018 7047     		bx	lr
 2342              	.L167:
 2343 001a 00BF     		.align	2
 2344              	.L166:
 2345 001c 00700040 		.word	1073770496
 2346              		.cfi_endproc
 2347              	.LFE350:
 2349              		.section	.text.HAL_PWREx_DisableUSBStandByModePD,"ax",%progbits
 2350              		.align	1
 2351              		.global	HAL_PWREx_DisableUSBStandByModePD
 2352              		.syntax unified
 2353              		.thumb
 2354              		.thumb_func
 2355              		.fpu fpv4-sp-d16
 2357              	HAL_PWREx_DisableUSBStandByModePD:
 2358              	.LFB351:
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Disable the USB Type-C and Power Delivery standby mode
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableUSBStandByModePD (void)
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2359              		.loc 1 875 1
 2360              		.cfi_startproc
ARM GAS  /tmp/cceiCkfa.s 			page 57


 2361              		@ args = 0, pretend = 0, frame = 0
 2362              		@ frame_needed = 1, uses_anonymous_args = 0
 2363              		@ link register save eliminated.
 2364 0000 80B4     		push	{r7}
 2365              	.LCFI118:
 2366              		.cfi_def_cfa_offset 4
 2367              		.cfi_offset 7, -4
 2368 0002 00AF     		add	r7, sp, #0
 2369              	.LCFI119:
 2370              		.cfi_def_cfa_register 7
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    /* Write 0 immediately after Standby exit when using UCPD,
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****       and before writing any UCPD registers */
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    CLEAR_BIT(PWR->CR3, PWR_CR3_UCPD_STDBY);
 2371              		.loc 1 878 4
 2372 0004 054B     		ldr	r3, .L169
 2373 0006 9B68     		ldr	r3, [r3, #8]
 2374 0008 044A     		ldr	r2, .L169
 2375 000a 23F40053 		bic	r3, r3, #8192
 2376 000e 9360     		str	r3, [r2, #8]
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2377              		.loc 1 879 1
 2378 0010 00BF     		nop
 2379 0012 BD46     		mov	sp, r7
 2380              	.LCFI120:
 2381              		.cfi_def_cfa_register 13
 2382              		@ sp needed
 2383 0014 5DF8047B 		ldr	r7, [sp], #4
 2384              	.LCFI121:
 2385              		.cfi_restore 7
 2386              		.cfi_def_cfa_offset 0
 2387 0018 7047     		bx	lr
 2388              	.L170:
 2389 001a 00BF     		.align	2
 2390              	.L169:
 2391 001c 00700040 		.word	1073770496
 2392              		.cfi_endproc
 2393              	.LFE351:
 2395              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 2396              		.align	1
 2397              		.global	HAL_PWREx_EnableLowPowerRunMode
 2398              		.syntax unified
 2399              		.thumb
 2400              		.thumb_func
 2401              		.fpu fpv4-sp-d16
 2403              	HAL_PWREx_EnableLowPowerRunMode:
 2404              	.LFB352:
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_UCPD_STDBY */
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When Regulator is set to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Flash in power-down monde in setting the RUN_PD bit in FLASH_ACR register.
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        Setting RUN_PD in FLASH_ACR then appropriately reducing the clock frequency must
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        be done before calling HAL_PWREx_EnableLowPowerRunMode() API.
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
ARM GAS  /tmp/cceiCkfa.s 			page 58


 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2405              		.loc 1 893 1
 2406              		.cfi_startproc
 2407              		@ args = 0, pretend = 0, frame = 0
 2408              		@ frame_needed = 1, uses_anonymous_args = 0
 2409              		@ link register save eliminated.
 2410 0000 80B4     		push	{r7}
 2411              	.LCFI122:
 2412              		.cfi_def_cfa_offset 4
 2413              		.cfi_offset 7, -4
 2414 0002 00AF     		add	r7, sp, #0
 2415              	.LCFI123:
 2416              		.cfi_def_cfa_register 7
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set Regulator parameter */
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 2417              		.loc 1 895 3
 2418 0004 054B     		ldr	r3, .L172
 2419 0006 1B68     		ldr	r3, [r3]
 2420 0008 044A     		ldr	r2, .L172
 2421 000a 43F48043 		orr	r3, r3, #16384
 2422 000e 1360     		str	r3, [r2]
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2423              		.loc 1 896 1
 2424 0010 00BF     		nop
 2425 0012 BD46     		mov	sp, r7
 2426              	.LCFI124:
 2427              		.cfi_def_cfa_register 13
 2428              		@ sp needed
 2429 0014 5DF8047B 		ldr	r7, [sp], #4
 2430              	.LCFI125:
 2431              		.cfi_restore 7
 2432              		.cfi_def_cfa_offset 0
 2433 0018 7047     		bx	lr
 2434              	.L173:
 2435 001a 00BF     		.align	2
 2436              	.L172:
 2437 001c 00700040 		.word	1073770496
 2438              		.cfi_endproc
 2439              	.LFE352:
 2441              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 2442              		.align	1
 2443              		.global	HAL_PWREx_DisableLowPowerRunMode
 2444              		.syntax unified
 2445              		.thumb
 2446              		.thumb_func
 2447              		.fpu fpv4-sp-d16
 2449              	HAL_PWREx_DisableLowPowerRunMode:
 2450              	.LFB353:
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
ARM GAS  /tmp/cceiCkfa.s 			page 59


 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        increased above 2 MHz.
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval HAL Status
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2451              		.loc 1 908 1
 2452              		.cfi_startproc
 2453              		@ args = 0, pretend = 0, frame = 8
 2454              		@ frame_needed = 1, uses_anonymous_args = 0
 2455              		@ link register save eliminated.
 2456 0000 80B4     		push	{r7}
 2457              	.LCFI126:
 2458              		.cfi_def_cfa_offset 4
 2459              		.cfi_offset 7, -4
 2460 0002 83B0     		sub	sp, sp, #12
 2461              	.LCFI127:
 2462              		.cfi_def_cfa_offset 16
 2463 0004 00AF     		add	r7, sp, #0
 2464              	.LCFI128:
 2465              		.cfi_def_cfa_register 7
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Clear LPR bit */
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
 2466              		.loc 1 912 3
 2467 0006 174B     		ldr	r3, .L180
 2468 0008 1B68     		ldr	r3, [r3]
 2469 000a 164A     		ldr	r2, .L180
 2470 000c 23F48043 		bic	r3, r3, #16384
 2471 0010 1360     		str	r3, [r2]
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000U));
 2472              		.loc 1 915 67
 2473 0012 154B     		ldr	r3, .L180+4
 2474 0014 1B68     		ldr	r3, [r3]
 2475 0016 154A     		ldr	r2, .L180+8
 2476 0018 A2FB0323 		umull	r2, r3, r2, r3
 2477 001c 9B0C     		lsrs	r3, r3, #18
 2478              		.loc 1 915 19
 2479 001e 3222     		movs	r2, #50
 2480 0020 02FB03F3 		mul	r3, r2, r3
 2481 0024 7B60     		str	r3, [r7, #4]
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 2482              		.loc 1 916 9
 2483 0026 02E0     		b	.L175
 2484              	.L177:
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     wait_loop_index--;
 2485              		.loc 1 918 20
 2486 0028 7B68     		ldr	r3, [r7, #4]
 2487 002a 013B     		subs	r3, r3, #1
 2488 002c 7B60     		str	r3, [r7, #4]
 2489              	.L175:
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 2490              		.loc 1 916 11
 2491 002e 0D4B     		ldr	r3, .L180
ARM GAS  /tmp/cceiCkfa.s 			page 60


 2492 0030 5B69     		ldr	r3, [r3, #20]
 2493 0032 03F40073 		and	r3, r3, #512
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 2494              		.loc 1 916 9
 2495 0036 B3F5007F 		cmp	r3, #512
 2496 003a 02D1     		bne	.L176
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 2497              		.loc 1 916 53 discriminator 1
 2498 003c 7B68     		ldr	r3, [r7, #4]
 2499 003e 002B     		cmp	r3, #0
 2500 0040 F2D1     		bne	.L177
 2501              	.L176:
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 2502              		.loc 1 920 7
 2503 0042 084B     		ldr	r3, .L180
 2504 0044 5B69     		ldr	r3, [r3, #20]
 2505 0046 03F40073 		and	r3, r3, #512
 2506              		.loc 1 920 6
 2507 004a B3F5007F 		cmp	r3, #512
 2508 004e 01D1     		bne	.L178
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
 2509              		.loc 1 922 12
 2510 0050 0323     		movs	r3, #3
 2511 0052 00E0     		b	.L179
 2512              	.L178:
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   return HAL_OK;
 2513              		.loc 1 925 10
 2514 0054 0023     		movs	r3, #0
 2515              	.L179:
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2516              		.loc 1 926 1
 2517 0056 1846     		mov	r0, r3
 2518 0058 0C37     		adds	r7, r7, #12
 2519              	.LCFI129:
 2520              		.cfi_def_cfa_offset 4
 2521 005a BD46     		mov	sp, r7
 2522              	.LCFI130:
 2523              		.cfi_def_cfa_register 13
 2524              		@ sp needed
 2525 005c 5DF8047B 		ldr	r7, [sp], #4
 2526              	.LCFI131:
 2527              		.cfi_restore 7
 2528              		.cfi_def_cfa_offset 0
 2529 0060 7047     		bx	lr
 2530              	.L181:
 2531 0062 00BF     		.align	2
 2532              	.L180:
 2533 0064 00700040 		.word	1073770496
 2534 0068 00000000 		.word	SystemCoreClock
 2535 006c 83DE1B43 		.word	1125899907
 2536              		.cfi_endproc
 2537              	.LFE353:
 2539              		.section	.text.HAL_PWREx_EnterSTOP0Mode,"ax",%progbits
ARM GAS  /tmp/cceiCkfa.s 			page 61


 2540              		.align	1
 2541              		.global	HAL_PWREx_EnterSTOP0Mode
 2542              		.syntax unified
 2543              		.thumb
 2544              		.thumb_func
 2545              		.fpu fpv4-sp-d16
 2547              	HAL_PWREx_EnterSTOP0Mode:
 2548              	.LFB354:
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Stop 0 mode.
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, main and low voltage regulators are ON.
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, all I/O pins keep the same state as in Run mode.
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the HSI
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and the HSE oscillators are disabled. Some peripherals with the wakeup capability
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is available.
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 0 mode by issuing an interrupt or a wakeup event,
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is set; the HSI oscillator is selected if STOPWUCK is cleared.
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  By keeping the internal regulator ON during Stop 0 mode, the consumption
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP0Mode(uint8_t STOPEntry)
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2549              		.loc 1 952 1
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 8
 2552              		@ frame_needed = 1, uses_anonymous_args = 0
 2553              		@ link register save eliminated.
 2554 0000 80B4     		push	{r7}
 2555              	.LCFI132:
 2556              		.cfi_def_cfa_offset 4
 2557              		.cfi_offset 7, -4
 2558 0002 83B0     		sub	sp, sp, #12
 2559              	.LCFI133:
 2560              		.cfi_def_cfa_offset 16
 2561 0004 00AF     		add	r7, sp, #0
 2562              	.LCFI134:
 2563              		.cfi_def_cfa_register 7
 2564 0006 0346     		mov	r3, r0
 2565 0008 FB71     		strb	r3, [r7, #7]
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP0);
 2566              		.loc 1 957 3
ARM GAS  /tmp/cceiCkfa.s 			page 62


 2567 000a 104B     		ldr	r3, .L185
 2568 000c 1B68     		ldr	r3, [r3]
 2569 000e 0F4A     		ldr	r2, .L185
 2570 0010 23F00703 		bic	r3, r3, #7
 2571 0014 1360     		str	r3, [r2]
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2572              		.loc 1 960 3
 2573 0016 0E4B     		ldr	r3, .L185+4
 2574 0018 1B69     		ldr	r3, [r3, #16]
 2575 001a 0D4A     		ldr	r2, .L185+4
 2576 001c 43F00403 		orr	r3, r3, #4
 2577 0020 1361     		str	r3, [r2, #16]
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2578              		.loc 1 963 5
 2579 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2580 0024 012B     		cmp	r3, #1
 2581 0026 01D1     		bne	.L183
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFI();
 2582              		.loc 1 966 5
 2583              		.syntax unified
 2584              	@ 966 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2585 0028 30BF     		wfi
 2586              	@ 0 "" 2
 2587              		.thumb
 2588              		.syntax unified
 2589 002a 02E0     		b	.L184
 2590              	.L183:
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __SEV();
 2591              		.loc 1 971 5
 2592              		.syntax unified
 2593              	@ 971 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2594 002c 40BF     		sev
 2595              	@ 0 "" 2
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 2596              		.loc 1 972 5
 2597              	@ 972 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2598 002e 20BF     		wfe
 2599              	@ 0 "" 2
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 2600              		.loc 1 973 5
 2601              	@ 973 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2602 0030 20BF     		wfe
 2603              	@ 0 "" 2
 2604              		.thumb
 2605              		.syntax unified
 2606              	.L184:
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
ARM GAS  /tmp/cceiCkfa.s 			page 63


 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2607              		.loc 1 977 3
 2608 0032 074B     		ldr	r3, .L185+4
 2609 0034 1B69     		ldr	r3, [r3, #16]
 2610 0036 064A     		ldr	r2, .L185+4
 2611 0038 23F00403 		bic	r3, r3, #4
 2612 003c 1361     		str	r3, [r2, #16]
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2613              		.loc 1 978 1
 2614 003e 00BF     		nop
 2615 0040 0C37     		adds	r7, r7, #12
 2616              	.LCFI135:
 2617              		.cfi_def_cfa_offset 4
 2618 0042 BD46     		mov	sp, r7
 2619              	.LCFI136:
 2620              		.cfi_def_cfa_register 13
 2621              		@ sp needed
 2622 0044 5DF8047B 		ldr	r7, [sp], #4
 2623              	.LCFI137:
 2624              		.cfi_restore 7
 2625              		.cfi_def_cfa_offset 0
 2626 0048 7047     		bx	lr
 2627              	.L186:
 2628 004a 00BF     		.align	2
 2629              	.L185:
 2630 004c 00700040 		.word	1073770496
 2631 0050 00ED00E0 		.word	-536810240
 2632              		.cfi_endproc
 2633              	.LFE354:
 2635              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 2636              		.align	1
 2637              		.global	HAL_PWREx_EnterSTOP1Mode
 2638              		.syntax unified
 2639              		.thumb
 2640              		.thumb_func
 2641              		.fpu fpv4-sp-d16
 2643              	HAL_PWREx_EnterSTOP1Mode:
 2644              	.LFB355:
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, only low power voltage regulator is ON.
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the HSI
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        and the HSE oscillators are disabled. Some peripherals with the wakeup capability
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is available.
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *         is set.
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 
ARM GAS  /tmp/cceiCkfa.s 			page 64


 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint8_t STOPEntry)
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2645              		.loc 1 1003 1
 2646              		.cfi_startproc
 2647              		@ args = 0, pretend = 0, frame = 8
 2648              		@ frame_needed = 1, uses_anonymous_args = 0
 2649              		@ link register save eliminated.
 2650 0000 80B4     		push	{r7}
 2651              	.LCFI138:
 2652              		.cfi_def_cfa_offset 4
 2653              		.cfi_offset 7, -4
 2654 0002 83B0     		sub	sp, sp, #12
 2655              	.LCFI139:
 2656              		.cfi_def_cfa_offset 16
 2657 0004 00AF     		add	r7, sp, #0
 2658              	.LCFI140:
 2659              		.cfi_def_cfa_register 7
 2660 0006 0346     		mov	r3, r0
 2661 0008 FB71     		strb	r3, [r7, #7]
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check the parameters */
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1);
 2662              		.loc 1 1008 3
 2663 000a 114B     		ldr	r3, .L190
 2664 000c 1B68     		ldr	r3, [r3]
 2665 000e 23F00703 		bic	r3, r3, #7
 2666 0012 0F4A     		ldr	r2, .L190
 2667 0014 43F00103 		orr	r3, r3, #1
 2668 0018 1360     		str	r3, [r2]
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2669              		.loc 1 1011 3
 2670 001a 0E4B     		ldr	r3, .L190+4
 2671 001c 1B69     		ldr	r3, [r3, #16]
 2672 001e 0D4A     		ldr	r2, .L190+4
 2673 0020 43F00403 		orr	r3, r3, #4
 2674 0024 1361     		str	r3, [r2, #16]
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2675              		.loc 1 1014 5
 2676 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2677 0028 012B     		cmp	r3, #1
 2678 002a 01D1     		bne	.L188
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFI();
 2679              		.loc 1 1017 5
ARM GAS  /tmp/cceiCkfa.s 			page 65


 2680              		.syntax unified
 2681              	@ 1017 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2682 002c 30BF     		wfi
 2683              	@ 0 "" 2
 2684              		.thumb
 2685              		.syntax unified
 2686 002e 02E0     		b	.L189
 2687              	.L188:
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   else
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __SEV();
 2688              		.loc 1 1022 5
 2689              		.syntax unified
 2690              	@ 1022 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2691 0030 40BF     		sev
 2692              	@ 0 "" 2
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 2693              		.loc 1 1023 5
 2694              	@ 1023 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2695 0032 20BF     		wfe
 2696              	@ 0 "" 2
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __WFE();
 2697              		.loc 1 1024 5
 2698              	@ 1024 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2699 0034 20BF     		wfe
 2700              	@ 0 "" 2
 2701              		.thumb
 2702              		.syntax unified
 2703              	.L189:
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2704              		.loc 1 1028 3
 2705 0036 074B     		ldr	r3, .L190+4
 2706 0038 1B69     		ldr	r3, [r3, #16]
 2707 003a 064A     		ldr	r2, .L190+4
 2708 003c 23F00403 		bic	r3, r3, #4
 2709 0040 1361     		str	r3, [r2, #16]
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2710              		.loc 1 1029 1
 2711 0042 00BF     		nop
 2712 0044 0C37     		adds	r7, r7, #12
 2713              	.LCFI141:
 2714              		.cfi_def_cfa_offset 4
 2715 0046 BD46     		mov	sp, r7
 2716              	.LCFI142:
 2717              		.cfi_def_cfa_register 13
 2718              		@ sp needed
 2719 0048 5DF8047B 		ldr	r7, [sp], #4
 2720              	.LCFI143:
 2721              		.cfi_restore 7
 2722              		.cfi_def_cfa_offset 0
 2723 004c 7047     		bx	lr
 2724              	.L191:
ARM GAS  /tmp/cceiCkfa.s 			page 66


 2725 004e 00BF     		.align	2
 2726              	.L190:
 2727 0050 00700040 		.word	1073770496
 2728 0054 00ED00E0 		.word	-536810240
 2729              		.cfi_endproc
 2730              	.LFE355:
 2732              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 2733              		.align	1
 2734              		.global	HAL_PWREx_EnterSHUTDOWNMode
 2735              		.syntax unified
 2736              		.thumb
 2737              		.thumb_func
 2738              		.fpu fpv4-sp-d16
 2740              	HAL_PWREx_EnterSHUTDOWNMode:
 2741              	.LFB356:
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode.
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the LSI and the HSE oscillators are switched
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off.
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   *        The BOR is not available.
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2742              		.loc 1 1044 1
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 0
 2745              		@ frame_needed = 1, uses_anonymous_args = 0
 2746              		@ link register save eliminated.
 2747 0000 80B4     		push	{r7}
 2748              	.LCFI144:
 2749              		.cfi_def_cfa_offset 4
 2750              		.cfi_offset 7, -4
 2751 0002 00AF     		add	r7, sp, #0
 2752              	.LCFI145:
 2753              		.cfi_def_cfa_register 7
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set Shutdown mode */
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_SHUTDOWN);
 2754              		.loc 1 1047 3
 2755 0004 094B     		ldr	r3, .L193
 2756 0006 1B68     		ldr	r3, [r3]
 2757 0008 23F00703 		bic	r3, r3, #7
 2758 000c 074A     		ldr	r2, .L193
 2759 000e 43F00403 		orr	r3, r3, #4
 2760 0012 1360     		str	r3, [r2]
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2761              		.loc 1 1050 3
 2762 0014 064B     		ldr	r3, .L193+4
ARM GAS  /tmp/cceiCkfa.s 			page 67


 2763 0016 1B69     		ldr	r3, [r3, #16]
 2764 0018 054A     		ldr	r2, .L193+4
 2765 001a 43F00403 		orr	r3, r3, #4
 2766 001e 1361     		str	r3, [r2, #16]
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /* This option is used to ensure that store operations are completed */
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   __force_stores();
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   __WFI();
 2767              		.loc 1 1057 3
 2768              		.syntax unified
 2769              	@ 1057 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c" 1
 2770 0020 30BF     		wfi
 2771              	@ 0 "" 2
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2772              		.loc 1 1058 1
 2773              		.thumb
 2774              		.syntax unified
 2775 0022 00BF     		nop
 2776 0024 BD46     		mov	sp, r7
 2777              	.LCFI146:
 2778              		.cfi_def_cfa_register 13
 2779              		@ sp needed
 2780 0026 5DF8047B 		ldr	r7, [sp], #4
 2781              	.LCFI147:
 2782              		.cfi_restore 7
 2783              		.cfi_def_cfa_offset 0
 2784 002a 7047     		bx	lr
 2785              	.L194:
 2786              		.align	2
 2787              	.L193:
 2788 002c 00700040 		.word	1073770496
 2789 0030 00ED00E0 		.word	-536810240
 2790              		.cfi_endproc
 2791              	.LFE356:
 2793              		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 2794              		.align	1
 2795              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2799              		.fpu fpv4-sp-d16
 2801              	HAL_PWREx_PVD_PVM_IRQHandler:
 2802              	.LFB357:
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/cceiCkfa.s 			page 68


 2803              		.loc 1 1069 1
 2804              		.cfi_startproc
 2805              		@ args = 0, pretend = 0, frame = 0
 2806              		@ frame_needed = 1, uses_anonymous_args = 0
 2807 0000 80B5     		push	{r7, lr}
 2808              	.LCFI148:
 2809              		.cfi_def_cfa_offset 8
 2810              		.cfi_offset 7, -8
 2811              		.cfi_offset 14, -4
 2812 0002 00AF     		add	r7, sp, #0
 2813              	.LCFI149:
 2814              		.cfi_def_cfa_register 7
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != 0U)
 2815              		.loc 1 1071 6
 2816 0004 1C4B     		ldr	r3, .L202
 2817 0006 5B69     		ldr	r3, [r3, #20]
 2818 0008 03F48033 		and	r3, r3, #65536
 2819              		.loc 1 1071 5
 2820 000c 002B     		cmp	r3, #0
 2821 000e 05D0     		beq	.L196
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
 2822              		.loc 1 1074 5
 2823 0010 FFF7FEFF 		bl	HAL_PWR_PVDCallback
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 2824              		.loc 1 1077 5
 2825 0014 184B     		ldr	r3, .L202
 2826 0016 4FF48032 		mov	r2, #65536
 2827 001a 5A61     		str	r2, [r3, #20]
 2828              	.L196:
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* Next, successively check PVMx exti flags */
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM1_EXTI_GET_FLAG() != 0U)
 2829              		.loc 1 1081 6
 2830 001c 164B     		ldr	r3, .L202
 2831 001e 5B6B     		ldr	r3, [r3, #52]
 2832 0020 03F00803 		and	r3, r3, #8
 2833              		.loc 1 1081 5
 2834 0024 002B     		cmp	r3, #0
 2835 0026 04D0     		beq	.L197
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM1 interrupt user callback */
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM1Callback();
 2836              		.loc 1 1084 5
 2837 0028 FFF7FEFF 		bl	HAL_PWREx_PVM1Callback
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM1 exti pending bit */
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM1_EXTI_CLEAR_FLAG();
 2838              		.loc 1 1087 5
 2839 002c 124B     		ldr	r3, .L202
 2840 002e 0822     		movs	r2, #8
 2841 0030 5A63     		str	r2, [r3, #52]
ARM GAS  /tmp/cceiCkfa.s 			page 69


 2842              	.L197:
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM2_EXTI_GET_FLAG() != 0U)
 2843              		.loc 1 1091 6
 2844 0032 114B     		ldr	r3, .L202
 2845 0034 5B6B     		ldr	r3, [r3, #52]
 2846 0036 03F01003 		and	r3, r3, #16
 2847              		.loc 1 1091 5
 2848 003a 002B     		cmp	r3, #0
 2849 003c 04D0     		beq	.L198
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM2 interrupt user callback */
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM2Callback();
 2850              		.loc 1 1094 5
 2851 003e FFF7FEFF 		bl	HAL_PWREx_PVM2Callback
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM2 exti pending bit */
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM2_EXTI_CLEAR_FLAG();
 2852              		.loc 1 1097 5
 2853 0042 0D4B     		ldr	r3, .L202
 2854 0044 1022     		movs	r2, #16
 2855 0046 5A63     		str	r2, [r3, #52]
 2856              	.L198:
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM3_EXTI_GET_FLAG() != 0U)
 2857              		.loc 1 1100 6
 2858 0048 0B4B     		ldr	r3, .L202
 2859 004a 5B6B     		ldr	r3, [r3, #52]
 2860 004c 03F02003 		and	r3, r3, #32
 2861              		.loc 1 1100 5
 2862 0050 002B     		cmp	r3, #0
 2863 0052 04D0     		beq	.L199
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
 2864              		.loc 1 1103 5
 2865 0054 FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
 2866              		.loc 1 1106 5
 2867 0058 074B     		ldr	r3, .L202
 2868 005a 2022     		movs	r2, #32
 2869 005c 5A63     		str	r2, [r3, #52]
 2870              	.L199:
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM4_EXTI_GET_FLAG() != 0U)
 2871              		.loc 1 1108 6
 2872 005e 064B     		ldr	r3, .L202
 2873 0060 5B6B     		ldr	r3, [r3, #52]
 2874 0062 03F04003 		and	r3, r3, #64
 2875              		.loc 1 1108 5
 2876 0066 002B     		cmp	r3, #0
 2877 0068 04D0     		beq	.L201
ARM GAS  /tmp/cceiCkfa.s 			page 70


1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   {
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* PWR PVM4 interrupt user callback */
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM4Callback();
 2878              		.loc 1 1111 5
 2879 006a FFF7FEFF 		bl	HAL_PWREx_PVM4Callback
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     /* Clear PVM4 exti pending bit */
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM4_EXTI_CLEAR_FLAG();
 2880              		.loc 1 1114 5
 2881 006e 024B     		ldr	r3, .L202
 2882 0070 4022     		movs	r2, #64
 2883 0072 5A63     		str	r2, [r3, #52]
 2884              	.L201:
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   }
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2885              		.loc 1 1116 1
 2886 0074 00BF     		nop
 2887 0076 80BD     		pop	{r7, pc}
 2888              	.L203:
 2889              		.align	2
 2890              	.L202:
 2891 0078 00040140 		.word	1073808384
 2892              		.cfi_endproc
 2893              	.LFE357:
 2895              		.section	.text.HAL_PWREx_PVM1Callback,"ax",%progbits
 2896              		.align	1
 2897              		.weak	HAL_PWREx_PVM1Callback
 2898              		.syntax unified
 2899              		.thumb
 2900              		.thumb_func
 2901              		.fpu fpv4-sp-d16
 2903              	HAL_PWREx_PVM1Callback:
 2904              	.LFB358:
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM1 interrupt callback
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM1Callback(void)
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2905              		.loc 1 1125 1
 2906              		.cfi_startproc
 2907              		@ args = 0, pretend = 0, frame = 0
 2908              		@ frame_needed = 1, uses_anonymous_args = 0
 2909              		@ link register save eliminated.
 2910 0000 80B4     		push	{r7}
 2911              	.LCFI150:
 2912              		.cfi_def_cfa_offset 4
 2913              		.cfi_offset 7, -4
 2914 0002 00AF     		add	r7, sp, #0
 2915              	.LCFI151:
 2916              		.cfi_def_cfa_register 7
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM1Callback() API can be implemented in the user file
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
ARM GAS  /tmp/cceiCkfa.s 			page 71


1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2917              		.loc 1 1129 1
 2918 0004 00BF     		nop
 2919 0006 BD46     		mov	sp, r7
 2920              	.LCFI152:
 2921              		.cfi_def_cfa_register 13
 2922              		@ sp needed
 2923 0008 5DF8047B 		ldr	r7, [sp], #4
 2924              	.LCFI153:
 2925              		.cfi_restore 7
 2926              		.cfi_def_cfa_offset 0
 2927 000c 7047     		bx	lr
 2928              		.cfi_endproc
 2929              	.LFE358:
 2931              		.section	.text.HAL_PWREx_PVM2Callback,"ax",%progbits
 2932              		.align	1
 2933              		.weak	HAL_PWREx_PVM2Callback
 2934              		.syntax unified
 2935              		.thumb
 2936              		.thumb_func
 2937              		.fpu fpv4-sp-d16
 2939              	HAL_PWREx_PVM2Callback:
 2940              	.LFB359:
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM2 interrupt callback
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM2Callback(void)
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2941              		.loc 1 1138 1
 2942              		.cfi_startproc
 2943              		@ args = 0, pretend = 0, frame = 0
 2944              		@ frame_needed = 1, uses_anonymous_args = 0
 2945              		@ link register save eliminated.
 2946 0000 80B4     		push	{r7}
 2947              	.LCFI154:
 2948              		.cfi_def_cfa_offset 4
 2949              		.cfi_offset 7, -4
 2950 0002 00AF     		add	r7, sp, #0
 2951              	.LCFI155:
 2952              		.cfi_def_cfa_register 7
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM2Callback() API can be implemented in the user file
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2953              		.loc 1 1142 1
 2954 0004 00BF     		nop
 2955 0006 BD46     		mov	sp, r7
 2956              	.LCFI156:
 2957              		.cfi_def_cfa_register 13
 2958              		@ sp needed
 2959 0008 5DF8047B 		ldr	r7, [sp], #4
 2960              	.LCFI157:
 2961              		.cfi_restore 7
ARM GAS  /tmp/cceiCkfa.s 			page 72


 2962              		.cfi_def_cfa_offset 0
 2963 000c 7047     		bx	lr
 2964              		.cfi_endproc
 2965              	.LFE359:
 2967              		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
 2968              		.align	1
 2969              		.weak	HAL_PWREx_PVM3Callback
 2970              		.syntax unified
 2971              		.thumb
 2972              		.thumb_func
 2973              		.fpu fpv4-sp-d16
 2975              	HAL_PWREx_PVM3Callback:
 2976              	.LFB360:
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 2977              		.loc 1 1150 1
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 0
 2980              		@ frame_needed = 1, uses_anonymous_args = 0
 2981              		@ link register save eliminated.
 2982 0000 80B4     		push	{r7}
 2983              	.LCFI158:
 2984              		.cfi_def_cfa_offset 4
 2985              		.cfi_offset 7, -4
 2986 0002 00AF     		add	r7, sp, #0
 2987              	.LCFI159:
 2988              		.cfi_def_cfa_register 7
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 2989              		.loc 1 1154 1
 2990 0004 00BF     		nop
 2991 0006 BD46     		mov	sp, r7
 2992              	.LCFI160:
 2993              		.cfi_def_cfa_register 13
 2994              		@ sp needed
 2995 0008 5DF8047B 		ldr	r7, [sp], #4
 2996              	.LCFI161:
 2997              		.cfi_restore 7
 2998              		.cfi_def_cfa_offset 0
 2999 000c 7047     		bx	lr
 3000              		.cfi_endproc
 3001              	.LFE360:
 3003              		.section	.text.HAL_PWREx_PVM4Callback,"ax",%progbits
 3004              		.align	1
 3005              		.weak	HAL_PWREx_PVM4Callback
 3006              		.syntax unified
 3007              		.thumb
 3008              		.thumb_func
 3009              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cceiCkfa.s 			page 73


 3011              	HAL_PWREx_PVM4Callback:
 3012              	.LFB361:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** 
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** /**
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @brief PWR PVM4 interrupt callback
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   * @retval None
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   */
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM4Callback(void)
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** {
 3013              		.loc 1 1161 1
 3014              		.cfi_startproc
 3015              		@ args = 0, pretend = 0, frame = 0
 3016              		@ frame_needed = 1, uses_anonymous_args = 0
 3017              		@ link register save eliminated.
 3018 0000 80B4     		push	{r7}
 3019              	.LCFI162:
 3020              		.cfi_def_cfa_offset 4
 3021              		.cfi_offset 7, -4
 3022 0002 00AF     		add	r7, sp, #0
 3023              	.LCFI163:
 3024              		.cfi_def_cfa_register 7
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM4Callback() API can be implemented in the user file
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c ****    */
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c **** }
 3025              		.loc 1 1165 1
 3026 0004 00BF     		nop
 3027 0006 BD46     		mov	sp, r7
 3028              	.LCFI164:
 3029              		.cfi_def_cfa_register 13
 3030              		@ sp needed
 3031 0008 5DF8047B 		ldr	r7, [sp], #4
 3032              	.LCFI165:
 3033              		.cfi_restore 7
 3034              		.cfi_def_cfa_offset 0
 3035 000c 7047     		bx	lr
 3036              		.cfi_endproc
 3037              	.LFE361:
 3039              		.text
 3040              	.Letext0:
 3041              		.file 2 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_types.h"
 3042              		.file 3 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 3043              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3044              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 3045              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 3046              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 3047              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 3048              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 3049              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/cceiCkfa.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_pwr_ex.c
     /tmp/cceiCkfa.s:18     .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
     /tmp/cceiCkfa.s:26     .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
     /tmp/cceiCkfa.s:80     .text.HAL_PWREx_GetVoltageRange:000000000000003c $d
     /tmp/cceiCkfa.s:85     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
     /tmp/cceiCkfa.s:92     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
     /tmp/cceiCkfa.s:288    .text.HAL_PWREx_ControlVoltageScaling:000000000000013c $d
     /tmp/cceiCkfa.s:295    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 $t
     /tmp/cceiCkfa.s:302    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 HAL_PWREx_EnableBatteryCharging
     /tmp/cceiCkfa.s:351    .text.HAL_PWREx_EnableBatteryCharging:0000000000000030 $d
     /tmp/cceiCkfa.s:356    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 $t
     /tmp/cceiCkfa.s:363    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 HAL_PWREx_DisableBatteryCharging
     /tmp/cceiCkfa.s:397    .text.HAL_PWREx_DisableBatteryCharging:000000000000001c $d
     /tmp/cceiCkfa.s:402    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 $t
     /tmp/cceiCkfa.s:409    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 HAL_PWREx_EnableInternalWakeUpLine
     /tmp/cceiCkfa.s:443    .text.HAL_PWREx_EnableInternalWakeUpLine:000000000000001c $d
     /tmp/cceiCkfa.s:448    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 $t
     /tmp/cceiCkfa.s:455    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 HAL_PWREx_DisableInternalWakeUpLine
     /tmp/cceiCkfa.s:489    .text.HAL_PWREx_DisableInternalWakeUpLine:000000000000001c $d
     /tmp/cceiCkfa.s:494    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 $t
     /tmp/cceiCkfa.s:501    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 HAL_PWREx_EnableGPIOPullUp
     /tmp/cceiCkfa.s:531    .text.HAL_PWREx_EnableGPIOPullUp:000000000000001c $d
     /tmp/cceiCkfa.s:538    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000038 $t
     /tmp/cceiCkfa.s:698    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000128 $d
     /tmp/cceiCkfa.s:703    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 $t
     /tmp/cceiCkfa.s:710    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 HAL_PWREx_DisableGPIOPullUp
     /tmp/cceiCkfa.s:740    .text.HAL_PWREx_DisableGPIOPullUp:000000000000001c $d
     /tmp/cceiCkfa.s:747    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000038 $t
     /tmp/cceiCkfa.s:854    .text.HAL_PWREx_DisableGPIOPullUp:00000000000000c8 $d
     /tmp/cceiCkfa.s:859    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 $t
     /tmp/cceiCkfa.s:866    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 HAL_PWREx_EnableGPIOPullDown
     /tmp/cceiCkfa.s:896    .text.HAL_PWREx_EnableGPIOPullDown:000000000000001c $d
     /tmp/cceiCkfa.s:903    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000038 $t
     /tmp/cceiCkfa.s:1063   .text.HAL_PWREx_EnableGPIOPullDown:0000000000000128 $d
     /tmp/cceiCkfa.s:1068   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 $t
     /tmp/cceiCkfa.s:1075   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 HAL_PWREx_DisableGPIOPullDown
     /tmp/cceiCkfa.s:1105   .text.HAL_PWREx_DisableGPIOPullDown:000000000000001c $d
     /tmp/cceiCkfa.s:1112   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000038 $t
     /tmp/cceiCkfa.s:1220   .text.HAL_PWREx_DisableGPIOPullDown:00000000000000cc $d
     /tmp/cceiCkfa.s:1225   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 $t
     /tmp/cceiCkfa.s:1232   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 HAL_PWREx_EnablePullUpPullDownConfig
     /tmp/cceiCkfa.s:1266   .text.HAL_PWREx_EnablePullUpPullDownConfig:000000000000001c $d
     /tmp/cceiCkfa.s:1271   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 $t
     /tmp/cceiCkfa.s:1278   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 HAL_PWREx_DisablePullUpPullDownConfig
     /tmp/cceiCkfa.s:1312   .text.HAL_PWREx_DisablePullUpPullDownConfig:000000000000001c $d
     /tmp/cceiCkfa.s:1317   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 $t
     /tmp/cceiCkfa.s:1324   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 HAL_PWREx_EnableSRAM2ContentRetention
     /tmp/cceiCkfa.s:1358   .text.HAL_PWREx_EnableSRAM2ContentRetention:000000000000001c $d
     /tmp/cceiCkfa.s:1363   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 $t
     /tmp/cceiCkfa.s:1370   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 HAL_PWREx_DisableSRAM2ContentRetention
     /tmp/cceiCkfa.s:1404   .text.HAL_PWREx_DisableSRAM2ContentRetention:000000000000001c $d
     /tmp/cceiCkfa.s:1409   .text.HAL_PWREx_EnablePVM1:0000000000000000 $t
     /tmp/cceiCkfa.s:1416   .text.HAL_PWREx_EnablePVM1:0000000000000000 HAL_PWREx_EnablePVM1
     /tmp/cceiCkfa.s:1450   .text.HAL_PWREx_EnablePVM1:000000000000001c $d
     /tmp/cceiCkfa.s:1455   .text.HAL_PWREx_DisablePVM1:0000000000000000 $t
     /tmp/cceiCkfa.s:1462   .text.HAL_PWREx_DisablePVM1:0000000000000000 HAL_PWREx_DisablePVM1
ARM GAS  /tmp/cceiCkfa.s 			page 75


     /tmp/cceiCkfa.s:1496   .text.HAL_PWREx_DisablePVM1:000000000000001c $d
     /tmp/cceiCkfa.s:1501   .text.HAL_PWREx_EnablePVM2:0000000000000000 $t
     /tmp/cceiCkfa.s:1508   .text.HAL_PWREx_EnablePVM2:0000000000000000 HAL_PWREx_EnablePVM2
     /tmp/cceiCkfa.s:1542   .text.HAL_PWREx_EnablePVM2:000000000000001c $d
     /tmp/cceiCkfa.s:1547   .text.HAL_PWREx_DisablePVM2:0000000000000000 $t
     /tmp/cceiCkfa.s:1554   .text.HAL_PWREx_DisablePVM2:0000000000000000 HAL_PWREx_DisablePVM2
     /tmp/cceiCkfa.s:1588   .text.HAL_PWREx_DisablePVM2:000000000000001c $d
     /tmp/cceiCkfa.s:1593   .text.HAL_PWREx_EnablePVM3:0000000000000000 $t
     /tmp/cceiCkfa.s:1600   .text.HAL_PWREx_EnablePVM3:0000000000000000 HAL_PWREx_EnablePVM3
     /tmp/cceiCkfa.s:1634   .text.HAL_PWREx_EnablePVM3:000000000000001c $d
     /tmp/cceiCkfa.s:1639   .text.HAL_PWREx_DisablePVM3:0000000000000000 $t
     /tmp/cceiCkfa.s:1646   .text.HAL_PWREx_DisablePVM3:0000000000000000 HAL_PWREx_DisablePVM3
     /tmp/cceiCkfa.s:1680   .text.HAL_PWREx_DisablePVM3:000000000000001c $d
     /tmp/cceiCkfa.s:1685   .text.HAL_PWREx_EnablePVM4:0000000000000000 $t
     /tmp/cceiCkfa.s:1692   .text.HAL_PWREx_EnablePVM4:0000000000000000 HAL_PWREx_EnablePVM4
     /tmp/cceiCkfa.s:1726   .text.HAL_PWREx_EnablePVM4:000000000000001c $d
     /tmp/cceiCkfa.s:1731   .text.HAL_PWREx_DisablePVM4:0000000000000000 $t
     /tmp/cceiCkfa.s:1738   .text.HAL_PWREx_DisablePVM4:0000000000000000 HAL_PWREx_DisablePVM4
     /tmp/cceiCkfa.s:1772   .text.HAL_PWREx_DisablePVM4:000000000000001c $d
     /tmp/cceiCkfa.s:1777   .text.HAL_PWREx_ConfigPVM:0000000000000000 $t
     /tmp/cceiCkfa.s:1784   .text.HAL_PWREx_ConfigPVM:0000000000000000 HAL_PWREx_ConfigPVM
     /tmp/cceiCkfa.s:2207   .text.HAL_PWREx_ConfigPVM:000000000000029c $d
     /tmp/cceiCkfa.s:2212   .text.HAL_PWREx_EnableUSBDeadBatteryPD:0000000000000000 $t
     /tmp/cceiCkfa.s:2219   .text.HAL_PWREx_EnableUSBDeadBatteryPD:0000000000000000 HAL_PWREx_EnableUSBDeadBatteryPD
     /tmp/cceiCkfa.s:2253   .text.HAL_PWREx_EnableUSBDeadBatteryPD:000000000000001c $d
     /tmp/cceiCkfa.s:2258   .text.HAL_PWREx_DisableUSBDeadBatteryPD:0000000000000000 $t
     /tmp/cceiCkfa.s:2265   .text.HAL_PWREx_DisableUSBDeadBatteryPD:0000000000000000 HAL_PWREx_DisableUSBDeadBatteryPD
     /tmp/cceiCkfa.s:2299   .text.HAL_PWREx_DisableUSBDeadBatteryPD:000000000000001c $d
     /tmp/cceiCkfa.s:2304   .text.HAL_PWREx_EnableUSBStandByModePD:0000000000000000 $t
     /tmp/cceiCkfa.s:2311   .text.HAL_PWREx_EnableUSBStandByModePD:0000000000000000 HAL_PWREx_EnableUSBStandByModePD
     /tmp/cceiCkfa.s:2345   .text.HAL_PWREx_EnableUSBStandByModePD:000000000000001c $d
     /tmp/cceiCkfa.s:2350   .text.HAL_PWREx_DisableUSBStandByModePD:0000000000000000 $t
     /tmp/cceiCkfa.s:2357   .text.HAL_PWREx_DisableUSBStandByModePD:0000000000000000 HAL_PWREx_DisableUSBStandByModePD
     /tmp/cceiCkfa.s:2391   .text.HAL_PWREx_DisableUSBStandByModePD:000000000000001c $d
     /tmp/cceiCkfa.s:2396   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 $t
     /tmp/cceiCkfa.s:2403   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 HAL_PWREx_EnableLowPowerRunMode
     /tmp/cceiCkfa.s:2437   .text.HAL_PWREx_EnableLowPowerRunMode:000000000000001c $d
     /tmp/cceiCkfa.s:2442   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 $t
     /tmp/cceiCkfa.s:2449   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 HAL_PWREx_DisableLowPowerRunMode
     /tmp/cceiCkfa.s:2533   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000064 $d
     /tmp/cceiCkfa.s:2540   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 $t
     /tmp/cceiCkfa.s:2547   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 HAL_PWREx_EnterSTOP0Mode
     /tmp/cceiCkfa.s:2630   .text.HAL_PWREx_EnterSTOP0Mode:000000000000004c $d
     /tmp/cceiCkfa.s:2636   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 $t
     /tmp/cceiCkfa.s:2643   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 HAL_PWREx_EnterSTOP1Mode
     /tmp/cceiCkfa.s:2727   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000050 $d
     /tmp/cceiCkfa.s:2733   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 $t
     /tmp/cceiCkfa.s:2740   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 HAL_PWREx_EnterSHUTDOWNMode
     /tmp/cceiCkfa.s:2788   .text.HAL_PWREx_EnterSHUTDOWNMode:000000000000002c $d
     /tmp/cceiCkfa.s:2794   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 $t
     /tmp/cceiCkfa.s:2801   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 HAL_PWREx_PVD_PVM_IRQHandler
     /tmp/cceiCkfa.s:2903   .text.HAL_PWREx_PVM1Callback:0000000000000000 HAL_PWREx_PVM1Callback
     /tmp/cceiCkfa.s:2939   .text.HAL_PWREx_PVM2Callback:0000000000000000 HAL_PWREx_PVM2Callback
     /tmp/cceiCkfa.s:2975   .text.HAL_PWREx_PVM3Callback:0000000000000000 HAL_PWREx_PVM3Callback
     /tmp/cceiCkfa.s:3011   .text.HAL_PWREx_PVM4Callback:0000000000000000 HAL_PWREx_PVM4Callback
     /tmp/cceiCkfa.s:2891   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000078 $d
     /tmp/cceiCkfa.s:2896   .text.HAL_PWREx_PVM1Callback:0000000000000000 $t
ARM GAS  /tmp/cceiCkfa.s 			page 76


     /tmp/cceiCkfa.s:2932   .text.HAL_PWREx_PVM2Callback:0000000000000000 $t
     /tmp/cceiCkfa.s:2968   .text.HAL_PWREx_PVM3Callback:0000000000000000 $t
     /tmp/cceiCkfa.s:3004   .text.HAL_PWREx_PVM4Callback:0000000000000000 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
