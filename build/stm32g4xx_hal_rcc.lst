ARM GAS  /tmp/ccFV53yB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB325:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @file    stm32g4xx_hal_rcc.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       After reset the device is running from High Speed Internal oscillator
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (16 MHz) with Flash 0 wait state. Flash prefetch buffer, D-Cache
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHBs) and Low speed (APBs) busses:
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) All GPIOs are in analog mode, except the JTAG pins which
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
ARM GAS  /tmp/ccFV53yB.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           derived from the System clock (USB, RNG, USART, LPUART, FDCAN, some TIMERs,
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           UCPD, I2S, I2C, LPTIM, ADC, QSPI)
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @endverbatim
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @attention
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #include "stm32g4xx_hal.h"
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @addtogroup STM32G4xx_HAL_Driver
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC RCC
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  * @{
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  */
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSE_TIMEOUT_VALUE          HSE_STARTUP_TIMEOUT
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSI_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSI48_TIMEOUT_VALUE        2U                /* 2 ms (minimum Tick + 1) */
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define PLL_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U             /* 5 s    */
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
ARM GAS  /tmp/ccFV53yB.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_PLL_OSCSOURCE_CONFIG(__HAL_RCC_PLLSOURCE__) \
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, (__HAL_RCC_PLLSOURCE__)))
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** static uint32_t          RCC_GetSysClockFreqFromPLLSource(void);
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @verbatim
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal and external oscillators
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****        and APB2).
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) HSI (high-speed internal): 16 MHz factory-trimmed RC used directly or through
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              the PLL as System clock source.
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) LSI (low-speed internal): 32 KHz low consumption RC used as IWDG and/or RTC
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              clock source.
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) HSE (high-speed external): 4 to 48 MHz crystal oscillator used directly or
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also optionally as RTC clock sourc
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) LSE (low-speed external): 32.768 KHz oscillator used optionally as RTC clock source.
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) PLL (clocked by HSI, HSE) providing up to three independent output clocks:
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 170 MHz).
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB (48 MHz),
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 the QSPI (<= 48 MHz), the FDCAN, the SAI and the I2S.
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The third output is used to generate a clock for ADC
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) CSS (Clock security system): once enabled, if a HSE clock failure occurs
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
ARM GAS  /tmp/ccFV53yB.s 			page 4


 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt)
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              exception vector.
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) MCO (microcontroller clock output): used to output LSI, HSI, LSE, HSE,
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              main PLL clock, system clock or RC48 clock (through a configurable prescaler) on PA8 p
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              HSE and main PLL.
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 divided by 2 to 31.
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 You have to use __HAL_RCC_RTC_ENABLE() and HAL_RCCEx_PeriphCLKConfig() function
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 to configure this clock.
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) USB FS and RNG: USB FS requires a frequency equal to 48 MHz
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 to work correctly, while the RNG peripheral requires a frequency
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 equal or lower than to 48 MHz. This clock is derived of the main PLL
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 through PLLQ divider. You have to enable the peripheral clock and use
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 170 MHz.
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The clock source frequency should be adapted depending on the device voltage range
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              as listed in the Reference Manual "Clock source frequency versus voltage scaling" chap
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @endverbatim
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            Table 1. HCLK clock frequency for STM32G4xx devices
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            +--------------------------------------------------------+
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            | Latency         |     HCLK clock frequency (MHz)       |
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 |--------------------------------------|
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 |  voltage range 1  | voltage range 2  |
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 |       1.2 V       |     1.0 V        |
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|   0 < HCLK <= 20  |  0 < HCLK <= 8   |
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |1WS(2 CPU cycles)|  20 < HCLK <= 40  |  8 < HCLK <= 16  |
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |2WS(3 CPU cycles)|  40 < HCLK <= 60  | 16 < HCLK <= 26  |
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |3WS(4 CPU cycles)|  60 < HCLK <= 80  | 16 < HCLK <= 26  |
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |4WS(5 CPU cycles)|  80 < HCLK <= 100 | 16 < HCLK <= 26  |
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |5WS(6 CPU cycles)| 100 < HCLK <= 120 | 16 < HCLK <= 26  |
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |6WS(7 CPU cycles)| 120 < HCLK <= 140 | 16 < HCLK <= 26  |
ARM GAS  /tmp/ccFV53yB.s 			page 5


 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |7WS(8 CPU cycles)| 140 < HCLK <= 160 | 16 < HCLK <= 26  |
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |8WS(9 CPU cycles)| 160 < HCLK <= 170 | 16 < HCLK <= 26  |
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            +--------------------------------------------------------+
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Reset the RCC clock configuration to the default reset state.
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - HSE, PLL OFF
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - CSS, MCO1 OFF
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - All interrupts disabled
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - Peripheral clocks
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HAL status
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
  29              		.loc 1 226 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  44              		.loc 1 230 15
  45 0006 FFF7FEFF 		bl	HAL_GetTick
  46 000a 7860     		str	r0, [r7, #4]
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set HSION bit to the reset value */
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  47              		.loc 1 233 3
  48 000c 394B     		ldr	r3, .L10
  49 000e 1B68     		ldr	r3, [r3]
  50 0010 384A     		ldr	r2, .L10
  51 0012 43F48073 		orr	r3, r3, #256
  52 0016 1360     		str	r3, [r2]
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccFV53yB.s 			page 6


 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till HSI is ready */
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
  53              		.loc 1 236 9
  54 0018 08E0     		b	.L2
  55              	.L4:
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  56              		.loc 1 238 10
  57 001a FFF7FEFF 		bl	HAL_GetTick
  58 001e 0246     		mov	r2, r0
  59              		.loc 1 238 24
  60 0020 7B68     		ldr	r3, [r7, #4]
  61 0022 D31A     		subs	r3, r2, r3
  62              		.loc 1 238 8
  63 0024 022B     		cmp	r3, #2
  64 0026 01D9     		bls	.L2
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
  65              		.loc 1 240 14
  66 0028 0323     		movs	r3, #3
  67 002a 5FE0     		b	.L3
  68              	.L2:
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
  69              		.loc 1 236 10
  70 002c 314B     		ldr	r3, .L10
  71 002e 1B68     		ldr	r3, [r3]
  72 0030 03F48063 		and	r3, r3, #1024
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
  73              		.loc 1 236 9
  74 0034 002B     		cmp	r3, #0
  75 0036 F0D0     		beq	.L4
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  /* Set HSITRIM[6:0] bits to the reset value */
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->ICSCR, RCC_HSICALIBRATION_DEFAULT << RCC_ICSCR_HSITRIM_Pos);
  76              		.loc 1 245 3
  77 0038 2E4B     		ldr	r3, .L10
  78 003a 5B68     		ldr	r3, [r3, #4]
  79 003c 2D4A     		ldr	r2, .L10
  80 003e 43F08043 		orr	r3, r3, #1073741824
  81 0042 5360     		str	r3, [r2, #4]
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  82              		.loc 1 248 15
  83 0044 FFF7FEFF 		bl	HAL_GetTick
  84 0048 7860     		str	r0, [r7, #4]
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Reset CFGR register (HSI is selected as system clock source) */
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CFGR = 0x00000001u;
  85              		.loc 1 251 6
  86 004a 2A4B     		ldr	r3, .L10
  87              		.loc 1 251 13
  88 004c 0122     		movs	r2, #1
  89 004e 9A60     		str	r2, [r3, #8]
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccFV53yB.s 			page 7


 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till HSI is ready */
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
  90              		.loc 1 254 9
  91 0050 0AE0     		b	.L5
  92              	.L6:
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  93              		.loc 1 256 10
  94 0052 FFF7FEFF 		bl	HAL_GetTick
  95 0056 0246     		mov	r2, r0
  96              		.loc 1 256 24
  97 0058 7B68     		ldr	r3, [r7, #4]
  98 005a D31A     		subs	r3, r2, r3
  99              		.loc 1 256 8
 100 005c 41F28832 		movw	r2, #5000
 101 0060 9342     		cmp	r3, r2
 102 0062 01D9     		bls	.L5
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 103              		.loc 1 258 14
 104 0064 0323     		movs	r3, #3
 105 0066 41E0     		b	.L3
 106              	.L5:
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 107              		.loc 1 254 10
 108 0068 224B     		ldr	r3, .L10
 109 006a 9B68     		ldr	r3, [r3, #8]
 110 006c 03F00C03 		and	r3, r3, #12
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 111              		.loc 1 254 9
 112 0070 042B     		cmp	r3, #4
 113 0072 EED1     		bne	.L6
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 114              		.loc 1 263 19
 115 0074 204B     		ldr	r3, .L10+4
 116 0076 214A     		ldr	r2, .L10+8
 117 0078 1A60     		str	r2, [r3]
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 118              		.loc 1 266 7
 119 007a 214B     		ldr	r3, .L10+12
 120 007c 1B68     		ldr	r3, [r3]
 121 007e 1846     		mov	r0, r3
 122 0080 FFF7FEFF 		bl	HAL_InitTick
 123 0084 0346     		mov	r3, r0
 124              		.loc 1 266 6
 125 0086 002B     		cmp	r3, #0
 126 0088 01D0     		beq	.L7
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 127              		.loc 1 268 12
 128 008a 0123     		movs	r3, #1
ARM GAS  /tmp/ccFV53yB.s 			page 8


 129 008c 2EE0     		b	.L3
 130              	.L7:
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear CR register in 2 steps: first to clear HSEON in case bypass was enabled */
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CR = RCC_CR_HSION;
 131              		.loc 1 272 6
 132 008e 194B     		ldr	r3, .L10
 133              		.loc 1 272 11
 134 0090 4FF48072 		mov	r2, #256
 135 0094 1A60     		str	r2, [r3]
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Then again to HSEBYP in case bypass was enabled */
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CR = RCC_CR_HSION;
 136              		.loc 1 275 6
 137 0096 174B     		ldr	r3, .L10
 138              		.loc 1 275 11
 139 0098 4FF48072 		mov	r2, #256
 140 009c 1A60     		str	r2, [r3]
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 141              		.loc 1 278 15
 142 009e FFF7FEFF 		bl	HAL_GetTick
 143 00a2 7860     		str	r0, [r7, #4]
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till PLL is OFF */
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 144              		.loc 1 281 9
 145 00a4 08E0     		b	.L8
 146              	.L9:
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 147              		.loc 1 283 10
 148 00a6 FFF7FEFF 		bl	HAL_GetTick
 149 00aa 0246     		mov	r2, r0
 150              		.loc 1 283 24
 151 00ac 7B68     		ldr	r3, [r7, #4]
 152 00ae D31A     		subs	r3, r2, r3
 153              		.loc 1 283 8
 154 00b0 022B     		cmp	r3, #2
 155 00b2 01D9     		bls	.L8
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 156              		.loc 1 285 14
 157 00b4 0323     		movs	r3, #3
 158 00b6 19E0     		b	.L3
 159              	.L8:
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 160              		.loc 1 281 10
 161 00b8 0E4B     		ldr	r3, .L10
 162 00ba 1B68     		ldr	r3, [r3]
 163 00bc 03F00073 		and	r3, r3, #33554432
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 164              		.loc 1 281 9
 165 00c0 002B     		cmp	r3, #0
 166 00c2 F0D1     		bne	.L9
ARM GAS  /tmp/ccFV53yB.s 			page 9


 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* once PLL is OFF, reset PLLCFGR register to default value */
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLN_4;
 167              		.loc 1 290 6
 168 00c4 0B4B     		ldr	r3, .L10
 169              		.loc 1 290 16
 170 00c6 4FF48052 		mov	r2, #4096
 171 00ca DA60     		str	r2, [r3, #12]
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Disable all interrupts */
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 172              		.loc 1 293 3
 173 00cc 094B     		ldr	r3, .L10
 174 00ce 0022     		movs	r2, #0
 175 00d0 9A61     		str	r2, [r3, #24]
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear all interrupt flags */
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   WRITE_REG(RCC->CICR, 0xFFFFFFFFU);
 176              		.loc 1 296 3
 177 00d2 084B     		ldr	r3, .L10
 178 00d4 4FF0FF32 		mov	r2, #-1
 179 00d8 1A62     		str	r2, [r3, #32]
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear all reset flags */
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 180              		.loc 1 299 3
 181 00da 064B     		ldr	r3, .L10
 182 00dc D3F89430 		ldr	r3, [r3, #148]
 183 00e0 044A     		ldr	r2, .L10
 184 00e2 43F40003 		orr	r3, r3, #8388608
 185 00e6 C2F89430 		str	r3, [r2, #148]
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_OK;
 186              		.loc 1 301 10
 187 00ea 0023     		movs	r3, #0
 188              	.L3:
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 189              		.loc 1 302 1
 190 00ec 1846     		mov	r0, r3
 191 00ee 0837     		adds	r7, r7, #8
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 8
 194 00f0 BD46     		mov	sp, r7
 195              	.LCFI4:
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
 198 00f2 80BD     		pop	{r7, pc}
 199              	.L11:
 200              		.align	2
 201              	.L10:
 202 00f4 00100240 		.word	1073876992
 203 00f8 00000000 		.word	SystemCoreClock
 204 00fc 0024F400 		.word	16000000
 205 0100 00000000 		.word	uwTickPrio
 206              		.cfi_endproc
ARM GAS  /tmp/ccFV53yB.s 			page 10


 207              	.LFE325:
 209              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 210              		.align	1
 211              		.global	HAL_RCC_OscConfig
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv4-sp-d16
 217              	HAL_RCC_OscConfig:
 218              	.LFB326:
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Initialize the RCC Oscillators according to the specified parameters in the
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HAL status
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 219              		.loc 1 319 1
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 32
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223 0000 80B5     		push	{r7, lr}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 88B0     		sub	sp, sp, #32
 229              	.LCFI6:
 230              		.cfi_def_cfa_offset 40
 231 0004 00AF     		add	r7, sp, #0
 232              	.LCFI7:
 233              		.cfi_def_cfa_register 7
 234 0006 7860     		str	r0, [r7, #4]
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t temp_sysclksrc;
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t temp_pllckcfg;
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check Null pointer */
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_OscInitStruct == NULL)
 235              		.loc 1 325 6
 236 0008 7B68     		ldr	r3, [r7, #4]
 237 000a 002B     		cmp	r3, #0
 238 000c 01D1     		bne	.L13
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 239              		.loc 1 327 12
 240 000e 0123     		movs	r3, #1
ARM GAS  /tmp/ccFV53yB.s 			page 11


 241 0010 08E3     		b	.L14
 242              	.L13:
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 243              		.loc 1 334 26
 244 0012 7B68     		ldr	r3, [r7, #4]
 245 0014 1B68     		ldr	r3, [r3]
 246              		.loc 1 334 44
 247 0016 03F00103 		and	r3, r3, #1
 248              		.loc 1 334 6
 249 001a 002B     		cmp	r3, #0
 250 001c 75D0     		beq	.L15
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 251              		.loc 1 339 22
 252 001e A34B     		ldr	r3, .L80
 253 0020 9B68     		ldr	r3, [r3, #8]
 254              		.loc 1 339 20
 255 0022 03F00C03 		and	r3, r3, #12
 256 0026 BB61     		str	r3, [r7, #24]
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 257              		.loc 1 340 21
 258 0028 A04B     		ldr	r3, .L80
 259 002a DB68     		ldr	r3, [r3, #12]
 260              		.loc 1 340 19
 261 002c 03F00303 		and	r3, r3, #3
 262 0030 7B61     		str	r3, [r7, #20]
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSE)) || (temp_sys
 263              		.loc 1 343 8
 264 0032 BB69     		ldr	r3, [r7, #24]
 265 0034 0C2B     		cmp	r3, #12
 266 0036 02D1     		bne	.L16
 267              		.loc 1 343 47 discriminator 1
 268 0038 7B69     		ldr	r3, [r7, #20]
 269 003a 032B     		cmp	r3, #3
 270 003c 02D0     		beq	.L17
 271              	.L16:
 272              		.loc 1 343 88 discriminator 3
 273 003e BB69     		ldr	r3, [r7, #24]
 274 0040 082B     		cmp	r3, #8
 275 0042 0BD1     		bne	.L18
 276              	.L17:
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 277              		.loc 1 345 12
 278 0044 994B     		ldr	r3, .L80
 279 0046 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFV53yB.s 			page 12


 280 0048 03F40033 		and	r3, r3, #131072
 281              		.loc 1 345 10
 282 004c 002B     		cmp	r3, #0
 283 004e 5BD0     		beq	.L78
 284              		.loc 1 345 73 discriminator 1
 285 0050 7B68     		ldr	r3, [r7, #4]
 286 0052 5B68     		ldr	r3, [r3, #4]
 287              		.loc 1 345 52 discriminator 1
 288 0054 002B     		cmp	r3, #0
 289 0056 57D1     		bne	.L78
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 290              		.loc 1 347 16
 291 0058 0123     		movs	r3, #1
 292 005a E3E2     		b	.L14
 293              	.L18:
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 294              		.loc 1 353 7
 295 005c 7B68     		ldr	r3, [r7, #4]
 296 005e 5B68     		ldr	r3, [r3, #4]
 297 0060 B3F5803F 		cmp	r3, #65536
 298 0064 06D1     		bne	.L20
 299              		.loc 1 353 7 is_stmt 0 discriminator 1
 300 0066 914B     		ldr	r3, .L80
 301 0068 1B68     		ldr	r3, [r3]
 302 006a 904A     		ldr	r2, .L80
 303 006c 43F48033 		orr	r3, r3, #65536
 304 0070 1360     		str	r3, [r2]
 305 0072 1DE0     		b	.L21
 306              	.L20:
 307              		.loc 1 353 7 discriminator 2
 308 0074 7B68     		ldr	r3, [r7, #4]
 309 0076 5B68     		ldr	r3, [r3, #4]
 310 0078 B3F5A02F 		cmp	r3, #327680
 311 007c 0CD1     		bne	.L22
 312              		.loc 1 353 7 discriminator 3
 313 007e 8B4B     		ldr	r3, .L80
 314 0080 1B68     		ldr	r3, [r3]
 315 0082 8A4A     		ldr	r2, .L80
 316 0084 43F48023 		orr	r3, r3, #262144
 317 0088 1360     		str	r3, [r2]
 318 008a 884B     		ldr	r3, .L80
 319 008c 1B68     		ldr	r3, [r3]
 320 008e 874A     		ldr	r2, .L80
 321 0090 43F48033 		orr	r3, r3, #65536
 322 0094 1360     		str	r3, [r2]
 323 0096 0BE0     		b	.L21
 324              	.L22:
 325              		.loc 1 353 7 discriminator 4
 326 0098 844B     		ldr	r3, .L80
 327 009a 1B68     		ldr	r3, [r3]
 328 009c 834A     		ldr	r2, .L80
ARM GAS  /tmp/ccFV53yB.s 			page 13


 329 009e 23F48033 		bic	r3, r3, #65536
 330 00a2 1360     		str	r3, [r2]
 331 00a4 814B     		ldr	r3, .L80
 332 00a6 1B68     		ldr	r3, [r3]
 333 00a8 804A     		ldr	r2, .L80
 334 00aa 23F48023 		bic	r3, r3, #262144
 335 00ae 1360     		str	r3, [r2]
 336              	.L21:
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the HSE State */
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 337              		.loc 1 356 28 is_stmt 1
 338 00b0 7B68     		ldr	r3, [r7, #4]
 339 00b2 5B68     		ldr	r3, [r3, #4]
 340              		.loc 1 356 10
 341 00b4 002B     		cmp	r3, #0
 342 00b6 13D0     		beq	.L23
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 343              		.loc 1 359 21
 344 00b8 FFF7FEFF 		bl	HAL_GetTick
 345 00bc 3861     		str	r0, [r7, #16]
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 346              		.loc 1 362 15
 347 00be 08E0     		b	.L24
 348              	.L25:
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 349              		.loc 1 364 16
 350 00c0 FFF7FEFF 		bl	HAL_GetTick
 351 00c4 0246     		mov	r2, r0
 352              		.loc 1 364 30
 353 00c6 3B69     		ldr	r3, [r7, #16]
 354 00c8 D31A     		subs	r3, r2, r3
 355              		.loc 1 364 14
 356 00ca 642B     		cmp	r3, #100
 357 00cc 01D9     		bls	.L24
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 358              		.loc 1 366 20
 359 00ce 0323     		movs	r3, #3
 360 00d0 A8E2     		b	.L14
 361              	.L24:
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 362              		.loc 1 362 16
 363 00d2 764B     		ldr	r3, .L80
 364 00d4 1B68     		ldr	r3, [r3]
 365 00d6 03F40033 		and	r3, r3, #131072
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 366              		.loc 1 362 15
 367 00da 002B     		cmp	r3, #0
 368 00dc F0D0     		beq	.L25
 369 00de 14E0     		b	.L15
 370              	.L23:
ARM GAS  /tmp/ccFV53yB.s 			page 14


 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 371              		.loc 1 373 21
 372 00e0 FFF7FEFF 		bl	HAL_GetTick
 373 00e4 3861     		str	r0, [r7, #16]
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 374              		.loc 1 376 15
 375 00e6 08E0     		b	.L26
 376              	.L27:
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 377              		.loc 1 378 16
 378 00e8 FFF7FEFF 		bl	HAL_GetTick
 379 00ec 0246     		mov	r2, r0
 380              		.loc 1 378 30
 381 00ee 3B69     		ldr	r3, [r7, #16]
 382 00f0 D31A     		subs	r3, r2, r3
 383              		.loc 1 378 14
 384 00f2 642B     		cmp	r3, #100
 385 00f4 01D9     		bls	.L26
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 386              		.loc 1 380 20
 387 00f6 0323     		movs	r3, #3
 388 00f8 94E2     		b	.L14
 389              	.L26:
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 390              		.loc 1 376 16
 391 00fa 6C4B     		ldr	r3, .L80
 392 00fc 1B68     		ldr	r3, [r3]
 393 00fe 03F40033 		and	r3, r3, #131072
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 394              		.loc 1 376 15
 395 0102 002B     		cmp	r3, #0
 396 0104 F0D1     		bne	.L27
 397 0106 00E0     		b	.L15
 398              	.L78:
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 399              		.loc 1 345 10
 400 0108 00BF     		nop
 401              	.L15:
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 402              		.loc 1 387 26
 403 010a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFV53yB.s 			page 15


 404 010c 1B68     		ldr	r3, [r3]
 405              		.loc 1 387 44
 406 010e 03F00203 		and	r3, r3, #2
 407              		.loc 1 387 6
 408 0112 002B     		cmp	r3, #0
 409 0114 75D0     		beq	.L28
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 410              		.loc 1 394 22
 411 0116 654B     		ldr	r3, .L80
 412 0118 9B68     		ldr	r3, [r3, #8]
 413              		.loc 1 394 20
 414 011a 03F00C03 		and	r3, r3, #12
 415 011e BB61     		str	r3, [r7, #24]
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 416              		.loc 1 395 21
 417 0120 624B     		ldr	r3, .L80
 418 0122 DB68     		ldr	r3, [r3, #12]
 419              		.loc 1 395 19
 420 0124 03F00303 		and	r3, r3, #3
 421 0128 7B61     		str	r3, [r7, #20]
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSI)) || (temp_sys
 422              		.loc 1 396 8
 423 012a BB69     		ldr	r3, [r7, #24]
 424 012c 0C2B     		cmp	r3, #12
 425 012e 02D1     		bne	.L29
 426              		.loc 1 396 47 discriminator 1
 427 0130 7B69     		ldr	r3, [r7, #20]
 428 0132 022B     		cmp	r3, #2
 429 0134 02D0     		beq	.L30
 430              	.L29:
 431              		.loc 1 396 88 discriminator 3
 432 0136 BB69     		ldr	r3, [r7, #24]
 433 0138 042B     		cmp	r3, #4
 434 013a 1FD1     		bne	.L31
 435              	.L30:
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 436              		.loc 1 399 12
 437 013c 5B4B     		ldr	r3, .L80
 438 013e 1B68     		ldr	r3, [r3]
 439 0140 03F48063 		and	r3, r3, #1024
 440              		.loc 1 399 10
 441 0144 002B     		cmp	r3, #0
 442 0146 05D0     		beq	.L32
 443              		.loc 1 399 73 discriminator 1
 444 0148 7B68     		ldr	r3, [r7, #4]
 445 014a DB68     		ldr	r3, [r3, #12]
 446              		.loc 1 399 52 discriminator 1
 447 014c 002B     		cmp	r3, #0
 448 014e 01D1     		bne	.L32
ARM GAS  /tmp/ccFV53yB.s 			page 16


 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 449              		.loc 1 401 16
 450 0150 0123     		movs	r3, #1
 451 0152 67E2     		b	.L14
 452              	.L32:
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 453              		.loc 1 407 9
 454 0154 554B     		ldr	r3, .L80
 455 0156 5B68     		ldr	r3, [r3, #4]
 456 0158 23F0FE42 		bic	r2, r3, #2130706432
 457 015c 7B68     		ldr	r3, [r7, #4]
 458 015e 1B69     		ldr	r3, [r3, #16]
 459 0160 1B06     		lsls	r3, r3, #24
 460 0162 5249     		ldr	r1, .L80
 461 0164 1343     		orrs	r3, r3, r2
 462 0166 4B60     		str	r3, [r1, #4]
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adapt Systick interrupt period */
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if (HAL_InitTick(uwTickPrio) != HAL_OK)
 463              		.loc 1 410 13
 464 0168 514B     		ldr	r3, .L80+4
 465 016a 1B68     		ldr	r3, [r3]
 466 016c 1846     		mov	r0, r3
 467 016e FFF7FEFF 		bl	HAL_InitTick
 468 0172 0346     		mov	r3, r0
 469              		.loc 1 410 12
 470 0174 002B     		cmp	r3, #0
 471 0176 43D0     		beq	.L79
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 472              		.loc 1 412 18
 473 0178 0123     		movs	r3, #1
 474 017a 53E2     		b	.L14
 475              	.L31:
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the HSI State */
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 476              		.loc 1 419 28
 477 017c 7B68     		ldr	r3, [r7, #4]
 478 017e DB68     		ldr	r3, [r3, #12]
 479              		.loc 1 419 10
 480 0180 002B     		cmp	r3, #0
 481 0182 23D0     		beq	.L34
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 482              		.loc 1 422 9
ARM GAS  /tmp/ccFV53yB.s 			page 17


 483 0184 494B     		ldr	r3, .L80
 484 0186 1B68     		ldr	r3, [r3]
 485 0188 484A     		ldr	r2, .L80
 486 018a 43F48073 		orr	r3, r3, #256
 487 018e 1360     		str	r3, [r2]
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 488              		.loc 1 425 21
 489 0190 FFF7FEFF 		bl	HAL_GetTick
 490 0194 3861     		str	r0, [r7, #16]
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 491              		.loc 1 428 15
 492 0196 08E0     		b	.L35
 493              	.L36:
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 494              		.loc 1 430 16
 495 0198 FFF7FEFF 		bl	HAL_GetTick
 496 019c 0246     		mov	r2, r0
 497              		.loc 1 430 30
 498 019e 3B69     		ldr	r3, [r7, #16]
 499 01a0 D31A     		subs	r3, r2, r3
 500              		.loc 1 430 14
 501 01a2 022B     		cmp	r3, #2
 502 01a4 01D9     		bls	.L35
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 503              		.loc 1 432 20
 504 01a6 0323     		movs	r3, #3
 505 01a8 3CE2     		b	.L14
 506              	.L35:
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 507              		.loc 1 428 16
 508 01aa 404B     		ldr	r3, .L80
 509 01ac 1B68     		ldr	r3, [r3]
 510 01ae 03F48063 		and	r3, r3, #1024
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 511              		.loc 1 428 15
 512 01b2 002B     		cmp	r3, #0
 513 01b4 F0D0     		beq	.L36
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 514              		.loc 1 437 9
 515 01b6 3D4B     		ldr	r3, .L80
 516 01b8 5B68     		ldr	r3, [r3, #4]
 517 01ba 23F0FE42 		bic	r2, r3, #2130706432
 518 01be 7B68     		ldr	r3, [r7, #4]
 519 01c0 1B69     		ldr	r3, [r3, #16]
 520 01c2 1B06     		lsls	r3, r3, #24
 521 01c4 3949     		ldr	r1, .L80
 522 01c6 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccFV53yB.s 			page 18


 523 01c8 4B60     		str	r3, [r1, #4]
 524 01ca 1AE0     		b	.L28
 525              	.L34:
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 526              		.loc 1 442 9
 527 01cc 374B     		ldr	r3, .L80
 528 01ce 1B68     		ldr	r3, [r3]
 529 01d0 364A     		ldr	r2, .L80
 530 01d2 23F48073 		bic	r3, r3, #256
 531 01d6 1360     		str	r3, [r2]
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 532              		.loc 1 445 21
 533 01d8 FFF7FEFF 		bl	HAL_GetTick
 534 01dc 3861     		str	r0, [r7, #16]
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 535              		.loc 1 448 15
 536 01de 08E0     		b	.L37
 537              	.L38:
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 538              		.loc 1 450 16
 539 01e0 FFF7FEFF 		bl	HAL_GetTick
 540 01e4 0246     		mov	r2, r0
 541              		.loc 1 450 30
 542 01e6 3B69     		ldr	r3, [r7, #16]
 543 01e8 D31A     		subs	r3, r2, r3
 544              		.loc 1 450 14
 545 01ea 022B     		cmp	r3, #2
 546 01ec 01D9     		bls	.L37
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 547              		.loc 1 452 20
 548 01ee 0323     		movs	r3, #3
 549 01f0 18E2     		b	.L14
 550              	.L37:
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 551              		.loc 1 448 16
 552 01f2 2E4B     		ldr	r3, .L80
 553 01f4 1B68     		ldr	r3, [r3]
 554 01f6 03F48063 		and	r3, r3, #1024
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 555              		.loc 1 448 15
 556 01fa 002B     		cmp	r3, #0
 557 01fc F0D1     		bne	.L38
 558 01fe 00E0     		b	.L28
 559              	.L79:
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 560              		.loc 1 399 10
 561 0200 00BF     		nop
ARM GAS  /tmp/ccFV53yB.s 			page 19


 562              	.L28:
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 563              		.loc 1 459 26
 564 0202 7B68     		ldr	r3, [r7, #4]
 565 0204 1B68     		ldr	r3, [r3]
 566              		.loc 1 459 44
 567 0206 03F00803 		and	r3, r3, #8
 568              		.loc 1 459 6
 569 020a 002B     		cmp	r3, #0
 570 020c 3CD0     		beq	.L39
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the LSI State */
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 571              		.loc 1 465 25
 572 020e 7B68     		ldr	r3, [r7, #4]
 573 0210 5B69     		ldr	r3, [r3, #20]
 574              		.loc 1 465 7
 575 0212 002B     		cmp	r3, #0
 576 0214 1CD0     		beq	.L40
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 577              		.loc 1 468 7
 578 0216 254B     		ldr	r3, .L80
 579 0218 D3F89430 		ldr	r3, [r3, #148]
 580 021c 234A     		ldr	r2, .L80
 581 021e 43F00103 		orr	r3, r3, #1
 582 0222 C2F89430 		str	r3, [r2, #148]
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 583              		.loc 1 471 19
 584 0226 FFF7FEFF 		bl	HAL_GetTick
 585 022a 3861     		str	r0, [r7, #16]
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 586              		.loc 1 474 13
 587 022c 08E0     		b	.L41
 588              	.L42:
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 589              		.loc 1 476 14
 590 022e FFF7FEFF 		bl	HAL_GetTick
 591 0232 0246     		mov	r2, r0
 592              		.loc 1 476 28
 593 0234 3B69     		ldr	r3, [r7, #16]
 594 0236 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccFV53yB.s 			page 20


 595              		.loc 1 476 12
 596 0238 022B     		cmp	r3, #2
 597 023a 01D9     		bls	.L41
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 598              		.loc 1 478 18
 599 023c 0323     		movs	r3, #3
 600 023e F1E1     		b	.L14
 601              	.L41:
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 602              		.loc 1 474 14
 603 0240 1A4B     		ldr	r3, .L80
 604 0242 D3F89430 		ldr	r3, [r3, #148]
 605 0246 03F00203 		and	r3, r3, #2
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 606              		.loc 1 474 13
 607 024a 002B     		cmp	r3, #0
 608 024c EFD0     		beq	.L42
 609 024e 1BE0     		b	.L39
 610              	.L40:
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 611              		.loc 1 485 7
 612 0250 164B     		ldr	r3, .L80
 613 0252 D3F89430 		ldr	r3, [r3, #148]
 614 0256 154A     		ldr	r2, .L80
 615 0258 23F00103 		bic	r3, r3, #1
 616 025c C2F89430 		str	r3, [r2, #148]
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 617              		.loc 1 488 19
 618 0260 FFF7FEFF 		bl	HAL_GetTick
 619 0264 3861     		str	r0, [r7, #16]
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 620              		.loc 1 491 12
 621 0266 08E0     		b	.L43
 622              	.L44:
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 623              		.loc 1 493 13
 624 0268 FFF7FEFF 		bl	HAL_GetTick
 625 026c 0246     		mov	r2, r0
 626              		.loc 1 493 27
 627 026e 3B69     		ldr	r3, [r7, #16]
 628 0270 D31A     		subs	r3, r2, r3
 629              		.loc 1 493 11
 630 0272 022B     		cmp	r3, #2
 631 0274 01D9     		bls	.L43
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccFV53yB.s 			page 21


 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 632              		.loc 1 495 18
 633 0276 0323     		movs	r3, #3
 634 0278 D4E1     		b	.L14
 635              	.L43:
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 636              		.loc 1 491 13
 637 027a 0C4B     		ldr	r3, .L80
 638 027c D3F89430 		ldr	r3, [r3, #148]
 639 0280 03F00203 		and	r3, r3, #2
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 640              		.loc 1 491 12
 641 0284 002B     		cmp	r3, #0
 642 0286 EFD1     		bne	.L44
 643              	.L39:
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 644              		.loc 1 501 26
 645 0288 7B68     		ldr	r3, [r7, #4]
 646 028a 1B68     		ldr	r3, [r3]
 647              		.loc 1 501 44
 648 028c 03F00403 		and	r3, r3, #4
 649              		.loc 1 501 6
 650 0290 002B     		cmp	r3, #0
 651 0292 00F0AB80 		beq	.L45
 652              	.LBB2:
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 653              		.loc 1 503 22
 654 0296 0023     		movs	r3, #0
 655 0298 FB77     		strb	r3, [r7, #31]
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain if necessary */
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 656              		.loc 1 510 9
 657 029a 044B     		ldr	r3, .L80
 658 029c 9B6D     		ldr	r3, [r3, #88]
 659 029e 03F08053 		and	r3, r3, #268435456
 660              		.loc 1 510 41
 661 02a2 002B     		cmp	r3, #0
 662 02a4 06D1     		bne	.L46
 663              		.loc 1 510 41 is_stmt 0 discriminator 1
 664 02a6 0123     		movs	r3, #1
 665 02a8 05E0     		b	.L47
 666              	.L81:
 667 02aa 00BF     		.align	2
 668              	.L80:
 669 02ac 00100240 		.word	1073876992
 670 02b0 00000000 		.word	uwTickPrio
ARM GAS  /tmp/ccFV53yB.s 			page 22


 671              	.L46:
 672              		.loc 1 510 41 discriminator 2
 673 02b4 0023     		movs	r3, #0
 674              	.L47:
 675              		.loc 1 510 8 is_stmt 1 discriminator 4
 676 02b6 002B     		cmp	r3, #0
 677 02b8 0DD0     		beq	.L48
 678              	.LBB3:
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 679              		.loc 1 512 7
 680 02ba AF4B     		ldr	r3, .L82
 681 02bc 9B6D     		ldr	r3, [r3, #88]
 682 02be AE4A     		ldr	r2, .L82
 683 02c0 43F08053 		orr	r3, r3, #268435456
 684 02c4 9365     		str	r3, [r2, #88]
 685 02c6 AC4B     		ldr	r3, .L82
 686 02c8 9B6D     		ldr	r3, [r3, #88]
 687 02ca 03F08053 		and	r3, r3, #268435456
 688 02ce FB60     		str	r3, [r7, #12]
 689 02d0 FB68     		ldr	r3, [r7, #12]
 690              	.LBE3:
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pwrclkchanged = SET;
 691              		.loc 1 513 21
 692 02d2 0123     		movs	r3, #1
 693 02d4 FB77     		strb	r3, [r7, #31]
 694              	.L48:
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 695              		.loc 1 516 9
 696 02d6 A94B     		ldr	r3, .L82+4
 697 02d8 1B68     		ldr	r3, [r3]
 698 02da 03F48073 		and	r3, r3, #256
 699              		.loc 1 516 8
 700 02de 002B     		cmp	r3, #0
 701 02e0 18D1     		bne	.L49
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       SET_BIT(PWR->CR1, PWR_CR1_DBP);
 702              		.loc 1 519 7
 703 02e2 A64B     		ldr	r3, .L82+4
 704 02e4 1B68     		ldr	r3, [r3]
 705 02e6 A54A     		ldr	r2, .L82+4
 706 02e8 43F48073 		orr	r3, r3, #256
 707 02ec 1360     		str	r3, [r2]
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 708              		.loc 1 522 19
 709 02ee FFF7FEFF 		bl	HAL_GetTick
 710 02f2 3861     		str	r0, [r7, #16]
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 711              		.loc 1 524 13
 712 02f4 08E0     		b	.L50
 713              	.L51:
ARM GAS  /tmp/ccFV53yB.s 			page 23


 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 714              		.loc 1 526 14
 715 02f6 FFF7FEFF 		bl	HAL_GetTick
 716 02fa 0246     		mov	r2, r0
 717              		.loc 1 526 28
 718 02fc 3B69     		ldr	r3, [r7, #16]
 719 02fe D31A     		subs	r3, r2, r3
 720              		.loc 1 526 12
 721 0300 022B     		cmp	r3, #2
 722 0302 01D9     		bls	.L50
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 723              		.loc 1 528 18
 724 0304 0323     		movs	r3, #3
 725 0306 8DE1     		b	.L14
 726              	.L50:
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 727              		.loc 1 524 14
 728 0308 9C4B     		ldr	r3, .L82+4
 729 030a 1B68     		ldr	r3, [r3]
 730 030c 03F48073 		and	r3, r3, #256
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 731              		.loc 1 524 13
 732 0310 002B     		cmp	r3, #0
 733 0312 F0D0     		beq	.L51
 734              	.L49:
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 735              		.loc 1 534 5
 736 0314 7B68     		ldr	r3, [r7, #4]
 737 0316 9B68     		ldr	r3, [r3, #8]
 738 0318 012B     		cmp	r3, #1
 739 031a 08D1     		bne	.L52
 740              		.loc 1 534 5 is_stmt 0 discriminator 1
 741 031c 964B     		ldr	r3, .L82
 742 031e D3F89030 		ldr	r3, [r3, #144]
 743 0322 954A     		ldr	r2, .L82
 744 0324 43F00103 		orr	r3, r3, #1
 745 0328 C2F89030 		str	r3, [r2, #144]
 746 032c 24E0     		b	.L53
 747              	.L52:
 748              		.loc 1 534 5 discriminator 2
 749 032e 7B68     		ldr	r3, [r7, #4]
 750 0330 9B68     		ldr	r3, [r3, #8]
 751 0332 052B     		cmp	r3, #5
 752 0334 10D1     		bne	.L54
 753              		.loc 1 534 5 discriminator 3
 754 0336 904B     		ldr	r3, .L82
 755 0338 D3F89030 		ldr	r3, [r3, #144]
 756 033c 8E4A     		ldr	r2, .L82
 757 033e 43F00403 		orr	r3, r3, #4
 758 0342 C2F89030 		str	r3, [r2, #144]
ARM GAS  /tmp/ccFV53yB.s 			page 24


 759 0346 8C4B     		ldr	r3, .L82
 760 0348 D3F89030 		ldr	r3, [r3, #144]
 761 034c 8A4A     		ldr	r2, .L82
 762 034e 43F00103 		orr	r3, r3, #1
 763 0352 C2F89030 		str	r3, [r2, #144]
 764 0356 0FE0     		b	.L53
 765              	.L54:
 766              		.loc 1 534 5 discriminator 4
 767 0358 874B     		ldr	r3, .L82
 768 035a D3F89030 		ldr	r3, [r3, #144]
 769 035e 864A     		ldr	r2, .L82
 770 0360 23F00103 		bic	r3, r3, #1
 771 0364 C2F89030 		str	r3, [r2, #144]
 772 0368 834B     		ldr	r3, .L82
 773 036a D3F89030 		ldr	r3, [r3, #144]
 774 036e 824A     		ldr	r2, .L82
 775 0370 23F00403 		bic	r3, r3, #4
 776 0374 C2F89030 		str	r3, [r2, #144]
 777              	.L53:
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the LSE State */
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 778              		.loc 1 537 26 is_stmt 1
 779 0378 7B68     		ldr	r3, [r7, #4]
 780 037a 9B68     		ldr	r3, [r3, #8]
 781              		.loc 1 537 8
 782 037c 002B     		cmp	r3, #0
 783 037e 16D0     		beq	.L55
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 784              		.loc 1 540 19
 785 0380 FFF7FEFF 		bl	HAL_GetTick
 786 0384 3861     		str	r0, [r7, #16]
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 787              		.loc 1 543 13
 788 0386 0AE0     		b	.L56
 789              	.L57:
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 790              		.loc 1 545 13
 791 0388 FFF7FEFF 		bl	HAL_GetTick
 792 038c 0246     		mov	r2, r0
 793              		.loc 1 545 27
 794 038e 3B69     		ldr	r3, [r7, #16]
 795 0390 D31A     		subs	r3, r2, r3
 796              		.loc 1 545 11
 797 0392 41F28832 		movw	r2, #5000
 798 0396 9342     		cmp	r3, r2
 799 0398 01D9     		bls	.L56
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 800              		.loc 1 547 18
 801 039a 0323     		movs	r3, #3
 802 039c 42E1     		b	.L14
ARM GAS  /tmp/ccFV53yB.s 			page 25


 803              	.L56:
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 804              		.loc 1 543 14
 805 039e 764B     		ldr	r3, .L82
 806 03a0 D3F89030 		ldr	r3, [r3, #144]
 807 03a4 03F00203 		and	r3, r3, #2
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 808              		.loc 1 543 13
 809 03a8 002B     		cmp	r3, #0
 810 03aa EDD0     		beq	.L57
 811 03ac 15E0     		b	.L58
 812              	.L55:
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 813              		.loc 1 554 19
 814 03ae FFF7FEFF 		bl	HAL_GetTick
 815 03b2 3861     		str	r0, [r7, #16]
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 816              		.loc 1 557 13
 817 03b4 0AE0     		b	.L59
 818              	.L60:
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 819              		.loc 1 559 13
 820 03b6 FFF7FEFF 		bl	HAL_GetTick
 821 03ba 0246     		mov	r2, r0
 822              		.loc 1 559 27
 823 03bc 3B69     		ldr	r3, [r7, #16]
 824 03be D31A     		subs	r3, r2, r3
 825              		.loc 1 559 11
 826 03c0 41F28832 		movw	r2, #5000
 827 03c4 9342     		cmp	r3, r2
 828 03c6 01D9     		bls	.L59
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 829              		.loc 1 561 18
 830 03c8 0323     		movs	r3, #3
 831 03ca 2BE1     		b	.L14
 832              	.L59:
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 833              		.loc 1 557 14
 834 03cc 6A4B     		ldr	r3, .L82
 835 03ce D3F89030 		ldr	r3, [r3, #144]
 836 03d2 03F00203 		and	r3, r3, #2
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 837              		.loc 1 557 13
 838 03d6 002B     		cmp	r3, #0
 839 03d8 EDD1     		bne	.L60
 840              	.L58:
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccFV53yB.s 			page 26


 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (pwrclkchanged == SET)
 841              		.loc 1 567 8
 842 03da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 843 03dc 012B     		cmp	r3, #1
 844 03de 05D1     		bne	.L45
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 845              		.loc 1 569 7
 846 03e0 654B     		ldr	r3, .L82
 847 03e2 9B6D     		ldr	r3, [r3, #88]
 848 03e4 644A     		ldr	r2, .L82
 849 03e6 23F08053 		bic	r3, r3, #268435456
 850 03ea 9365     		str	r3, [r2, #88]
 851              	.L45:
 852              	.LBE2:
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -----------------------*/
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 853              		.loc 1 574 25
 854 03ec 7B68     		ldr	r3, [r7, #4]
 855 03ee 1B68     		ldr	r3, [r3]
 856              		.loc 1 574 43
 857 03f0 03F02003 		and	r3, r3, #32
 858              		.loc 1 574 5
 859 03f4 002B     		cmp	r3, #0
 860 03f6 3CD0     		beq	.L61
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the HSI48 State */
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 861              		.loc 1 580 25
 862 03f8 7B68     		ldr	r3, [r7, #4]
 863 03fa 9B69     		ldr	r3, [r3, #24]
 864              		.loc 1 580 7
 865 03fc 002B     		cmp	r3, #0
 866 03fe 1CD0     		beq	.L62
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 867              		.loc 1 583 7
 868 0400 5D4B     		ldr	r3, .L82
 869 0402 D3F89830 		ldr	r3, [r3, #152]
 870 0406 5C4A     		ldr	r2, .L82
 871 0408 43F00103 		orr	r3, r3, #1
 872 040c C2F89830 		str	r3, [r2, #152]
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 873              		.loc 1 586 19
ARM GAS  /tmp/ccFV53yB.s 			page 27


 874 0410 FFF7FEFF 		bl	HAL_GetTick
 875 0414 3861     		str	r0, [r7, #16]
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 876              		.loc 1 589 12
 877 0416 08E0     		b	.L63
 878              	.L64:
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 879              		.loc 1 591 13
 880 0418 FFF7FEFF 		bl	HAL_GetTick
 881 041c 0246     		mov	r2, r0
 882              		.loc 1 591 27
 883 041e 3B69     		ldr	r3, [r7, #16]
 884 0420 D31A     		subs	r3, r2, r3
 885              		.loc 1 591 11
 886 0422 022B     		cmp	r3, #2
 887 0424 01D9     		bls	.L63
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 888              		.loc 1 593 18
 889 0426 0323     		movs	r3, #3
 890 0428 FCE0     		b	.L14
 891              	.L63:
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 892              		.loc 1 589 13
 893 042a 534B     		ldr	r3, .L82
 894 042c D3F89830 		ldr	r3, [r3, #152]
 895 0430 03F00203 		and	r3, r3, #2
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 896              		.loc 1 589 12
 897 0434 002B     		cmp	r3, #0
 898 0436 EFD0     		beq	.L64
 899 0438 1BE0     		b	.L61
 900              	.L62:
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 901              		.loc 1 600 7
 902 043a 4F4B     		ldr	r3, .L82
 903 043c D3F89830 		ldr	r3, [r3, #152]
 904 0440 4D4A     		ldr	r2, .L82
 905 0442 23F00103 		bic	r3, r3, #1
 906 0446 C2F89830 		str	r3, [r2, #152]
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 907              		.loc 1 603 19
 908 044a FFF7FEFF 		bl	HAL_GetTick
 909 044e 3861     		str	r0, [r7, #16]
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till HSI48 is disabled */
ARM GAS  /tmp/ccFV53yB.s 			page 28


 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 910              		.loc 1 606 12
 911 0450 08E0     		b	.L65
 912              	.L66:
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 913              		.loc 1 608 13
 914 0452 FFF7FEFF 		bl	HAL_GetTick
 915 0456 0246     		mov	r2, r0
 916              		.loc 1 608 27
 917 0458 3B69     		ldr	r3, [r7, #16]
 918 045a D31A     		subs	r3, r2, r3
 919              		.loc 1 608 11
 920 045c 022B     		cmp	r3, #2
 921 045e 01D9     		bls	.L65
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 922              		.loc 1 610 18
 923 0460 0323     		movs	r3, #3
 924 0462 DFE0     		b	.L14
 925              	.L65:
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 926              		.loc 1 606 13
 927 0464 444B     		ldr	r3, .L82
 928 0466 D3F89830 		ldr	r3, [r3, #152]
 929 046a 03F00203 		and	r3, r3, #2
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 930              		.loc 1 606 12
 931 046e 002B     		cmp	r3, #0
 932 0470 EFD1     		bne	.L66
 933              	.L61:
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 934              		.loc 1 620 29
 935 0472 7B68     		ldr	r3, [r7, #4]
 936 0474 DB69     		ldr	r3, [r3, #28]
 937              		.loc 1 620 6
 938 0476 002B     		cmp	r3, #0
 939 0478 00F0D380 		beq	.L67
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 940              		.loc 1 623 9
 941 047c 3E4B     		ldr	r3, .L82
 942 047e 9B68     		ldr	r3, [r3, #8]
 943 0480 03F00C03 		and	r3, r3, #12
 944              		.loc 1 623 8
 945 0484 0C2B     		cmp	r3, #12
 946 0486 00F08D80 		beq	.L68
ARM GAS  /tmp/ccFV53yB.s 			page 29


 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 947              		.loc 1 625 33
 948 048a 7B68     		ldr	r3, [r7, #4]
 949 048c DB69     		ldr	r3, [r3, #28]
 950              		.loc 1 625 10
 951 048e 022B     		cmp	r3, #2
 952 0490 5AD1     		bne	.L69
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the parameters */
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the main PLL. */
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 953              		.loc 1 636 9
 954 0492 394B     		ldr	r3, .L82
 955 0494 1B68     		ldr	r3, [r3]
 956 0496 384A     		ldr	r2, .L82
 957 0498 23F08073 		bic	r3, r3, #16777216
 958 049c 1360     		str	r3, [r2]
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 959              		.loc 1 639 21
 960 049e FFF7FEFF 		bl	HAL_GetTick
 961 04a2 3861     		str	r0, [r7, #16]
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 962              		.loc 1 642 15
 963 04a4 08E0     		b	.L70
 964              	.L71:
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 965              		.loc 1 644 16
 966 04a6 FFF7FEFF 		bl	HAL_GetTick
 967 04aa 0246     		mov	r2, r0
 968              		.loc 1 644 30
 969 04ac 3B69     		ldr	r3, [r7, #16]
 970 04ae D31A     		subs	r3, r2, r3
 971              		.loc 1 644 14
 972 04b0 022B     		cmp	r3, #2
 973 04b2 01D9     		bls	.L70
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 974              		.loc 1 646 20
 975 04b4 0323     		movs	r3, #3
 976 04b6 B5E0     		b	.L14
 977              	.L70:
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 978              		.loc 1 642 16
 979 04b8 2F4B     		ldr	r3, .L82
ARM GAS  /tmp/ccFV53yB.s 			page 30


 980 04ba 1B68     		ldr	r3, [r3]
 981 04bc 03F00073 		and	r3, r3, #33554432
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 982              		.loc 1 642 15
 983 04c0 002B     		cmp	r3, #0
 984 04c2 F0D1     		bne	.L71
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 985              		.loc 1 651 9
 986 04c4 2C4B     		ldr	r3, .L82
 987 04c6 DA68     		ldr	r2, [r3, #12]
 988 04c8 2D4B     		ldr	r3, .L82+8
 989 04ca 1340     		ands	r3, r3, r2
 990 04cc 7A68     		ldr	r2, [r7, #4]
 991 04ce 116A     		ldr	r1, [r2, #32]
 992 04d0 7A68     		ldr	r2, [r7, #4]
 993 04d2 526A     		ldr	r2, [r2, #36]
 994 04d4 013A     		subs	r2, r2, #1
 995 04d6 1201     		lsls	r2, r2, #4
 996 04d8 1143     		orrs	r1, r1, r2
 997 04da 7A68     		ldr	r2, [r7, #4]
 998 04dc 926A     		ldr	r2, [r2, #40]
 999 04de 1202     		lsls	r2, r2, #8
 1000 04e0 1143     		orrs	r1, r1, r2
 1001 04e2 7A68     		ldr	r2, [r7, #4]
 1002 04e4 126B     		ldr	r2, [r2, #48]
 1003 04e6 5208     		lsrs	r2, r2, #1
 1004 04e8 013A     		subs	r2, r2, #1
 1005 04ea 5205     		lsls	r2, r2, #21
 1006 04ec 1143     		orrs	r1, r1, r2
 1007 04ee 7A68     		ldr	r2, [r7, #4]
 1008 04f0 526B     		ldr	r2, [r2, #52]
 1009 04f2 5208     		lsrs	r2, r2, #1
 1010 04f4 013A     		subs	r2, r2, #1
 1011 04f6 5206     		lsls	r2, r2, #25
 1012 04f8 1143     		orrs	r1, r1, r2
 1013 04fa 7A68     		ldr	r2, [r7, #4]
 1014 04fc D26A     		ldr	r2, [r2, #44]
 1015 04fe D206     		lsls	r2, r2, #27
 1016 0500 0A43     		orrs	r2, r2, r1
 1017 0502 1D49     		ldr	r1, .L82
 1018 0504 1343     		orrs	r3, r3, r2
 1019 0506 CB60     		str	r3, [r1, #12]
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable the main PLL. */
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1020              		.loc 1 659 9
 1021 0508 1B4B     		ldr	r3, .L82
 1022 050a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFV53yB.s 			page 31


 1023 050c 1A4A     		ldr	r2, .L82
 1024 050e 43F08073 		orr	r3, r3, #16777216
 1025 0512 1360     		str	r3, [r2]
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 1026              		.loc 1 662 10
 1027 0514 184B     		ldr	r3, .L82
 1028 0516 DB68     		ldr	r3, [r3, #12]
 1029 0518 174A     		ldr	r2, .L82
 1030 051a 43F08073 		orr	r3, r3, #16777216
 1031 051e D360     		str	r3, [r2, #12]
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1032              		.loc 1 665 21
 1033 0520 FFF7FEFF 		bl	HAL_GetTick
 1034 0524 3861     		str	r0, [r7, #16]
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1035              		.loc 1 668 15
 1036 0526 08E0     		b	.L72
 1037              	.L73:
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1038              		.loc 1 670 16
 1039 0528 FFF7FEFF 		bl	HAL_GetTick
 1040 052c 0246     		mov	r2, r0
 1041              		.loc 1 670 30
 1042 052e 3B69     		ldr	r3, [r7, #16]
 1043 0530 D31A     		subs	r3, r2, r3
 1044              		.loc 1 670 14
 1045 0532 022B     		cmp	r3, #2
 1046 0534 01D9     		bls	.L72
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1047              		.loc 1 672 20
 1048 0536 0323     		movs	r3, #3
 1049 0538 74E0     		b	.L14
 1050              	.L72:
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1051              		.loc 1 668 16
 1052 053a 0F4B     		ldr	r3, .L82
 1053 053c 1B68     		ldr	r3, [r3]
 1054 053e 03F00073 		and	r3, r3, #33554432
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1055              		.loc 1 668 15
 1056 0542 002B     		cmp	r3, #0
 1057 0544 F0D0     		beq	.L73
 1058 0546 6CE0     		b	.L67
 1059              	.L69:
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccFV53yB.s 			page 32


 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the main PLL. */
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1060              		.loc 1 679 9
 1061 0548 0B4B     		ldr	r3, .L82
 1062 054a 1B68     		ldr	r3, [r3]
 1063 054c 0A4A     		ldr	r2, .L82
 1064 054e 23F08073 		bic	r3, r3, #16777216
 1065 0552 1360     		str	r3, [r2]
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable all PLL outputs to save power if no PLLs on */
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 1066              		.loc 1 682 11
 1067 0554 084B     		ldr	r3, .L82
 1068 0556 DB68     		ldr	r3, [r3, #12]
 1069 0558 074A     		ldr	r2, .L82
 1070 055a 23F00303 		bic	r3, r3, #3
 1071 055e D360     		str	r3, [r2, #12]
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_ADCCLK);
 1072              		.loc 1 683 9
 1073 0560 054B     		ldr	r3, .L82
 1074 0562 DB68     		ldr	r3, [r3, #12]
 1075 0564 044A     		ldr	r2, .L82
 1076 0566 23F08873 		bic	r3, r3, #17825792
 1077 056a 23F48033 		bic	r3, r3, #65536
 1078 056e D360     		str	r3, [r2, #12]
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1079              		.loc 1 686 21
 1080 0570 FFF7FEFF 		bl	HAL_GetTick
 1081 0574 3861     		str	r0, [r7, #16]
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1082              		.loc 1 689 15
 1083 0576 0EE0     		b	.L74
 1084              	.L83:
 1085              		.align	2
 1086              	.L82:
 1087 0578 00100240 		.word	1073876992
 1088 057c 00700040 		.word	1073770496
 1089 0580 0C809F01 		.word	27230220
 1090              	.L75:
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1091              		.loc 1 691 16
 1092 0584 FFF7FEFF 		bl	HAL_GetTick
 1093 0588 0246     		mov	r2, r0
 1094              		.loc 1 691 30
 1095 058a 3B69     		ldr	r3, [r7, #16]
 1096 058c D31A     		subs	r3, r2, r3
 1097              		.loc 1 691 14
 1098 058e 022B     		cmp	r3, #2
 1099 0590 01D9     		bls	.L74
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1100              		.loc 1 693 20
ARM GAS  /tmp/ccFV53yB.s 			page 33


 1101 0592 0323     		movs	r3, #3
 1102 0594 46E0     		b	.L14
 1103              	.L74:
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1104              		.loc 1 689 16
 1105 0596 254B     		ldr	r3, .L84
 1106 0598 1B68     		ldr	r3, [r3]
 1107 059a 03F00073 		and	r3, r3, #33554432
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1108              		.loc 1 689 15
 1109 059e 002B     		cmp	r3, #0
 1110 05a0 F0D1     		bne	.L75
 1111 05a2 3EE0     		b	.L67
 1112              	.L68:
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1113              		.loc 1 701 33
 1114 05a4 7B68     		ldr	r3, [r7, #4]
 1115 05a6 DB69     		ldr	r3, [r3, #28]
 1116              		.loc 1 701 9
 1117 05a8 012B     		cmp	r3, #1
 1118 05aa 01D1     		bne	.L76
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1119              		.loc 1 703 16
 1120 05ac 0123     		movs	r3, #1
 1121 05ae 39E0     		b	.L14
 1122              	.L76:
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Do not return HAL_ERROR if request repeats the current configuration */
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       temp_pllckcfg = RCC->PLLCFGR;
 1123              		.loc 1 708 26
 1124 05b0 1E4B     		ldr	r3, .L84
 1125              		.loc 1 708 21
 1126 05b2 DB68     		ldr	r3, [r3, #12]
 1127 05b4 7B61     		str	r3, [r7, #20]
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1128              		.loc 1 709 11
 1129 05b6 7B69     		ldr	r3, [r7, #20]
 1130 05b8 03F00302 		and	r2, r3, #3
 1131              		.loc 1 709 80
 1132 05bc 7B68     		ldr	r3, [r7, #4]
 1133 05be 1B6A     		ldr	r3, [r3, #32]
 1134              		.loc 1 709 9
 1135 05c0 9A42     		cmp	r2, r3
 1136 05c2 2CD1     		bne	.L77
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != (((RCC_OscInitStruct->PLL.PLLM) - 1U) << RCC
 1137              		.loc 1 710 11 discriminator 1
 1138 05c4 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccFV53yB.s 			page 34


 1139 05c6 03F0F002 		and	r2, r3, #240
 1140              		.loc 1 710 81 discriminator 1
 1141 05ca 7B68     		ldr	r3, [r7, #4]
 1142 05cc 5B6A     		ldr	r3, [r3, #36]
 1143              		.loc 1 710 88 discriminator 1
 1144 05ce 013B     		subs	r3, r3, #1
 1145              		.loc 1 710 94 discriminator 1
 1146 05d0 1B01     		lsls	r3, r3, #4
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1147              		.loc 1 709 92 discriminator 1
 1148 05d2 9A42     		cmp	r2, r3
 1149 05d4 23D1     		bne	.L77
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != ((RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFG
 1150              		.loc 1 711 11
 1151 05d6 7B69     		ldr	r3, [r7, #20]
 1152 05d8 03F4FE42 		and	r2, r3, #32512
 1153              		.loc 1 711 80
 1154 05dc 7B68     		ldr	r3, [r7, #4]
 1155 05de 9B6A     		ldr	r3, [r3, #40]
 1156              		.loc 1 711 87
 1157 05e0 1B02     		lsls	r3, r3, #8
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != (((RCC_OscInitStruct->PLL.PLLM) - 1U) << RCC
 1158              		.loc 1 710 120
 1159 05e2 9A42     		cmp	r2, r3
 1160 05e4 1BD1     		bne	.L77
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLPDIV) != ((RCC_OscInitStruct->PLL.PLLP) << RCC_PLL
 1161              		.loc 1 712 11
 1162 05e6 7B69     		ldr	r3, [r7, #20]
 1163 05e8 03F07842 		and	r2, r3, #-134217728
 1164              		.loc 1 712 83
 1165 05ec 7B68     		ldr	r3, [r7, #4]
 1166 05ee DB6A     		ldr	r3, [r3, #44]
 1167              		.loc 1 712 90
 1168 05f0 DB06     		lsls	r3, r3, #27
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != ((RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFG
 1169              		.loc 1 711 113
 1170 05f2 9A42     		cmp	r2, r3
 1171 05f4 13D1     		bne	.L77
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U
 1172              		.loc 1 713 11
 1173 05f6 7B69     		ldr	r3, [r7, #20]
 1174 05f8 03F4C002 		and	r2, r3, #6291456
 1175              		.loc 1 713 82
 1176 05fc 7B68     		ldr	r3, [r7, #4]
 1177 05fe 1B6B     		ldr	r3, [r3, #48]
 1178              		.loc 1 713 89
 1179 0600 5B08     		lsrs	r3, r3, #1
 1180              		.loc 1 713 96
 1181 0602 013B     		subs	r3, r3, #1
 1182              		.loc 1 713 102
 1183 0604 5B05     		lsls	r3, r3, #21
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLPDIV) != ((RCC_OscInitStruct->PLL.PLLP) << RCC_PLL
 1184              		.loc 1 712 119
 1185 0606 9A42     		cmp	r2, r3
 1186 0608 09D1     		bne	.L77
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U
 1187              		.loc 1 714 11
ARM GAS  /tmp/ccFV53yB.s 			page 35


 1188 060a 7B69     		ldr	r3, [r7, #20]
 1189 060c 03F0C062 		and	r2, r3, #100663296
 1190              		.loc 1 714 82
 1191 0610 7B68     		ldr	r3, [r7, #4]
 1192 0612 5B6B     		ldr	r3, [r3, #52]
 1193              		.loc 1 714 89
 1194 0614 5B08     		lsrs	r3, r3, #1
 1195              		.loc 1 714 96
 1196 0616 013B     		subs	r3, r3, #1
 1197              		.loc 1 714 102
 1198 0618 5B06     		lsls	r3, r3, #25
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U
 1199              		.loc 1 713 128
 1200 061a 9A42     		cmp	r2, r3
 1201 061c 01D0     		beq	.L67
 1202              	.L77:
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1203              		.loc 1 716 16
 1204 061e 0123     		movs	r3, #1
 1205 0620 00E0     		b	.L14
 1206              	.L67:
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_OK;
 1207              		.loc 1 722 10
 1208 0622 0023     		movs	r3, #0
 1209              	.L14:
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1210              		.loc 1 723 1
 1211 0624 1846     		mov	r0, r3
 1212 0626 2037     		adds	r7, r7, #32
 1213              	.LCFI8:
 1214              		.cfi_def_cfa_offset 8
 1215 0628 BD46     		mov	sp, r7
 1216              	.LCFI9:
 1217              		.cfi_def_cfa_register 13
 1218              		@ sp needed
 1219 062a 80BD     		pop	{r7, pc}
 1220              	.L85:
 1221              		.align	2
 1222              	.L84:
 1223 062c 00100240 		.word	1073876992
 1224              		.cfi_endproc
 1225              	.LFE326:
 1227              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1228              		.align	1
 1229              		.global	HAL_RCC_ClockConfig
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu fpv4-sp-d16
 1235              	HAL_RCC_ClockConfig:
 1236              	.LFB327:
ARM GAS  /tmp/ccFV53yB.s 			page 36


 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Initialize the CPU, AHB and APB busses clocks according to the specified
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_OscInitTypeDef structure that
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  FLatency  FLASH Latency
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_0   FLASH 0 Latency cycle
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_1   FLASH 1 Latency cycle
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_2   FLASH 2 Latency cycles
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_3   FLASH 3 Latency cycles
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_4   FLASH 4 Latency cycles
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_5   FLASH 5 Latency cycles
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_6   FLASH 6 Latency cycles
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_7   FLASH 7 Latency cycles
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_8   FLASH 8 Latency cycles
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_9   FLASH 9 Latency cycles
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_10  FLASH 10 Latency cycles
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_11  FLASH 11 Latency cycles
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_12  FLASH 12 Latency cycles
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_13  FLASH 13 Latency cycles
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_14  FLASH 14 Latency cycles
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_15  FLASH 15 Latency cycles
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The HSI is used by default as system clock source after
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STANDBY mode. After restart from Reset,
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the HSI frequency is set to its default value 16 MHz.
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The HSI can be selected as system clock source after
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         from STOP modes or in case of failure of the HSE used directly or indirectly
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         as system clock (if the Clock Security System CSS is enabled).
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         occur when the clock source is ready.
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   You can use HAL_RCC_GetClockConfig() function to know which clock is
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         currently used as system clock source.
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1237              		.loc 1 774 1
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 24
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241 0000 80B5     		push	{r7, lr}
 1242              	.LCFI10:
ARM GAS  /tmp/ccFV53yB.s 			page 37


 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 7, -8
 1245              		.cfi_offset 14, -4
 1246 0002 86B0     		sub	sp, sp, #24
 1247              	.LCFI11:
 1248              		.cfi_def_cfa_offset 32
 1249 0004 00AF     		add	r7, sp, #0
 1250              	.LCFI12:
 1251              		.cfi_def_cfa_register 7
 1252 0006 7860     		str	r0, [r7, #4]
 1253 0008 3960     		str	r1, [r7]
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllfreq;
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t hpre = RCC_SYSCLK_DIV1;
 1254              		.loc 1 777 12
 1255 000a 0023     		movs	r3, #0
 1256 000c 7B61     		str	r3, [r7, #20]
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check Null pointer */
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_ClkInitStruct == NULL)
 1257              		.loc 1 780 6
 1258 000e 7B68     		ldr	r3, [r7, #4]
 1259 0010 002B     		cmp	r3, #0
 1260 0012 01D1     		bne	.L87
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 1261              		.loc 1 782 12
 1262 0014 0123     		movs	r3, #1
 1263 0016 1EE1     		b	.L88
 1264              	.L87:
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (FLatency > __HAL_FLASH_GET_LATENCY())
 1265              		.loc 1 794 18
 1266 0018 914B     		ldr	r3, .L109
 1267 001a 1B68     		ldr	r3, [r3]
 1268 001c 03F00F03 		and	r3, r3, #15
 1269              		.loc 1 794 6
 1270 0020 3A68     		ldr	r2, [r7]
 1271 0022 9A42     		cmp	r2, r3
 1272 0024 10D9     		bls	.L89
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1273              		.loc 1 797 5
 1274 0026 8E4B     		ldr	r3, .L109
 1275 0028 1B68     		ldr	r3, [r3]
 1276 002a 23F00F02 		bic	r2, r3, #15
ARM GAS  /tmp/ccFV53yB.s 			page 38


 1277 002e 8C49     		ldr	r1, .L109
 1278 0030 3B68     		ldr	r3, [r7]
 1279 0032 1343     		orrs	r3, r3, r2
 1280 0034 0B60     		str	r3, [r1]
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 1281              		.loc 1 801 9
 1282 0036 8A4B     		ldr	r3, .L109
 1283 0038 1B68     		ldr	r3, [r3]
 1284 003a 03F00F03 		and	r3, r3, #15
 1285              		.loc 1 801 8
 1286 003e 3A68     		ldr	r2, [r7]
 1287 0040 9A42     		cmp	r2, r3
 1288 0042 01D0     		beq	.L89
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_ERROR;
 1289              		.loc 1 803 14
 1290 0044 0123     		movs	r3, #1
 1291 0046 06E1     		b	.L88
 1292              	.L89:
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1293              		.loc 1 808 25
 1294 0048 7B68     		ldr	r3, [r7, #4]
 1295 004a 1B68     		ldr	r3, [r3]
 1296              		.loc 1 808 38
 1297 004c 03F00103 		and	r3, r3, #1
 1298              		.loc 1 808 5
 1299 0050 002B     		cmp	r3, #0
 1300 0052 73D0     		beq	.L90
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1301              		.loc 1 813 26
 1302 0054 7B68     		ldr	r3, [r7, #4]
 1303 0056 5B68     		ldr	r3, [r3, #4]
 1304              		.loc 1 813 8
 1305 0058 032B     		cmp	r3, #3
 1306 005a 29D1     		bne	.L91
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1307              		.loc 1 816 11
 1308 005c 814B     		ldr	r3, .L109+4
 1309 005e 1B68     		ldr	r3, [r3]
 1310 0060 03F00073 		and	r3, r3, #33554432
 1311              		.loc 1 816 10
 1312 0064 002B     		cmp	r3, #0
 1313 0066 01D1     		bne	.L92
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccFV53yB.s 			page 39


 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1314              		.loc 1 818 16
 1315 0068 0123     		movs	r3, #1
 1316 006a F4E0     		b	.L88
 1317              	.L92:
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Compute target PLL output frequency */
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllfreq = RCC_GetSysClockFreqFromPLLSource();
 1318              		.loc 1 822 17
 1319 006c FFF7FEFF 		bl	RCC_GetSysClockFreqFromPLLSource
 1320 0070 3861     		str	r0, [r7, #16]
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if(pllfreq > 80000000U)
 1321              		.loc 1 825 9
 1322 0072 3B69     		ldr	r3, [r7, #16]
 1323 0074 7C4A     		ldr	r2, .L109+8
 1324 0076 9342     		cmp	r3, r2
 1325 0078 3FD9     		bls	.L95
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if (((READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)) ||
 1326              		.loc 1 827 15
 1327 007a 7A4B     		ldr	r3, .L109+4
 1328 007c 9B68     		ldr	r3, [r3, #8]
 1329 007e 03F0F003 		and	r3, r3, #240
 1330              		.loc 1 827 12
 1331 0082 002B     		cmp	r3, #0
 1332 0084 09D0     		beq	.L94
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1333              		.loc 1 828 35 discriminator 1
 1334 0086 7B68     		ldr	r3, [r7, #4]
 1335 0088 1B68     		ldr	r3, [r3]
 1336              		.loc 1 828 48 discriminator 1
 1337 008a 03F00203 		and	r3, r3, #2
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1338              		.loc 1 827 71 discriminator 1
 1339 008e 002B     		cmp	r3, #0
 1340 0090 33D0     		beq	.L95
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****               (RCC_ClkInitStruct->AHBCLKDivider == RCC_SYSCLK_DIV1))))
 1341              		.loc 1 829 33
 1342 0092 7B68     		ldr	r3, [r7, #4]
 1343 0094 9B68     		ldr	r3, [r3, #8]
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1344              		.loc 1 828 93
 1345 0096 002B     		cmp	r3, #0
 1346 0098 2FD1     		bne	.L95
 1347              	.L94:
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 1348              		.loc 1 831 11
 1349 009a 724B     		ldr	r3, .L109+4
 1350 009c 9B68     		ldr	r3, [r3, #8]
 1351 009e 23F0F003 		bic	r3, r3, #240
 1352 00a2 704A     		ldr	r2, .L109+4
 1353 00a4 43F08003 		orr	r3, r3, #128
 1354 00a8 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccFV53yB.s 			page 40


 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
 1355              		.loc 1 832 16
 1356 00aa 8023     		movs	r3, #128
 1357 00ac 7B61     		str	r3, [r7, #20]
 1358 00ae 24E0     		b	.L95
 1359              	.L91:
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1360              		.loc 1 839 28
 1361 00b0 7B68     		ldr	r3, [r7, #4]
 1362 00b2 5B68     		ldr	r3, [r3, #4]
 1363              		.loc 1 839 10
 1364 00b4 022B     		cmp	r3, #2
 1365 00b6 07D1     		bne	.L96
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the HSE ready flag */
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 1366              		.loc 1 842 12
 1367 00b8 6A4B     		ldr	r3, .L109+4
 1368 00ba 1B68     		ldr	r3, [r3]
 1369 00bc 03F40033 		and	r3, r3, #131072
 1370              		.loc 1 842 11
 1371 00c0 002B     		cmp	r3, #0
 1372 00c2 09D1     		bne	.L97
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 1373              		.loc 1 844 18
 1374 00c4 0123     		movs	r3, #1
 1375 00c6 C6E0     		b	.L88
 1376              	.L96:
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the HSI ready flag */
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 1377              		.loc 1 851 12
 1378 00c8 664B     		ldr	r3, .L109+4
 1379 00ca 1B68     		ldr	r3, [r3]
 1380 00cc 03F48063 		and	r3, r3, #1024
 1381              		.loc 1 851 11
 1382 00d0 002B     		cmp	r3, #0
 1383 00d2 01D1     		bne	.L97
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 1384              		.loc 1 853 18
 1385 00d4 0123     		movs	r3, #1
 1386 00d6 BEE0     		b	.L88
 1387              	.L97:
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccFV53yB.s 			page 41


 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz *
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllfreq = HAL_RCC_GetSysClockFreq();
 1388              		.loc 1 857 17
 1389 00d8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1390 00dc 3861     		str	r0, [r7, #16]
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Intermediate step with HCLK prescaler 2 necessary before to go under 80Mhz */
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if(pllfreq > 80000000U)
 1391              		.loc 1 860 9
 1392 00de 3B69     		ldr	r3, [r7, #16]
 1393 00e0 614A     		ldr	r2, .L109+8
 1394 00e2 9342     		cmp	r3, r2
 1395 00e4 09D9     		bls	.L95
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 1396              		.loc 1 862 9
 1397 00e6 5F4B     		ldr	r3, .L109+4
 1398 00e8 9B68     		ldr	r3, [r3, #8]
 1399 00ea 23F0F003 		bic	r3, r3, #240
 1400 00ee 5D4A     		ldr	r2, .L109+4
 1401 00f0 43F08003 		orr	r3, r3, #128
 1402 00f4 9360     		str	r3, [r2, #8]
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         hpre = RCC_SYSCLK_DIV2;
 1403              		.loc 1 863 14
 1404 00f6 8023     		movs	r3, #128
 1405 00f8 7B61     		str	r3, [r7, #20]
 1406              	.L95:
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 1407              		.loc 1 868 5
 1408 00fa 5A4B     		ldr	r3, .L109+4
 1409 00fc 9B68     		ldr	r3, [r3, #8]
 1410 00fe 23F00302 		bic	r2, r3, #3
 1411 0102 7B68     		ldr	r3, [r7, #4]
 1412 0104 5B68     		ldr	r3, [r3, #4]
 1413 0106 5749     		ldr	r1, .L109+4
 1414 0108 1343     		orrs	r3, r3, r2
 1415 010a 8B60     		str	r3, [r1, #8]
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Get Start Tick*/
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1416              		.loc 1 871 17
 1417 010c FFF7FEFF 		bl	HAL_GetTick
 1418 0110 F860     		str	r0, [r7, #12]
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1419              		.loc 1 873 11
 1420 0112 0AE0     		b	.L98
 1421              	.L99:
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1422              		.loc 1 875 12
 1423 0114 FFF7FEFF 		bl	HAL_GetTick
 1424 0118 0246     		mov	r2, r0
ARM GAS  /tmp/ccFV53yB.s 			page 42


 1425              		.loc 1 875 26
 1426 011a FB68     		ldr	r3, [r7, #12]
 1427 011c D31A     		subs	r3, r2, r3
 1428              		.loc 1 875 10
 1429 011e 41F28832 		movw	r2, #5000
 1430 0122 9342     		cmp	r3, r2
 1431 0124 01D9     		bls	.L98
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1432              		.loc 1 877 16
 1433 0126 0323     		movs	r3, #3
 1434 0128 95E0     		b	.L88
 1435              	.L98:
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1436              		.loc 1 873 12
 1437 012a 4E4B     		ldr	r3, .L109+4
 1438 012c 9B68     		ldr	r3, [r3, #8]
 1439 012e 03F00C02 		and	r2, r3, #12
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1440              		.loc 1 873 63
 1441 0132 7B68     		ldr	r3, [r7, #4]
 1442 0134 5B68     		ldr	r3, [r3, #4]
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1443              		.loc 1 873 78
 1444 0136 9B00     		lsls	r3, r3, #2
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1445              		.loc 1 873 11
 1446 0138 9A42     		cmp	r2, r3
 1447 013a EBD1     		bne	.L99
 1448              	.L90:
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1449              		.loc 1 883 26
 1450 013c 7B68     		ldr	r3, [r7, #4]
 1451 013e 1B68     		ldr	r3, [r3]
 1452              		.loc 1 883 39
 1453 0140 03F00203 		and	r3, r3, #2
 1454              		.loc 1 883 6
 1455 0144 002B     		cmp	r3, #0
 1456 0146 23D0     		beq	.L100
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the highest APB divider in order to ensure that we do not go through
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1457              		.loc 1 887 28
 1458 0148 7B68     		ldr	r3, [r7, #4]
 1459 014a 1B68     		ldr	r3, [r3]
 1460              		.loc 1 887 41
 1461 014c 03F00403 		and	r3, r3, #4
 1462              		.loc 1 887 8
 1463 0150 002B     		cmp	r3, #0
 1464 0152 05D0     		beq	.L101
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccFV53yB.s 			page 43


 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 1465              		.loc 1 889 7
 1466 0154 434B     		ldr	r3, .L109+4
 1467 0156 9B68     		ldr	r3, [r3, #8]
 1468 0158 424A     		ldr	r2, .L109+4
 1469 015a 43F4E063 		orr	r3, r3, #1792
 1470 015e 9360     		str	r3, [r2, #8]
 1471              	.L101:
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1472              		.loc 1 891 28
 1473 0160 7B68     		ldr	r3, [r7, #4]
 1474 0162 1B68     		ldr	r3, [r3]
 1475              		.loc 1 891 41
 1476 0164 03F00803 		and	r3, r3, #8
 1477              		.loc 1 891 8
 1478 0168 002B     		cmp	r3, #0
 1479 016a 07D0     		beq	.L102
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, RCC_HCLK_DIV16);
 1480              		.loc 1 893 7
 1481 016c 3D4B     		ldr	r3, .L109+4
 1482 016e 9B68     		ldr	r3, [r3, #8]
 1483 0170 23F47C53 		bic	r3, r3, #16128
 1484 0174 3B4A     		ldr	r2, .L109+4
 1485 0176 43F4E063 		orr	r3, r3, #1792
 1486 017a 9360     		str	r3, [r2, #8]
 1487              	.L102:
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1488              		.loc 1 898 5
 1489 017c 394B     		ldr	r3, .L109+4
 1490 017e 9B68     		ldr	r3, [r3, #8]
 1491 0180 23F0F002 		bic	r2, r3, #240
 1492 0184 7B68     		ldr	r3, [r7, #4]
 1493 0186 9B68     		ldr	r3, [r3, #8]
 1494 0188 3649     		ldr	r1, .L109+4
 1495 018a 1343     		orrs	r3, r3, r2
 1496 018c 8B60     		str	r3, [r1, #8]
 1497 018e 08E0     		b	.L103
 1498              	.L100:
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Is intermediate HCLK prescaler 2 applied internally, complete with HCLK prescaler 1 */
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(hpre == RCC_SYSCLK_DIV2)
 1499              		.loc 1 903 7
 1500 0190 7B69     		ldr	r3, [r7, #20]
 1501 0192 802B     		cmp	r3, #128
 1502 0194 05D1     		bne	.L103
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
 1503              		.loc 1 905 7
 1504 0196 334B     		ldr	r3, .L109+4
ARM GAS  /tmp/ccFV53yB.s 			page 44


 1505 0198 9B68     		ldr	r3, [r3, #8]
 1506 019a 324A     		ldr	r2, .L109+4
 1507 019c 23F0F003 		bic	r3, r3, #240
 1508 01a0 9360     		str	r3, [r2, #8]
 1509              	.L103:
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (FLatency < __HAL_FLASH_GET_LATENCY())
 1510              		.loc 1 910 18
 1511 01a2 2F4B     		ldr	r3, .L109
 1512 01a4 1B68     		ldr	r3, [r3]
 1513 01a6 03F00F03 		and	r3, r3, #15
 1514              		.loc 1 910 6
 1515 01aa 3A68     		ldr	r2, [r7]
 1516 01ac 9A42     		cmp	r2, r3
 1517 01ae 1DD2     		bcs	.L104
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1518              		.loc 1 913 5
 1519 01b0 2B4B     		ldr	r3, .L109
 1520 01b2 1B68     		ldr	r3, [r3]
 1521 01b4 23F00F02 		bic	r2, r3, #15
 1522 01b8 2949     		ldr	r1, .L109
 1523 01ba 3B68     		ldr	r3, [r7]
 1524 01bc 1343     		orrs	r3, r3, r2
 1525 01be 0B60     		str	r3, [r1]
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     memory by polling the FLASH_ACR register */
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1526              		.loc 1 917 17
 1527 01c0 FFF7FEFF 		bl	HAL_GetTick
 1528 01c4 F860     		str	r0, [r7, #12]
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     while (__HAL_FLASH_GET_LATENCY() != FLatency)
 1529              		.loc 1 919 11
 1530 01c6 0AE0     		b	.L105
 1531              	.L106:
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1532              		.loc 1 921 12
 1533 01c8 FFF7FEFF 		bl	HAL_GetTick
 1534 01cc 0246     		mov	r2, r0
 1535              		.loc 1 921 26
 1536 01ce FB68     		ldr	r3, [r7, #12]
 1537 01d0 D31A     		subs	r3, r2, r3
 1538              		.loc 1 921 10
 1539 01d2 41F28832 		movw	r2, #5000
 1540 01d6 9342     		cmp	r3, r2
 1541 01d8 01D9     		bls	.L105
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1542              		.loc 1 923 16
 1543 01da 0323     		movs	r3, #3
ARM GAS  /tmp/ccFV53yB.s 			page 45


 1544 01dc 3BE0     		b	.L88
 1545              	.L105:
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1546              		.loc 1 919 12
 1547 01de 204B     		ldr	r3, .L109
 1548 01e0 1B68     		ldr	r3, [r3]
 1549 01e2 03F00F03 		and	r3, r3, #15
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1550              		.loc 1 919 11
 1551 01e6 3A68     		ldr	r2, [r7]
 1552 01e8 9A42     		cmp	r2, r3
 1553 01ea EDD1     		bne	.L106
 1554              	.L104:
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1555              		.loc 1 929 26
 1556 01ec 7B68     		ldr	r3, [r7, #4]
 1557 01ee 1B68     		ldr	r3, [r3]
 1558              		.loc 1 929 39
 1559 01f0 03F00403 		and	r3, r3, #4
 1560              		.loc 1 929 6
 1561 01f4 002B     		cmp	r3, #0
 1562 01f6 08D0     		beq	.L107
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1563              		.loc 1 932 5
 1564 01f8 1A4B     		ldr	r3, .L109+4
 1565 01fa 9B68     		ldr	r3, [r3, #8]
 1566 01fc 23F4E062 		bic	r2, r3, #1792
 1567 0200 7B68     		ldr	r3, [r7, #4]
 1568 0202 DB68     		ldr	r3, [r3, #12]
 1569 0204 1749     		ldr	r1, .L109+4
 1570 0206 1343     		orrs	r3, r3, r2
 1571 0208 8B60     		str	r3, [r1, #8]
 1572              	.L107:
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1573              		.loc 1 936 25
 1574 020a 7B68     		ldr	r3, [r7, #4]
 1575 020c 1B68     		ldr	r3, [r3]
 1576              		.loc 1 936 38
 1577 020e 03F00803 		and	r3, r3, #8
 1578              		.loc 1 936 5
 1579 0212 002B     		cmp	r3, #0
 1580 0214 09D0     		beq	.L108
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1581              		.loc 1 939 5
 1582 0216 134B     		ldr	r3, .L109+4
ARM GAS  /tmp/ccFV53yB.s 			page 46


 1583 0218 9B68     		ldr	r3, [r3, #8]
 1584 021a 23F46052 		bic	r2, r3, #14336
 1585 021e 7B68     		ldr	r3, [r7, #4]
 1586 0220 1B69     		ldr	r3, [r3, #16]
 1587 0222 DB00     		lsls	r3, r3, #3
 1588 0224 0F49     		ldr	r1, .L109+4
 1589 0226 1343     		orrs	r3, r3, r2
 1590 0228 8B60     		str	r3, [r1, #8]
 1591              	.L108:
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) 
 1592              		.loc 1 943 21
 1593 022a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1594 022e 0146     		mov	r1, r0
 1595              		.loc 1 943 65
 1596 0230 0C4B     		ldr	r3, .L109+4
 1597 0232 9B68     		ldr	r3, [r3, #8]
 1598              		.loc 1 943 100
 1599 0234 1B09     		lsrs	r3, r3, #4
 1600 0236 03F00F03 		and	r3, r3, #15
 1601              		.loc 1 943 64
 1602 023a 0C4A     		ldr	r2, .L109+12
 1603 023c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1604              		.loc 1 943 122
 1605 023e 03F01F03 		and	r3, r3, #31
 1606              		.loc 1 943 47
 1607 0242 21FA03F3 		lsr	r3, r1, r3
 1608              		.loc 1 943 19
 1609 0246 0A4A     		ldr	r2, .L109+16
 1610 0248 1360     		str	r3, [r2]
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_InitTick(uwTickPrio);
 1611              		.loc 1 946 10
 1612 024a 0A4B     		ldr	r3, .L109+20
 1613 024c 1B68     		ldr	r3, [r3]
 1614 024e 1846     		mov	r0, r3
 1615 0250 FFF7FEFF 		bl	HAL_InitTick
 1616 0254 0346     		mov	r3, r0
 1617              	.L88:
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1618              		.loc 1 947 1
 1619 0256 1846     		mov	r0, r3
 1620 0258 1837     		adds	r7, r7, #24
 1621              	.LCFI13:
 1622              		.cfi_def_cfa_offset 8
 1623 025a BD46     		mov	sp, r7
 1624              	.LCFI14:
 1625              		.cfi_def_cfa_register 13
 1626              		@ sp needed
 1627 025c 80BD     		pop	{r7, pc}
 1628              	.L110:
 1629 025e 00BF     		.align	2
 1630              	.L109:
 1631 0260 00200240 		.word	1073881088
ARM GAS  /tmp/ccFV53yB.s 			page 47


 1632 0264 00100240 		.word	1073876992
 1633 0268 00B4C404 		.word	80000000
 1634 026c 00000000 		.word	AHBPrescTable
 1635 0270 00000000 		.word	SystemCoreClock
 1636 0274 00000000 		.word	uwTickPrio
 1637              		.cfi_endproc
 1638              	.LFE327:
 1640              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1641              		.align	1
 1642              		.global	HAL_RCC_MCOConfig
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1646              		.fpu fpv4-sp-d16
 1648              	HAL_RCC_MCOConfig:
 1649              	.LFB328:
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  *
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** @verbatim
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to:
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Ouput clock to MCO pin.
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Retrieve current clock frequencies.
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Enable the Clock Security System.
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** @endverbatim
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Select the clock source to output on MCO pin(PA8).
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCOx  specifies the output direction for the clock source.
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          For STM32G4xx family this parameter can have only one value:
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1  Clock source to output on MCO1 pin(PA8).
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCOSource  specifies the clock source to output.
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK  MCO output disabled, no clock on MCO
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK  system  clock selected as MCO source
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI  HSI clock selected as MCO source
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE  HSE clock selected as MCO sourcee
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK  main PLL clock selected as MCO source
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI  LSI clock selected as MCO source
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE  LSE clock selected as MCO source
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48  HSI48 clock selected as MCO source for devices with 
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCODiv  specifies the MCO prescaler.
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccFV53yB.s 			page 48


 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1  no division applied to MCO clock
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1650              		.loc 1 997 1
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 40
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}
 1655              	.LCFI15:
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 7, -8
 1658              		.cfi_offset 14, -4
 1659 0002 8AB0     		sub	sp, sp, #40
 1660              	.LCFI16:
 1661              		.cfi_def_cfa_offset 48
 1662 0004 00AF     		add	r7, sp, #0
 1663              	.LCFI17:
 1664              		.cfi_def_cfa_register 7
 1665 0006 F860     		str	r0, [r7, #12]
 1666 0008 B960     		str	r1, [r7, #8]
 1667 000a 7A60     		str	r2, [r7, #4]
 1668              	.LBB4:
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* MCO Clock Enable */
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1669              		.loc 1 1009 3
 1670 000c 154B     		ldr	r3, .L112
 1671 000e DB6C     		ldr	r3, [r3, #76]
 1672 0010 144A     		ldr	r2, .L112
 1673 0012 43F00103 		orr	r3, r3, #1
 1674 0016 D364     		str	r3, [r2, #76]
 1675 0018 124B     		ldr	r3, .L112
 1676 001a DB6C     		ldr	r3, [r3, #76]
 1677 001c 03F00103 		and	r3, r3, #1
 1678 0020 3B61     		str	r3, [r7, #16]
 1679 0022 3B69     		ldr	r3, [r7, #16]
 1680              	.LBE4:
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Configue the MCO1 pin in alternate function mode */
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_InitStruct.Pin = MCO1_PIN;
 1681              		.loc 1 1012 23
 1682 0024 4FF48073 		mov	r3, #256
ARM GAS  /tmp/ccFV53yB.s 			page 49


 1683 0028 7B61     		str	r3, [r7, #20]
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1684              		.loc 1 1013 24
 1685 002a 0223     		movs	r3, #2
 1686 002c BB61     		str	r3, [r7, #24]
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1687              		.loc 1 1014 25
 1688 002e 0323     		movs	r3, #3
 1689 0030 3B62     		str	r3, [r7, #32]
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1690              		.loc 1 1015 24
 1691 0032 0023     		movs	r3, #0
 1692 0034 FB61     		str	r3, [r7, #28]
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1693              		.loc 1 1016 29
 1694 0036 0023     		movs	r3, #0
 1695 0038 7B62     		str	r3, [r7, #36]
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1696              		.loc 1 1017 3
 1697 003a 07F11403 		add	r3, r7, #20
 1698 003e 1946     		mov	r1, r3
 1699 0040 4FF09040 		mov	r0, #1207959552
 1700 0044 FFF7FEFF 		bl	HAL_GPIO_Init
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Mask MCOSEL[] and MCOPRE[] bits then set MCO1 clock source and prescaler */
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE), (RCC_MCOSource | RCC_MCODiv));
 1701              		.loc 1 1020 3
 1702 0048 064B     		ldr	r3, .L112
 1703 004a 9B68     		ldr	r3, [r3, #8]
 1704 004c 23F0FE42 		bic	r2, r3, #2130706432
 1705 0050 B968     		ldr	r1, [r7, #8]
 1706 0052 7B68     		ldr	r3, [r7, #4]
 1707 0054 0B43     		orrs	r3, r3, r1
 1708 0056 0349     		ldr	r1, .L112
 1709 0058 1343     		orrs	r3, r3, r2
 1710 005a 8B60     		str	r3, [r1, #8]
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1711              		.loc 1 1021 1
 1712 005c 00BF     		nop
 1713 005e 2837     		adds	r7, r7, #40
 1714              	.LCFI18:
 1715              		.cfi_def_cfa_offset 8
 1716 0060 BD46     		mov	sp, r7
 1717              	.LCFI19:
 1718              		.cfi_def_cfa_register 13
 1719              		@ sp needed
 1720 0062 80BD     		pop	{r7, pc}
 1721              	.L113:
 1722              		.align	2
 1723              	.L112:
 1724 0064 00100240 		.word	1073876992
 1725              		.cfi_endproc
 1726              	.LFE328:
 1728              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1729              		.align	1
 1730              		.global	HAL_RCC_GetSysClockFreq
 1731              		.syntax unified
ARM GAS  /tmp/ccFV53yB.s 			page 50


 1732              		.thumb
 1733              		.thumb_func
 1734              		.fpu fpv4-sp-d16
 1736              	HAL_RCC_GetSysClockFreq:
 1737              	.LFB329:
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the SYSCLK frequency.
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         constant and the selected clock source:
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**),
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           HSI_VALUE(*) Value multiplied/divided by the PLL factors.
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32g4xx_hal_conf.h file (default value
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *               in voltage and temperature.
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32g4xx_hal_conf.h file (default value
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                have wrong result.
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         value for HSE crystal.
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1738              		.loc 1 1054 1
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 24
 1741              		@ frame_needed = 1, uses_anonymous_args = 0
 1742              		@ link register save eliminated.
 1743 0000 80B4     		push	{r7}
 1744              	.LCFI20:
 1745              		.cfi_def_cfa_offset 4
 1746              		.cfi_offset 7, -4
 1747 0002 87B0     		sub	sp, sp, #28
 1748              	.LCFI21:
 1749              		.cfi_def_cfa_offset 32
 1750 0004 00AF     		add	r7, sp, #0
 1751              	.LCFI22:
 1752              		.cfi_def_cfa_register 7
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t sysclockfreq;
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
ARM GAS  /tmp/ccFV53yB.s 			page 51


 1753              		.loc 1 1058 7
 1754 0006 2C4B     		ldr	r3, .L122
 1755 0008 9B68     		ldr	r3, [r3, #8]
 1756 000a 03F00C03 		and	r3, r3, #12
 1757              		.loc 1 1058 6
 1758 000e 042B     		cmp	r3, #4
 1759 0010 02D1     		bne	.L115
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* HSI used as system clock source */
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = HSI_VALUE;
 1760              		.loc 1 1061 18
 1761 0012 2A4B     		ldr	r3, .L122+4
 1762 0014 3B61     		str	r3, [r7, #16]
 1763 0016 47E0     		b	.L116
 1764              	.L115:
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 1765              		.loc 1 1063 12
 1766 0018 274B     		ldr	r3, .L122
 1767 001a 9B68     		ldr	r3, [r3, #8]
 1768 001c 03F00C03 		and	r3, r3, #12
 1769              		.loc 1 1063 11
 1770 0020 082B     		cmp	r3, #8
 1771 0022 02D1     		bne	.L117
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* HSE used as system clock source */
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
 1772              		.loc 1 1066 18
 1773 0024 264B     		ldr	r3, .L122+8
 1774 0026 3B61     		str	r3, [r7, #16]
 1775 0028 3EE0     		b	.L116
 1776              	.L117:
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL)
 1777              		.loc 1 1068 12
 1778 002a 234B     		ldr	r3, .L122
 1779 002c 9B68     		ldr	r3, [r3, #8]
 1780 002e 03F00C03 		and	r3, r3, #12
 1781              		.loc 1 1068 11
 1782 0032 0C2B     		cmp	r3, #12
 1783 0034 36D1     		bne	.L118
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL used as system clock  source */
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL_VCO = ((HSE_VALUE or HSI_VALUE)/ PLLM) * PLLN
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     */
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 1784              		.loc 1 1075 17
 1785 0036 204B     		ldr	r3, .L122
 1786 0038 DB68     		ldr	r3, [r3, #12]
 1787              		.loc 1 1075 15
 1788 003a 03F00303 		and	r3, r3, #3
 1789 003e FB60     		str	r3, [r7, #12]
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 1790              		.loc 1 1076 13
 1791 0040 1D4B     		ldr	r3, .L122
ARM GAS  /tmp/ccFV53yB.s 			page 52


 1792 0042 DB68     		ldr	r3, [r3, #12]
 1793              		.loc 1 1076 54
 1794 0044 1B09     		lsrs	r3, r3, #4
 1795 0046 03F00F03 		and	r3, r3, #15
 1796              		.loc 1 1076 10
 1797 004a 0133     		adds	r3, r3, #1
 1798 004c BB60     		str	r3, [r7, #8]
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     switch (pllsource)
 1799              		.loc 1 1078 5
 1800 004e FB68     		ldr	r3, [r7, #12]
 1801 0050 032B     		cmp	r3, #3
 1802 0052 0CD1     		bne	.L119
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_P
 1803              		.loc 1 1081 27
 1804 0054 1A4A     		ldr	r2, .L122+8
 1805 0056 BB68     		ldr	r3, [r7, #8]
 1806 0058 B2FBF3F3 		udiv	r3, r2, r3
 1807              		.loc 1 1081 38
 1808 005c 164A     		ldr	r2, .L122
 1809 005e D268     		ldr	r2, [r2, #12]
 1810              		.loc 1 1081 79
 1811 0060 120A     		lsrs	r2, r2, #8
 1812 0062 02F07F02 		and	r2, r2, #127
 1813              		.loc 1 1081 14
 1814 0066 02FB03F3 		mul	r3, r2, r3
 1815 006a 7B61     		str	r3, [r7, #20]
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       break;
 1816              		.loc 1 1082 7
 1817 006c 0CE0     		b	.L120
 1818              	.L119:
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     default:
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_P
 1819              		.loc 1 1086 27
 1820 006e 134A     		ldr	r2, .L122+4
 1821 0070 BB68     		ldr	r3, [r7, #8]
 1822 0072 B2FBF3F3 		udiv	r3, r2, r3
 1823              		.loc 1 1086 38
 1824 0076 104A     		ldr	r2, .L122
 1825 0078 D268     		ldr	r2, [r2, #12]
 1826              		.loc 1 1086 79
 1827 007a 120A     		lsrs	r2, r2, #8
 1828 007c 02F07F02 		and	r2, r2, #127
 1829              		.loc 1 1086 14
 1830 0080 02FB03F3 		mul	r3, r2, r3
 1831 0084 7B61     		str	r3, [r7, #20]
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       break;
 1832              		.loc 1 1087 7
 1833 0086 00BF     		nop
 1834              	.L120:
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 1835              		.loc 1 1089 14
ARM GAS  /tmp/ccFV53yB.s 			page 53


 1836 0088 0B4B     		ldr	r3, .L122
 1837 008a DB68     		ldr	r3, [r3, #12]
 1838              		.loc 1 1089 55
 1839 008c 5B0E     		lsrs	r3, r3, #25
 1840 008e 03F00303 		and	r3, r3, #3
 1841              		.loc 1 1089 87
 1842 0092 0133     		adds	r3, r3, #1
 1843              		.loc 1 1089 10
 1844 0094 5B00     		lsls	r3, r3, #1
 1845 0096 7B60     		str	r3, [r7, #4]
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 1846              		.loc 1 1090 18
 1847 0098 7A69     		ldr	r2, [r7, #20]
 1848 009a 7B68     		ldr	r3, [r7, #4]
 1849 009c B2FBF3F3 		udiv	r3, r2, r3
 1850 00a0 3B61     		str	r3, [r7, #16]
 1851 00a2 01E0     		b	.L116
 1852              	.L118:
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = 0U;
 1853              		.loc 1 1094 18
 1854 00a4 0023     		movs	r3, #0
 1855 00a6 3B61     		str	r3, [r7, #16]
 1856              	.L116:
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return sysclockfreq;
 1857              		.loc 1 1097 10
 1858 00a8 3B69     		ldr	r3, [r7, #16]
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1859              		.loc 1 1098 1
 1860 00aa 1846     		mov	r0, r3
 1861 00ac 1C37     		adds	r7, r7, #28
 1862              	.LCFI23:
 1863              		.cfi_def_cfa_offset 4
 1864 00ae BD46     		mov	sp, r7
 1865              	.LCFI24:
 1866              		.cfi_def_cfa_register 13
 1867              		@ sp needed
 1868 00b0 5DF8047B 		ldr	r7, [sp], #4
 1869              	.LCFI25:
 1870              		.cfi_restore 7
 1871              		.cfi_def_cfa_offset 0
 1872 00b4 7047     		bx	lr
 1873              	.L123:
 1874 00b6 00BF     		.align	2
 1875              	.L122:
 1876 00b8 00100240 		.word	1073876992
 1877 00bc 0024F400 		.word	16000000
 1878 00c0 00366E01 		.word	24000000
 1879              		.cfi_endproc
 1880              	.LFE329:
 1882              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1883              		.align	1
 1884              		.global	HAL_RCC_GetHCLKFreq
ARM GAS  /tmp/ccFV53yB.s 			page 54


 1885              		.syntax unified
 1886              		.thumb
 1887              		.thumb_func
 1888              		.fpu fpv4-sp-d16
 1890              	HAL_RCC_GetHCLKFreq:
 1891              	.LFB330:
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the HCLK frequency.
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HCLK frequency in Hz
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1892              		.loc 1 1109 1
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 0
 1895              		@ frame_needed = 1, uses_anonymous_args = 0
 1896              		@ link register save eliminated.
 1897 0000 80B4     		push	{r7}
 1898              	.LCFI26:
 1899              		.cfi_def_cfa_offset 4
 1900              		.cfi_offset 7, -4
 1901 0002 00AF     		add	r7, sp, #0
 1902              	.LCFI27:
 1903              		.cfi_def_cfa_register 7
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return SystemCoreClock;
 1904              		.loc 1 1110 10
 1905 0004 034B     		ldr	r3, .L126
 1906 0006 1B68     		ldr	r3, [r3]
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1907              		.loc 1 1111 1
 1908 0008 1846     		mov	r0, r3
 1909 000a BD46     		mov	sp, r7
 1910              	.LCFI28:
 1911              		.cfi_def_cfa_register 13
 1912              		@ sp needed
 1913 000c 5DF8047B 		ldr	r7, [sp], #4
 1914              	.LCFI29:
 1915              		.cfi_restore 7
 1916              		.cfi_def_cfa_offset 0
 1917 0010 7047     		bx	lr
 1918              	.L127:
 1919 0012 00BF     		.align	2
 1920              	.L126:
 1921 0014 00000000 		.word	SystemCoreClock
 1922              		.cfi_endproc
 1923              	.LFE330:
 1925              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1926              		.align	1
 1927              		.global	HAL_RCC_GetPCLK1Freq
 1928              		.syntax unified
 1929              		.thumb
 1930              		.thumb_func
ARM GAS  /tmp/ccFV53yB.s 			page 55


 1931              		.fpu fpv4-sp-d16
 1933              	HAL_RCC_GetPCLK1Freq:
 1934              	.LFB331:
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the PCLK1 frequency.
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval PCLK1 frequency in Hz
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1935              		.loc 1 1120 1
 1936              		.cfi_startproc
 1937              		@ args = 0, pretend = 0, frame = 0
 1938              		@ frame_needed = 1, uses_anonymous_args = 0
 1939 0000 80B5     		push	{r7, lr}
 1940              	.LCFI30:
 1941              		.cfi_def_cfa_offset 8
 1942              		.cfi_offset 7, -8
 1943              		.cfi_offset 14, -4
 1944 0002 00AF     		add	r7, sp, #0
 1945              	.LCFI31:
 1946              		.cfi_def_cfa_register 7
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_P
 1947              		.loc 1 1122 11
 1948 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1949 0008 0146     		mov	r1, r0
 1950              		.loc 1 1122 51
 1951 000a 064B     		ldr	r3, .L130
 1952 000c 9B68     		ldr	r3, [r3, #8]
 1953              		.loc 1 1122 87
 1954 000e 1B0A     		lsrs	r3, r3, #8
 1955 0010 03F00703 		and	r3, r3, #7
 1956              		.loc 1 1122 50
 1957 0014 044A     		ldr	r2, .L130+4
 1958 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1959              		.loc 1 1122 110
 1960 0018 03F01F03 		and	r3, r3, #31
 1961              		.loc 1 1122 33
 1962 001c 21FA03F3 		lsr	r3, r1, r3
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1963              		.loc 1 1123 1
 1964 0020 1846     		mov	r0, r3
 1965 0022 80BD     		pop	{r7, pc}
 1966              	.L131:
 1967              		.align	2
 1968              	.L130:
 1969 0024 00100240 		.word	1073876992
 1970 0028 00000000 		.word	APBPrescTable
 1971              		.cfi_endproc
 1972              	.LFE331:
 1974              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1975              		.align	1
 1976              		.global	HAL_RCC_GetPCLK2Freq
 1977              		.syntax unified
ARM GAS  /tmp/ccFV53yB.s 			page 56


 1978              		.thumb
 1979              		.thumb_func
 1980              		.fpu fpv4-sp-d16
 1982              	HAL_RCC_GetPCLK2Freq:
 1983              	.LFB332:
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the PCLK2 frequency.
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval PCLK2 frequency in Hz
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1984              		.loc 1 1132 1
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 0
 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988 0000 80B5     		push	{r7, lr}
 1989              	.LCFI32:
 1990              		.cfi_def_cfa_offset 8
 1991              		.cfi_offset 7, -8
 1992              		.cfi_offset 14, -4
 1993 0002 00AF     		add	r7, sp, #0
 1994              	.LCFI33:
 1995              		.cfi_def_cfa_register 7
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PP
 1996              		.loc 1 1134 11
 1997 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1998 0008 0146     		mov	r1, r0
 1999              		.loc 1 1134 50
 2000 000a 064B     		ldr	r3, .L134
 2001 000c 9B68     		ldr	r3, [r3, #8]
 2002              		.loc 1 1134 86
 2003 000e DB0A     		lsrs	r3, r3, #11
 2004 0010 03F00703 		and	r3, r3, #7
 2005              		.loc 1 1134 49
 2006 0014 044A     		ldr	r2, .L134+4
 2007 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2008              		.loc 1 1134 109
 2009 0018 03F01F03 		and	r3, r3, #31
 2010              		.loc 1 1134 32
 2011 001c 21FA03F3 		lsr	r3, r1, r3
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2012              		.loc 1 1135 1
 2013 0020 1846     		mov	r0, r3
 2014 0022 80BD     		pop	{r7, pc}
 2015              	.L135:
 2016              		.align	2
 2017              	.L134:
 2018 0024 00100240 		.word	1073876992
 2019 0028 00000000 		.word	APBPrescTable
 2020              		.cfi_endproc
 2021              	.LFE332:
 2023              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2024              		.align	1
ARM GAS  /tmp/ccFV53yB.s 			page 57


 2025              		.global	HAL_RCC_GetOscConfig
 2026              		.syntax unified
 2027              		.thumb
 2028              		.thumb_func
 2029              		.fpu fpv4-sp-d16
 2031              	HAL_RCC_GetOscConfig:
 2032              	.LFB333:
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Configure the RCC_OscInitStruct according to the internal
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC configuration registers.
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         will be configured.
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2033              		.loc 1 1145 1
 2034              		.cfi_startproc
 2035              		@ args = 0, pretend = 0, frame = 8
 2036              		@ frame_needed = 1, uses_anonymous_args = 0
 2037              		@ link register save eliminated.
 2038 0000 80B4     		push	{r7}
 2039              	.LCFI34:
 2040              		.cfi_def_cfa_offset 4
 2041              		.cfi_offset 7, -4
 2042 0002 83B0     		sub	sp, sp, #12
 2043              	.LCFI35:
 2044              		.cfi_def_cfa_offset 16
 2045 0004 00AF     		add	r7, sp, #0
 2046              	.LCFI36:
 2047              		.cfi_def_cfa_register 7
 2048 0006 7860     		str	r0, [r7, #4]
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != (void *)NULL);
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | \
 2049              		.loc 1 1150 37
 2050 0008 7B68     		ldr	r3, [r7, #4]
 2051 000a 2F22     		movs	r2, #47
 2052 000c 1A60     		str	r2, [r3]
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2053              		.loc 1 1154 6
 2054 000e 544B     		ldr	r3, .L151
 2055 0010 1B68     		ldr	r3, [r3]
 2056 0012 03F48023 		and	r3, r3, #262144
 2057              		.loc 1 1154 5
 2058 0016 B3F5802F 		cmp	r3, #262144
 2059 001a 04D1     		bne	.L137
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2060              		.loc 1 1156 33
 2061 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFV53yB.s 			page 58


 2062 001e 4FF4A022 		mov	r2, #327680
 2063 0022 5A60     		str	r2, [r3, #4]
 2064 0024 0EE0     		b	.L138
 2065              	.L137:
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if(READ_BIT(RCC->CR, RCC_CR_HSEON) == RCC_CR_HSEON)
 2066              		.loc 1 1158 11
 2067 0026 4E4B     		ldr	r3, .L151
 2068 0028 1B68     		ldr	r3, [r3]
 2069 002a 03F48033 		and	r3, r3, #65536
 2070              		.loc 1 1158 10
 2071 002e B3F5803F 		cmp	r3, #65536
 2072 0032 04D1     		bne	.L139
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2073              		.loc 1 1160 33
 2074 0034 7B68     		ldr	r3, [r7, #4]
 2075 0036 4FF48032 		mov	r2, #65536
 2076 003a 5A60     		str	r2, [r3, #4]
 2077 003c 02E0     		b	.L138
 2078              	.L139:
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2079              		.loc 1 1164 33
 2080 003e 7B68     		ldr	r3, [r7, #4]
 2081 0040 0022     		movs	r2, #0
 2082 0042 5A60     		str	r2, [r3, #4]
 2083              	.L138:
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSION) == RCC_CR_HSION)
 2084              		.loc 1 1168 6
 2085 0044 464B     		ldr	r3, .L151
 2086 0046 1B68     		ldr	r3, [r3]
 2087 0048 03F48073 		and	r3, r3, #256
 2088              		.loc 1 1168 5
 2089 004c B3F5807F 		cmp	r3, #256
 2090 0050 04D1     		bne	.L140
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2091              		.loc 1 1170 33
 2092 0052 7B68     		ldr	r3, [r7, #4]
 2093 0054 4FF48072 		mov	r2, #256
 2094 0058 DA60     		str	r2, [r3, #12]
 2095 005a 02E0     		b	.L141
 2096              	.L140:
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2097              		.loc 1 1174 33
 2098 005c 7B68     		ldr	r3, [r7, #4]
 2099 005e 0022     		movs	r2, #0
 2100 0060 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccFV53yB.s 			page 59


 2101              	.L141:
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSI
 2102              		.loc 1 1177 44
 2103 0062 3F4B     		ldr	r3, .L151
 2104 0064 5B68     		ldr	r3, [r3, #4]
 2105              		.loc 1 1177 84
 2106 0066 1B0E     		lsrs	r3, r3, #24
 2107 0068 03F07F02 		and	r2, r3, #127
 2108              		.loc 1 1177 42
 2109 006c 7B68     		ldr	r3, [r7, #4]
 2110 006e 1A61     		str	r2, [r3, #16]
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2111              		.loc 1 1180 6
 2112 0070 3B4B     		ldr	r3, .L151
 2113 0072 D3F89030 		ldr	r3, [r3, #144]
 2114 0076 03F00403 		and	r3, r3, #4
 2115              		.loc 1 1180 5
 2116 007a 042B     		cmp	r3, #4
 2117 007c 03D1     		bne	.L142
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2118              		.loc 1 1182 33
 2119 007e 7B68     		ldr	r3, [r7, #4]
 2120 0080 0522     		movs	r2, #5
 2121 0082 9A60     		str	r2, [r3, #8]
 2122 0084 0DE0     		b	.L143
 2123              	.L142:
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2124              		.loc 1 1184 11
 2125 0086 364B     		ldr	r3, .L151
 2126 0088 D3F89030 		ldr	r3, [r3, #144]
 2127 008c 03F00103 		and	r3, r3, #1
 2128              		.loc 1 1184 10
 2129 0090 012B     		cmp	r3, #1
 2130 0092 03D1     		bne	.L144
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2131              		.loc 1 1186 33
 2132 0094 7B68     		ldr	r3, [r7, #4]
 2133 0096 0122     		movs	r2, #1
 2134 0098 9A60     		str	r2, [r3, #8]
 2135 009a 02E0     		b	.L143
 2136              	.L144:
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2137              		.loc 1 1190 33
 2138 009c 7B68     		ldr	r3, [r7, #4]
 2139 009e 0022     		movs	r2, #0
 2140 00a0 9A60     		str	r2, [r3, #8]
 2141              	.L143:
ARM GAS  /tmp/ccFV53yB.s 			page 60


1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CSR, RCC_CSR_LSION) == RCC_CSR_LSION)
 2142              		.loc 1 1194 6
 2143 00a2 2F4B     		ldr	r3, .L151
 2144 00a4 D3F89430 		ldr	r3, [r3, #148]
 2145 00a8 03F00103 		and	r3, r3, #1
 2146              		.loc 1 1194 5
 2147 00ac 012B     		cmp	r3, #1
 2148 00ae 03D1     		bne	.L145
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2149              		.loc 1 1196 33
 2150 00b0 7B68     		ldr	r3, [r7, #4]
 2151 00b2 0122     		movs	r2, #1
 2152 00b4 5A61     		str	r2, [r3, #20]
 2153 00b6 02E0     		b	.L146
 2154              	.L145:
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2155              		.loc 1 1200 33
 2156 00b8 7B68     		ldr	r3, [r7, #4]
 2157 00ba 0022     		movs	r2, #0
 2158 00bc 5A61     		str	r2, [r3, #20]
 2159              	.L146:
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON) == RCC_CRRCR_HSI48ON)
 2160              		.loc 1 1204 6
 2161 00be 284B     		ldr	r3, .L151
 2162 00c0 D3F89830 		ldr	r3, [r3, #152]
 2163 00c4 03F00103 		and	r3, r3, #1
 2164              		.loc 1 1204 5
 2165 00c8 012B     		cmp	r3, #1
 2166 00ca 03D1     		bne	.L147
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 2167              		.loc 1 1206 35
 2168 00cc 7B68     		ldr	r3, [r7, #4]
 2169 00ce 0122     		movs	r2, #1
 2170 00d0 9A61     		str	r2, [r3, #24]
 2171 00d2 02E0     		b	.L148
 2172              	.L147:
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
 2173              		.loc 1 1210 35
 2174 00d4 7B68     		ldr	r3, [r7, #4]
 2175 00d6 0022     		movs	r2, #0
 2176 00d8 9A61     		str	r2, [r3, #24]
 2177              	.L148:
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccFV53yB.s 			page 61


1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_PLLON) == RCC_CR_PLLON)
 2178              		.loc 1 1214 6
 2179 00da 214B     		ldr	r3, .L151
 2180 00dc 1B68     		ldr	r3, [r3]
 2181 00de 03F08073 		and	r3, r3, #16777216
 2182              		.loc 1 1214 5
 2183 00e2 B3F1807F 		cmp	r3, #16777216
 2184 00e6 03D1     		bne	.L149
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2185              		.loc 1 1216 37
 2186 00e8 7B68     		ldr	r3, [r7, #4]
 2187 00ea 0222     		movs	r2, #2
 2188 00ec DA61     		str	r2, [r3, #28]
 2189 00ee 02E0     		b	.L150
 2190              	.L149:
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2191              		.loc 1 1220 37
 2192 00f0 7B68     		ldr	r3, [r7, #4]
 2193 00f2 0122     		movs	r2, #1
 2194 00f4 DA61     		str	r2, [r3, #28]
 2195              	.L150:
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2196              		.loc 1 1222 38
 2197 00f6 1A4B     		ldr	r3, .L151
 2198 00f8 DB68     		ldr	r3, [r3, #12]
 2199 00fa 03F00302 		and	r2, r3, #3
 2200              		.loc 1 1222 36
 2201 00fe 7B68     		ldr	r3, [r7, #4]
 2202 0100 1A62     		str	r2, [r3, #32]
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
 2203              		.loc 1 1223 34
 2204 0102 174B     		ldr	r3, .L151
 2205 0104 DB68     		ldr	r3, [r3, #12]
 2206              		.loc 1 1223 75
 2207 0106 1B09     		lsrs	r3, r3, #4
 2208 0108 03F00F03 		and	r3, r3, #15
 2209              		.loc 1 1223 100
 2210 010c 5A1C     		adds	r2, r3, #1
 2211              		.loc 1 1223 31
 2212 010e 7B68     		ldr	r3, [r7, #4]
 2213 0110 5A62     		str	r2, [r3, #36]
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2214              		.loc 1 1224 33
 2215 0112 134B     		ldr	r3, .L151
 2216 0114 DB68     		ldr	r3, [r3, #12]
 2217              		.loc 1 1224 74
 2218 0116 1B0A     		lsrs	r3, r3, #8
 2219 0118 03F07F02 		and	r2, r3, #127
 2220              		.loc 1 1224 31
 2221 011c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFV53yB.s 			page 62


 2222 011e 9A62     		str	r2, [r3, #40]
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2223              		.loc 1 1225 36
 2224 0120 0F4B     		ldr	r3, .L151
 2225 0122 DB68     		ldr	r3, [r3, #12]
 2226              		.loc 1 1225 77
 2227 0124 5B0D     		lsrs	r3, r3, #21
 2228 0126 03F00303 		and	r3, r3, #3
 2229              		.loc 1 1225 102
 2230 012a 0133     		adds	r3, r3, #1
 2231              		.loc 1 1225 108
 2232 012c 5A00     		lsls	r2, r3, #1
 2233              		.loc 1 1225 31
 2234 012e 7B68     		ldr	r3, [r7, #4]
 2235 0130 1A63     		str	r2, [r3, #48]
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2236              		.loc 1 1226 36
 2237 0132 0B4B     		ldr	r3, .L151
 2238 0134 DB68     		ldr	r3, [r3, #12]
 2239              		.loc 1 1226 77
 2240 0136 5B0E     		lsrs	r3, r3, #25
 2241 0138 03F00303 		and	r3, r3, #3
 2242              		.loc 1 1226 102
 2243 013c 0133     		adds	r3, r3, #1
 2244              		.loc 1 1226 108
 2245 013e 5A00     		lsls	r2, r3, #1
 2246              		.loc 1 1226 31
 2247 0140 7B68     		ldr	r3, [r7, #4]
 2248 0142 5A63     		str	r2, [r3, #52]
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_
 2249              		.loc 1 1227 33
 2250 0144 064B     		ldr	r3, .L151
 2251 0146 DB68     		ldr	r3, [r3, #12]
 2252              		.loc 1 1227 77
 2253 0148 DB0E     		lsrs	r3, r3, #27
 2254 014a 03F01F02 		and	r2, r3, #31
 2255              		.loc 1 1227 31
 2256 014e 7B68     		ldr	r3, [r7, #4]
 2257 0150 DA62     		str	r2, [r3, #44]
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2258              		.loc 1 1228 1
 2259 0152 00BF     		nop
 2260 0154 0C37     		adds	r7, r7, #12
 2261              	.LCFI37:
 2262              		.cfi_def_cfa_offset 4
 2263 0156 BD46     		mov	sp, r7
 2264              	.LCFI38:
 2265              		.cfi_def_cfa_register 13
 2266              		@ sp needed
 2267 0158 5DF8047B 		ldr	r7, [sp], #4
 2268              	.LCFI39:
 2269              		.cfi_restore 7
 2270              		.cfi_def_cfa_offset 0
 2271 015c 7047     		bx	lr
 2272              	.L152:
 2273 015e 00BF     		.align	2
 2274              	.L151:
ARM GAS  /tmp/ccFV53yB.s 			page 63


 2275 0160 00100240 		.word	1073876992
 2276              		.cfi_endproc
 2277              	.LFE333:
 2279              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2280              		.align	1
 2281              		.global	HAL_RCC_GetClockConfig
 2282              		.syntax unified
 2283              		.thumb
 2284              		.thumb_func
 2285              		.fpu fpv4-sp-d16
 2287              	HAL_RCC_GetClockConfig:
 2288              	.LFB334:
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Configure the RCC_ClkInitStruct according to the internal
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC configuration registers.
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_ClkInitTypeDef structure that
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         will be configured.
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  pFLatency  Pointer on the Flash Latency.
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2289              		.loc 1 1239 1
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 8
 2292              		@ frame_needed = 1, uses_anonymous_args = 0
 2293              		@ link register save eliminated.
 2294 0000 80B4     		push	{r7}
 2295              	.LCFI40:
 2296              		.cfi_def_cfa_offset 4
 2297              		.cfi_offset 7, -4
 2298 0002 83B0     		sub	sp, sp, #12
 2299              	.LCFI41:
 2300              		.cfi_def_cfa_offset 16
 2301 0004 00AF     		add	r7, sp, #0
 2302              	.LCFI42:
 2303              		.cfi_def_cfa_register 7
 2304 0006 7860     		str	r0, [r7, #4]
 2305 0008 3960     		str	r1, [r7]
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != (void  *)NULL);
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(pFLatency != (void *)NULL);
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2306              		.loc 1 1245 32
 2307 000a 7B68     		ldr	r3, [r7, #4]
 2308 000c 0F22     		movs	r2, #15
 2309 000e 1A60     		str	r2, [r3]
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = READ_BIT(RCC->CFGR, RCC_CFGR_SW);
 2310              		.loc 1 1248 37
 2311 0010 124B     		ldr	r3, .L154
 2312 0012 9B68     		ldr	r3, [r3, #8]
 2313 0014 03F00302 		and	r2, r3, #3
ARM GAS  /tmp/ccFV53yB.s 			page 64


 2314              		.loc 1 1248 35
 2315 0018 7B68     		ldr	r3, [r7, #4]
 2316 001a 5A60     		str	r2, [r3, #4]
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_HPRE);
 2317              		.loc 1 1251 38
 2318 001c 0F4B     		ldr	r3, .L154
 2319 001e 9B68     		ldr	r3, [r3, #8]
 2320 0020 03F0F002 		and	r2, r3, #240
 2321              		.loc 1 1251 36
 2322 0024 7B68     		ldr	r3, [r7, #4]
 2323 0026 9A60     		str	r2, [r3, #8]
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1);
 2324              		.loc 1 1254 39
 2325 0028 0C4B     		ldr	r3, .L154
 2326 002a 9B68     		ldr	r3, [r3, #8]
 2327 002c 03F4E062 		and	r2, r3, #1792
 2328              		.loc 1 1254 37
 2329 0030 7B68     		ldr	r3, [r7, #4]
 2330 0032 DA60     		str	r2, [r3, #12]
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> 3U);
 2331              		.loc 1 1257 40
 2332 0034 094B     		ldr	r3, .L154
 2333 0036 9B68     		ldr	r3, [r3, #8]
 2334              		.loc 1 1257 76
 2335 0038 DB08     		lsrs	r3, r3, #3
 2336 003a 03F4E062 		and	r2, r3, #1792
 2337              		.loc 1 1257 37
 2338 003e 7B68     		ldr	r3, [r7, #4]
 2339 0040 1A61     		str	r2, [r3, #16]
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY();
 2340              		.loc 1 1260 16
 2341 0042 074B     		ldr	r3, .L154+4
 2342 0044 1B68     		ldr	r3, [r3]
 2343 0046 03F00F02 		and	r2, r3, #15
 2344              		.loc 1 1260 14
 2345 004a 3B68     		ldr	r3, [r7]
 2346 004c 1A60     		str	r2, [r3]
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2347              		.loc 1 1261 1
 2348 004e 00BF     		nop
 2349 0050 0C37     		adds	r7, r7, #12
 2350              	.LCFI43:
 2351              		.cfi_def_cfa_offset 4
 2352 0052 BD46     		mov	sp, r7
 2353              	.LCFI44:
 2354              		.cfi_def_cfa_register 13
 2355              		@ sp needed
 2356 0054 5DF8047B 		ldr	r7, [sp], #4
 2357              	.LCFI45:
ARM GAS  /tmp/ccFV53yB.s 			page 65


 2358              		.cfi_restore 7
 2359              		.cfi_def_cfa_offset 0
 2360 0058 7047     		bx	lr
 2361              	.L155:
 2362 005a 00BF     		.align	2
 2363              	.L154:
 2364 005c 00100240 		.word	1073876992
 2365 0060 00200240 		.word	1073881088
 2366              		.cfi_endproc
 2367              	.LFE334:
 2369              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2370              		.align	1
 2371              		.global	HAL_RCC_EnableCSS
 2372              		.syntax unified
 2373              		.thumb
 2374              		.thumb_func
 2375              		.fpu fpv4-sp-d16
 2377              	HAL_RCC_EnableCSS:
 2378              	.LFB335:
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Enable the Clock Security System.
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset.
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2379              		.loc 1 1274 1
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 0
 2382              		@ frame_needed = 1, uses_anonymous_args = 0
 2383              		@ link register save eliminated.
 2384 0000 80B4     		push	{r7}
 2385              	.LCFI46:
 2386              		.cfi_def_cfa_offset 4
 2387              		.cfi_offset 7, -4
 2388 0002 00AF     		add	r7, sp, #0
 2389              	.LCFI47:
 2390              		.cfi_def_cfa_register 7
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 2391              		.loc 1 1275 3
 2392 0004 054B     		ldr	r3, .L157
 2393 0006 1B68     		ldr	r3, [r3]
 2394 0008 044A     		ldr	r2, .L157
 2395 000a 43F40023 		orr	r3, r3, #524288
 2396 000e 1360     		str	r3, [r2]
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2397              		.loc 1 1276 1
 2398 0010 00BF     		nop
 2399 0012 BD46     		mov	sp, r7
 2400              	.LCFI48:
 2401              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccFV53yB.s 			page 66


 2402              		@ sp needed
 2403 0014 5DF8047B 		ldr	r7, [sp], #4
 2404              	.LCFI49:
 2405              		.cfi_restore 7
 2406              		.cfi_def_cfa_offset 0
 2407 0018 7047     		bx	lr
 2408              	.L158:
 2409 001a 00BF     		.align	2
 2410              	.L157:
 2411 001c 00100240 		.word	1073876992
 2412              		.cfi_endproc
 2413              	.LFE335:
 2415              		.section	.text.HAL_RCC_EnableLSECSS,"ax",%progbits
 2416              		.align	1
 2417              		.global	HAL_RCC_EnableLSECSS
 2418              		.syntax unified
 2419              		.thumb
 2420              		.thumb_func
 2421              		.fpu fpv4-sp-d16
 2423              	HAL_RCC_EnableLSECSS:
 2424              	.LFB336:
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Enable the LSE Clock Security System.
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   If a failure is detected on the external 32 kHz oscillator,
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the LSE clock is no longer supplied to the RTC but no hardware action
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         is made to the registers. If enabled, an interrupt will be generated
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         and handle through @ref RCCEx_EXTI_LINE_LSECSS
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset or after a LSE failure detection
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_EnableLSECSS(void)
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2425              		.loc 1 1288 1
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 0
 2428              		@ frame_needed = 1, uses_anonymous_args = 0
 2429              		@ link register save eliminated.
 2430 0000 80B4     		push	{r7}
 2431              	.LCFI50:
 2432              		.cfi_def_cfa_offset 4
 2433              		.cfi_offset 7, -4
 2434 0002 00AF     		add	r7, sp, #0
 2435              	.LCFI51:
 2436              		.cfi_def_cfa_register 7
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
 2437              		.loc 1 1289 3
 2438 0004 064B     		ldr	r3, .L160
 2439 0006 D3F89030 		ldr	r3, [r3, #144]
 2440 000a 054A     		ldr	r2, .L160
 2441 000c 43F02003 		orr	r3, r3, #32
 2442 0010 C2F89030 		str	r3, [r2, #144]
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2443              		.loc 1 1290 1
 2444 0014 00BF     		nop
 2445 0016 BD46     		mov	sp, r7
 2446              	.LCFI52:
ARM GAS  /tmp/ccFV53yB.s 			page 67


 2447              		.cfi_def_cfa_register 13
 2448              		@ sp needed
 2449 0018 5DF8047B 		ldr	r7, [sp], #4
 2450              	.LCFI53:
 2451              		.cfi_restore 7
 2452              		.cfi_def_cfa_offset 0
 2453 001c 7047     		bx	lr
 2454              	.L161:
 2455 001e 00BF     		.align	2
 2456              	.L160:
 2457 0020 00100240 		.word	1073876992
 2458              		.cfi_endproc
 2459              	.LFE336:
 2461              		.section	.text.HAL_RCC_DisableLSECSS,"ax",%progbits
 2462              		.align	1
 2463              		.global	HAL_RCC_DisableLSECSS
 2464              		.syntax unified
 2465              		.thumb
 2466              		.thumb_func
 2467              		.fpu fpv4-sp-d16
 2469              	HAL_RCC_DisableLSECSS:
 2470              	.LFB337:
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Disable the LSE Clock Security System.
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   After LSE failure detection, the software must disable LSECSSON
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset otherwise.
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_DisableLSECSS(void)
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2471              		.loc 1 1299 1
 2472              		.cfi_startproc
 2473              		@ args = 0, pretend = 0, frame = 0
 2474              		@ frame_needed = 1, uses_anonymous_args = 0
 2475              		@ link register save eliminated.
 2476 0000 80B4     		push	{r7}
 2477              	.LCFI54:
 2478              		.cfi_def_cfa_offset 4
 2479              		.cfi_offset 7, -4
 2480 0002 00AF     		add	r7, sp, #0
 2481              	.LCFI55:
 2482              		.cfi_def_cfa_register 7
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
 2483              		.loc 1 1300 3
 2484 0004 064B     		ldr	r3, .L163
 2485 0006 D3F89030 		ldr	r3, [r3, #144]
 2486 000a 054A     		ldr	r2, .L163
 2487 000c 23F02003 		bic	r3, r3, #32
 2488 0010 C2F89030 		str	r3, [r2, #144]
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2489              		.loc 1 1301 1
 2490 0014 00BF     		nop
 2491 0016 BD46     		mov	sp, r7
 2492              	.LCFI56:
 2493              		.cfi_def_cfa_register 13
 2494              		@ sp needed
ARM GAS  /tmp/ccFV53yB.s 			page 68


 2495 0018 5DF8047B 		ldr	r7, [sp], #4
 2496              	.LCFI57:
 2497              		.cfi_restore 7
 2498              		.cfi_def_cfa_offset 0
 2499 001c 7047     		bx	lr
 2500              	.L164:
 2501 001e 00BF     		.align	2
 2502              	.L163:
 2503 0020 00100240 		.word	1073876992
 2504              		.cfi_endproc
 2505              	.LFE337:
 2507              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2508              		.align	1
 2509              		.global	HAL_RCC_NMI_IRQHandler
 2510              		.syntax unified
 2511              		.thumb
 2512              		.thumb_func
 2513              		.fpu fpv4-sp-d16
 2515              	HAL_RCC_NMI_IRQHandler:
 2516              	.LFB338:
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief Handle the RCC Clock Security System interrupt request.
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2517              		.loc 1 1309 1
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 0
 2520              		@ frame_needed = 1, uses_anonymous_args = 0
 2521 0000 80B5     		push	{r7, lr}
 2522              	.LCFI58:
 2523              		.cfi_def_cfa_offset 8
 2524              		.cfi_offset 7, -8
 2525              		.cfi_offset 14, -4
 2526 0002 00AF     		add	r7, sp, #0
 2527              	.LCFI59:
 2528              		.cfi_def_cfa_register 7
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2529              		.loc 1 1311 6
 2530 0004 074B     		ldr	r3, .L168
 2531 0006 DB69     		ldr	r3, [r3, #28]
 2532 0008 03F48073 		and	r3, r3, #256
 2533              		.loc 1 1311 5
 2534 000c B3F5807F 		cmp	r3, #256
 2535 0010 05D1     		bne	.L167
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2536              		.loc 1 1314 5
 2537 0012 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
ARM GAS  /tmp/ccFV53yB.s 			page 69


 2538              		.loc 1 1317 5
 2539 0016 034B     		ldr	r3, .L168
 2540 0018 4FF48072 		mov	r2, #256
 2541 001c 1A62     		str	r2, [r3, #32]
 2542              	.L167:
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2543              		.loc 1 1319 1
 2544 001e 00BF     		nop
 2545 0020 80BD     		pop	{r7, pc}
 2546              	.L169:
 2547 0022 00BF     		.align	2
 2548              	.L168:
 2549 0024 00100240 		.word	1073876992
 2550              		.cfi_endproc
 2551              	.LFE338:
 2553              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2554              		.align	1
 2555              		.weak	HAL_RCC_CSSCallback
 2556              		.syntax unified
 2557              		.thumb
 2558              		.thumb_func
 2559              		.fpu fpv4-sp-d16
 2561              	HAL_RCC_CSSCallback:
 2562              	.LFB339:
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback.
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval none
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2563              		.loc 1 1326 1
 2564              		.cfi_startproc
 2565              		@ args = 0, pretend = 0, frame = 0
 2566              		@ frame_needed = 1, uses_anonymous_args = 0
 2567              		@ link register save eliminated.
 2568 0000 80B4     		push	{r7}
 2569              	.LCFI60:
 2570              		.cfi_def_cfa_offset 4
 2571              		.cfi_offset 7, -4
 2572 0002 00AF     		add	r7, sp, #0
 2573              	.LCFI61:
 2574              		.cfi_def_cfa_register 7
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback should be implemented in the user file
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****    */
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2575              		.loc 1 1330 1
 2576 0004 00BF     		nop
 2577 0006 BD46     		mov	sp, r7
 2578              	.LCFI62:
 2579              		.cfi_def_cfa_register 13
 2580              		@ sp needed
 2581 0008 5DF8047B 		ldr	r7, [sp], #4
 2582              	.LCFI63:
 2583              		.cfi_restore 7
ARM GAS  /tmp/ccFV53yB.s 			page 70


 2584              		.cfi_def_cfa_offset 0
 2585 000c 7047     		bx	lr
 2586              		.cfi_endproc
 2587              	.LFE339:
 2589              		.section	.text.RCC_GetSysClockFreqFromPLLSource,"ax",%progbits
 2590              		.align	1
 2591              		.syntax unified
 2592              		.thumb
 2593              		.thumb_func
 2594              		.fpu fpv4-sp-d16
 2596              	RCC_GetSysClockFreqFromPLLSource:
 2597              	.LFB340:
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Compute SYSCLK frequency based on PLL SYSCLK source.
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** static uint32_t RCC_GetSysClockFreqFromPLLSource(void)
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2598              		.loc 1 1350 1
 2599              		.cfi_startproc
 2600              		@ args = 0, pretend = 0, frame = 24
 2601              		@ frame_needed = 1, uses_anonymous_args = 0
 2602              		@ link register save eliminated.
 2603 0000 80B4     		push	{r7}
 2604              	.LCFI64:
 2605              		.cfi_def_cfa_offset 4
 2606              		.cfi_offset 7, -4
 2607 0002 87B0     		sub	sp, sp, #28
 2608              	.LCFI65:
 2609              		.cfi_def_cfa_offset 32
 2610 0004 00AF     		add	r7, sp, #0
 2611              	.LCFI66:
 2612              		.cfi_def_cfa_register 7
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t sysclockfreq;
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* PLL_VCO = (HSE_VALUE or HSI_VALUE/ PLLM) * PLLN
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****      SYSCLK = PLL_VCO / PLLR
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****    */
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2613              		.loc 1 1357 15
 2614 0006 1E4B     		ldr	r3, .L175
 2615 0008 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccFV53yB.s 			page 71


 2616              		.loc 1 1357 13
 2617 000a 03F00303 		and	r3, r3, #3
 2618 000e 3B61     		str	r3, [r7, #16]
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 2619              		.loc 1 1358 11
 2620 0010 1B4B     		ldr	r3, .L175
 2621 0012 DB68     		ldr	r3, [r3, #12]
 2622              		.loc 1 1358 52
 2623 0014 1B09     		lsrs	r3, r3, #4
 2624 0016 03F00F03 		and	r3, r3, #15
 2625              		.loc 1 1358 8
 2626 001a 0133     		adds	r3, r3, #1
 2627 001c FB60     		str	r3, [r7, #12]
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   switch (pllsource)
 2628              		.loc 1 1360 3
 2629 001e 3B69     		ldr	r3, [r7, #16]
 2630 0020 032B     		cmp	r3, #3
 2631 0022 0CD1     		bne	.L172
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos
 2632              		.loc 1 1363 25
 2633 0024 174A     		ldr	r2, .L175+4
 2634 0026 FB68     		ldr	r3, [r7, #12]
 2635 0028 B2FBF3F3 		udiv	r3, r2, r3
 2636              		.loc 1 1363 36
 2637 002c 144A     		ldr	r2, .L175
 2638 002e D268     		ldr	r2, [r2, #12]
 2639              		.loc 1 1363 77
 2640 0030 120A     		lsrs	r2, r2, #8
 2641 0032 02F07F02 		and	r2, r2, #127
 2642              		.loc 1 1363 12
 2643 0036 02FB03F3 		mul	r3, r2, r3
 2644 003a 7B61     		str	r3, [r7, #20]
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     break;
 2645              		.loc 1 1364 5
 2646 003c 0CE0     		b	.L173
 2647              	.L172:
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   default:
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos
 2648              		.loc 1 1368 25
 2649 003e 124A     		ldr	r2, .L175+8
 2650 0040 FB68     		ldr	r3, [r7, #12]
 2651 0042 B2FBF3F3 		udiv	r3, r2, r3
 2652              		.loc 1 1368 36
 2653 0046 0E4A     		ldr	r2, .L175
 2654 0048 D268     		ldr	r2, [r2, #12]
 2655              		.loc 1 1368 77
 2656 004a 120A     		lsrs	r2, r2, #8
 2657 004c 02F07F02 		and	r2, r2, #127
 2658              		.loc 1 1368 12
 2659 0050 02FB03F3 		mul	r3, r2, r3
 2660 0054 7B61     		str	r3, [r7, #20]
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     break;
ARM GAS  /tmp/ccFV53yB.s 			page 72


 2661              		.loc 1 1369 5
 2662 0056 00BF     		nop
 2663              	.L173:
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 2664              		.loc 1 1372 12
 2665 0058 094B     		ldr	r3, .L175
 2666 005a DB68     		ldr	r3, [r3, #12]
 2667              		.loc 1 1372 53
 2668 005c 5B0E     		lsrs	r3, r3, #25
 2669 005e 03F00303 		and	r3, r3, #3
 2670              		.loc 1 1372 85
 2671 0062 0133     		adds	r3, r3, #1
 2672              		.loc 1 1372 8
 2673 0064 5B00     		lsls	r3, r3, #1
 2674 0066 BB60     		str	r3, [r7, #8]
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   sysclockfreq = pllvco/pllr;
 2675              		.loc 1 1373 16
 2676 0068 7A69     		ldr	r2, [r7, #20]
 2677 006a BB68     		ldr	r3, [r7, #8]
 2678 006c B2FBF3F3 		udiv	r3, r2, r3
 2679 0070 7B60     		str	r3, [r7, #4]
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return sysclockfreq;
 2680              		.loc 1 1375 10
 2681 0072 7B68     		ldr	r3, [r7, #4]
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2682              		.loc 1 1376 1
 2683 0074 1846     		mov	r0, r3
 2684 0076 1C37     		adds	r7, r7, #28
 2685              	.LCFI67:
 2686              		.cfi_def_cfa_offset 4
 2687 0078 BD46     		mov	sp, r7
 2688              	.LCFI68:
 2689              		.cfi_def_cfa_register 13
 2690              		@ sp needed
 2691 007a 5DF8047B 		ldr	r7, [sp], #4
 2692              	.LCFI69:
 2693              		.cfi_restore 7
 2694              		.cfi_def_cfa_offset 0
 2695 007e 7047     		bx	lr
 2696              	.L176:
 2697              		.align	2
 2698              	.L175:
 2699 0080 00100240 		.word	1073876992
 2700 0084 00366E01 		.word	24000000
 2701 0088 0024F400 		.word	16000000
 2702              		.cfi_endproc
 2703              	.LFE340:
 2705              		.text
 2706              	.Letext0:
 2707              		.file 2 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_types.h"
 2708              		.file 3 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 2709              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2710              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 2711              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
ARM GAS  /tmp/ccFV53yB.s 			page 73


 2712              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 2713              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 2714              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 2715              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 2716              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 2717              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccFV53yB.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_rcc.c
     /tmp/ccFV53yB.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccFV53yB.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccFV53yB.s:202    .text.HAL_RCC_DeInit:00000000000000f4 $d
     /tmp/ccFV53yB.s:210    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccFV53yB.s:217    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccFV53yB.s:669    .text.HAL_RCC_OscConfig:00000000000002ac $d
     /tmp/ccFV53yB.s:673    .text.HAL_RCC_OscConfig:00000000000002b4 $t
     /tmp/ccFV53yB.s:1087   .text.HAL_RCC_OscConfig:0000000000000578 $d
     /tmp/ccFV53yB.s:1092   .text.HAL_RCC_OscConfig:0000000000000584 $t
     /tmp/ccFV53yB.s:1223   .text.HAL_RCC_OscConfig:000000000000062c $d
     /tmp/ccFV53yB.s:1228   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccFV53yB.s:1235   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccFV53yB.s:2596   .text.RCC_GetSysClockFreqFromPLLSource:0000000000000000 RCC_GetSysClockFreqFromPLLSource
     /tmp/ccFV53yB.s:1736   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccFV53yB.s:1631   .text.HAL_RCC_ClockConfig:0000000000000260 $d
     /tmp/ccFV53yB.s:1641   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccFV53yB.s:1648   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccFV53yB.s:1724   .text.HAL_RCC_MCOConfig:0000000000000064 $d
     /tmp/ccFV53yB.s:1729   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccFV53yB.s:1876   .text.HAL_RCC_GetSysClockFreq:00000000000000b8 $d
     /tmp/ccFV53yB.s:1883   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccFV53yB.s:1890   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccFV53yB.s:1921   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccFV53yB.s:1926   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccFV53yB.s:1933   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccFV53yB.s:1969   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccFV53yB.s:1975   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccFV53yB.s:1982   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccFV53yB.s:2018   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccFV53yB.s:2024   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccFV53yB.s:2031   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccFV53yB.s:2275   .text.HAL_RCC_GetOscConfig:0000000000000160 $d
     /tmp/ccFV53yB.s:2280   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccFV53yB.s:2287   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccFV53yB.s:2364   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccFV53yB.s:2370   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccFV53yB.s:2377   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccFV53yB.s:2411   .text.HAL_RCC_EnableCSS:000000000000001c $d
     /tmp/ccFV53yB.s:2416   .text.HAL_RCC_EnableLSECSS:0000000000000000 $t
     /tmp/ccFV53yB.s:2423   .text.HAL_RCC_EnableLSECSS:0000000000000000 HAL_RCC_EnableLSECSS
     /tmp/ccFV53yB.s:2457   .text.HAL_RCC_EnableLSECSS:0000000000000020 $d
     /tmp/ccFV53yB.s:2462   .text.HAL_RCC_DisableLSECSS:0000000000000000 $t
     /tmp/ccFV53yB.s:2469   .text.HAL_RCC_DisableLSECSS:0000000000000000 HAL_RCC_DisableLSECSS
     /tmp/ccFV53yB.s:2503   .text.HAL_RCC_DisableLSECSS:0000000000000020 $d
     /tmp/ccFV53yB.s:2508   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccFV53yB.s:2515   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccFV53yB.s:2561   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccFV53yB.s:2549   .text.HAL_RCC_NMI_IRQHandler:0000000000000024 $d
     /tmp/ccFV53yB.s:2554   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccFV53yB.s:2590   .text.RCC_GetSysClockFreqFromPLLSource:0000000000000000 $t
     /tmp/ccFV53yB.s:2699   .text.RCC_GetSysClockFreqFromPLLSource:0000000000000080 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
ARM GAS  /tmp/ccFV53yB.s 			page 75


SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
APBPrescTable
