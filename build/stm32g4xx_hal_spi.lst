ARM GAS  /tmp/ccrdcdEL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_SPI_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_SPI_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_SPI_Init:
  27              	.LFB325:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @file    stm32g4xx_hal_spi.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     [..]
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
ARM GAS  /tmp/ccrdcdEL.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      [..]
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      [..]
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      [..]
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Callback registration:
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           and a pointer to the user callback function.
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           weak function.
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           and the Callback ID.
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
ARM GAS  /tmp/ccrdcdEL.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        [..]
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        [..]
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        or HAL_SPI_Init() function.
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        [..]
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        When the compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        not defined, the callback registering feature is not available
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      [..]
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   @endverbatim
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   Additional table :
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |===========================================================================================
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
ARM GAS  /tmp/ccrdcdEL.s 			page 4


 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |===========================================================================================
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (4bits, 5bits,..., 8bits,...15bits, 16bi
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        @note
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   ******************************************************************************
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @attention
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * All rights reserved.</center></h2>
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   ******************************************************************************
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccrdcdEL.s 			page 5


 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #include "stm32g4xx_hal.h"
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @addtogroup STM32G4xx_HAL_Driver
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @defgroup SPI SPI
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief SPI HAL module driver
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @}
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
ARM GAS  /tmp/ccrdcdEL.s 			page 6


 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @}
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** @verbatim
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****  ===============================================================================
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****  ===============================================================================
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           the selected configuration:
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) Mode
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) Direction
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) Data Size
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) Clock Polarity and Phase
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) NSS Management
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) BaudRate Prescaler
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) FirstBit
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) TIMode
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) CRC Calculation
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (++) FIFO reception threshold
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           of the selected SPIx peripheral.
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** @endverbatim
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
ARM GAS  /tmp/ccrdcdEL.s 			page 7


 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
  29              		.loc 1 317 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t frxth;
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the SPI handle allocation */
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi == NULL)
  45              		.loc 1 321 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_ERROR;
  49              		.loc 1 323 12
  50 000e 0123     		movs	r3, #1
  51 0010 84E0     		b	.L3
  52              	.L2:
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the parameters */
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
ARM GAS  /tmp/ccrdcdEL.s 			page 8


 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  53              		.loc 1 349 29
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 0022     		movs	r2, #0
  56 0016 9A62     		str	r2, [r3, #40]
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
  57              		.loc 1 352 11
  58 0018 7B68     		ldr	r3, [r7, #4]
  59 001a 93F85D30 		ldrb	r3, [r3, #93]
  60 001e DBB2     		uxtb	r3, r3
  61              		.loc 1 352 6
  62 0020 002B     		cmp	r3, #0
  63 0022 06D1     		bne	.L4
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
  64              		.loc 1 355 16
  65 0024 7B68     		ldr	r3, [r7, #4]
  66 0026 0022     		movs	r2, #0
  67 0028 83F85C20 		strb	r2, [r3, #92]
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Init the SPI Callback settings */
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
  68              		.loc 1 377 5
  69 002c 7868     		ldr	r0, [r7, #4]
  70 002e FFF7FEFF 		bl	HAL_SPI_MspInit
  71              	.L4:
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
  72              		.loc 1 381 15
  73 0032 7B68     		ldr	r3, [r7, #4]
  74 0034 0222     		movs	r2, #2
  75 0036 83F85D20 		strb	r2, [r3, #93]
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 9


 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  76              		.loc 1 384 3
  77 003a 7B68     		ldr	r3, [r7, #4]
  78 003c 1B68     		ldr	r3, [r3]
  79 003e 1A68     		ldr	r2, [r3]
  80 0040 7B68     		ldr	r3, [r7, #4]
  81 0042 1B68     		ldr	r3, [r3]
  82 0044 22F04002 		bic	r2, r2, #64
  83 0048 1A60     		str	r2, [r3]
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Align by default the rs fifo threshold on the data size */
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
  84              		.loc 1 387 17
  85 004a 7B68     		ldr	r3, [r7, #4]
  86 004c DB68     		ldr	r3, [r3, #12]
  87              		.loc 1 387 6
  88 004e B3F5E06F 		cmp	r3, #1792
  89 0052 02D9     		bls	.L5
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_HF;
  90              		.loc 1 389 11
  91 0054 0023     		movs	r3, #0
  92 0056 FB60     		str	r3, [r7, #12]
  93 0058 02E0     		b	.L6
  94              	.L5:
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_QF;
  95              		.loc 1 393 11
  96 005a 4FF48053 		mov	r3, #4096
  97 005e FB60     		str	r3, [r7, #12]
  98              	.L6:
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* CRC calculation is valid only for 16Bit and 8 Bit */
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
  99              		.loc 1 397 18
 100 0060 7B68     		ldr	r3, [r7, #4]
 101 0062 DB68     		ldr	r3, [r3, #12]
 102              		.loc 1 397 6
 103 0064 B3F5706F 		cmp	r3, #3840
 104 0068 07D0     		beq	.L7
 105              		.loc 1 397 65 discriminator 1
 106 006a 7B68     		ldr	r3, [r7, #4]
 107 006c DB68     		ldr	r3, [r3, #12]
 108              		.loc 1 397 51 discriminator 1
 109 006e B3F5E06F 		cmp	r3, #1792
 110 0072 02D0     		beq	.L7
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* CRC must be disabled */
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 111              		.loc 1 400 31
 112 0074 7B68     		ldr	r3, [r7, #4]
 113 0076 0022     		movs	r2, #0
 114 0078 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccrdcdEL.s 			page 10


 115              	.L7:
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Align the CRC Length on the data size */
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 116              		.loc 1 404 17
 117 007a 7B68     		ldr	r3, [r7, #4]
 118 007c 1B6B     		ldr	r3, [r3, #48]
 119              		.loc 1 404 6
 120 007e 002B     		cmp	r3, #0
 121 0080 0BD1     		bne	.L8
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* CRC Length aligned on the data size : value set by default */
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 122              		.loc 1 407 19
 123 0082 7B68     		ldr	r3, [r7, #4]
 124 0084 DB68     		ldr	r3, [r3, #12]
 125              		.loc 1 407 8
 126 0086 B3F5E06F 		cmp	r3, #1792
 127 008a 03D9     		bls	.L9
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_16BIT;
 128              		.loc 1 409 28
 129 008c 7B68     		ldr	r3, [r7, #4]
 130 008e 0222     		movs	r2, #2
 131 0090 1A63     		str	r2, [r3, #48]
 132 0092 02E0     		b	.L8
 133              	.L9:
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_8BIT;
 134              		.loc 1 413 28
 135 0094 7B68     		ldr	r3, [r7, #4]
 136 0096 0122     		movs	r2, #1
 137 0098 1A63     		str	r2, [r3, #48]
 138              	.L8:
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |
 139              		.loc 1 420 3
 140 009a 7B68     		ldr	r3, [r7, #4]
 141 009c 5A68     		ldr	r2, [r3, #4]
 142 009e 7B68     		ldr	r3, [r7, #4]
 143 00a0 9B68     		ldr	r3, [r3, #8]
 144 00a2 1A43     		orrs	r2, r2, r3
 145 00a4 7B68     		ldr	r3, [r7, #4]
 146 00a6 1B69     		ldr	r3, [r3, #16]
 147 00a8 1A43     		orrs	r2, r2, r3
 148 00aa 7B68     		ldr	r3, [r7, #4]
 149 00ac 5B69     		ldr	r3, [r3, #20]
 150 00ae 1A43     		orrs	r2, r2, r3
 151 00b0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 11


 152 00b2 9B69     		ldr	r3, [r3, #24]
 153 00b4 03F40073 		and	r3, r3, #512
 154 00b8 1A43     		orrs	r2, r2, r3
 155 00ba 7B68     		ldr	r3, [r7, #4]
 156 00bc DB69     		ldr	r3, [r3, #28]
 157 00be 1A43     		orrs	r2, r2, r3
 158 00c0 7B68     		ldr	r3, [r7, #4]
 159 00c2 1B6A     		ldr	r3, [r3, #32]
 160 00c4 42EA0301 		orr	r1, r2, r3
 161 00c8 7B68     		ldr	r3, [r7, #4]
 162 00ca 9A6A     		ldr	r2, [r3, #40]
 163 00cc 7B68     		ldr	r3, [r7, #4]
 164 00ce 1B68     		ldr	r3, [r3]
 165 00d0 0A43     		orrs	r2, r2, r1
 166 00d2 1A60     		str	r2, [r3]
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure : CRC Length */
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCL;
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode |
 167              		.loc 1 432 3
 168 00d4 7B68     		ldr	r3, [r7, #4]
 169 00d6 9B69     		ldr	r3, [r3, #24]
 170 00d8 1B0C     		lsrs	r3, r3, #16
 171 00da 03F00402 		and	r2, r3, #4
 172 00de 7B68     		ldr	r3, [r7, #4]
 173 00e0 5B6A     		ldr	r3, [r3, #36]
 174 00e2 1A43     		orrs	r2, r2, r3
 175 00e4 7B68     		ldr	r3, [r7, #4]
 176 00e6 5B6B     		ldr	r3, [r3, #52]
 177 00e8 1A43     		orrs	r2, r2, r3
 178 00ea 7B68     		ldr	r3, [r7, #4]
 179 00ec DB68     		ldr	r3, [r3, #12]
 180 00ee 42EA0301 		orr	r1, r2, r3
 181 00f2 7B68     		ldr	r3, [r7, #4]
 182 00f4 1B68     		ldr	r3, [r3]
 183 00f6 FA68     		ldr	r2, [r7, #12]
 184 00f8 0A43     		orrs	r2, r2, r1
 185 00fa 5A60     		str	r2, [r3, #4]
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 12


 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 186              		.loc 1 446 3
 187 00fc 7B68     		ldr	r3, [r7, #4]
 188 00fe 1B68     		ldr	r3, [r3]
 189 0100 DA69     		ldr	r2, [r3, #28]
 190 0102 7B68     		ldr	r3, [r7, #4]
 191 0104 1B68     		ldr	r3, [r3]
 192 0106 22F40062 		bic	r2, r2, #2048
 193 010a DA61     		str	r2, [r3, #28]
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 194              		.loc 1 449 19
 195 010c 7B68     		ldr	r3, [r7, #4]
 196 010e 0022     		movs	r2, #0
 197 0110 1A66     		str	r2, [r3, #96]
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 198              		.loc 1 450 19
 199 0112 7B68     		ldr	r3, [r7, #4]
 200 0114 0122     		movs	r2, #1
 201 0116 83F85D20 		strb	r2, [r3, #93]
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return HAL_OK;
 202              		.loc 1 452 10
 203 011a 0023     		movs	r3, #0
 204              	.L3:
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 205              		.loc 1 453 1
 206 011c 1846     		mov	r0, r3
 207 011e 1037     		adds	r7, r7, #16
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 8
 210 0120 BD46     		mov	sp, r7
 211              	.LCFI4:
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 0122 80BD     		pop	{r7, pc}
 215              		.cfi_endproc
 216              	.LFE325:
 218              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 219              		.align	1
 220              		.global	HAL_SPI_DeInit
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	HAL_SPI_DeInit:
 227              	.LFB326:
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
ARM GAS  /tmp/ccrdcdEL.s 			page 13


 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 228              		.loc 1 462 1
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 80B5     		push	{r7, lr}
 233              	.LCFI5:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              	.LCFI6:
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              	.LCFI7:
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the SPI handle allocation */
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi == NULL)
 244              		.loc 1 464 6
 245 0008 7B68     		ldr	r3, [r7, #4]
 246 000a 002B     		cmp	r3, #0
 247 000c 01D1     		bne	.L11
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_ERROR;
 248              		.loc 1 466 12
 249 000e 0123     		movs	r3, #1
 250 0010 1AE0     		b	.L12
 251              	.L11:
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check SPI Instance parameter */
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 252              		.loc 1 472 15
 253 0012 7B68     		ldr	r3, [r7, #4]
 254 0014 0222     		movs	r2, #2
 255 0016 83F85D20 		strb	r2, [r3, #93]
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 256              		.loc 1 475 3
 257 001a 7B68     		ldr	r3, [r7, #4]
 258 001c 1B68     		ldr	r3, [r3]
 259 001e 1A68     		ldr	r2, [r3]
 260 0020 7B68     		ldr	r3, [r7, #4]
 261 0022 1B68     		ldr	r3, [r3]
 262 0024 22F04002 		bic	r2, r2, #64
 263 0028 1A60     		str	r2, [r3]
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
ARM GAS  /tmp/ccrdcdEL.s 			page 14


 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 264              		.loc 1 487 3
 265 002a 7868     		ldr	r0, [r7, #4]
 266 002c FFF7FEFF 		bl	HAL_SPI_MspDeInit
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 267              		.loc 1 490 19
 268 0030 7B68     		ldr	r3, [r7, #4]
 269 0032 0022     		movs	r2, #0
 270 0034 1A66     		str	r2, [r3, #96]
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 271              		.loc 1 491 15
 272 0036 7B68     		ldr	r3, [r7, #4]
 273 0038 0022     		movs	r2, #0
 274 003a 83F85D20 		strb	r2, [r3, #93]
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Release Lock */
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 275              		.loc 1 494 3
 276 003e 7B68     		ldr	r3, [r7, #4]
 277 0040 0022     		movs	r2, #0
 278 0042 83F85C20 		strb	r2, [r3, #92]
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return HAL_OK;
 279              		.loc 1 496 10
 280 0046 0023     		movs	r3, #0
 281              	.L12:
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 282              		.loc 1 497 1
 283 0048 1846     		mov	r0, r3
 284 004a 0837     		adds	r7, r7, #8
 285              	.LCFI8:
 286              		.cfi_def_cfa_offset 8
 287 004c BD46     		mov	sp, r7
 288              	.LCFI9:
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 004e 80BD     		pop	{r7, pc}
 292              		.cfi_endproc
 293              	.LFE326:
 295              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 296              		.align	1
 297              		.weak	HAL_SPI_MspInit
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv4-sp-d16
 303              	HAL_SPI_MspInit:
 304              	.LFB327:
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
ARM GAS  /tmp/ccrdcdEL.s 			page 15


 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 305              		.loc 1 506 1
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 8
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B4     		push	{r7}
 311              	.LCFI10:
 312              		.cfi_def_cfa_offset 4
 313              		.cfi_offset 7, -4
 314 0002 83B0     		sub	sp, sp, #12
 315              	.LCFI11:
 316              		.cfi_def_cfa_offset 16
 317 0004 00AF     		add	r7, sp, #0
 318              	.LCFI12:
 319              		.cfi_def_cfa_register 7
 320 0006 7860     		str	r0, [r7, #4]
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 321              		.loc 1 513 1
 322 0008 00BF     		nop
 323 000a 0C37     		adds	r7, r7, #12
 324              	.LCFI13:
 325              		.cfi_def_cfa_offset 4
 326 000c BD46     		mov	sp, r7
 327              	.LCFI14:
 328              		.cfi_def_cfa_register 13
 329              		@ sp needed
 330 000e 5DF8047B 		ldr	r7, [sp], #4
 331              	.LCFI15:
 332              		.cfi_restore 7
 333              		.cfi_def_cfa_offset 0
 334 0012 7047     		bx	lr
 335              		.cfi_endproc
 336              	.LFE327:
 338              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 339              		.align	1
 340              		.weak	HAL_SPI_MspDeInit
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	HAL_SPI_MspDeInit:
 347              	.LFB328:
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
ARM GAS  /tmp/ccrdcdEL.s 			page 16


 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 348              		.loc 1 522 1
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353 0000 80B4     		push	{r7}
 354              	.LCFI16:
 355              		.cfi_def_cfa_offset 4
 356              		.cfi_offset 7, -4
 357 0002 83B0     		sub	sp, sp, #12
 358              	.LCFI17:
 359              		.cfi_def_cfa_offset 16
 360 0004 00AF     		add	r7, sp, #0
 361              	.LCFI18:
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 364              		.loc 1 529 1
 365 0008 00BF     		nop
 366 000a 0C37     		adds	r7, r7, #12
 367              	.LCFI19:
 368              		.cfi_def_cfa_offset 4
 369 000c BD46     		mov	sp, r7
 370              	.LCFI20:
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 000e 5DF8047B 		ldr	r7, [sp], #4
 374              	.LCFI21:
 375              		.cfi_restore 7
 376              		.cfi_def_cfa_offset 0
 377 0012 7047     		bx	lr
 378              		.cfi_endproc
 379              	.LFE328:
 381              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 382              		.align	1
 383              		.global	HAL_SPI_Transmit
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	HAL_SPI_Transmit:
 390              	.LFB329:
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/ccrdcdEL.s 			page 17


 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (pCallback == NULL)
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Update the error code */
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_ERROR;
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process locked */
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     switch (CallbackID)
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
ARM GAS  /tmp/ccrdcdEL.s 			page 18


 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       default :
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Update the error code */
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Return error status */
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         status =  HAL_ERROR;
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     switch (CallbackID)
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       default :
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Update the error code */
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Return error status */
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         status =  HAL_ERROR;
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Update the error code */
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Return error status */
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     status =  HAL_ERROR;
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Release Lock */
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return status;
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
ARM GAS  /tmp/ccrdcdEL.s 			page 19


 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process locked */
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     switch (CallbackID)
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 20


 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       default :
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Update the error code */
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Return error status */
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         status =  HAL_ERROR;
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     switch (CallbackID)
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       default :
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Update the error code */
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Return error status */
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         status =  HAL_ERROR;
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Update the error code */
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Return error status */
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     status =  HAL_ERROR;
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Release Lock */
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return status;
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @}
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *  @brief   Data transfers functions
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** @verbatim
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   ==============================================================================
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                       ##### IO operation functions #####
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****  ===============================================================================
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****  [..]
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
ARM GAS  /tmp/ccrdcdEL.s 			page 21


 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     data transfers.
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     (#) There are two modes of transfer:
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             after finishing transfer.
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             The end of the data processing will be indicated through the
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             using DMA mode.
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** @endverbatim
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pData pointer to data buffer
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be sent
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Timeout Timeout duration
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 391              		.loc 1 794 1
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 32
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395 0000 80B5     		push	{r7, lr}
 396              	.LCFI22:
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 7, -8
 399              		.cfi_offset 14, -4
 400 0002 88B0     		sub	sp, sp, #32
 401              	.LCFI23:
 402              		.cfi_def_cfa_offset 40
 403 0004 00AF     		add	r7, sp, #0
 404              	.LCFI24:
 405              		.cfi_def_cfa_register 7
 406 0006 F860     		str	r0, [r7, #12]
 407 0008 B960     		str	r1, [r7, #8]
 408 000a 3B60     		str	r3, [r7]
 409 000c 1346     		mov	r3, r2	@ movhi
 410 000e FB80     		strh	r3, [r7, #6]	@ movhi
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t tickstart;
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
ARM GAS  /tmp/ccrdcdEL.s 			page 22


 411              		.loc 1 796 21
 412 0010 0023     		movs	r3, #0
 413 0012 FB77     		strb	r3, [r7, #31]
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check Direction parameter */
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 414              		.loc 1 803 3
 415 0014 FB68     		ldr	r3, [r7, #12]
 416 0016 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 417 001a 012B     		cmp	r3, #1
 418 001c 01D1     		bne	.L16
 419              		.loc 1 803 3 is_stmt 0 discriminator 1
 420 001e 0223     		movs	r3, #2
 421 0020 50E1     		b	.L17
 422              	.L16:
 423              		.loc 1 803 3 discriminator 2
 424 0022 FB68     		ldr	r3, [r7, #12]
 425 0024 0122     		movs	r2, #1
 426 0026 83F85C20 		strb	r2, [r3, #92]
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tickstart = HAL_GetTick();
 427              		.loc 1 806 15 is_stmt 1 discriminator 2
 428 002a FFF7FEFF 		bl	HAL_GetTick
 429 002e B861     		str	r0, [r7, #24]
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   initial_TxXferCount = Size;
 430              		.loc 1 807 23 discriminator 2
 431 0030 FB88     		ldrh	r3, [r7, #6]	@ movhi
 432 0032 FB82     		strh	r3, [r7, #22]	@ movhi
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 433              		.loc 1 809 11 discriminator 2
 434 0034 FB68     		ldr	r3, [r7, #12]
 435 0036 93F85D30 		ldrb	r3, [r3, #93]
 436 003a DBB2     		uxtb	r3, r3
 437              		.loc 1 809 6 discriminator 2
 438 003c 012B     		cmp	r3, #1
 439 003e 02D0     		beq	.L18
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 440              		.loc 1 811 15
 441 0040 0223     		movs	r3, #2
 442 0042 FB77     		strb	r3, [r7, #31]
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 443              		.loc 1 812 5
 444 0044 35E1     		b	.L19
 445              	.L18:
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 446              		.loc 1 815 6
 447 0046 BB68     		ldr	r3, [r7, #8]
 448 0048 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrdcdEL.s 			page 23


 449 004a 02D0     		beq	.L20
 450              		.loc 1 815 23 discriminator 1
 451 004c FB88     		ldrh	r3, [r7, #6]
 452 004e 002B     		cmp	r3, #0
 453 0050 02D1     		bne	.L21
 454              	.L20:
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 455              		.loc 1 817 15
 456 0052 0123     		movs	r3, #1
 457 0054 FB77     		strb	r3, [r7, #31]
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 458              		.loc 1 818 5
 459 0056 2CE1     		b	.L19
 460              	.L21:
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 461              		.loc 1 822 21
 462 0058 FB68     		ldr	r3, [r7, #12]
 463 005a 0322     		movs	r2, #3
 464 005c 83F85D20 		strb	r2, [r3, #93]
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 465              		.loc 1 823 21
 466 0060 FB68     		ldr	r3, [r7, #12]
 467 0062 0022     		movs	r2, #0
 468 0064 1A66     		str	r2, [r3, #96]
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 469              		.loc 1 824 21
 470 0066 FB68     		ldr	r3, [r7, #12]
 471 0068 BA68     		ldr	r2, [r7, #8]
 472 006a 9A63     		str	r2, [r3, #56]
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 473              		.loc 1 825 21
 474 006c FB68     		ldr	r3, [r7, #12]
 475 006e FA88     		ldrh	r2, [r7, #6]	@ movhi
 476 0070 9A87     		strh	r2, [r3, #60]	@ movhi
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = Size;
 477              		.loc 1 826 21
 478 0072 FB68     		ldr	r3, [r7, #12]
 479 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 480 0076 DA87     		strh	r2, [r3, #62]	@ movhi
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /*Init field not used in handle to zero */
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 481              		.loc 1 829 21
 482 0078 FB68     		ldr	r3, [r7, #12]
 483 007a 0022     		movs	r2, #0
 484 007c 1A64     		str	r2, [r3, #64]
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 485              		.loc 1 830 21
 486 007e FB68     		ldr	r3, [r7, #12]
 487 0080 0022     		movs	r2, #0
 488 0082 A3F84420 		strh	r2, [r3, #68]	@ movhi
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 489              		.loc 1 831 21
ARM GAS  /tmp/ccrdcdEL.s 			page 24


 490 0086 FB68     		ldr	r3, [r7, #12]
 491 0088 0022     		movs	r2, #0
 492 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxISR       = NULL;
 493              		.loc 1 832 21
 494 008e FB68     		ldr	r3, [r7, #12]
 495 0090 0022     		movs	r2, #0
 496 0092 1A65     		str	r2, [r3, #80]
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxISR       = NULL;
 497              		.loc 1 833 21
 498 0094 FB68     		ldr	r3, [r7, #12]
 499 0096 0022     		movs	r2, #0
 500 0098 DA64     		str	r2, [r3, #76]
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 501              		.loc 1 836 17
 502 009a FB68     		ldr	r3, [r7, #12]
 503 009c 9B68     		ldr	r3, [r3, #8]
 504              		.loc 1 836 6
 505 009e B3F5004F 		cmp	r3, #32768
 506 00a2 07D1     		bne	.L22
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 507              		.loc 1 838 5
 508 00a4 FB68     		ldr	r3, [r7, #12]
 509 00a6 1B68     		ldr	r3, [r3]
 510 00a8 1A68     		ldr	r2, [r3]
 511 00aa FB68     		ldr	r3, [r7, #12]
 512 00ac 1B68     		ldr	r3, [r3]
 513 00ae 42F48042 		orr	r2, r2, #16384
 514 00b2 1A60     		str	r2, [r3]
 515              	.L22:
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 516              		.loc 1 850 12
 517 00b4 FB68     		ldr	r3, [r7, #12]
 518 00b6 1B68     		ldr	r3, [r3]
 519              		.loc 1 850 22
 520 00b8 1B68     		ldr	r3, [r3]
 521              		.loc 1 850 28
 522 00ba 03F04003 		and	r3, r3, #64
 523              		.loc 1 850 6
 524 00be 402B     		cmp	r3, #64
 525 00c0 07D0     		beq	.L23
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
ARM GAS  /tmp/ccrdcdEL.s 			page 25


 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 526              		.loc 1 853 5
 527 00c2 FB68     		ldr	r3, [r7, #12]
 528 00c4 1B68     		ldr	r3, [r3]
 529 00c6 1A68     		ldr	r2, [r3]
 530 00c8 FB68     		ldr	r3, [r7, #12]
 531 00ca 1B68     		ldr	r3, [r3]
 532 00cc 42F04002 		orr	r2, r2, #64
 533 00d0 1A60     		str	r2, [r3]
 534              	.L23:
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 535              		.loc 1 857 17
 536 00d2 FB68     		ldr	r3, [r7, #12]
 537 00d4 DB68     		ldr	r3, [r3, #12]
 538              		.loc 1 857 6
 539 00d6 B3F5E06F 		cmp	r3, #1792
 540 00da 4BD9     		bls	.L24
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 541              		.loc 1 859 20
 542 00dc FB68     		ldr	r3, [r7, #12]
 543 00de 5B68     		ldr	r3, [r3, #4]
 544              		.loc 1 859 8
 545 00e0 002B     		cmp	r3, #0
 546 00e2 02D0     		beq	.L25
 547              		.loc 1 859 45 discriminator 1
 548 00e4 FB8A     		ldrh	r3, [r7, #22]
 549 00e6 012B     		cmp	r3, #1
 550 00e8 3ED1     		bne	.L27
 551              	.L25:
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 552              		.loc 1 861 46
 553 00ea FB68     		ldr	r3, [r7, #12]
 554 00ec 9B6B     		ldr	r3, [r3, #56]
 555              		.loc 1 861 28
 556 00ee 1A88     		ldrh	r2, [r3]
 557              		.loc 1 861 11
 558 00f0 FB68     		ldr	r3, [r7, #12]
 559 00f2 1B68     		ldr	r3, [r3]
 560              		.loc 1 861 26
 561 00f4 DA60     		str	r2, [r3, #12]
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 562              		.loc 1 862 24
 563 00f6 FB68     		ldr	r3, [r7, #12]
 564 00f8 9B6B     		ldr	r3, [r3, #56]
 565 00fa 9A1C     		adds	r2, r3, #2
 566 00fc FB68     		ldr	r3, [r7, #12]
 567 00fe 9A63     		str	r2, [r3, #56]
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->TxXferCount--;
 568              		.loc 1 863 11
 569 0100 FB68     		ldr	r3, [r7, #12]
 570 0102 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 571 0104 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccrdcdEL.s 			page 26


 572              		.loc 1 863 24
 573 0106 013B     		subs	r3, r3, #1
 574 0108 9AB2     		uxth	r2, r3
 575 010a FB68     		ldr	r3, [r7, #12]
 576 010c DA87     		strh	r2, [r3, #62]	@ movhi
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 577              		.loc 1 866 11
 578 010e 2BE0     		b	.L27
 579              	.L31:
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 580              		.loc 1 869 11
 581 0110 FB68     		ldr	r3, [r7, #12]
 582 0112 1B68     		ldr	r3, [r3]
 583 0114 9B68     		ldr	r3, [r3, #8]
 584 0116 03F00203 		and	r3, r3, #2
 585              		.loc 1 869 10
 586 011a 022B     		cmp	r3, #2
 587 011c 12D1     		bne	.L28
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 588              		.loc 1 871 48
 589 011e FB68     		ldr	r3, [r7, #12]
 590 0120 9B6B     		ldr	r3, [r3, #56]
 591              		.loc 1 871 30
 592 0122 1A88     		ldrh	r2, [r3]
 593              		.loc 1 871 13
 594 0124 FB68     		ldr	r3, [r7, #12]
 595 0126 1B68     		ldr	r3, [r3]
 596              		.loc 1 871 28
 597 0128 DA60     		str	r2, [r3, #12]
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 598              		.loc 1 872 26
 599 012a FB68     		ldr	r3, [r7, #12]
 600 012c 9B6B     		ldr	r3, [r3, #56]
 601 012e 9A1C     		adds	r2, r3, #2
 602 0130 FB68     		ldr	r3, [r7, #12]
 603 0132 9A63     		str	r2, [r3, #56]
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxXferCount--;
 604              		.loc 1 873 13
 605 0134 FB68     		ldr	r3, [r7, #12]
 606 0136 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 607 0138 9BB2     		uxth	r3, r3
 608              		.loc 1 873 26
 609 013a 013B     		subs	r3, r3, #1
 610 013c 9AB2     		uxth	r2, r3
 611 013e FB68     		ldr	r3, [r7, #12]
 612 0140 DA87     		strh	r2, [r3, #62]	@ movhi
 613 0142 11E0     		b	.L27
 614              	.L28:
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Timeout management */
ARM GAS  /tmp/ccrdcdEL.s 			page 27


 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 615              		.loc 1 878 16
 616 0144 FFF7FEFF 		bl	HAL_GetTick
 617 0148 0246     		mov	r2, r0
 618              		.loc 1 878 30
 619 014a BB69     		ldr	r3, [r7, #24]
 620 014c D31A     		subs	r3, r2, r3
 621              		.loc 1 878 12
 622 014e 3A68     		ldr	r2, [r7]
 623 0150 9A42     		cmp	r2, r3
 624 0152 03D8     		bhi	.L29
 625              		.loc 1 878 56 discriminator 1
 626 0154 3B68     		ldr	r3, [r7]
 627 0156 B3F1FF3F 		cmp	r3, #-1
 628 015a 02D1     		bne	.L30
 629              	.L29:
 630              		.loc 1 878 87 discriminator 3
 631 015c 3B68     		ldr	r3, [r7]
 632 015e 002B     		cmp	r3, #0
 633 0160 02D1     		bne	.L27
 634              	.L30:
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 635              		.loc 1 880 21
 636 0162 0323     		movs	r3, #3
 637 0164 FB77     		strb	r3, [r7, #31]
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           goto error;
 638              		.loc 1 881 11
 639 0166 A4E0     		b	.L19
 640              	.L27:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 641              		.loc 1 866 16
 642 0168 FB68     		ldr	r3, [r7, #12]
 643 016a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 644 016c 9BB2     		uxth	r3, r3
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 645              		.loc 1 866 11
 646 016e 002B     		cmp	r3, #0
 647 0170 CED1     		bne	.L31
 648 0172 7CE0     		b	.L32
 649              	.L24:
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 650              		.loc 1 889 20
 651 0174 FB68     		ldr	r3, [r7, #12]
 652 0176 5B68     		ldr	r3, [r3, #4]
 653              		.loc 1 889 8
 654 0178 002B     		cmp	r3, #0
 655 017a 02D0     		beq	.L33
 656              		.loc 1 889 45 discriminator 1
 657 017c FB8A     		ldrh	r3, [r7, #22]
ARM GAS  /tmp/ccrdcdEL.s 			page 28


 658 017e 012B     		cmp	r3, #1
 659 0180 70D1     		bne	.L36
 660              	.L33:
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
 661              		.loc 1 891 15
 662 0182 FB68     		ldr	r3, [r7, #12]
 663 0184 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 664 0186 9BB2     		uxth	r3, r3
 665              		.loc 1 891 10
 666 0188 012B     		cmp	r3, #1
 667 018a 12D9     		bls	.L35
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* write on the data register in packing mode */
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 668              		.loc 1 894 48
 669 018c FB68     		ldr	r3, [r7, #12]
 670 018e 9B6B     		ldr	r3, [r3, #56]
 671              		.loc 1 894 30
 672 0190 1A88     		ldrh	r2, [r3]
 673              		.loc 1 894 13
 674 0192 FB68     		ldr	r3, [r7, #12]
 675 0194 1B68     		ldr	r3, [r3]
 676              		.loc 1 894 28
 677 0196 DA60     		str	r2, [r3, #12]
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 678              		.loc 1 895 26
 679 0198 FB68     		ldr	r3, [r7, #12]
 680 019a 9B6B     		ldr	r3, [r3, #56]
 681 019c 9A1C     		adds	r2, r3, #2
 682 019e FB68     		ldr	r3, [r7, #12]
 683 01a0 9A63     		str	r2, [r3, #56]
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 684              		.loc 1 896 27
 685 01a2 FB68     		ldr	r3, [r7, #12]
 686 01a4 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 687 01a6 9BB2     		uxth	r3, r3
 688 01a8 023B     		subs	r3, r3, #2
 689 01aa 9AB2     		uxth	r2, r3
 690 01ac FB68     		ldr	r3, [r7, #12]
 691 01ae DA87     		strh	r2, [r3, #62]	@ movhi
 692 01b0 58E0     		b	.L36
 693              	.L35:
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 694              		.loc 1 900 56
 695 01b2 FB68     		ldr	r3, [r7, #12]
 696 01b4 9A6B     		ldr	r2, [r3, #56]
 697              		.loc 1 900 32
 698 01b6 FB68     		ldr	r3, [r7, #12]
 699 01b8 1B68     		ldr	r3, [r3]
 700              		.loc 1 900 27
 701 01ba 0C33     		adds	r3, r3, #12
 702              		.loc 1 900 51
 703 01bc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccrdcdEL.s 			page 29


 704              		.loc 1 900 48
 705 01be 1A70     		strb	r2, [r3]
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 706              		.loc 1 901 13
 707 01c0 FB68     		ldr	r3, [r7, #12]
 708 01c2 9B6B     		ldr	r3, [r3, #56]
 709              		.loc 1 901 26
 710 01c4 5A1C     		adds	r2, r3, #1
 711 01c6 FB68     		ldr	r3, [r7, #12]
 712 01c8 9A63     		str	r2, [r3, #56]
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxXferCount--;
 713              		.loc 1 902 13
 714 01ca FB68     		ldr	r3, [r7, #12]
 715 01cc DB8F     		ldrh	r3, [r3, #62]	@ movhi
 716 01ce 9BB2     		uxth	r3, r3
 717              		.loc 1 902 26
 718 01d0 013B     		subs	r3, r3, #1
 719 01d2 9AB2     		uxth	r2, r3
 720 01d4 FB68     		ldr	r3, [r7, #12]
 721 01d6 DA87     		strh	r2, [r3, #62]	@ movhi
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 722              		.loc 1 905 11
 723 01d8 44E0     		b	.L36
 724              	.L42:
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 725              		.loc 1 908 11
 726 01da FB68     		ldr	r3, [r7, #12]
 727 01dc 1B68     		ldr	r3, [r3]
 728 01de 9B68     		ldr	r3, [r3, #8]
 729 01e0 03F00203 		and	r3, r3, #2
 730              		.loc 1 908 10
 731 01e4 022B     		cmp	r3, #2
 732 01e6 2BD1     		bne	.L37
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 733              		.loc 1 910 17
 734 01e8 FB68     		ldr	r3, [r7, #12]
 735 01ea DB8F     		ldrh	r3, [r3, #62]	@ movhi
 736 01ec 9BB2     		uxth	r3, r3
 737              		.loc 1 910 12
 738 01ee 012B     		cmp	r3, #1
 739 01f0 12D9     		bls	.L38
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* write on the data register in packing mode */
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 740              		.loc 1 913 50
 741 01f2 FB68     		ldr	r3, [r7, #12]
 742 01f4 9B6B     		ldr	r3, [r3, #56]
 743              		.loc 1 913 32
 744 01f6 1A88     		ldrh	r2, [r3]
 745              		.loc 1 913 15
 746 01f8 FB68     		ldr	r3, [r7, #12]
 747 01fa 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccrdcdEL.s 			page 30


 748              		.loc 1 913 30
 749 01fc DA60     		str	r2, [r3, #12]
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 750              		.loc 1 914 28
 751 01fe FB68     		ldr	r3, [r7, #12]
 752 0200 9B6B     		ldr	r3, [r3, #56]
 753 0202 9A1C     		adds	r2, r3, #2
 754 0204 FB68     		ldr	r3, [r7, #12]
 755 0206 9A63     		str	r2, [r3, #56]
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 756              		.loc 1 915 29
 757 0208 FB68     		ldr	r3, [r7, #12]
 758 020a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 759 020c 9BB2     		uxth	r3, r3
 760 020e 023B     		subs	r3, r3, #2
 761 0210 9AB2     		uxth	r2, r3
 762 0212 FB68     		ldr	r3, [r7, #12]
 763 0214 DA87     		strh	r2, [r3, #62]	@ movhi
 764 0216 25E0     		b	.L36
 765              	.L38:
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         else
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 766              		.loc 1 919 58
 767 0218 FB68     		ldr	r3, [r7, #12]
 768 021a 9A6B     		ldr	r2, [r3, #56]
 769              		.loc 1 919 34
 770 021c FB68     		ldr	r3, [r7, #12]
 771 021e 1B68     		ldr	r3, [r3]
 772              		.loc 1 919 29
 773 0220 0C33     		adds	r3, r3, #12
 774              		.loc 1 919 53
 775 0222 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 776              		.loc 1 919 50
 777 0224 1A70     		strb	r2, [r3]
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 778              		.loc 1 920 15
 779 0226 FB68     		ldr	r3, [r7, #12]
 780 0228 9B6B     		ldr	r3, [r3, #56]
 781              		.loc 1 920 27
 782 022a 5A1C     		adds	r2, r3, #1
 783 022c FB68     		ldr	r3, [r7, #12]
 784 022e 9A63     		str	r2, [r3, #56]
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->TxXferCount--;
 785              		.loc 1 921 15
 786 0230 FB68     		ldr	r3, [r7, #12]
 787 0232 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 788 0234 9BB2     		uxth	r3, r3
 789              		.loc 1 921 28
 790 0236 013B     		subs	r3, r3, #1
 791 0238 9AB2     		uxth	r2, r3
 792 023a FB68     		ldr	r3, [r7, #12]
 793 023c DA87     		strh	r2, [r3, #62]	@ movhi
 794 023e 11E0     		b	.L36
 795              	.L37:
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
ARM GAS  /tmp/ccrdcdEL.s 			page 31


 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Timeout management */
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 796              		.loc 1 927 16
 797 0240 FFF7FEFF 		bl	HAL_GetTick
 798 0244 0246     		mov	r2, r0
 799              		.loc 1 927 30
 800 0246 BB69     		ldr	r3, [r7, #24]
 801 0248 D31A     		subs	r3, r2, r3
 802              		.loc 1 927 12
 803 024a 3A68     		ldr	r2, [r7]
 804 024c 9A42     		cmp	r2, r3
 805 024e 03D8     		bhi	.L40
 806              		.loc 1 927 56 discriminator 1
 807 0250 3B68     		ldr	r3, [r7]
 808 0252 B3F1FF3F 		cmp	r3, #-1
 809 0256 02D1     		bne	.L41
 810              	.L40:
 811              		.loc 1 927 87 discriminator 3
 812 0258 3B68     		ldr	r3, [r7]
 813 025a 002B     		cmp	r3, #0
 814 025c 02D1     		bne	.L36
 815              	.L41:
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 816              		.loc 1 929 21
 817 025e 0323     		movs	r3, #3
 818 0260 FB77     		strb	r3, [r7, #31]
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           goto error;
 819              		.loc 1 930 11
 820 0262 26E0     		b	.L19
 821              	.L36:
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 822              		.loc 1 905 16
 823 0264 FB68     		ldr	r3, [r7, #12]
 824 0266 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 825 0268 9BB2     		uxth	r3, r3
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 826              		.loc 1 905 11
 827 026a 002B     		cmp	r3, #0
 828 026c B5D1     		bne	.L42
 829              	.L32:
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable CRC Transmission */
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the end of the transaction */
ARM GAS  /tmp/ccrdcdEL.s 			page 32


 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 830              		.loc 1 944 7
 831 026e BA69     		ldr	r2, [r7, #24]
 832 0270 3968     		ldr	r1, [r7]
 833 0272 F868     		ldr	r0, [r7, #12]
 834 0274 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 835 0278 0346     		mov	r3, r0
 836              		.loc 1 944 6
 837 027a 002B     		cmp	r3, #0
 838 027c 02D0     		beq	.L43
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 839              		.loc 1 946 21
 840 027e FB68     		ldr	r3, [r7, #12]
 841 0280 2022     		movs	r2, #32
 842 0282 1A66     		str	r2, [r3, #96]
 843              	.L43:
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 844              		.loc 1 950 17
 845 0284 FB68     		ldr	r3, [r7, #12]
 846 0286 9B68     		ldr	r3, [r3, #8]
 847              		.loc 1 950 6
 848 0288 002B     		cmp	r3, #0
 849 028a 0AD1     		bne	.L44
 850              	.LBB2:
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 851              		.loc 1 952 5
 852 028c 0023     		movs	r3, #0
 853 028e 3B61     		str	r3, [r7, #16]
 854 0290 FB68     		ldr	r3, [r7, #12]
 855 0292 1B68     		ldr	r3, [r3]
 856 0294 DB68     		ldr	r3, [r3, #12]
 857 0296 3B61     		str	r3, [r7, #16]
 858 0298 FB68     		ldr	r3, [r7, #12]
 859 029a 1B68     		ldr	r3, [r3]
 860 029c 9B68     		ldr	r3, [r3, #8]
 861 029e 3B61     		str	r3, [r7, #16]
 862 02a0 3B69     		ldr	r3, [r7, #16]
 863              	.L44:
 864              	.LBE2:
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 865              		.loc 1 955 11
 866 02a2 FB68     		ldr	r3, [r7, #12]
 867 02a4 1B6E     		ldr	r3, [r3, #96]
 868              		.loc 1 955 6
 869 02a6 002B     		cmp	r3, #0
 870 02a8 02D0     		beq	.L45
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 871              		.loc 1 957 15
 872 02aa 0123     		movs	r3, #1
ARM GAS  /tmp/ccrdcdEL.s 			page 33


 873 02ac FB77     		strb	r3, [r7, #31]
 874 02ae 00E0     		b	.L19
 875              	.L45:
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error:
 876              		.loc 1 960 1
 877 02b0 00BF     		nop
 878              	.L19:
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 879              		.loc 1 961 15
 880 02b2 FB68     		ldr	r3, [r7, #12]
 881 02b4 0122     		movs	r2, #1
 882 02b6 83F85D20 		strb	r2, [r3, #93]
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Unlocked */
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 883              		.loc 1 963 3
 884 02ba FB68     		ldr	r3, [r7, #12]
 885 02bc 0022     		movs	r2, #0
 886 02be 83F85C20 		strb	r2, [r3, #92]
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 887              		.loc 1 964 10
 888 02c2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 889              	.L17:
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 890              		.loc 1 965 1
 891 02c4 1846     		mov	r0, r3
 892 02c6 2037     		adds	r7, r7, #32
 893              	.LCFI25:
 894              		.cfi_def_cfa_offset 8
 895 02c8 BD46     		mov	sp, r7
 896              	.LCFI26:
 897              		.cfi_def_cfa_register 13
 898              		@ sp needed
 899 02ca 80BD     		pop	{r7, pc}
 900              		.cfi_endproc
 901              	.LFE329:
 903              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_SPI_Receive
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	HAL_SPI_Receive:
 912              	.LFB330:
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pData pointer to data buffer
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be received
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Timeout Timeout duration
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
ARM GAS  /tmp/ccrdcdEL.s 			page 34


 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 913              		.loc 1 977 1
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 24
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              	.LCFI27:
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 88B0     		sub	sp, sp, #32
 923              	.LCFI28:
 924              		.cfi_def_cfa_offset 40
 925 0004 02AF     		add	r7, sp, #8
 926              	.LCFI29:
 927              		.cfi_def_cfa 7, 32
 928 0006 F860     		str	r0, [r7, #12]
 929 0008 B960     		str	r1, [r7, #8]
 930 000a 3B60     		str	r3, [r7]
 931 000c 1346     		mov	r3, r2	@ movhi
 932 000e FB80     		strh	r3, [r7, #6]	@ movhi
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t tickstart;
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 933              		.loc 1 979 21
 934 0010 0023     		movs	r3, #0
 935 0012 FB75     		strb	r3, [r7, #23]
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 936              		.loc 1 981 18
 937 0014 FB68     		ldr	r3, [r7, #12]
 938 0016 5B68     		ldr	r3, [r3, #4]
 939              		.loc 1 981 6
 940 0018 B3F5827F 		cmp	r3, #260
 941 001c 12D1     		bne	.L47
 942              		.loc 1 981 58 discriminator 1
 943 001e FB68     		ldr	r3, [r7, #12]
 944 0020 9B68     		ldr	r3, [r3, #8]
 945              		.loc 1 981 44 discriminator 1
 946 0022 002B     		cmp	r3, #0
 947 0024 0ED1     		bne	.L47
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 948              		.loc 1 983 17
 949 0026 FB68     		ldr	r3, [r7, #12]
 950 0028 0422     		movs	r2, #4
 951 002a 83F85D20 		strb	r2, [r3, #93]
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 952              		.loc 1 985 12
 953 002e FA88     		ldrh	r2, [r7, #6]
 954 0030 3B68     		ldr	r3, [r7]
 955 0032 0093     		str	r3, [sp]
 956 0034 1346     		mov	r3, r2
 957 0036 BA68     		ldr	r2, [r7, #8]
 958 0038 B968     		ldr	r1, [r7, #8]
 959 003a F868     		ldr	r0, [r7, #12]
 960 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
ARM GAS  /tmp/ccrdcdEL.s 			page 35


 961 0040 0346     		mov	r3, r0
 962 0042 01E1     		b	.L48
 963              	.L47:
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 964              		.loc 1 989 3
 965 0044 FB68     		ldr	r3, [r7, #12]
 966 0046 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 967 004a 012B     		cmp	r3, #1
 968 004c 01D1     		bne	.L49
 969              		.loc 1 989 3 is_stmt 0 discriminator 1
 970 004e 0223     		movs	r3, #2
 971 0050 FAE0     		b	.L48
 972              	.L49:
 973              		.loc 1 989 3 discriminator 2
 974 0052 FB68     		ldr	r3, [r7, #12]
 975 0054 0122     		movs	r2, #1
 976 0056 83F85C20 		strb	r2, [r3, #92]
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tickstart = HAL_GetTick();
 977              		.loc 1 992 15 is_stmt 1 discriminator 2
 978 005a FFF7FEFF 		bl	HAL_GetTick
 979 005e 3861     		str	r0, [r7, #16]
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 980              		.loc 1 994 11 discriminator 2
 981 0060 FB68     		ldr	r3, [r7, #12]
 982 0062 93F85D30 		ldrb	r3, [r3, #93]
 983 0066 DBB2     		uxtb	r3, r3
 984              		.loc 1 994 6 discriminator 2
 985 0068 012B     		cmp	r3, #1
 986 006a 02D0     		beq	.L50
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 987              		.loc 1 996 15
 988 006c 0223     		movs	r3, #2
 989 006e FB75     		strb	r3, [r7, #23]
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 990              		.loc 1 997 5
 991 0070 E1E0     		b	.L51
 992              	.L50:
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 993              		.loc 1 1000 6
 994 0072 BB68     		ldr	r3, [r7, #8]
 995 0074 002B     		cmp	r3, #0
 996 0076 02D0     		beq	.L52
 997              		.loc 1 1000 23 discriminator 1
 998 0078 FB88     		ldrh	r3, [r7, #6]
 999 007a 002B     		cmp	r3, #0
 1000 007c 02D1     		bne	.L53
 1001              	.L52:
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
ARM GAS  /tmp/ccrdcdEL.s 			page 36


1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1002              		.loc 1 1002 15
 1003 007e 0123     		movs	r3, #1
 1004 0080 FB75     		strb	r3, [r7, #23]
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 1005              		.loc 1 1003 5
 1006 0082 D8E0     		b	.L51
 1007              	.L53:
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 1008              		.loc 1 1007 21
 1009 0084 FB68     		ldr	r3, [r7, #12]
 1010 0086 0422     		movs	r2, #4
 1011 0088 83F85D20 		strb	r2, [r3, #93]
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1012              		.loc 1 1008 21
 1013 008c FB68     		ldr	r3, [r7, #12]
 1014 008e 0022     		movs	r2, #0
 1015 0090 1A66     		str	r2, [r3, #96]
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1016              		.loc 1 1009 21
 1017 0092 FB68     		ldr	r3, [r7, #12]
 1018 0094 BA68     		ldr	r2, [r7, #8]
 1019 0096 1A64     		str	r2, [r3, #64]
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1020              		.loc 1 1010 21
 1021 0098 FB68     		ldr	r3, [r7, #12]
 1022 009a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1023 009c A3F84420 		strh	r2, [r3, #68]	@ movhi
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1024              		.loc 1 1011 21
 1025 00a0 FB68     		ldr	r3, [r7, #12]
 1026 00a2 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1027 00a4 A3F84620 		strh	r2, [r3, #70]	@ movhi
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /*Init field not used in handle to zero */
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 1028              		.loc 1 1014 21
 1029 00a8 FB68     		ldr	r3, [r7, #12]
 1030 00aa 0022     		movs	r2, #0
 1031 00ac 9A63     		str	r2, [r3, #56]
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1032              		.loc 1 1015 21
 1033 00ae FB68     		ldr	r3, [r7, #12]
 1034 00b0 0022     		movs	r2, #0
 1035 00b2 9A87     		strh	r2, [r3, #60]	@ movhi
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1036              		.loc 1 1016 21
 1037 00b4 FB68     		ldr	r3, [r7, #12]
 1038 00b6 0022     		movs	r2, #0
 1039 00b8 DA87     		strh	r2, [r3, #62]	@ movhi
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1040              		.loc 1 1017 21
 1041 00ba FB68     		ldr	r3, [r7, #12]
 1042 00bc 0022     		movs	r2, #0
ARM GAS  /tmp/ccrdcdEL.s 			page 37


 1043 00be DA64     		str	r2, [r3, #76]
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1044              		.loc 1 1018 21
 1045 00c0 FB68     		ldr	r3, [r7, #12]
 1046 00c2 0022     		movs	r2, #0
 1047 00c4 1A65     		str	r2, [r3, #80]
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxXferCount--;
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1048              		.loc 1 1031 17
 1049 00c6 FB68     		ldr	r3, [r7, #12]
 1050 00c8 DB68     		ldr	r3, [r3, #12]
 1051              		.loc 1 1031 6
 1052 00ca B3F5E06F 		cmp	r3, #1792
 1053 00ce 08D9     		bls	.L54
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1054              		.loc 1 1034 5
 1055 00d0 FB68     		ldr	r3, [r7, #12]
 1056 00d2 1B68     		ldr	r3, [r3]
 1057 00d4 5A68     		ldr	r2, [r3, #4]
 1058 00d6 FB68     		ldr	r3, [r7, #12]
 1059 00d8 1B68     		ldr	r3, [r3]
 1060 00da 22F48052 		bic	r2, r2, #4096
 1061 00de 5A60     		str	r2, [r3, #4]
 1062 00e0 07E0     		b	.L55
 1063              	.L54:
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1064              		.loc 1 1039 5
 1065 00e2 FB68     		ldr	r3, [r7, #12]
 1066 00e4 1B68     		ldr	r3, [r3]
 1067 00e6 5A68     		ldr	r2, [r3, #4]
 1068 00e8 FB68     		ldr	r3, [r7, #12]
 1069 00ea 1B68     		ldr	r3, [r3]
 1070 00ec 42F48052 		orr	r2, r2, #4096
 1071 00f0 5A60     		str	r2, [r3, #4]
 1072              	.L55:
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1073              		.loc 1 1043 17
ARM GAS  /tmp/ccrdcdEL.s 			page 38


 1074 00f2 FB68     		ldr	r3, [r7, #12]
 1075 00f4 9B68     		ldr	r3, [r3, #8]
 1076              		.loc 1 1043 6
 1077 00f6 B3F5004F 		cmp	r3, #32768
 1078 00fa 07D1     		bne	.L56
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 1079              		.loc 1 1045 5
 1080 00fc FB68     		ldr	r3, [r7, #12]
 1081 00fe 1B68     		ldr	r3, [r3]
 1082 0100 1A68     		ldr	r2, [r3]
 1083 0102 FB68     		ldr	r3, [r7, #12]
 1084 0104 1B68     		ldr	r3, [r3]
 1085 0106 22F48042 		bic	r2, r2, #16384
 1086 010a 1A60     		str	r2, [r3]
 1087              	.L56:
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1088              		.loc 1 1049 12
 1089 010c FB68     		ldr	r3, [r7, #12]
 1090 010e 1B68     		ldr	r3, [r3]
 1091              		.loc 1 1049 22
 1092 0110 1B68     		ldr	r3, [r3]
 1093              		.loc 1 1049 28
 1094 0112 03F04003 		and	r3, r3, #64
 1095              		.loc 1 1049 6
 1096 0116 402B     		cmp	r3, #64
 1097 0118 07D0     		beq	.L57
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1098              		.loc 1 1052 5
 1099 011a FB68     		ldr	r3, [r7, #12]
 1100 011c 1B68     		ldr	r3, [r3]
 1101 011e 1A68     		ldr	r2, [r3]
 1102 0120 FB68     		ldr	r3, [r7, #12]
 1103 0122 1B68     		ldr	r3, [r3]
 1104 0124 42F04002 		orr	r2, r2, #64
 1105 0128 1A60     		str	r2, [r3]
 1106              	.L57:
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 1107              		.loc 1 1056 17
 1108 012a FB68     		ldr	r3, [r7, #12]
 1109 012c DB68     		ldr	r3, [r3, #12]
 1110              		.loc 1 1056 6
 1111 012e B3F5E06F 		cmp	r3, #1792
 1112 0132 67D8     		bhi	.L65
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Transfer loop */
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 1113              		.loc 1 1059 11
 1114 0134 30E0     		b	.L59
ARM GAS  /tmp/ccrdcdEL.s 			page 39


 1115              	.L63:
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Check the RXNE flag */
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 1116              		.loc 1 1062 11
 1117 0136 FB68     		ldr	r3, [r7, #12]
 1118 0138 1B68     		ldr	r3, [r3]
 1119 013a 9B68     		ldr	r3, [r3, #8]
 1120 013c 03F00103 		and	r3, r3, #1
 1121              		.loc 1 1062 10
 1122 0140 012B     		cmp	r3, #1
 1123 0142 17D1     		bne	.L60
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* read the received data */
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 1124              		.loc 1 1065 65
 1125 0144 FB68     		ldr	r3, [r7, #12]
 1126 0146 1B68     		ldr	r3, [r3]
 1127              		.loc 1 1065 60
 1128 0148 03F10C02 		add	r2, r3, #12
 1129              		.loc 1 1065 27
 1130 014c FB68     		ldr	r3, [r7, #12]
 1131 014e 1B6C     		ldr	r3, [r3, #64]
 1132              		.loc 1 1065 43
 1133 0150 1278     		ldrb	r2, [r2]
 1134 0152 D2B2     		uxtb	r2, r2
 1135              		.loc 1 1065 41
 1136 0154 1A70     		strb	r2, [r3]
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1137              		.loc 1 1066 26
 1138 0156 FB68     		ldr	r3, [r7, #12]
 1139 0158 1B6C     		ldr	r3, [r3, #64]
 1140 015a 5A1C     		adds	r2, r3, #1
 1141 015c FB68     		ldr	r3, [r7, #12]
 1142 015e 1A64     		str	r2, [r3, #64]
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxXferCount--;
 1143              		.loc 1 1067 13
 1144 0160 FB68     		ldr	r3, [r7, #12]
 1145 0162 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1146 0166 9BB2     		uxth	r3, r3
 1147              		.loc 1 1067 26
 1148 0168 013B     		subs	r3, r3, #1
 1149 016a 9AB2     		uxth	r2, r3
 1150 016c FB68     		ldr	r3, [r7, #12]
 1151 016e A3F84620 		strh	r2, [r3, #70]	@ movhi
 1152 0172 11E0     		b	.L59
 1153              	.L60:
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Timeout management */
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1154              		.loc 1 1072 16
 1155 0174 FFF7FEFF 		bl	HAL_GetTick
 1156 0178 0246     		mov	r2, r0
 1157              		.loc 1 1072 30
 1158 017a 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/ccrdcdEL.s 			page 40


 1159 017c D31A     		subs	r3, r2, r3
 1160              		.loc 1 1072 12
 1161 017e 3A68     		ldr	r2, [r7]
 1162 0180 9A42     		cmp	r2, r3
 1163 0182 03D8     		bhi	.L61
 1164              		.loc 1 1072 56 discriminator 1
 1165 0184 3B68     		ldr	r3, [r7]
 1166 0186 B3F1FF3F 		cmp	r3, #-1
 1167 018a 02D1     		bne	.L62
 1168              	.L61:
 1169              		.loc 1 1072 87 discriminator 3
 1170 018c 3B68     		ldr	r3, [r7]
 1171 018e 002B     		cmp	r3, #0
 1172 0190 02D1     		bne	.L59
 1173              	.L62:
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 1174              		.loc 1 1074 21
 1175 0192 0323     		movs	r3, #3
 1176 0194 FB75     		strb	r3, [r7, #23]
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           goto error;
 1177              		.loc 1 1075 11
 1178 0196 4EE0     		b	.L51
 1179              	.L59:
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1180              		.loc 1 1059 16
 1181 0198 FB68     		ldr	r3, [r7, #12]
 1182 019a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1183 019e 9BB2     		uxth	r3, r3
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1184              		.loc 1 1059 11
 1185 01a0 002B     		cmp	r3, #0
 1186 01a2 C8D1     		bne	.L63
 1187 01a4 34E0     		b	.L64
 1188              	.L69:
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Transfer loop */
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Check the RXNE flag */
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 1189              		.loc 1 1086 11
 1190 01a6 FB68     		ldr	r3, [r7, #12]
 1191 01a8 1B68     		ldr	r3, [r3]
 1192 01aa 9B68     		ldr	r3, [r3, #8]
 1193 01ac 03F00103 		and	r3, r3, #1
 1194              		.loc 1 1086 10
 1195 01b0 012B     		cmp	r3, #1
 1196 01b2 15D1     		bne	.L66
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 1197              		.loc 1 1088 57
ARM GAS  /tmp/ccrdcdEL.s 			page 41


 1198 01b4 FB68     		ldr	r3, [r7, #12]
 1199 01b6 1B68     		ldr	r3, [r3]
 1200              		.loc 1 1088 67
 1201 01b8 DA68     		ldr	r2, [r3, #12]
 1202              		.loc 1 1088 27
 1203 01ba FB68     		ldr	r3, [r7, #12]
 1204 01bc 1B6C     		ldr	r3, [r3, #64]
 1205              		.loc 1 1088 43
 1206 01be 92B2     		uxth	r2, r2
 1207              		.loc 1 1088 41
 1208 01c0 1A80     		strh	r2, [r3]	@ movhi
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1209              		.loc 1 1089 26
 1210 01c2 FB68     		ldr	r3, [r7, #12]
 1211 01c4 1B6C     		ldr	r3, [r3, #64]
 1212 01c6 9A1C     		adds	r2, r3, #2
 1213 01c8 FB68     		ldr	r3, [r7, #12]
 1214 01ca 1A64     		str	r2, [r3, #64]
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxXferCount--;
 1215              		.loc 1 1090 13
 1216 01cc FB68     		ldr	r3, [r7, #12]
 1217 01ce B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1218 01d2 9BB2     		uxth	r3, r3
 1219              		.loc 1 1090 26
 1220 01d4 013B     		subs	r3, r3, #1
 1221 01d6 9AB2     		uxth	r2, r3
 1222 01d8 FB68     		ldr	r3, [r7, #12]
 1223 01da A3F84620 		strh	r2, [r3, #70]	@ movhi
 1224 01de 11E0     		b	.L65
 1225              	.L66:
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Timeout management */
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1226              		.loc 1 1095 16
 1227 01e0 FFF7FEFF 		bl	HAL_GetTick
 1228 01e4 0246     		mov	r2, r0
 1229              		.loc 1 1095 30
 1230 01e6 3B69     		ldr	r3, [r7, #16]
 1231 01e8 D31A     		subs	r3, r2, r3
 1232              		.loc 1 1095 12
 1233 01ea 3A68     		ldr	r2, [r7]
 1234 01ec 9A42     		cmp	r2, r3
 1235 01ee 03D8     		bhi	.L67
 1236              		.loc 1 1095 56 discriminator 1
 1237 01f0 3B68     		ldr	r3, [r7]
 1238 01f2 B3F1FF3F 		cmp	r3, #-1
 1239 01f6 02D1     		bne	.L68
 1240              	.L67:
 1241              		.loc 1 1095 87 discriminator 3
 1242 01f8 3B68     		ldr	r3, [r7]
 1243 01fa 002B     		cmp	r3, #0
 1244 01fc 02D1     		bne	.L65
 1245              	.L68:
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
ARM GAS  /tmp/ccrdcdEL.s 			page 42


 1246              		.loc 1 1097 21
 1247 01fe 0323     		movs	r3, #3
 1248 0200 FB75     		strb	r3, [r7, #23]
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           goto error;
 1249              		.loc 1 1098 11
 1250 0202 18E0     		b	.L51
 1251              	.L65:
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1252              		.loc 1 1083 16
 1253 0204 FB68     		ldr	r3, [r7, #12]
 1254 0206 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1255 020a 9BB2     		uxth	r3, r3
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1256              		.loc 1 1083 11
 1257 020c 002B     		cmp	r3, #0
 1258 020e CAD1     		bne	.L69
 1259              	.L64:
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Handle the CRC Transmission */
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Read the latest data */
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* the latest data has not been received */
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       goto error;
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Wait the CRC data */
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       goto error;
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
ARM GAS  /tmp/ccrdcdEL.s 			page 43


1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Read 16bit CRC */
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Read 8bit CRC */
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16B
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Error on the CRC reception */
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           goto error;
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the end of the transaction */
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1260              		.loc 1 1166 7
 1261 0210 3A69     		ldr	r2, [r7, #16]
 1262 0212 3968     		ldr	r1, [r7]
 1263 0214 F868     		ldr	r0, [r7, #12]
 1264 0216 FFF7FEFF 		bl	SPI_EndRxTransaction
 1265 021a 0346     		mov	r3, r0
 1266              		.loc 1 1166 6
 1267 021c 002B     		cmp	r3, #0
 1268 021e 02D0     		beq	.L70
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1269              		.loc 1 1168 21
 1270 0220 FB68     		ldr	r3, [r7, #12]
 1271 0222 2022     		movs	r2, #32
 1272 0224 1A66     		str	r2, [r3, #96]
 1273              	.L70:
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if CRC error occurred */
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1274              		.loc 1 1180 11
ARM GAS  /tmp/ccrdcdEL.s 			page 44


 1275 0226 FB68     		ldr	r3, [r7, #12]
 1276 0228 1B6E     		ldr	r3, [r3, #96]
 1277              		.loc 1 1180 6
 1278 022a 002B     		cmp	r3, #0
 1279 022c 02D0     		beq	.L71
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1280              		.loc 1 1182 15
 1281 022e 0123     		movs	r3, #1
 1282 0230 FB75     		strb	r3, [r7, #23]
 1283 0232 00E0     		b	.L51
 1284              	.L71:
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error :
 1285              		.loc 1 1185 1
 1286 0234 00BF     		nop
 1287              	.L51:
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1288              		.loc 1 1186 15
 1289 0236 FB68     		ldr	r3, [r7, #12]
 1290 0238 0122     		movs	r2, #1
 1291 023a 83F85D20 		strb	r2, [r3, #93]
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1292              		.loc 1 1187 3
 1293 023e FB68     		ldr	r3, [r7, #12]
 1294 0240 0022     		movs	r2, #0
 1295 0242 83F85C20 		strb	r2, [r3, #92]
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 1296              		.loc 1 1188 10
 1297 0246 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1298              	.L48:
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 1299              		.loc 1 1189 1
 1300 0248 1846     		mov	r0, r3
 1301 024a 1837     		adds	r7, r7, #24
 1302              	.LCFI30:
 1303              		.cfi_def_cfa_offset 8
 1304 024c BD46     		mov	sp, r7
 1305              	.LCFI31:
 1306              		.cfi_def_cfa_register 13
 1307              		@ sp needed
 1308 024e 80BD     		pop	{r7, pc}
 1309              		.cfi_endproc
 1310              	.LFE330:
 1312              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1313              		.align	1
 1314              		.global	HAL_SPI_TransmitReceive
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv4-sp-d16
 1320              	HAL_SPI_TransmitReceive:
 1321              	.LFB331:
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
ARM GAS  /tmp/ccrdcdEL.s 			page 45


1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Timeout Timeout duration
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                           uint32_t Timeout)
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 1322              		.loc 1 1203 1
 1323              		.cfi_startproc
 1324              		@ args = 4, pretend = 0, frame = 40
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326 0000 80B5     		push	{r7, lr}
 1327              	.LCFI32:
 1328              		.cfi_def_cfa_offset 8
 1329              		.cfi_offset 7, -8
 1330              		.cfi_offset 14, -4
 1331 0002 8AB0     		sub	sp, sp, #40
 1332              	.LCFI33:
 1333              		.cfi_def_cfa_offset 48
 1334 0004 00AF     		add	r7, sp, #0
 1335              	.LCFI34:
 1336              		.cfi_def_cfa_register 7
 1337 0006 F860     		str	r0, [r7, #12]
 1338 0008 B960     		str	r1, [r7, #8]
 1339 000a 7A60     		str	r2, [r7, #4]
 1340 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint16_t             initial_RxXferCount;
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t             tmp_mode;
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t             tickstart;
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t             spi_cr1;
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t             spi_cr2;
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t             txallowed = 1U;
 1341              		.loc 1 1215 24
 1342 000e 0123     		movs	r3, #1
 1343 0010 7B62     		str	r3, [r7, #36]
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
 1344              		.loc 1 1216 24
 1345 0012 0023     		movs	r3, #0
 1346 0014 87F82330 		strb	r3, [r7, #35]
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check Direction parameter */
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1347              		.loc 1 1222 3
 1348 0018 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 46


 1349 001a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 1350 001e 012B     		cmp	r3, #1
 1351 0020 01D1     		bne	.L73
 1352              		.loc 1 1222 3 is_stmt 0 discriminator 1
 1353 0022 0223     		movs	r3, #2
 1354 0024 FBE1     		b	.L74
 1355              	.L73:
 1356              		.loc 1 1222 3 discriminator 2
 1357 0026 FB68     		ldr	r3, [r7, #12]
 1358 0028 0122     		movs	r2, #1
 1359 002a 83F85C20 		strb	r2, [r3, #92]
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tickstart = HAL_GetTick();
 1360              		.loc 1 1225 15 is_stmt 1 discriminator 2
 1361 002e FFF7FEFF 		bl	HAL_GetTick
 1362 0032 F861     		str	r0, [r7, #28]
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init temporary variables */
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tmp_state           = hspi->State;
 1363              		.loc 1 1228 23 discriminator 2
 1364 0034 FB68     		ldr	r3, [r7, #12]
 1365 0036 93F85D30 		ldrb	r3, [r3, #93]
 1366 003a FB76     		strb	r3, [r7, #27]
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1367              		.loc 1 1229 23 discriminator 2
 1368 003c FB68     		ldr	r3, [r7, #12]
 1369 003e 5B68     		ldr	r3, [r3, #4]
 1370 0040 7B61     		str	r3, [r7, #20]
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   initial_TxXferCount = Size;
 1371              		.loc 1 1230 23 discriminator 2
 1372 0042 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1373 0044 7B82     		strh	r3, [r7, #18]	@ movhi
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   initial_RxXferCount = Size;
 1374              		.loc 1 1231 23 discriminator 2
 1375 0046 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1376 0048 3B82     		strh	r3, [r7, #16]	@ movhi
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   spi_cr1             = READ_REG(hspi->Instance->CR1);
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   spi_cr2             = READ_REG(hspi->Instance->CR2);
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
 1377              		.loc 1 1237 6 discriminator 2
 1378 004a FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1379 004c 012B     		cmp	r3, #1
 1380 004e 0ED0     		beq	.L75
 1381              		.loc 1 1237 7 discriminator 1
 1382 0050 7B69     		ldr	r3, [r7, #20]
 1383 0052 B3F5827F 		cmp	r3, #260
 1384 0056 06D1     		bne	.L76
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1385              		.loc 1 1238 54
 1386 0058 FB68     		ldr	r3, [r7, #12]
 1387 005a 9B68     		ldr	r3, [r3, #8]
 1388              		.loc 1 1238 40
 1389 005c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrdcdEL.s 			page 47


 1390 005e 02D1     		bne	.L76
 1391              		.loc 1 1238 90 discriminator 1
 1392 0060 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1393 0062 042B     		cmp	r3, #4
 1394 0064 03D0     		beq	.L75
 1395              	.L76:
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1396              		.loc 1 1240 15
 1397 0066 0223     		movs	r3, #2
 1398 0068 87F82330 		strb	r3, [r7, #35]
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 1399              		.loc 1 1241 5
 1400 006c CDE1     		b	.L77
 1401              	.L75:
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 1402              		.loc 1 1244 6
 1403 006e BB68     		ldr	r3, [r7, #8]
 1404 0070 002B     		cmp	r3, #0
 1405 0072 05D0     		beq	.L78
 1406              		.loc 1 1244 25 discriminator 1
 1407 0074 7B68     		ldr	r3, [r7, #4]
 1408 0076 002B     		cmp	r3, #0
 1409 0078 02D0     		beq	.L78
 1410              		.loc 1 1244 46 discriminator 2
 1411 007a 7B88     		ldrh	r3, [r7, #2]
 1412 007c 002B     		cmp	r3, #0
 1413 007e 03D1     		bne	.L79
 1414              	.L78:
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1415              		.loc 1 1246 15
 1416 0080 0123     		movs	r3, #1
 1417 0082 87F82330 		strb	r3, [r7, #35]
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 1418              		.loc 1 1247 5
 1419 0086 C0E1     		b	.L77
 1420              	.L79:
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 1421              		.loc 1 1251 11
 1422 0088 FB68     		ldr	r3, [r7, #12]
 1423 008a 93F85D30 		ldrb	r3, [r3, #93]
 1424 008e DBB2     		uxtb	r3, r3
 1425              		.loc 1 1251 6
 1426 0090 042B     		cmp	r3, #4
 1427 0092 03D0     		beq	.L80
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 1428              		.loc 1 1253 17
 1429 0094 FB68     		ldr	r3, [r7, #12]
 1430 0096 0522     		movs	r2, #5
 1431 0098 83F85D20 		strb	r2, [r3, #93]
ARM GAS  /tmp/ccrdcdEL.s 			page 48


 1432              	.L80:
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1433              		.loc 1 1257 21
 1434 009c FB68     		ldr	r3, [r7, #12]
 1435 009e 0022     		movs	r2, #0
 1436 00a0 1A66     		str	r2, [r3, #96]
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1437              		.loc 1 1258 21
 1438 00a2 FB68     		ldr	r3, [r7, #12]
 1439 00a4 7A68     		ldr	r2, [r7, #4]
 1440 00a6 1A64     		str	r2, [r3, #64]
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1441              		.loc 1 1259 21
 1442 00a8 FB68     		ldr	r3, [r7, #12]
 1443 00aa 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1444 00ac A3F84620 		strh	r2, [r3, #70]	@ movhi
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1445              		.loc 1 1260 21
 1446 00b0 FB68     		ldr	r3, [r7, #12]
 1447 00b2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1448 00b4 A3F84420 		strh	r2, [r3, #68]	@ movhi
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1449              		.loc 1 1261 21
 1450 00b8 FB68     		ldr	r3, [r7, #12]
 1451 00ba BA68     		ldr	r2, [r7, #8]
 1452 00bc 9A63     		str	r2, [r3, #56]
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1453              		.loc 1 1262 21
 1454 00be FB68     		ldr	r3, [r7, #12]
 1455 00c0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1456 00c2 DA87     		strh	r2, [r3, #62]	@ movhi
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1457              		.loc 1 1263 21
 1458 00c4 FB68     		ldr	r3, [r7, #12]
 1459 00c6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1460 00c8 9A87     		strh	r2, [r3, #60]	@ movhi
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /*Init field not used in handle to zero */
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1461              		.loc 1 1266 21
 1462 00ca FB68     		ldr	r3, [r7, #12]
 1463 00cc 0022     		movs	r2, #0
 1464 00ce DA64     		str	r2, [r3, #76]
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1465              		.loc 1 1267 21
 1466 00d0 FB68     		ldr	r3, [r7, #12]
 1467 00d2 0022     		movs	r2, #0
 1468 00d4 1A65     		str	r2, [r3, #80]
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
ARM GAS  /tmp/ccrdcdEL.s 			page 49


1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
 1469              		.loc 1 1278 18
 1470 00d6 FB68     		ldr	r3, [r7, #12]
 1471 00d8 DB68     		ldr	r3, [r3, #12]
 1472              		.loc 1 1278 6
 1473 00da B3F5E06F 		cmp	r3, #1792
 1474 00de 02D8     		bhi	.L81
 1475              		.loc 1 1278 49 discriminator 1
 1476 00e0 3B8A     		ldrh	r3, [r7, #16]
 1477 00e2 012B     		cmp	r3, #1
 1478 00e4 08D9     		bls	.L82
 1479              	.L81:
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1480              		.loc 1 1281 5
 1481 00e6 FB68     		ldr	r3, [r7, #12]
 1482 00e8 1B68     		ldr	r3, [r3]
 1483 00ea 5A68     		ldr	r2, [r3, #4]
 1484 00ec FB68     		ldr	r3, [r7, #12]
 1485 00ee 1B68     		ldr	r3, [r3]
 1486 00f0 22F48052 		bic	r2, r2, #4096
 1487 00f4 5A60     		str	r2, [r3, #4]
 1488 00f6 07E0     		b	.L83
 1489              	.L82:
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 8bit */
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1490              		.loc 1 1286 5
 1491 00f8 FB68     		ldr	r3, [r7, #12]
 1492 00fa 1B68     		ldr	r3, [r3]
 1493 00fc 5A68     		ldr	r2, [r3, #4]
 1494 00fe FB68     		ldr	r3, [r7, #12]
 1495 0100 1B68     		ldr	r3, [r3]
 1496 0102 42F48052 		orr	r2, r2, #4096
 1497 0106 5A60     		str	r2, [r3, #4]
 1498              	.L83:
1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1499              		.loc 1 1290 12
 1500 0108 FB68     		ldr	r3, [r7, #12]
 1501 010a 1B68     		ldr	r3, [r3]
 1502              		.loc 1 1290 22
 1503 010c 1B68     		ldr	r3, [r3]
 1504              		.loc 1 1290 28
 1505 010e 03F04003 		and	r3, r3, #64
 1506              		.loc 1 1290 6
 1507 0112 402B     		cmp	r3, #64
 1508 0114 07D0     		beq	.L84
ARM GAS  /tmp/ccrdcdEL.s 			page 50


1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1509              		.loc 1 1293 5
 1510 0116 FB68     		ldr	r3, [r7, #12]
 1511 0118 1B68     		ldr	r3, [r3]
 1512 011a 1A68     		ldr	r2, [r3]
 1513 011c FB68     		ldr	r3, [r7, #12]
 1514 011e 1B68     		ldr	r3, [r3]
 1515 0120 42F04002 		orr	r2, r2, #64
 1516 0124 1A60     		str	r2, [r3]
 1517              	.L84:
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1518              		.loc 1 1297 17
 1519 0126 FB68     		ldr	r3, [r7, #12]
 1520 0128 DB68     		ldr	r3, [r3, #12]
 1521              		.loc 1 1297 6
 1522 012a B3F5E06F 		cmp	r3, #1792
 1523 012e 7CD9     		bls	.L85
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 1524              		.loc 1 1299 20
 1525 0130 FB68     		ldr	r3, [r7, #12]
 1526 0132 5B68     		ldr	r3, [r3, #4]
 1527              		.loc 1 1299 8
 1528 0134 002B     		cmp	r3, #0
 1529 0136 02D0     		beq	.L86
 1530              		.loc 1 1299 45 discriminator 1
 1531 0138 7B8A     		ldrh	r3, [r7, #18]
 1532 013a 012B     		cmp	r3, #1
 1533 013c 69D1     		bne	.L88
 1534              	.L86:
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 1535              		.loc 1 1301 46
 1536 013e FB68     		ldr	r3, [r7, #12]
 1537 0140 9B6B     		ldr	r3, [r3, #56]
 1538              		.loc 1 1301 28
 1539 0142 1A88     		ldrh	r2, [r3]
 1540              		.loc 1 1301 11
 1541 0144 FB68     		ldr	r3, [r7, #12]
 1542 0146 1B68     		ldr	r3, [r3]
 1543              		.loc 1 1301 26
 1544 0148 DA60     		str	r2, [r3, #12]
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1545              		.loc 1 1302 24
 1546 014a FB68     		ldr	r3, [r7, #12]
 1547 014c 9B6B     		ldr	r3, [r3, #56]
 1548 014e 9A1C     		adds	r2, r3, #2
 1549 0150 FB68     		ldr	r3, [r7, #12]
 1550 0152 9A63     		str	r2, [r3, #56]
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->TxXferCount--;
 1551              		.loc 1 1303 11
 1552 0154 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 51


 1553 0156 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1554 0158 9BB2     		uxth	r3, r3
 1555              		.loc 1 1303 24
 1556 015a 013B     		subs	r3, r3, #1
 1557 015c 9AB2     		uxth	r2, r3
 1558 015e FB68     		ldr	r3, [r7, #12]
 1559 0160 DA87     		strh	r2, [r3, #62]	@ movhi
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1560              		.loc 1 1305 11
 1561 0162 56E0     		b	.L88
 1562              	.L91:
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Check TXE flag */
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
 1563              		.loc 1 1308 12
 1564 0164 FB68     		ldr	r3, [r7, #12]
 1565 0166 1B68     		ldr	r3, [r3]
 1566 0168 9B68     		ldr	r3, [r3, #8]
 1567 016a 03F00203 		and	r3, r3, #2
 1568              		.loc 1 1308 10
 1569 016e 022B     		cmp	r3, #2
 1570 0170 1BD1     		bne	.L89
 1571              		.loc 1 1308 60 discriminator 1
 1572 0172 FB68     		ldr	r3, [r7, #12]
 1573 0174 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1574 0176 9BB2     		uxth	r3, r3
 1575              		.loc 1 1308 52 discriminator 1
 1576 0178 002B     		cmp	r3, #0
 1577 017a 16D0     		beq	.L89
 1578              		.loc 1 1308 80 discriminator 2
 1579 017c 7B6A     		ldr	r3, [r7, #36]
 1580 017e 012B     		cmp	r3, #1
 1581 0180 13D1     		bne	.L89
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 1582              		.loc 1 1310 48
 1583 0182 FB68     		ldr	r3, [r7, #12]
 1584 0184 9B6B     		ldr	r3, [r3, #56]
 1585              		.loc 1 1310 30
 1586 0186 1A88     		ldrh	r2, [r3]
 1587              		.loc 1 1310 13
 1588 0188 FB68     		ldr	r3, [r7, #12]
 1589 018a 1B68     		ldr	r3, [r3]
 1590              		.loc 1 1310 28
 1591 018c DA60     		str	r2, [r3, #12]
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1592              		.loc 1 1311 26
 1593 018e FB68     		ldr	r3, [r7, #12]
 1594 0190 9B6B     		ldr	r3, [r3, #56]
 1595 0192 9A1C     		adds	r2, r3, #2
 1596 0194 FB68     		ldr	r3, [r7, #12]
 1597 0196 9A63     		str	r2, [r3, #56]
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxXferCount--;
 1598              		.loc 1 1312 13
 1599 0198 FB68     		ldr	r3, [r7, #12]
 1600 019a DB8F     		ldrh	r3, [r3, #62]	@ movhi
ARM GAS  /tmp/ccrdcdEL.s 			page 52


 1601 019c 9BB2     		uxth	r3, r3
 1602              		.loc 1 1312 26
 1603 019e 013B     		subs	r3, r3, #1
 1604 01a0 9AB2     		uxth	r2, r3
 1605 01a2 FB68     		ldr	r3, [r7, #12]
 1606 01a4 DA87     		strh	r2, [r3, #62]	@ movhi
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         txallowed = 0U;
 1607              		.loc 1 1314 19
 1608 01a6 0023     		movs	r3, #0
 1609 01a8 7B62     		str	r3, [r7, #36]
 1610              	.L89:
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Enable CRC Transmission */
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           {
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           }
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Check RXNE flag */
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 1611              		.loc 1 1331 12
 1612 01aa FB68     		ldr	r3, [r7, #12]
 1613 01ac 1B68     		ldr	r3, [r3]
 1614 01ae 9B68     		ldr	r3, [r3, #8]
 1615 01b0 03F00103 		and	r3, r3, #1
 1616              		.loc 1 1331 10
 1617 01b4 012B     		cmp	r3, #1
 1618 01b6 1CD1     		bne	.L90
 1619              		.loc 1 1331 61 discriminator 1
 1620 01b8 FB68     		ldr	r3, [r7, #12]
 1621 01ba B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1622 01be 9BB2     		uxth	r3, r3
 1623              		.loc 1 1331 53 discriminator 1
 1624 01c0 002B     		cmp	r3, #0
 1625 01c2 16D0     		beq	.L90
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 1626              		.loc 1 1333 57
 1627 01c4 FB68     		ldr	r3, [r7, #12]
 1628 01c6 1B68     		ldr	r3, [r3]
 1629              		.loc 1 1333 67
 1630 01c8 DA68     		ldr	r2, [r3, #12]
 1631              		.loc 1 1333 27
 1632 01ca FB68     		ldr	r3, [r7, #12]
 1633 01cc 1B6C     		ldr	r3, [r3, #64]
 1634              		.loc 1 1333 43
 1635 01ce 92B2     		uxth	r2, r2
 1636              		.loc 1 1333 41
ARM GAS  /tmp/ccrdcdEL.s 			page 53


 1637 01d0 1A80     		strh	r2, [r3]	@ movhi
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1638              		.loc 1 1334 26
 1639 01d2 FB68     		ldr	r3, [r7, #12]
 1640 01d4 1B6C     		ldr	r3, [r3, #64]
 1641 01d6 9A1C     		adds	r2, r3, #2
 1642 01d8 FB68     		ldr	r3, [r7, #12]
 1643 01da 1A64     		str	r2, [r3, #64]
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxXferCount--;
 1644              		.loc 1 1335 13
 1645 01dc FB68     		ldr	r3, [r7, #12]
 1646 01de B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1647 01e2 9BB2     		uxth	r3, r3
 1648              		.loc 1 1335 26
 1649 01e4 013B     		subs	r3, r3, #1
 1650 01e6 9AB2     		uxth	r2, r3
 1651 01e8 FB68     		ldr	r3, [r7, #12]
 1652 01ea A3F84620 		strh	r2, [r3, #70]	@ movhi
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         txallowed = 1U;
 1653              		.loc 1 1337 19
 1654 01ee 0123     		movs	r3, #1
 1655 01f0 7B62     		str	r3, [r7, #36]
 1656              	.L90:
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 1657              		.loc 1 1339 13
 1658 01f2 FFF7FEFF 		bl	HAL_GetTick
 1659 01f6 0246     		mov	r2, r0
 1660              		.loc 1 1339 27
 1661 01f8 FB69     		ldr	r3, [r7, #28]
 1662 01fa D31A     		subs	r3, r2, r3
 1663              		.loc 1 1339 10
 1664 01fc 3A6B     		ldr	r2, [r7, #48]
 1665 01fe 9A42     		cmp	r2, r3
 1666 0200 07D8     		bhi	.L88
 1667              		.loc 1 1339 53 discriminator 1
 1668 0202 3B6B     		ldr	r3, [r7, #48]
 1669 0204 B3F1FF3F 		cmp	r3, #-1
 1670 0208 03D0     		beq	.L88
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 1671              		.loc 1 1341 19
 1672 020a 0323     		movs	r3, #3
 1673 020c 87F82330 		strb	r3, [r7, #35]
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         goto error;
 1674              		.loc 1 1342 9
 1675 0210 FBE0     		b	.L77
 1676              	.L88:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1677              		.loc 1 1305 17
 1678 0212 FB68     		ldr	r3, [r7, #12]
 1679 0214 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1680 0216 9BB2     		uxth	r3, r3
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1681              		.loc 1 1305 11
 1682 0218 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrdcdEL.s 			page 54


 1683 021a A3D1     		bne	.L91
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1684              		.loc 1 1305 45 discriminator 1
 1685 021c FB68     		ldr	r3, [r7, #12]
 1686 021e B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1687 0222 9BB2     		uxth	r3, r3
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1688              		.loc 1 1305 37 discriminator 1
 1689 0224 002B     		cmp	r3, #0
 1690 0226 9DD1     		bne	.L91
 1691 0228 DFE0     		b	.L92
 1692              	.L85:
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 1693              		.loc 1 1349 20
 1694 022a FB68     		ldr	r3, [r7, #12]
 1695 022c 5B68     		ldr	r3, [r3, #4]
 1696              		.loc 1 1349 8
 1697 022e 002B     		cmp	r3, #0
 1698 0230 03D0     		beq	.L93
 1699              		.loc 1 1349 45 discriminator 1
 1700 0232 7B8A     		ldrh	r3, [r7, #18]
 1701 0234 012B     		cmp	r3, #1
 1702 0236 40F0CB80 		bne	.L96
 1703              	.L93:
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
 1704              		.loc 1 1351 15
 1705 023a FB68     		ldr	r3, [r7, #12]
 1706 023c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1707 023e 9BB2     		uxth	r3, r3
 1708              		.loc 1 1351 10
 1709 0240 012B     		cmp	r3, #1
 1710 0242 12D9     		bls	.L95
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 1711              		.loc 1 1353 48
 1712 0244 FB68     		ldr	r3, [r7, #12]
 1713 0246 9B6B     		ldr	r3, [r3, #56]
 1714              		.loc 1 1353 30
 1715 0248 1A88     		ldrh	r2, [r3]
 1716              		.loc 1 1353 13
 1717 024a FB68     		ldr	r3, [r7, #12]
 1718 024c 1B68     		ldr	r3, [r3]
 1719              		.loc 1 1353 28
 1720 024e DA60     		str	r2, [r3, #12]
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1721              		.loc 1 1354 26
 1722 0250 FB68     		ldr	r3, [r7, #12]
 1723 0252 9B6B     		ldr	r3, [r3, #56]
 1724 0254 9A1C     		adds	r2, r3, #2
 1725 0256 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 55


 1726 0258 9A63     		str	r2, [r3, #56]
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1727              		.loc 1 1355 27
 1728 025a FB68     		ldr	r3, [r7, #12]
 1729 025c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1730 025e 9BB2     		uxth	r3, r3
 1731 0260 023B     		subs	r3, r3, #2
 1732 0262 9AB2     		uxth	r2, r3
 1733 0264 FB68     		ldr	r3, [r7, #12]
 1734 0266 DA87     		strh	r2, [r3, #62]	@ movhi
 1735 0268 B2E0     		b	.L96
 1736              	.L95:
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 1737              		.loc 1 1359 54
 1738 026a FB68     		ldr	r3, [r7, #12]
 1739 026c 9A6B     		ldr	r2, [r3, #56]
 1740              		.loc 1 1359 31
 1741 026e FB68     		ldr	r3, [r7, #12]
 1742 0270 1B68     		ldr	r3, [r3]
 1743              		.loc 1 1359 26
 1744 0272 0C33     		adds	r3, r3, #12
 1745              		.loc 1 1359 49
 1746 0274 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1747              		.loc 1 1359 46
 1748 0276 1A70     		strb	r2, [r3]
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1749              		.loc 1 1360 13
 1750 0278 FB68     		ldr	r3, [r7, #12]
 1751 027a 9B6B     		ldr	r3, [r3, #56]
 1752              		.loc 1 1360 25
 1753 027c 5A1C     		adds	r2, r3, #1
 1754 027e FB68     		ldr	r3, [r7, #12]
 1755 0280 9A63     		str	r2, [r3, #56]
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxXferCount--;
 1756              		.loc 1 1361 13
 1757 0282 FB68     		ldr	r3, [r7, #12]
 1758 0284 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1759 0286 9BB2     		uxth	r3, r3
 1760              		.loc 1 1361 26
 1761 0288 013B     		subs	r3, r3, #1
 1762 028a 9AB2     		uxth	r2, r3
 1763 028c FB68     		ldr	r3, [r7, #12]
 1764 028e DA87     		strh	r2, [r3, #62]	@ movhi
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1765              		.loc 1 1364 11
 1766 0290 9EE0     		b	.L96
 1767              	.L106:
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Check TXE flag */
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
 1768              		.loc 1 1367 12
 1769 0292 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 56


 1770 0294 1B68     		ldr	r3, [r3]
 1771 0296 9B68     		ldr	r3, [r3, #8]
 1772 0298 03F00203 		and	r3, r3, #2
 1773              		.loc 1 1367 10
 1774 029c 022B     		cmp	r3, #2
 1775 029e 34D1     		bne	.L97
 1776              		.loc 1 1367 60 discriminator 1
 1777 02a0 FB68     		ldr	r3, [r7, #12]
 1778 02a2 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1779 02a4 9BB2     		uxth	r3, r3
 1780              		.loc 1 1367 52 discriminator 1
 1781 02a6 002B     		cmp	r3, #0
 1782 02a8 2FD0     		beq	.L97
 1783              		.loc 1 1367 80 discriminator 2
 1784 02aa 7B6A     		ldr	r3, [r7, #36]
 1785 02ac 012B     		cmp	r3, #1
 1786 02ae 2CD1     		bne	.L97
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 1787              		.loc 1 1369 17
 1788 02b0 FB68     		ldr	r3, [r7, #12]
 1789 02b2 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1790 02b4 9BB2     		uxth	r3, r3
 1791              		.loc 1 1369 12
 1792 02b6 012B     		cmp	r3, #1
 1793 02b8 12D9     		bls	.L98
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 1794              		.loc 1 1371 50
 1795 02ba FB68     		ldr	r3, [r7, #12]
 1796 02bc 9B6B     		ldr	r3, [r3, #56]
 1797              		.loc 1 1371 32
 1798 02be 1A88     		ldrh	r2, [r3]
 1799              		.loc 1 1371 15
 1800 02c0 FB68     		ldr	r3, [r7, #12]
 1801 02c2 1B68     		ldr	r3, [r3]
 1802              		.loc 1 1371 30
 1803 02c4 DA60     		str	r2, [r3, #12]
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1804              		.loc 1 1372 28
 1805 02c6 FB68     		ldr	r3, [r7, #12]
 1806 02c8 9B6B     		ldr	r3, [r3, #56]
 1807 02ca 9A1C     		adds	r2, r3, #2
 1808 02cc FB68     		ldr	r3, [r7, #12]
 1809 02ce 9A63     		str	r2, [r3, #56]
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1810              		.loc 1 1373 29
 1811 02d0 FB68     		ldr	r3, [r7, #12]
 1812 02d2 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1813 02d4 9BB2     		uxth	r3, r3
 1814 02d6 023B     		subs	r3, r3, #2
 1815 02d8 9AB2     		uxth	r2, r3
 1816 02da FB68     		ldr	r3, [r7, #12]
 1817 02dc DA87     		strh	r2, [r3, #62]	@ movhi
 1818 02de 12E0     		b	.L99
 1819              	.L98:
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
ARM GAS  /tmp/ccrdcdEL.s 			page 57


1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         else
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 1820              		.loc 1 1377 56
 1821 02e0 FB68     		ldr	r3, [r7, #12]
 1822 02e2 9A6B     		ldr	r2, [r3, #56]
 1823              		.loc 1 1377 33
 1824 02e4 FB68     		ldr	r3, [r7, #12]
 1825 02e6 1B68     		ldr	r3, [r3]
 1826              		.loc 1 1377 28
 1827 02e8 0C33     		adds	r3, r3, #12
 1828              		.loc 1 1377 51
 1829 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1830              		.loc 1 1377 48
 1831 02ec 1A70     		strb	r2, [r3]
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1832              		.loc 1 1378 15
 1833 02ee FB68     		ldr	r3, [r7, #12]
 1834 02f0 9B6B     		ldr	r3, [r3, #56]
 1835              		.loc 1 1378 27
 1836 02f2 5A1C     		adds	r2, r3, #1
 1837 02f4 FB68     		ldr	r3, [r7, #12]
 1838 02f6 9A63     		str	r2, [r3, #56]
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->TxXferCount--;
 1839              		.loc 1 1379 15
 1840 02f8 FB68     		ldr	r3, [r7, #12]
 1841 02fa DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1842 02fc 9BB2     		uxth	r3, r3
 1843              		.loc 1 1379 28
 1844 02fe 013B     		subs	r3, r3, #1
 1845 0300 9AB2     		uxth	r2, r3
 1846 0302 FB68     		ldr	r3, [r7, #12]
 1847 0304 DA87     		strh	r2, [r3, #62]	@ movhi
 1848              	.L99:
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         txallowed = 0U;
 1849              		.loc 1 1382 19
 1850 0306 0023     		movs	r3, #0
 1851 0308 7B62     		str	r3, [r7, #36]
 1852              	.L97:
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Enable CRC Transmission */
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           {
1391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           }
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
1395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
ARM GAS  /tmp/ccrdcdEL.s 			page 58


1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 1853              		.loc 1 1399 12
 1854 030a FB68     		ldr	r3, [r7, #12]
 1855 030c 1B68     		ldr	r3, [r3]
 1856 030e 9B68     		ldr	r3, [r3, #8]
 1857 0310 03F00103 		and	r3, r3, #1
 1858              		.loc 1 1399 10
 1859 0314 012B     		cmp	r3, #1
 1860 0316 48D1     		bne	.L100
 1861              		.loc 1 1399 61 discriminator 1
 1862 0318 FB68     		ldr	r3, [r7, #12]
 1863 031a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1864 031e 9BB2     		uxth	r3, r3
 1865              		.loc 1 1399 53 discriminator 1
 1866 0320 002B     		cmp	r3, #0
 1867 0322 42D0     		beq	.L100
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (hspi->RxXferCount > 1U)
 1868              		.loc 1 1401 17
 1869 0324 FB68     		ldr	r3, [r7, #12]
 1870 0326 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1871 032a 9BB2     		uxth	r3, r3
 1872              		.loc 1 1401 12
 1873 032c 012B     		cmp	r3, #1
 1874 032e 23D9     		bls	.L101
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 1875              		.loc 1 1403 59
 1876 0330 FB68     		ldr	r3, [r7, #12]
 1877 0332 1B68     		ldr	r3, [r3]
 1878              		.loc 1 1403 69
 1879 0334 DA68     		ldr	r2, [r3, #12]
 1880              		.loc 1 1403 29
 1881 0336 FB68     		ldr	r3, [r7, #12]
 1882 0338 1B6C     		ldr	r3, [r3, #64]
 1883              		.loc 1 1403 45
 1884 033a 92B2     		uxth	r2, r2
 1885              		.loc 1 1403 43
 1886 033c 1A80     		strh	r2, [r3]	@ movhi
1404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 1887              		.loc 1 1404 28
 1888 033e FB68     		ldr	r3, [r7, #12]
 1889 0340 1B6C     		ldr	r3, [r3, #64]
 1890 0342 9A1C     		adds	r2, r3, #2
 1891 0344 FB68     		ldr	r3, [r7, #12]
 1892 0346 1A64     		str	r2, [r3, #64]
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
 1893              		.loc 1 1405 29
 1894 0348 FB68     		ldr	r3, [r7, #12]
 1895 034a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1896 034e 9BB2     		uxth	r3, r3
 1897 0350 023B     		subs	r3, r3, #2
 1898 0352 9AB2     		uxth	r2, r3
 1899 0354 FB68     		ldr	r3, [r7, #12]
 1900 0356 A3F84620 		strh	r2, [r3, #70]	@ movhi
1406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
 1901              		.loc 1 1406 19
ARM GAS  /tmp/ccrdcdEL.s 			page 59


 1902 035a FB68     		ldr	r3, [r7, #12]
 1903 035c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1904 0360 9BB2     		uxth	r3, r3
 1905              		.loc 1 1406 14
 1906 0362 012B     		cmp	r3, #1
 1907 0364 1FD8     		bhi	.L103
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           {
1408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             /* Set RX Fifo threshold before to switch on 8 bit data size */
1409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 1908              		.loc 1 1409 13
 1909 0366 FB68     		ldr	r3, [r7, #12]
 1910 0368 1B68     		ldr	r3, [r3]
 1911 036a 5A68     		ldr	r2, [r3, #4]
 1912 036c FB68     		ldr	r3, [r7, #12]
 1913 036e 1B68     		ldr	r3, [r3]
 1914 0370 42F48052 		orr	r2, r2, #4096
 1915 0374 5A60     		str	r2, [r3, #4]
 1916 0376 16E0     		b	.L103
 1917              	.L101:
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           }
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         else
1413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 1918              		.loc 1 1414 66
 1919 0378 FB68     		ldr	r3, [r7, #12]
 1920 037a 1B68     		ldr	r3, [r3]
 1921              		.loc 1 1414 61
 1922 037c 03F10C02 		add	r2, r3, #12
 1923              		.loc 1 1414 28
 1924 0380 FB68     		ldr	r3, [r7, #12]
 1925 0382 1B6C     		ldr	r3, [r3, #64]
 1926              		.loc 1 1414 44
 1927 0384 1278     		ldrb	r2, [r2]
 1928 0386 D2B2     		uxtb	r2, r2
 1929              		.loc 1 1414 42
 1930 0388 1A70     		strb	r2, [r3]
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->pRxBuffPtr++;
 1931              		.loc 1 1415 15
 1932 038a FB68     		ldr	r3, [r7, #12]
 1933 038c 1B6C     		ldr	r3, [r3, #64]
 1934              		.loc 1 1415 27
 1935 038e 5A1C     		adds	r2, r3, #1
 1936 0390 FB68     		ldr	r3, [r7, #12]
 1937 0392 1A64     		str	r2, [r3, #64]
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->RxXferCount--;
 1938              		.loc 1 1416 15
 1939 0394 FB68     		ldr	r3, [r7, #12]
 1940 0396 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1941 039a 9BB2     		uxth	r3, r3
 1942              		.loc 1 1416 28
 1943 039c 013B     		subs	r3, r3, #1
 1944 039e 9AB2     		uxth	r2, r3
 1945 03a0 FB68     		ldr	r3, [r7, #12]
 1946 03a2 A3F84620 		strh	r2, [r3, #70]	@ movhi
 1947              	.L103:
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
ARM GAS  /tmp/ccrdcdEL.s 			page 60


1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         txallowed = 1U;
 1948              		.loc 1 1419 19
 1949 03a6 0123     		movs	r3, #1
 1950 03a8 7B62     		str	r3, [r7, #36]
 1951              	.L100:
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
 1952              		.loc 1 1421 14
 1953 03aa FFF7FEFF 		bl	HAL_GetTick
 1954 03ae 0246     		mov	r2, r0
 1955              		.loc 1 1421 28
 1956 03b0 FB69     		ldr	r3, [r7, #28]
 1957 03b2 D31A     		subs	r3, r2, r3
 1958              		.loc 1 1421 10
 1959 03b4 3A6B     		ldr	r2, [r7, #48]
 1960 03b6 9A42     		cmp	r2, r3
 1961 03b8 03D8     		bhi	.L104
 1962              		.loc 1 1421 54 discriminator 1
 1963 03ba 3B6B     		ldr	r3, [r7, #48]
 1964 03bc B3F1FF3F 		cmp	r3, #-1
 1965 03c0 02D1     		bne	.L105
 1966              	.L104:
 1967              		.loc 1 1421 87 discriminator 3
 1968 03c2 3B6B     		ldr	r3, [r7, #48]
 1969 03c4 002B     		cmp	r3, #0
 1970 03c6 03D1     		bne	.L96
 1971              	.L105:
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 1972              		.loc 1 1423 19
 1973 03c8 0323     		movs	r3, #3
 1974 03ca 87F82330 		strb	r3, [r7, #35]
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         goto error;
 1975              		.loc 1 1424 9
 1976 03ce 1CE0     		b	.L77
 1977              	.L96:
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1978              		.loc 1 1364 17
 1979 03d0 FB68     		ldr	r3, [r7, #12]
 1980 03d2 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1981 03d4 9BB2     		uxth	r3, r3
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1982              		.loc 1 1364 11
 1983 03d6 002B     		cmp	r3, #0
 1984 03d8 7FF45BAF 		bne	.L106
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1985              		.loc 1 1364 45 discriminator 1
 1986 03dc FB68     		ldr	r3, [r7, #12]
 1987 03de B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 1988 03e2 9BB2     		uxth	r3, r3
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
 1989              		.loc 1 1364 37 discriminator 1
 1990 03e4 002B     		cmp	r3, #0
 1991 03e6 7FF454AF 		bne	.L106
 1992              	.L92:
1425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
ARM GAS  /tmp/ccrdcdEL.s 			page 61


1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Wait until TXE flag */
1434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Error on the CRC reception */
1437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       goto error;
1440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Read CRC */
1442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Read 16bit CRC */
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Read 8bit CRC */
1450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Error on the CRC reception */
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           goto error;
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if CRC error occurred */
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Clear CRC Flag */
1472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the end of the transaction */
1479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1993              		.loc 1 1479 7
 1994 03ea FA69     		ldr	r2, [r7, #28]
 1995 03ec 396B     		ldr	r1, [r7, #48]
ARM GAS  /tmp/ccrdcdEL.s 			page 62


 1996 03ee F868     		ldr	r0, [r7, #12]
 1997 03f0 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1998 03f4 0346     		mov	r3, r0
 1999              		.loc 1 1479 6
 2000 03f6 002B     		cmp	r3, #0
 2001 03f8 06D0     		beq	.L107
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2002              		.loc 1 1481 15
 2003 03fa 0123     		movs	r3, #1
 2004 03fc 87F82330 		strb	r3, [r7, #35]
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 2005              		.loc 1 1482 21
 2006 0400 FB68     		ldr	r3, [r7, #12]
 2007 0402 2022     		movs	r2, #32
 2008 0404 1A66     		str	r2, [r3, #96]
 2009 0406 00E0     		b	.L77
 2010              	.L107:
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error :
 2011              		.loc 1 1485 1
 2012 0408 00BF     		nop
 2013              	.L77:
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 2014              		.loc 1 1486 15
 2015 040a FB68     		ldr	r3, [r7, #12]
 2016 040c 0122     		movs	r2, #1
 2017 040e 83F85D20 		strb	r2, [r3, #93]
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2018              		.loc 1 1487 3
 2019 0412 FB68     		ldr	r3, [r7, #12]
 2020 0414 0022     		movs	r2, #0
 2021 0416 83F85C20 		strb	r2, [r3, #92]
1488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 2022              		.loc 1 1488 10
 2023 041a 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2024              	.L74:
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 2025              		.loc 1 1489 1
 2026 041e 1846     		mov	r0, r3
 2027 0420 2837     		adds	r7, r7, #40
 2028              	.LCFI35:
 2029              		.cfi_def_cfa_offset 8
 2030 0422 BD46     		mov	sp, r7
 2031              	.LCFI36:
 2032              		.cfi_def_cfa_register 13
 2033              		@ sp needed
 2034 0424 80BD     		pop	{r7, pc}
 2035              		.cfi_endproc
 2036              	.LFE331:
 2038              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2039              		.align	1
 2040              		.global	HAL_SPI_Transmit_IT
 2041              		.syntax unified
 2042              		.thumb
 2043              		.thumb_func
ARM GAS  /tmp/ccrdcdEL.s 			page 63


 2044              		.fpu fpv4-sp-d16
 2046              	HAL_SPI_Transmit_IT:
 2047              	.LFB332:
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pData pointer to data buffer
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be sent
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 2048              		.loc 1 1500 1
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 24
 2051              		@ frame_needed = 1, uses_anonymous_args = 0
 2052              		@ link register save eliminated.
 2053 0000 80B4     		push	{r7}
 2054              	.LCFI37:
 2055              		.cfi_def_cfa_offset 4
 2056              		.cfi_offset 7, -4
 2057 0002 87B0     		sub	sp, sp, #28
 2058              	.LCFI38:
 2059              		.cfi_def_cfa_offset 32
 2060 0004 00AF     		add	r7, sp, #0
 2061              	.LCFI39:
 2062              		.cfi_def_cfa_register 7
 2063 0006 F860     		str	r0, [r7, #12]
 2064 0008 B960     		str	r1, [r7, #8]
 2065 000a 1346     		mov	r3, r2
 2066 000c FB80     		strh	r3, [r7, #6]	@ movhi
1501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2067              		.loc 1 1501 21
 2068 000e 0023     		movs	r3, #0
 2069 0010 FB75     		strb	r3, [r7, #23]
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check Direction parameter */
1504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2070              		.loc 1 1507 3
 2071 0012 FB68     		ldr	r3, [r7, #12]
 2072 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2073 0018 012B     		cmp	r3, #1
 2074 001a 01D1     		bne	.L109
 2075              		.loc 1 1507 3 is_stmt 0 discriminator 1
 2076 001c 0223     		movs	r3, #2
 2077 001e 6AE0     		b	.L110
 2078              	.L109:
 2079              		.loc 1 1507 3 discriminator 2
 2080 0020 FB68     		ldr	r3, [r7, #12]
 2081 0022 0122     		movs	r2, #1
 2082 0024 83F85C20 		strb	r2, [r3, #92]
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 64


1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2083              		.loc 1 1509 6 is_stmt 1 discriminator 2
 2084 0028 BB68     		ldr	r3, [r7, #8]
 2085 002a 002B     		cmp	r3, #0
 2086 002c 02D0     		beq	.L111
 2087              		.loc 1 1509 23 discriminator 1
 2088 002e FB88     		ldrh	r3, [r7, #6]
 2089 0030 002B     		cmp	r3, #0
 2090 0032 02D1     		bne	.L112
 2091              	.L111:
1510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2092              		.loc 1 1511 15
 2093 0034 0123     		movs	r3, #1
 2094 0036 FB75     		strb	r3, [r7, #23]
1512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2095              		.loc 1 1512 5
 2096 0038 58E0     		b	.L113
 2097              	.L112:
1513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2098              		.loc 1 1515 11
 2099 003a FB68     		ldr	r3, [r7, #12]
 2100 003c 93F85D30 		ldrb	r3, [r3, #93]
 2101 0040 DBB2     		uxtb	r3, r3
 2102              		.loc 1 1515 6
 2103 0042 012B     		cmp	r3, #1
 2104 0044 02D0     		beq	.L114
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2105              		.loc 1 1517 15
 2106 0046 0223     		movs	r3, #2
 2107 0048 FB75     		strb	r3, [r7, #23]
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2108              		.loc 1 1518 5
 2109 004a 4FE0     		b	.L113
 2110              	.L114:
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2111              		.loc 1 1522 21
 2112 004c FB68     		ldr	r3, [r7, #12]
 2113 004e 0322     		movs	r2, #3
 2114 0050 83F85D20 		strb	r2, [r3, #93]
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2115              		.loc 1 1523 21
 2116 0054 FB68     		ldr	r3, [r7, #12]
 2117 0056 0022     		movs	r2, #0
 2118 0058 1A66     		str	r2, [r3, #96]
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2119              		.loc 1 1524 21
 2120 005a FB68     		ldr	r3, [r7, #12]
 2121 005c BA68     		ldr	r2, [r7, #8]
 2122 005e 9A63     		str	r2, [r3, #56]
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = Size;
ARM GAS  /tmp/ccrdcdEL.s 			page 65


 2123              		.loc 1 1525 21
 2124 0060 FB68     		ldr	r3, [r7, #12]
 2125 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2126 0064 9A87     		strh	r2, [r3, #60]	@ movhi
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2127              		.loc 1 1526 21
 2128 0066 FB68     		ldr	r3, [r7, #12]
 2129 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2130 006a DA87     		strh	r2, [r3, #62]	@ movhi
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init field not used in handle to zero */
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 2131              		.loc 1 1529 21
 2132 006c FB68     		ldr	r3, [r7, #12]
 2133 006e 0022     		movs	r2, #0
 2134 0070 1A64     		str	r2, [r3, #64]
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2135              		.loc 1 1530 21
 2136 0072 FB68     		ldr	r3, [r7, #12]
 2137 0074 0022     		movs	r2, #0
 2138 0076 A3F84420 		strh	r2, [r3, #68]	@ movhi
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2139              		.loc 1 1531 21
 2140 007a FB68     		ldr	r3, [r7, #12]
 2141 007c 0022     		movs	r2, #0
 2142 007e A3F84620 		strh	r2, [r3, #70]	@ movhi
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2143              		.loc 1 1532 21
 2144 0082 FB68     		ldr	r3, [r7, #12]
 2145 0084 0022     		movs	r2, #0
 2146 0086 DA64     		str	r2, [r3, #76]
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the function for IT treatment */
1535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2147              		.loc 1 1535 17
 2148 0088 FB68     		ldr	r3, [r7, #12]
 2149 008a DB68     		ldr	r3, [r3, #12]
 2150              		.loc 1 1535 6
 2151 008c B3F5E06F 		cmp	r3, #1792
 2152 0090 03D9     		bls	.L115
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
 2153              		.loc 1 1537 17
 2154 0092 FB68     		ldr	r3, [r7, #12]
 2155 0094 1B4A     		ldr	r2, .L119
 2156 0096 1A65     		str	r2, [r3, #80]
 2157 0098 02E0     		b	.L116
 2158              	.L115:
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
 2159              		.loc 1 1541 17
 2160 009a FB68     		ldr	r3, [r7, #12]
 2161 009c 1A4A     		ldr	r2, .L119+4
 2162 009e 1A65     		str	r2, [r3, #80]
 2163              	.L116:
ARM GAS  /tmp/ccrdcdEL.s 			page 66


1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2164              		.loc 1 1545 17
 2165 00a0 FB68     		ldr	r3, [r7, #12]
 2166 00a2 9B68     		ldr	r3, [r3, #8]
 2167              		.loc 1 1545 6
 2168 00a4 B3F5004F 		cmp	r3, #32768
 2169 00a8 07D1     		bne	.L117
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2170              		.loc 1 1547 5
 2171 00aa FB68     		ldr	r3, [r7, #12]
 2172 00ac 1B68     		ldr	r3, [r3]
 2173 00ae 1A68     		ldr	r2, [r3]
 2174 00b0 FB68     		ldr	r3, [r7, #12]
 2175 00b2 1B68     		ldr	r3, [r3]
 2176 00b4 42F48042 		orr	r2, r2, #16384
 2177 00b8 1A60     		str	r2, [r3]
 2178              	.L117:
1548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 2179              		.loc 1 1559 3
 2180 00ba FB68     		ldr	r3, [r7, #12]
 2181 00bc 1B68     		ldr	r3, [r3]
 2182 00be 5A68     		ldr	r2, [r3, #4]
 2183 00c0 FB68     		ldr	r3, [r7, #12]
 2184 00c2 1B68     		ldr	r3, [r3]
 2185 00c4 42F0A002 		orr	r2, r2, #160
 2186 00c8 5A60     		str	r2, [r3, #4]
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2187              		.loc 1 1563 12
 2188 00ca FB68     		ldr	r3, [r7, #12]
 2189 00cc 1B68     		ldr	r3, [r3]
 2190              		.loc 1 1563 22
 2191 00ce 1B68     		ldr	r3, [r3]
 2192              		.loc 1 1563 28
 2193 00d0 03F04003 		and	r3, r3, #64
 2194              		.loc 1 1563 6
 2195 00d4 402B     		cmp	r3, #64
 2196 00d6 08D0     		beq	.L118
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
ARM GAS  /tmp/ccrdcdEL.s 			page 67


1566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2197              		.loc 1 1566 5
 2198 00d8 FB68     		ldr	r3, [r7, #12]
 2199 00da 1B68     		ldr	r3, [r3]
 2200 00dc 1A68     		ldr	r2, [r3]
 2201 00de FB68     		ldr	r3, [r7, #12]
 2202 00e0 1B68     		ldr	r3, [r3]
 2203 00e2 42F04002 		orr	r2, r2, #64
 2204 00e6 1A60     		str	r2, [r3]
 2205 00e8 00E0     		b	.L113
 2206              	.L118:
1567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error :
 2207              		.loc 1 1569 1
 2208 00ea 00BF     		nop
 2209              	.L113:
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2210              		.loc 1 1570 3
 2211 00ec FB68     		ldr	r3, [r7, #12]
 2212 00ee 0022     		movs	r2, #0
 2213 00f0 83F85C20 		strb	r2, [r3, #92]
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 2214              		.loc 1 1571 10
 2215 00f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2216              	.L110:
1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 2217              		.loc 1 1572 1
 2218 00f6 1846     		mov	r0, r3
 2219 00f8 1C37     		adds	r7, r7, #28
 2220              	.LCFI40:
 2221              		.cfi_def_cfa_offset 4
 2222 00fa BD46     		mov	sp, r7
 2223              	.LCFI41:
 2224              		.cfi_def_cfa_register 13
 2225              		@ sp needed
 2226 00fc 5DF8047B 		ldr	r7, [sp], #4
 2227              	.LCFI42:
 2228              		.cfi_restore 7
 2229              		.cfi_def_cfa_offset 0
 2230 0100 7047     		bx	lr
 2231              	.L120:
 2232 0102 00BF     		.align	2
 2233              	.L119:
 2234 0104 00000000 		.word	SPI_TxISR_16BIT
 2235 0108 00000000 		.word	SPI_TxISR_8BIT
 2236              		.cfi_endproc
 2237              	.LFE332:
 2239              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2240              		.align	1
 2241              		.global	HAL_SPI_Receive_IT
 2242              		.syntax unified
 2243              		.thumb
 2244              		.thumb_func
 2245              		.fpu fpv4-sp-d16
 2247              	HAL_SPI_Receive_IT:
 2248              	.LFB333:
ARM GAS  /tmp/ccrdcdEL.s 			page 68


1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
1575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
1578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pData pointer to data buffer
1579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be sent
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
1581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 2249              		.loc 1 1583 1
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 24
 2252              		@ frame_needed = 1, uses_anonymous_args = 0
 2253 0000 80B5     		push	{r7, lr}
 2254              	.LCFI43:
 2255              		.cfi_def_cfa_offset 8
 2256              		.cfi_offset 7, -8
 2257              		.cfi_offset 14, -4
 2258 0002 86B0     		sub	sp, sp, #24
 2259              	.LCFI44:
 2260              		.cfi_def_cfa_offset 32
 2261 0004 00AF     		add	r7, sp, #0
 2262              	.LCFI45:
 2263              		.cfi_def_cfa_register 7
 2264 0006 F860     		str	r0, [r7, #12]
 2265 0008 B960     		str	r1, [r7, #8]
 2266 000a 1346     		mov	r3, r2
 2267 000c FB80     		strh	r3, [r7, #6]	@ movhi
1584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2268              		.loc 1 1584 21
 2269 000e 0023     		movs	r3, #0
 2270 0010 FB75     		strb	r3, [r7, #23]
1585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2271              		.loc 1 1586 18
 2272 0012 FB68     		ldr	r3, [r7, #12]
 2273 0014 9B68     		ldr	r3, [r3, #8]
 2274              		.loc 1 1586 6
 2275 0016 002B     		cmp	r3, #0
 2276 0018 10D1     		bne	.L122
 2277              		.loc 1 1586 68 discriminator 1
 2278 001a FB68     		ldr	r3, [r7, #12]
 2279 001c 5B68     		ldr	r3, [r3, #4]
 2280              		.loc 1 1586 54 discriminator 1
 2281 001e B3F5827F 		cmp	r3, #260
 2282 0022 0BD1     		bne	.L122
1587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 2283              		.loc 1 1588 17
 2284 0024 FB68     		ldr	r3, [r7, #12]
 2285 0026 0422     		movs	r2, #4
 2286 0028 83F85D20 		strb	r2, [r3, #93]
1589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
 2287              		.loc 1 1590 12
ARM GAS  /tmp/ccrdcdEL.s 			page 69


 2288 002c FB88     		ldrh	r3, [r7, #6]
 2289 002e BA68     		ldr	r2, [r7, #8]
 2290 0030 B968     		ldr	r1, [r7, #8]
 2291 0032 F868     		ldr	r0, [r7, #12]
 2292 0034 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2293 0038 0346     		mov	r3, r0
 2294 003a 81E0     		b	.L123
 2295              	.L122:
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2296              		.loc 1 1594 3
 2297 003c FB68     		ldr	r3, [r7, #12]
 2298 003e 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2299 0042 012B     		cmp	r3, #1
 2300 0044 01D1     		bne	.L124
 2301              		.loc 1 1594 3 is_stmt 0 discriminator 1
 2302 0046 0223     		movs	r3, #2
 2303 0048 7AE0     		b	.L123
 2304              	.L124:
 2305              		.loc 1 1594 3 discriminator 2
 2306 004a FB68     		ldr	r3, [r7, #12]
 2307 004c 0122     		movs	r2, #1
 2308 004e 83F85C20 		strb	r2, [r3, #92]
1595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2309              		.loc 1 1596 11 is_stmt 1 discriminator 2
 2310 0052 FB68     		ldr	r3, [r7, #12]
 2311 0054 93F85D30 		ldrb	r3, [r3, #93]
 2312 0058 DBB2     		uxtb	r3, r3
 2313              		.loc 1 1596 6 discriminator 2
 2314 005a 012B     		cmp	r3, #1
 2315 005c 02D0     		beq	.L125
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2316              		.loc 1 1598 15
 2317 005e 0223     		movs	r3, #2
 2318 0060 FB75     		strb	r3, [r7, #23]
1599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2319              		.loc 1 1599 5
 2320 0062 68E0     		b	.L126
 2321              	.L125:
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2322              		.loc 1 1602 6
 2323 0064 BB68     		ldr	r3, [r7, #8]
 2324 0066 002B     		cmp	r3, #0
 2325 0068 02D0     		beq	.L127
 2326              		.loc 1 1602 23 discriminator 1
 2327 006a FB88     		ldrh	r3, [r7, #6]
 2328 006c 002B     		cmp	r3, #0
 2329 006e 02D1     		bne	.L128
 2330              	.L127:
1603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
ARM GAS  /tmp/ccrdcdEL.s 			page 70


 2331              		.loc 1 1604 15
 2332 0070 0123     		movs	r3, #1
 2333 0072 FB75     		strb	r3, [r7, #23]
1605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2334              		.loc 1 1605 5
 2335 0074 5FE0     		b	.L126
 2336              	.L128:
1606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2337              		.loc 1 1609 21
 2338 0076 FB68     		ldr	r3, [r7, #12]
 2339 0078 0422     		movs	r2, #4
 2340 007a 83F85D20 		strb	r2, [r3, #93]
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2341              		.loc 1 1610 21
 2342 007e FB68     		ldr	r3, [r7, #12]
 2343 0080 0022     		movs	r2, #0
 2344 0082 1A66     		str	r2, [r3, #96]
1611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2345              		.loc 1 1611 21
 2346 0084 FB68     		ldr	r3, [r7, #12]
 2347 0086 BA68     		ldr	r2, [r7, #8]
 2348 0088 1A64     		str	r2, [r3, #64]
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2349              		.loc 1 1612 21
 2350 008a FB68     		ldr	r3, [r7, #12]
 2351 008c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2352 008e A3F84420 		strh	r2, [r3, #68]	@ movhi
1613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2353              		.loc 1 1613 21
 2354 0092 FB68     		ldr	r3, [r7, #12]
 2355 0094 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2356 0096 A3F84620 		strh	r2, [r3, #70]	@ movhi
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init field not used in handle to zero */
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 2357              		.loc 1 1616 21
 2358 009a FB68     		ldr	r3, [r7, #12]
 2359 009c 0022     		movs	r2, #0
 2360 009e 9A63     		str	r2, [r3, #56]
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2361              		.loc 1 1617 21
 2362 00a0 FB68     		ldr	r3, [r7, #12]
 2363 00a2 0022     		movs	r2, #0
 2364 00a4 9A87     		strh	r2, [r3, #60]	@ movhi
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2365              		.loc 1 1618 21
 2366 00a6 FB68     		ldr	r3, [r7, #12]
 2367 00a8 0022     		movs	r2, #0
 2368 00aa DA87     		strh	r2, [r3, #62]	@ movhi
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2369              		.loc 1 1619 21
 2370 00ac FB68     		ldr	r3, [r7, #12]
 2371 00ae 0022     		movs	r2, #0
 2372 00b0 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccrdcdEL.s 			page 71


1620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the data size to adapt Rx threshold and the set the function for IT treatment */
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2373              		.loc 1 1622 17
 2374 00b2 FB68     		ldr	r3, [r7, #12]
 2375 00b4 DB68     		ldr	r3, [r3, #12]
 2376              		.loc 1 1622 6
 2377 00b6 B3F5E06F 		cmp	r3, #1792
 2378 00ba 0BD9     		bls	.L129
1623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2379              		.loc 1 1625 5
 2380 00bc FB68     		ldr	r3, [r7, #12]
 2381 00be 1B68     		ldr	r3, [r3]
 2382 00c0 5A68     		ldr	r2, [r3, #4]
 2383 00c2 FB68     		ldr	r3, [r7, #12]
 2384 00c4 1B68     		ldr	r3, [r3]
 2385 00c6 22F48052 		bic	r2, r2, #4096
 2386 00ca 5A60     		str	r2, [r3, #4]
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2387              		.loc 1 1626 17
 2388 00cc FB68     		ldr	r3, [r7, #12]
 2389 00ce 1E4A     		ldr	r2, .L133
 2390 00d0 DA64     		str	r2, [r3, #76]
 2391 00d2 0AE0     		b	.L130
 2392              	.L129:
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2393              		.loc 1 1631 5
 2394 00d4 FB68     		ldr	r3, [r7, #12]
 2395 00d6 1B68     		ldr	r3, [r3]
 2396 00d8 5A68     		ldr	r2, [r3, #4]
 2397 00da FB68     		ldr	r3, [r7, #12]
 2398 00dc 1B68     		ldr	r3, [r3]
 2399 00de 42F48052 		orr	r2, r2, #4096
 2400 00e2 5A60     		str	r2, [r3, #4]
1632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2401              		.loc 1 1632 17
 2402 00e4 FB68     		ldr	r3, [r7, #12]
 2403 00e6 194A     		ldr	r2, .L133+4
 2404 00e8 DA64     		str	r2, [r3, #76]
 2405              	.L130:
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2406              		.loc 1 1636 17
 2407 00ea FB68     		ldr	r3, [r7, #12]
 2408 00ec 9B68     		ldr	r3, [r3, #8]
 2409              		.loc 1 1636 6
 2410 00ee B3F5004F 		cmp	r3, #32768
 2411 00f2 07D1     		bne	.L131
1637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
ARM GAS  /tmp/ccrdcdEL.s 			page 72


1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2412              		.loc 1 1638 5
 2413 00f4 FB68     		ldr	r3, [r7, #12]
 2414 00f6 1B68     		ldr	r3, [r3]
 2415 00f8 1A68     		ldr	r2, [r3]
 2416 00fa FB68     		ldr	r3, [r7, #12]
 2417 00fc 1B68     		ldr	r3, [r3]
 2418 00fe 22F48042 		bic	r2, r2, #16384
 2419 0102 1A60     		str	r2, [r3]
 2420              	.L131:
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->CRCSize = 1U;
1646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->CRCSize = 2U;
1649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->CRCSize = 0U;
1655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 2421              		.loc 1 1659 3
 2422 0104 FB68     		ldr	r3, [r7, #12]
 2423 0106 1B68     		ldr	r3, [r3]
 2424 0108 5A68     		ldr	r2, [r3, #4]
 2425 010a FB68     		ldr	r3, [r7, #12]
 2426 010c 1B68     		ldr	r3, [r3]
 2427 010e 42F06002 		orr	r2, r2, #96
 2428 0112 5A60     		str	r2, [r3, #4]
1660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             process unlock */
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2429              		.loc 1 1666 12
 2430 0114 FB68     		ldr	r3, [r7, #12]
 2431 0116 1B68     		ldr	r3, [r3]
 2432              		.loc 1 1666 22
 2433 0118 1B68     		ldr	r3, [r3]
 2434              		.loc 1 1666 28
 2435 011a 03F04003 		and	r3, r3, #64
 2436              		.loc 1 1666 6
 2437 011e 402B     		cmp	r3, #64
 2438 0120 08D0     		beq	.L132
1667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
ARM GAS  /tmp/ccrdcdEL.s 			page 73


1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2439              		.loc 1 1669 5
 2440 0122 FB68     		ldr	r3, [r7, #12]
 2441 0124 1B68     		ldr	r3, [r3]
 2442 0126 1A68     		ldr	r2, [r3]
 2443 0128 FB68     		ldr	r3, [r7, #12]
 2444 012a 1B68     		ldr	r3, [r3]
 2445 012c 42F04002 		orr	r2, r2, #64
 2446 0130 1A60     		str	r2, [r3]
 2447 0132 00E0     		b	.L126
 2448              	.L132:
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error :
 2449              		.loc 1 1672 1
 2450 0134 00BF     		nop
 2451              	.L126:
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Unlocked */
1674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2452              		.loc 1 1674 3
 2453 0136 FB68     		ldr	r3, [r7, #12]
 2454 0138 0022     		movs	r2, #0
 2455 013a 83F85C20 		strb	r2, [r3, #92]
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 2456              		.loc 1 1675 10
 2457 013e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2458              	.L123:
1676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 2459              		.loc 1 1676 1
 2460 0140 1846     		mov	r0, r3
 2461 0142 1837     		adds	r7, r7, #24
 2462              	.LCFI46:
 2463              		.cfi_def_cfa_offset 8
 2464 0144 BD46     		mov	sp, r7
 2465              	.LCFI47:
 2466              		.cfi_def_cfa_register 13
 2467              		@ sp needed
 2468 0146 80BD     		pop	{r7, pc}
 2469              	.L134:
 2470              		.align	2
 2471              	.L133:
 2472 0148 00000000 		.word	SPI_RxISR_16BIT
 2473 014c 00000000 		.word	SPI_RxISR_8BIT
 2474              		.cfi_endproc
 2475              	.LFE333:
 2477              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2478              		.align	1
 2479              		.global	HAL_SPI_TransmitReceive_IT
 2480              		.syntax unified
 2481              		.thumb
 2482              		.thumb_func
 2483              		.fpu fpv4-sp-d16
 2485              	HAL_SPI_TransmitReceive_IT:
 2486              	.LFB334:
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
ARM GAS  /tmp/ccrdcdEL.s 			page 74


1679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
1687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 2487              		.loc 1 1688 1
 2488              		.cfi_startproc
 2489              		@ args = 0, pretend = 0, frame = 24
 2490              		@ frame_needed = 1, uses_anonymous_args = 0
 2491              		@ link register save eliminated.
 2492 0000 80B4     		push	{r7}
 2493              	.LCFI48:
 2494              		.cfi_def_cfa_offset 4
 2495              		.cfi_offset 7, -4
 2496 0002 87B0     		sub	sp, sp, #28
 2497              	.LCFI49:
 2498              		.cfi_def_cfa_offset 32
 2499 0004 00AF     		add	r7, sp, #0
 2500              	.LCFI50:
 2501              		.cfi_def_cfa_register 7
 2502 0006 F860     		str	r0, [r7, #12]
 2503 0008 B960     		str	r1, [r7, #8]
 2504 000a 7A60     		str	r2, [r7, #4]
 2505 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t             tmp_mode;
1690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
 2506              		.loc 1 1691 24
 2507 000e 0023     		movs	r3, #0
 2508 0010 FB75     		strb	r3, [r7, #23]
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check Direction parameter */
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process locked */
1697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2509              		.loc 1 1697 3
 2510 0012 FB68     		ldr	r3, [r7, #12]
 2511 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2512 0018 012B     		cmp	r3, #1
 2513 001a 01D1     		bne	.L136
 2514              		.loc 1 1697 3 is_stmt 0 discriminator 1
 2515 001c 0223     		movs	r3, #2
 2516 001e 91E0     		b	.L137
 2517              	.L136:
 2518              		.loc 1 1697 3 discriminator 2
 2519 0020 FB68     		ldr	r3, [r7, #12]
 2520 0022 0122     		movs	r2, #1
 2521 0024 83F85C20 		strb	r2, [r3, #92]
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init temporary variables */
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tmp_state           = hspi->State;
ARM GAS  /tmp/ccrdcdEL.s 			page 75


 2522              		.loc 1 1700 23 is_stmt 1 discriminator 2
 2523 0028 FB68     		ldr	r3, [r7, #12]
 2524 002a 93F85D30 		ldrb	r3, [r3, #93]
 2525 002e BB75     		strb	r3, [r7, #22]
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2526              		.loc 1 1701 23 discriminator 2
 2527 0030 FB68     		ldr	r3, [r7, #12]
 2528 0032 5B68     		ldr	r3, [r3, #4]
 2529 0034 3B61     		str	r3, [r7, #16]
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
 2530              		.loc 1 1703 6 discriminator 2
 2531 0036 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2532 0038 012B     		cmp	r3, #1
 2533 003a 0DD0     		beq	.L138
 2534              		.loc 1 1703 7 discriminator 1
 2535 003c 3B69     		ldr	r3, [r7, #16]
 2536 003e B3F5827F 		cmp	r3, #260
 2537 0042 06D1     		bne	.L139
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2538              		.loc 1 1704 54
 2539 0044 FB68     		ldr	r3, [r7, #12]
 2540 0046 9B68     		ldr	r3, [r3, #8]
 2541              		.loc 1 1704 40
 2542 0048 002B     		cmp	r3, #0
 2543 004a 02D1     		bne	.L139
 2544              		.loc 1 1704 90 discriminator 1
 2545 004c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2546 004e 042B     		cmp	r3, #4
 2547 0050 02D0     		beq	.L138
 2548              	.L139:
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2549              		.loc 1 1706 15
 2550 0052 0223     		movs	r3, #2
 2551 0054 FB75     		strb	r3, [r7, #23]
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2552              		.loc 1 1707 5
 2553 0056 70E0     		b	.L140
 2554              	.L138:
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 2555              		.loc 1 1710 6
 2556 0058 BB68     		ldr	r3, [r7, #8]
 2557 005a 002B     		cmp	r3, #0
 2558 005c 05D0     		beq	.L141
 2559              		.loc 1 1710 25 discriminator 1
 2560 005e 7B68     		ldr	r3, [r7, #4]
 2561 0060 002B     		cmp	r3, #0
 2562 0062 02D0     		beq	.L141
 2563              		.loc 1 1710 46 discriminator 2
 2564 0064 7B88     		ldrh	r3, [r7, #2]
 2565 0066 002B     		cmp	r3, #0
 2566 0068 02D1     		bne	.L142
 2567              	.L141:
1711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
ARM GAS  /tmp/ccrdcdEL.s 			page 76


1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2568              		.loc 1 1712 15
 2569 006a 0123     		movs	r3, #1
 2570 006c FB75     		strb	r3, [r7, #23]
1713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2571              		.loc 1 1713 5
 2572 006e 64E0     		b	.L140
 2573              	.L142:
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 2574              		.loc 1 1717 11
 2575 0070 FB68     		ldr	r3, [r7, #12]
 2576 0072 93F85D30 		ldrb	r3, [r3, #93]
 2577 0076 DBB2     		uxtb	r3, r3
 2578              		.loc 1 1717 6
 2579 0078 042B     		cmp	r3, #4
 2580 007a 03D0     		beq	.L143
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2581              		.loc 1 1719 17
 2582 007c FB68     		ldr	r3, [r7, #12]
 2583 007e 0522     		movs	r2, #5
 2584 0080 83F85D20 		strb	r2, [r3, #93]
 2585              	.L143:
1720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2586              		.loc 1 1723 21
 2587 0084 FB68     		ldr	r3, [r7, #12]
 2588 0086 0022     		movs	r2, #0
 2589 0088 1A66     		str	r2, [r3, #96]
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2590              		.loc 1 1724 21
 2591 008a FB68     		ldr	r3, [r7, #12]
 2592 008c BA68     		ldr	r2, [r7, #8]
 2593 008e 9A63     		str	r2, [r3, #56]
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2594              		.loc 1 1725 21
 2595 0090 FB68     		ldr	r3, [r7, #12]
 2596 0092 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2597 0094 9A87     		strh	r2, [r3, #60]	@ movhi
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2598              		.loc 1 1726 21
 2599 0096 FB68     		ldr	r3, [r7, #12]
 2600 0098 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2601 009a DA87     		strh	r2, [r3, #62]	@ movhi
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2602              		.loc 1 1727 21
 2603 009c FB68     		ldr	r3, [r7, #12]
 2604 009e 7A68     		ldr	r2, [r7, #4]
 2605 00a0 1A64     		str	r2, [r3, #64]
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2606              		.loc 1 1728 21
 2607 00a2 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 77


 2608 00a4 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2609 00a6 A3F84420 		strh	r2, [r3, #68]	@ movhi
1729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2610              		.loc 1 1729 21
 2611 00aa FB68     		ldr	r3, [r7, #12]
 2612 00ac 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2613 00ae A3F84620 		strh	r2, [r3, #70]	@ movhi
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the function for IT treatment */
1732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2614              		.loc 1 1732 17
 2615 00b2 FB68     		ldr	r3, [r7, #12]
 2616 00b4 DB68     		ldr	r3, [r3, #12]
 2617              		.loc 1 1732 6
 2618 00b6 B3F5E06F 		cmp	r3, #1792
 2619 00ba 06D9     		bls	.L144
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
 2620              		.loc 1 1734 21
 2621 00bc FB68     		ldr	r3, [r7, #12]
 2622 00be 244A     		ldr	r2, .L150
 2623 00c0 DA64     		str	r2, [r3, #76]
1735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2624              		.loc 1 1735 21
 2625 00c2 FB68     		ldr	r3, [r7, #12]
 2626 00c4 234A     		ldr	r2, .L150+4
 2627 00c6 1A65     		str	r2, [r3, #80]
 2628 00c8 05E0     		b	.L145
 2629              	.L144:
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
 2630              		.loc 1 1739 21
 2631 00ca FB68     		ldr	r3, [r7, #12]
 2632 00cc 224A     		ldr	r2, .L150+8
 2633 00ce DA64     		str	r2, [r3, #76]
1740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2634              		.loc 1 1740 21
 2635 00d0 FB68     		ldr	r3, [r7, #12]
 2636 00d2 224A     		ldr	r2, .L150+12
 2637 00d4 1A65     		str	r2, [r3, #80]
 2638              	.L145:
1741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->CRCSize = 1U;
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->CRCSize = 2U;
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
ARM GAS  /tmp/ccrdcdEL.s 			page 78


1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->CRCSize = 0U;
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if packing mode is enabled and if there is more than 2 data to receive */
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (Size >= 2U))
 2639              		.loc 1 1761 18
 2640 00d6 FB68     		ldr	r3, [r7, #12]
 2641 00d8 DB68     		ldr	r3, [r3, #12]
 2642              		.loc 1 1761 6
 2643 00da B3F5E06F 		cmp	r3, #1792
 2644 00de 02D8     		bhi	.L146
 2645              		.loc 1 1761 49 discriminator 1
 2646 00e0 7B88     		ldrh	r3, [r7, #2]
 2647 00e2 012B     		cmp	r3, #1
 2648 00e4 08D9     		bls	.L147
 2649              	.L146:
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2650              		.loc 1 1764 5
 2651 00e6 FB68     		ldr	r3, [r7, #12]
 2652 00e8 1B68     		ldr	r3, [r3]
 2653 00ea 5A68     		ldr	r2, [r3, #4]
 2654 00ec FB68     		ldr	r3, [r7, #12]
 2655 00ee 1B68     		ldr	r3, [r3]
 2656 00f0 22F48052 		bic	r2, r2, #4096
 2657 00f4 5A60     		str	r2, [r3, #4]
 2658 00f6 07E0     		b	.L148
 2659              	.L147:
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 2660              		.loc 1 1769 5
 2661 00f8 FB68     		ldr	r3, [r7, #12]
 2662 00fa 1B68     		ldr	r3, [r3]
 2663 00fc 5A68     		ldr	r2, [r3, #4]
 2664 00fe FB68     		ldr	r3, [r7, #12]
 2665 0100 1B68     		ldr	r3, [r3]
 2666 0102 42F48052 		orr	r2, r2, #4096
 2667 0106 5A60     		str	r2, [r3, #4]
 2668              	.L148:
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 2669              		.loc 1 1773 3
 2670 0108 FB68     		ldr	r3, [r7, #12]
 2671 010a 1B68     		ldr	r3, [r3]
 2672 010c 5A68     		ldr	r2, [r3, #4]
 2673 010e FB68     		ldr	r3, [r7, #12]
 2674 0110 1B68     		ldr	r3, [r3]
 2675 0112 42F0E002 		orr	r2, r2, #224
 2676 0116 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 79


1774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2677              		.loc 1 1776 12
 2678 0118 FB68     		ldr	r3, [r7, #12]
 2679 011a 1B68     		ldr	r3, [r3]
 2680              		.loc 1 1776 22
 2681 011c 1B68     		ldr	r3, [r3]
 2682              		.loc 1 1776 28
 2683 011e 03F04003 		and	r3, r3, #64
 2684              		.loc 1 1776 6
 2685 0122 402B     		cmp	r3, #64
 2686 0124 08D0     		beq	.L149
1777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2687              		.loc 1 1779 5
 2688 0126 FB68     		ldr	r3, [r7, #12]
 2689 0128 1B68     		ldr	r3, [r3]
 2690 012a 1A68     		ldr	r2, [r3]
 2691 012c FB68     		ldr	r3, [r7, #12]
 2692 012e 1B68     		ldr	r3, [r3]
 2693 0130 42F04002 		orr	r2, r2, #64
 2694 0134 1A60     		str	r2, [r3]
 2695 0136 00E0     		b	.L140
 2696              	.L149:
1780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error :
 2697              		.loc 1 1782 1
 2698 0138 00BF     		nop
 2699              	.L140:
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Unlocked */
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2700              		.loc 1 1784 3
 2701 013a FB68     		ldr	r3, [r7, #12]
 2702 013c 0022     		movs	r2, #0
 2703 013e 83F85C20 		strb	r2, [r3, #92]
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 2704              		.loc 1 1785 10
 2705 0142 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2706              	.L137:
1786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 2707              		.loc 1 1786 1
 2708 0144 1846     		mov	r0, r3
 2709 0146 1C37     		adds	r7, r7, #28
 2710              	.LCFI51:
 2711              		.cfi_def_cfa_offset 4
 2712 0148 BD46     		mov	sp, r7
 2713              	.LCFI52:
 2714              		.cfi_def_cfa_register 13
 2715              		@ sp needed
 2716 014a 5DF8047B 		ldr	r7, [sp], #4
 2717              	.LCFI53:
 2718              		.cfi_restore 7
 2719              		.cfi_def_cfa_offset 0
 2720 014e 7047     		bx	lr
ARM GAS  /tmp/ccrdcdEL.s 			page 80


 2721              	.L151:
 2722              		.align	2
 2723              	.L150:
 2724 0150 00000000 		.word	SPI_2linesRxISR_16BIT
 2725 0154 00000000 		.word	SPI_2linesTxISR_16BIT
 2726 0158 00000000 		.word	SPI_2linesRxISR_8BIT
 2727 015c 00000000 		.word	SPI_2linesTxISR_8BIT
 2728              		.cfi_endproc
 2729              	.LFE334:
 2731              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2732              		.align	1
 2733              		.global	HAL_SPI_Transmit_DMA
 2734              		.syntax unified
 2735              		.thumb
 2736              		.thumb_func
 2737              		.fpu fpv4-sp-d16
 2739              	HAL_SPI_Transmit_DMA:
 2740              	.LFB335:
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
1792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pData pointer to data buffer
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be sent
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
1795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 2741              		.loc 1 1797 1
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 24
 2744              		@ frame_needed = 1, uses_anonymous_args = 0
 2745 0000 80B5     		push	{r7, lr}
 2746              	.LCFI54:
 2747              		.cfi_def_cfa_offset 8
 2748              		.cfi_offset 7, -8
 2749              		.cfi_offset 14, -4
 2750 0002 86B0     		sub	sp, sp, #24
 2751              	.LCFI55:
 2752              		.cfi_def_cfa_offset 32
 2753 0004 00AF     		add	r7, sp, #0
 2754              	.LCFI56:
 2755              		.cfi_def_cfa_register 7
 2756 0006 F860     		str	r0, [r7, #12]
 2757 0008 B960     		str	r1, [r7, #8]
 2758 000a 1346     		mov	r3, r2
 2759 000c FB80     		strh	r3, [r7, #6]	@ movhi
1798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2760              		.loc 1 1798 21
 2761 000e 0023     		movs	r3, #0
 2762 0010 FB75     		strb	r3, [r7, #23]
1799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check tx dma handle */
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check Direction parameter */
ARM GAS  /tmp/ccrdcdEL.s 			page 81


1804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2763              		.loc 1 1807 3
 2764 0012 FB68     		ldr	r3, [r7, #12]
 2765 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2766 0018 012B     		cmp	r3, #1
 2767 001a 01D1     		bne	.L153
 2768              		.loc 1 1807 3 is_stmt 0 discriminator 1
 2769 001c 0223     		movs	r3, #2
 2770 001e D0E0     		b	.L154
 2771              	.L153:
 2772              		.loc 1 1807 3 discriminator 2
 2773 0020 FB68     		ldr	r3, [r7, #12]
 2774 0022 0122     		movs	r2, #1
 2775 0024 83F85C20 		strb	r2, [r3, #92]
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2776              		.loc 1 1809 11 is_stmt 1 discriminator 2
 2777 0028 FB68     		ldr	r3, [r7, #12]
 2778 002a 93F85D30 		ldrb	r3, [r3, #93]
 2779 002e DBB2     		uxtb	r3, r3
 2780              		.loc 1 1809 6 discriminator 2
 2781 0030 012B     		cmp	r3, #1
 2782 0032 02D0     		beq	.L155
1810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2783              		.loc 1 1811 15
 2784 0034 0223     		movs	r3, #2
 2785 0036 FB75     		strb	r3, [r7, #23]
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2786              		.loc 1 1812 5
 2787 0038 BEE0     		b	.L156
 2788              	.L155:
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2789              		.loc 1 1815 6
 2790 003a BB68     		ldr	r3, [r7, #8]
 2791 003c 002B     		cmp	r3, #0
 2792 003e 02D0     		beq	.L157
 2793              		.loc 1 1815 23 discriminator 1
 2794 0040 FB88     		ldrh	r3, [r7, #6]
 2795 0042 002B     		cmp	r3, #0
 2796 0044 02D1     		bne	.L158
 2797              	.L157:
1816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2798              		.loc 1 1817 15
 2799 0046 0123     		movs	r3, #1
 2800 0048 FB75     		strb	r3, [r7, #23]
1818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2801              		.loc 1 1818 5
 2802 004a B5E0     		b	.L156
 2803              	.L158:
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
ARM GAS  /tmp/ccrdcdEL.s 			page 82


1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
1822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2804              		.loc 1 1822 21
 2805 004c FB68     		ldr	r3, [r7, #12]
 2806 004e 0322     		movs	r2, #3
 2807 0050 83F85D20 		strb	r2, [r3, #93]
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2808              		.loc 1 1823 21
 2809 0054 FB68     		ldr	r3, [r7, #12]
 2810 0056 0022     		movs	r2, #0
 2811 0058 1A66     		str	r2, [r3, #96]
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2812              		.loc 1 1824 21
 2813 005a FB68     		ldr	r3, [r7, #12]
 2814 005c BA68     		ldr	r2, [r7, #8]
 2815 005e 9A63     		str	r2, [r3, #56]
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2816              		.loc 1 1825 21
 2817 0060 FB68     		ldr	r3, [r7, #12]
 2818 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2819 0064 9A87     		strh	r2, [r3, #60]	@ movhi
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2820              		.loc 1 1826 21
 2821 0066 FB68     		ldr	r3, [r7, #12]
 2822 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2823 006a DA87     		strh	r2, [r3, #62]	@ movhi
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init field not used in handle to zero */
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 2824              		.loc 1 1829 21
 2825 006c FB68     		ldr	r3, [r7, #12]
 2826 006e 0022     		movs	r2, #0
 2827 0070 1A64     		str	r2, [r3, #64]
1830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2828              		.loc 1 1830 21
 2829 0072 FB68     		ldr	r3, [r7, #12]
 2830 0074 0022     		movs	r2, #0
 2831 0076 1A65     		str	r2, [r3, #80]
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2832              		.loc 1 1831 21
 2833 0078 FB68     		ldr	r3, [r7, #12]
 2834 007a 0022     		movs	r2, #0
 2835 007c DA64     		str	r2, [r3, #76]
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2836              		.loc 1 1832 21
 2837 007e FB68     		ldr	r3, [r7, #12]
 2838 0080 0022     		movs	r2, #0
 2839 0082 A3F84420 		strh	r2, [r3, #68]	@ movhi
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2840              		.loc 1 1833 21
 2841 0086 FB68     		ldr	r3, [r7, #12]
 2842 0088 0022     		movs	r2, #0
 2843 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
ARM GAS  /tmp/ccrdcdEL.s 			page 83


 2844              		.loc 1 1836 17
 2845 008e FB68     		ldr	r3, [r7, #12]
 2846 0090 9B68     		ldr	r3, [r3, #8]
 2847              		.loc 1 1836 6
 2848 0092 B3F5004F 		cmp	r3, #32768
 2849 0096 07D1     		bne	.L159
1837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2850              		.loc 1 1838 5
 2851 0098 FB68     		ldr	r3, [r7, #12]
 2852 009a 1B68     		ldr	r3, [r3]
 2853 009c 1A68     		ldr	r2, [r3]
 2854 009e FB68     		ldr	r3, [r7, #12]
 2855 00a0 1B68     		ldr	r3, [r3]
 2856 00a2 42F48042 		orr	r2, r2, #16384
 2857 00a6 1A60     		str	r2, [r3]
 2858              	.L159:
1839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 2859              		.loc 1 1850 7
 2860 00a8 FB68     		ldr	r3, [r7, #12]
 2861 00aa 5B6D     		ldr	r3, [r3, #84]
 2862              		.loc 1 1850 38
 2863 00ac 474A     		ldr	r2, .L164
 2864 00ae 1A63     		str	r2, [r3, #48]
1851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 2865              		.loc 1 1853 7
 2866 00b0 FB68     		ldr	r3, [r7, #12]
 2867 00b2 5B6D     		ldr	r3, [r3, #84]
 2868              		.loc 1 1853 34
 2869 00b4 464A     		ldr	r2, .L164+4
 2870 00b6 DA62     		str	r2, [r3, #44]
1854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the DMA error callback */
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 2871              		.loc 1 1856 7
 2872 00b8 FB68     		ldr	r3, [r7, #12]
 2873 00ba 5B6D     		ldr	r3, [r3, #84]
 2874              		.loc 1 1856 35
 2875 00bc 454A     		ldr	r2, .L164+8
 2876 00be 5A63     		str	r2, [r3, #52]
1857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 2877              		.loc 1 1859 7
ARM GAS  /tmp/ccrdcdEL.s 			page 84


 2878 00c0 FB68     		ldr	r3, [r7, #12]
 2879 00c2 5B6D     		ldr	r3, [r3, #84]
 2880              		.loc 1 1859 35
 2881 00c4 0022     		movs	r2, #0
 2882 00c6 9A63     		str	r2, [r3, #56]
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2883              		.loc 1 1861 3
 2884 00c8 FB68     		ldr	r3, [r7, #12]
 2885 00ca 1B68     		ldr	r3, [r3]
 2886 00cc 5A68     		ldr	r2, [r3, #4]
 2887 00ce FB68     		ldr	r3, [r7, #12]
 2888 00d0 1B68     		ldr	r3, [r3]
 2889 00d2 22F48042 		bic	r2, r2, #16384
 2890 00d6 5A60     		str	r2, [r3, #4]
1862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
1863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDA
 2891              		.loc 1 1863 18
 2892 00d8 FB68     		ldr	r3, [r7, #12]
 2893 00da DB68     		ldr	r3, [r3, #12]
 2894              		.loc 1 1863 6
 2895 00dc B3F5E06F 		cmp	r3, #1792
 2896 00e0 2DD8     		bhi	.L160
 2897              		.loc 1 1863 58 discriminator 1
 2898 00e2 FB68     		ldr	r3, [r7, #12]
 2899 00e4 5B6D     		ldr	r3, [r3, #84]
 2900              		.loc 1 1863 72 discriminator 1
 2901 00e6 9B69     		ldr	r3, [r3, #24]
 2902              		.loc 1 1863 50 discriminator 1
 2903 00e8 B3F5806F 		cmp	r3, #1024
 2904 00ec 27D1     		bne	.L160
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check the even/odd of the data size + crc if enabled */
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if ((hspi->TxXferCount & 0x1U) == 0U)
 2905              		.loc 1 1866 14
 2906 00ee FB68     		ldr	r3, [r7, #12]
 2907 00f0 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2908 00f2 9BB2     		uxth	r3, r3
 2909              		.loc 1 1866 28
 2910 00f4 03F00103 		and	r3, r3, #1
 2911              		.loc 1 1866 8
 2912 00f8 002B     		cmp	r3, #0
 2913 00fa 0FD1     		bne	.L161
1867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2914              		.loc 1 1868 7
 2915 00fc FB68     		ldr	r3, [r7, #12]
 2916 00fe 1B68     		ldr	r3, [r3]
 2917 0100 5A68     		ldr	r2, [r3, #4]
 2918 0102 FB68     		ldr	r3, [r7, #12]
 2919 0104 1B68     		ldr	r3, [r3]
 2920 0106 22F48042 		bic	r2, r2, #16384
 2921 010a 5A60     		str	r2, [r3, #4]
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 2922              		.loc 1 1869 32
 2923 010c FB68     		ldr	r3, [r7, #12]
 2924 010e DB8F     		ldrh	r3, [r3, #62]	@ movhi
ARM GAS  /tmp/ccrdcdEL.s 			page 85


 2925 0110 9BB2     		uxth	r3, r3
 2926              		.loc 1 1869 25
 2927 0112 5B08     		lsrs	r3, r3, #1
 2928 0114 9AB2     		uxth	r2, r3
 2929 0116 FB68     		ldr	r3, [r7, #12]
 2930 0118 DA87     		strh	r2, [r3, #62]	@ movhi
 2931 011a 10E0     		b	.L160
 2932              	.L161:
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
1872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 2933              		.loc 1 1873 7
 2934 011c FB68     		ldr	r3, [r7, #12]
 2935 011e 1B68     		ldr	r3, [r3]
 2936 0120 5A68     		ldr	r2, [r3, #4]
 2937 0122 FB68     		ldr	r3, [r7, #12]
 2938 0124 1B68     		ldr	r3, [r3]
 2939 0126 42F48042 		orr	r2, r2, #16384
 2940 012a 5A60     		str	r2, [r3, #4]
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 2941              		.loc 1 1874 32
 2942 012c FB68     		ldr	r3, [r7, #12]
 2943 012e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2944 0130 9BB2     		uxth	r3, r3
 2945              		.loc 1 1874 53
 2946 0132 5B08     		lsrs	r3, r3, #1
 2947 0134 9BB2     		uxth	r3, r3
 2948 0136 0133     		adds	r3, r3, #1
 2949 0138 9AB2     		uxth	r2, r3
 2950              		.loc 1 1874 25
 2951 013a FB68     		ldr	r3, [r7, #12]
 2952 013c DA87     		strh	r2, [r3, #62]	@ movhi
 2953              	.L160:
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
 2954              		.loc 1 1879 17
 2955 013e FB68     		ldr	r3, [r7, #12]
 2956 0140 586D     		ldr	r0, [r3, #84]
 2957              		.loc 1 1879 62
 2958 0142 FB68     		ldr	r3, [r7, #12]
 2959 0144 9B6B     		ldr	r3, [r3, #56]
 2960              		.loc 1 1879 17
 2961 0146 1946     		mov	r1, r3
 2962              		.loc 1 1879 91
 2963 0148 FB68     		ldr	r3, [r7, #12]
 2964 014a 1B68     		ldr	r3, [r3]
 2965              		.loc 1 1879 86
 2966 014c 0C33     		adds	r3, r3, #12
 2967              		.loc 1 1879 17
 2968 014e 1A46     		mov	r2, r3
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->TxXferCount))
 2969              		.loc 1 1880 38
 2970 0150 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 86


 2971 0152 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2972 0154 9BB2     		uxth	r3, r3
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->TxXferCount))
 2973              		.loc 1 1879 17
 2974 0156 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2975 015a 0346     		mov	r3, r0
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->TxXferCount))
 2976              		.loc 1 1879 6
 2977 015c 002B     		cmp	r3, #0
 2978 015e 0CD0     		beq	.L162
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Update SPI error code */
1883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 2979              		.loc 1 1883 5
 2980 0160 FB68     		ldr	r3, [r7, #12]
 2981 0162 1B6E     		ldr	r3, [r3, #96]
 2982 0164 43F01002 		orr	r2, r3, #16
 2983 0168 FB68     		ldr	r3, [r7, #12]
 2984 016a 1A66     		str	r2, [r3, #96]
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2985              		.loc 1 1884 15
 2986 016c 0123     		movs	r3, #1
 2987 016e FB75     		strb	r3, [r7, #23]
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 2988              		.loc 1 1886 17
 2989 0170 FB68     		ldr	r3, [r7, #12]
 2990 0172 0122     		movs	r2, #1
 2991 0174 83F85D20 		strb	r2, [r3, #93]
1887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 2992              		.loc 1 1887 5
 2993 0178 1EE0     		b	.L156
 2994              	.L162:
1888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2995              		.loc 1 1891 12
 2996 017a FB68     		ldr	r3, [r7, #12]
 2997 017c 1B68     		ldr	r3, [r3]
 2998              		.loc 1 1891 22
 2999 017e 1B68     		ldr	r3, [r3]
 3000              		.loc 1 1891 28
 3001 0180 03F04003 		and	r3, r3, #64
 3002              		.loc 1 1891 6
 3003 0184 402B     		cmp	r3, #64
 3004 0186 07D0     		beq	.L163
1892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 3005              		.loc 1 1894 5
 3006 0188 FB68     		ldr	r3, [r7, #12]
 3007 018a 1B68     		ldr	r3, [r3]
 3008 018c 1A68     		ldr	r2, [r3]
 3009 018e FB68     		ldr	r3, [r7, #12]
 3010 0190 1B68     		ldr	r3, [r3]
 3011 0192 42F04002 		orr	r2, r2, #64
ARM GAS  /tmp/ccrdcdEL.s 			page 87


 3012 0196 1A60     		str	r2, [r3]
 3013              	.L163:
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 3014              		.loc 1 1898 3
 3015 0198 FB68     		ldr	r3, [r7, #12]
 3016 019a 1B68     		ldr	r3, [r3]
 3017 019c 5A68     		ldr	r2, [r3, #4]
 3018 019e FB68     		ldr	r3, [r7, #12]
 3019 01a0 1B68     		ldr	r3, [r3]
 3020 01a2 42F02002 		orr	r2, r2, #32
 3021 01a6 5A60     		str	r2, [r3, #4]
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable Tx DMA Request */
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 3022              		.loc 1 1901 3
 3023 01a8 FB68     		ldr	r3, [r7, #12]
 3024 01aa 1B68     		ldr	r3, [r3]
 3025 01ac 5A68     		ldr	r2, [r3, #4]
 3026 01ae FB68     		ldr	r3, [r7, #12]
 3027 01b0 1B68     		ldr	r3, [r3]
 3028 01b2 42F00202 		orr	r2, r2, #2
 3029 01b6 5A60     		str	r2, [r3, #4]
 3030              	.L156:
1902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error :
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Unlocked */
1905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3031              		.loc 1 1905 3
 3032 01b8 FB68     		ldr	r3, [r7, #12]
 3033 01ba 0022     		movs	r2, #0
 3034 01bc 83F85C20 		strb	r2, [r3, #92]
1906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 3035              		.loc 1 1906 10
 3036 01c0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3037              	.L154:
1907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 3038              		.loc 1 1907 1
 3039 01c2 1846     		mov	r0, r3
 3040 01c4 1837     		adds	r7, r7, #24
 3041              	.LCFI57:
 3042              		.cfi_def_cfa_offset 8
 3043 01c6 BD46     		mov	sp, r7
 3044              	.LCFI58:
 3045              		.cfi_def_cfa_register 13
 3046              		@ sp needed
 3047 01c8 80BD     		pop	{r7, pc}
 3048              	.L165:
 3049 01ca 00BF     		.align	2
 3050              	.L164:
 3051 01cc 00000000 		.word	SPI_DMAHalfTransmitCplt
 3052 01d0 00000000 		.word	SPI_DMATransmitCplt
 3053 01d4 00000000 		.word	SPI_DMAError
 3054              		.cfi_endproc
 3055              	.LFE335:
ARM GAS  /tmp/ccrdcdEL.s 			page 88


 3057              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 3058              		.align	1
 3059              		.global	HAL_SPI_Receive_DMA
 3060              		.syntax unified
 3061              		.thumb
 3062              		.thumb_func
 3063              		.fpu fpv4-sp-d16
 3065              	HAL_SPI_Receive_DMA:
 3066              	.LFB336:
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pData pointer to data buffer
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be sent
1917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
1918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 3067              		.loc 1 1920 1
 3068              		.cfi_startproc
 3069              		@ args = 0, pretend = 0, frame = 24
 3070              		@ frame_needed = 1, uses_anonymous_args = 0
 3071 0000 80B5     		push	{r7, lr}
 3072              	.LCFI59:
 3073              		.cfi_def_cfa_offset 8
 3074              		.cfi_offset 7, -8
 3075              		.cfi_offset 14, -4
 3076 0002 86B0     		sub	sp, sp, #24
 3077              	.LCFI60:
 3078              		.cfi_def_cfa_offset 32
 3079 0004 00AF     		add	r7, sp, #0
 3080              	.LCFI61:
 3081              		.cfi_def_cfa_register 7
 3082 0006 F860     		str	r0, [r7, #12]
 3083 0008 B960     		str	r1, [r7, #8]
 3084 000a 1346     		mov	r3, r2
 3085 000c FB80     		strh	r3, [r7, #6]	@ movhi
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3086              		.loc 1 1921 21
 3087 000e 0023     		movs	r3, #0
 3088 0010 FB75     		strb	r3, [r7, #23]
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check rx dma handle */
1924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 3089              		.loc 1 1926 18
 3090 0012 FB68     		ldr	r3, [r7, #12]
 3091 0014 9B68     		ldr	r3, [r3, #8]
 3092              		.loc 1 1926 6
 3093 0016 002B     		cmp	r3, #0
 3094 0018 10D1     		bne	.L167
 3095              		.loc 1 1926 68 discriminator 1
ARM GAS  /tmp/ccrdcdEL.s 			page 89


 3096 001a FB68     		ldr	r3, [r7, #12]
 3097 001c 5B68     		ldr	r3, [r3, #4]
 3098              		.loc 1 1926 54 discriminator 1
 3099 001e B3F5827F 		cmp	r3, #260
 3100 0022 0BD1     		bne	.L167
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 3101              		.loc 1 1928 17
 3102 0024 FB68     		ldr	r3, [r7, #12]
 3103 0026 0422     		movs	r2, #4
 3104 0028 83F85D20 		strb	r2, [r3, #93]
1929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check tx dma handle */
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 3105              		.loc 1 1934 12
 3106 002c FB88     		ldrh	r3, [r7, #6]
 3107 002e BA68     		ldr	r2, [r7, #8]
 3108 0030 B968     		ldr	r1, [r7, #8]
 3109 0032 F868     		ldr	r0, [r7, #12]
 3110 0034 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 3111 0038 0346     		mov	r3, r0
 3112 003a F3E0     		b	.L168
 3113              	.L167:
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3114              		.loc 1 1938 3
 3115 003c FB68     		ldr	r3, [r7, #12]
 3116 003e 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3117 0042 012B     		cmp	r3, #1
 3118 0044 01D1     		bne	.L169
 3119              		.loc 1 1938 3 is_stmt 0 discriminator 1
 3120 0046 0223     		movs	r3, #2
 3121 0048 ECE0     		b	.L168
 3122              	.L169:
 3123              		.loc 1 1938 3 discriminator 2
 3124 004a FB68     		ldr	r3, [r7, #12]
 3125 004c 0122     		movs	r2, #1
 3126 004e 83F85C20 		strb	r2, [r3, #92]
1939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 3127              		.loc 1 1940 11 is_stmt 1 discriminator 2
 3128 0052 FB68     		ldr	r3, [r7, #12]
 3129 0054 93F85D30 		ldrb	r3, [r3, #93]
 3130 0058 DBB2     		uxtb	r3, r3
 3131              		.loc 1 1940 6 discriminator 2
 3132 005a 012B     		cmp	r3, #1
 3133 005c 02D0     		beq	.L170
1941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 3134              		.loc 1 1942 15
 3135 005e 0223     		movs	r3, #2
 3136 0060 FB75     		strb	r3, [r7, #23]
ARM GAS  /tmp/ccrdcdEL.s 			page 90


1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 3137              		.loc 1 1943 5
 3138 0062 DAE0     		b	.L171
 3139              	.L170:
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 3140              		.loc 1 1946 6
 3141 0064 BB68     		ldr	r3, [r7, #8]
 3142 0066 002B     		cmp	r3, #0
 3143 0068 02D0     		beq	.L172
 3144              		.loc 1 1946 23 discriminator 1
 3145 006a FB88     		ldrh	r3, [r7, #6]
 3146 006c 002B     		cmp	r3, #0
 3147 006e 02D1     		bne	.L173
 3148              	.L172:
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3149              		.loc 1 1948 15
 3150 0070 0123     		movs	r3, #1
 3151 0072 FB75     		strb	r3, [r7, #23]
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 3152              		.loc 1 1949 5
 3153 0074 D1E0     		b	.L171
 3154              	.L173:
1950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 3155              		.loc 1 1953 21
 3156 0076 FB68     		ldr	r3, [r7, #12]
 3157 0078 0422     		movs	r2, #4
 3158 007a 83F85D20 		strb	r2, [r3, #93]
1954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3159              		.loc 1 1954 21
 3160 007e FB68     		ldr	r3, [r7, #12]
 3161 0080 0022     		movs	r2, #0
 3162 0082 1A66     		str	r2, [r3, #96]
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3163              		.loc 1 1955 21
 3164 0084 FB68     		ldr	r3, [r7, #12]
 3165 0086 BA68     		ldr	r2, [r7, #8]
 3166 0088 1A64     		str	r2, [r3, #64]
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3167              		.loc 1 1956 21
 3168 008a FB68     		ldr	r3, [r7, #12]
 3169 008c FA88     		ldrh	r2, [r7, #6]	@ movhi
 3170 008e A3F84420 		strh	r2, [r3, #68]	@ movhi
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3171              		.loc 1 1957 21
 3172 0092 FB68     		ldr	r3, [r7, #12]
 3173 0094 FA88     		ldrh	r2, [r7, #6]	@ movhi
 3174 0096 A3F84620 		strh	r2, [r3, #70]	@ movhi
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /*Init field not used in handle to zero */
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3175              		.loc 1 1960 21
ARM GAS  /tmp/ccrdcdEL.s 			page 91


 3176 009a FB68     		ldr	r3, [r7, #12]
 3177 009c 0022     		movs	r2, #0
 3178 009e DA64     		str	r2, [r3, #76]
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3179              		.loc 1 1961 21
 3180 00a0 FB68     		ldr	r3, [r7, #12]
 3181 00a2 0022     		movs	r2, #0
 3182 00a4 1A65     		str	r2, [r3, #80]
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 3183              		.loc 1 1962 21
 3184 00a6 FB68     		ldr	r3, [r7, #12]
 3185 00a8 0022     		movs	r2, #0
 3186 00aa 9A87     		strh	r2, [r3, #60]	@ movhi
1963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3187              		.loc 1 1963 21
 3188 00ac FB68     		ldr	r3, [r7, #12]
 3189 00ae 0022     		movs	r2, #0
 3190 00b0 DA87     		strh	r2, [r3, #62]	@ movhi
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 3191              		.loc 1 1966 17
 3192 00b2 FB68     		ldr	r3, [r7, #12]
 3193 00b4 9B68     		ldr	r3, [r3, #8]
 3194              		.loc 1 1966 6
 3195 00b6 B3F5004F 		cmp	r3, #32768
 3196 00ba 07D1     		bne	.L174
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 3197              		.loc 1 1968 5
 3198 00bc FB68     		ldr	r3, [r7, #12]
 3199 00be 1B68     		ldr	r3, [r3]
 3200 00c0 1A68     		ldr	r2, [r3]
 3201 00c2 FB68     		ldr	r3, [r7, #12]
 3202 00c4 1B68     		ldr	r3, [r3]
 3203 00c6 22F48042 		bic	r2, r2, #16384
 3204 00ca 1A60     		str	r2, [r3]
 3205              	.L174:
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
1973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3206              		.loc 1 1980 3
 3207 00cc FB68     		ldr	r3, [r7, #12]
 3208 00ce 1B68     		ldr	r3, [r3]
 3209 00d0 5A68     		ldr	r2, [r3, #4]
 3210 00d2 FB68     		ldr	r3, [r7, #12]
 3211 00d4 1B68     		ldr	r3, [r3]
 3212 00d6 22F40052 		bic	r2, r2, #8192
ARM GAS  /tmp/ccrdcdEL.s 			page 92


 3213 00da 5A60     		str	r2, [r3, #4]
1981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3214              		.loc 1 1981 17
 3215 00dc FB68     		ldr	r3, [r7, #12]
 3216 00de DB68     		ldr	r3, [r3, #12]
 3217              		.loc 1 1981 6
 3218 00e0 B3F5E06F 		cmp	r3, #1792
 3219 00e4 08D9     		bls	.L175
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3220              		.loc 1 1984 5
 3221 00e6 FB68     		ldr	r3, [r7, #12]
 3222 00e8 1B68     		ldr	r3, [r3]
 3223 00ea 5A68     		ldr	r2, [r3, #4]
 3224 00ec FB68     		ldr	r3, [r7, #12]
 3225 00ee 1B68     		ldr	r3, [r3]
 3226 00f0 22F48052 		bic	r2, r2, #4096
 3227 00f4 5A60     		str	r2, [r3, #4]
 3228 00f6 42E0     		b	.L176
 3229              	.L175:
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
1986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3230              		.loc 1 1989 5
 3231 00f8 FB68     		ldr	r3, [r7, #12]
 3232 00fa 1B68     		ldr	r3, [r3]
 3233 00fc 5A68     		ldr	r2, [r3, #4]
 3234 00fe FB68     		ldr	r3, [r7, #12]
 3235 0100 1B68     		ldr	r3, [r3]
 3236 0102 42F48052 		orr	r2, r2, #4096
 3237 0106 5A60     		str	r2, [r3, #4]
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 3238              		.loc 1 1991 13
 3239 0108 FB68     		ldr	r3, [r7, #12]
 3240 010a 9B6D     		ldr	r3, [r3, #88]
 3241              		.loc 1 1991 27
 3242 010c 9B69     		ldr	r3, [r3, #24]
 3243              		.loc 1 1991 8
 3244 010e B3F5806F 		cmp	r3, #1024
 3245 0112 34D1     		bne	.L176
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3246              		.loc 1 1994 7
 3247 0114 FB68     		ldr	r3, [r7, #12]
 3248 0116 1B68     		ldr	r3, [r3]
 3249 0118 5A68     		ldr	r2, [r3, #4]
 3250 011a FB68     		ldr	r3, [r7, #12]
 3251 011c 1B68     		ldr	r3, [r3]
 3252 011e 22F48052 		bic	r2, r2, #4096
 3253 0122 5A60     		str	r2, [r3, #4]
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
ARM GAS  /tmp/ccrdcdEL.s 			page 93


 3254              		.loc 1 1996 16
 3255 0124 FB68     		ldr	r3, [r7, #12]
 3256 0126 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3257 012a 9BB2     		uxth	r3, r3
 3258              		.loc 1 1996 30
 3259 012c 03F00103 		and	r3, r3, #1
 3260              		.loc 1 1996 10
 3261 0130 002B     		cmp	r3, #0
 3262 0132 11D1     		bne	.L177
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
1998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3263              		.loc 1 1998 9
 3264 0134 FB68     		ldr	r3, [r7, #12]
 3265 0136 1B68     		ldr	r3, [r3]
 3266 0138 5A68     		ldr	r2, [r3, #4]
 3267 013a FB68     		ldr	r3, [r7, #12]
 3268 013c 1B68     		ldr	r3, [r3]
 3269 013e 22F40052 		bic	r2, r2, #8192
 3270 0142 5A60     		str	r2, [r3, #4]
1999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3271              		.loc 1 1999 33
 3272 0144 FB68     		ldr	r3, [r7, #12]
 3273 0146 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3274 014a 9BB2     		uxth	r3, r3
 3275              		.loc 1 1999 27
 3276 014c 5B08     		lsrs	r3, r3, #1
 3277 014e 9AB2     		uxth	r2, r3
 3278 0150 FB68     		ldr	r3, [r7, #12]
 3279 0152 A3F84620 		strh	r2, [r3, #70]	@ movhi
 3280 0156 12E0     		b	.L176
 3281              	.L177:
2000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
2002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3282              		.loc 1 2003 9
 3283 0158 FB68     		ldr	r3, [r7, #12]
 3284 015a 1B68     		ldr	r3, [r3]
 3285 015c 5A68     		ldr	r2, [r3, #4]
 3286 015e FB68     		ldr	r3, [r7, #12]
 3287 0160 1B68     		ldr	r3, [r3]
 3288 0162 42F40052 		orr	r2, r2, #8192
 3289 0166 5A60     		str	r2, [r3, #4]
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3290              		.loc 1 2004 34
 3291 0168 FB68     		ldr	r3, [r7, #12]
 3292 016a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3293 016e 9BB2     		uxth	r3, r3
 3294              		.loc 1 2004 55
 3295 0170 5B08     		lsrs	r3, r3, #1
 3296 0172 9BB2     		uxth	r3, r3
 3297 0174 0133     		adds	r3, r3, #1
 3298 0176 9AB2     		uxth	r2, r3
 3299              		.loc 1 2004 27
 3300 0178 FB68     		ldr	r3, [r7, #12]
 3301 017a A3F84620 		strh	r2, [r3, #70]	@ movhi
 3302              	.L176:
ARM GAS  /tmp/ccrdcdEL.s 			page 94


2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 3303              		.loc 1 2010 7
 3304 017e FB68     		ldr	r3, [r7, #12]
 3305 0180 9B6D     		ldr	r3, [r3, #88]
 3306              		.loc 1 2010 38
 3307 0182 2A4A     		ldr	r2, .L180
 3308 0184 1A63     		str	r2, [r3, #48]
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 3309              		.loc 1 2013 7
 3310 0186 FB68     		ldr	r3, [r7, #12]
 3311 0188 9B6D     		ldr	r3, [r3, #88]
 3312              		.loc 1 2013 34
 3313 018a 294A     		ldr	r2, .L180+4
 3314 018c DA62     		str	r2, [r3, #44]
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the DMA error callback */
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 3315              		.loc 1 2016 7
 3316 018e FB68     		ldr	r3, [r7, #12]
 3317 0190 9B6D     		ldr	r3, [r3, #88]
 3318              		.loc 1 2016 35
 3319 0192 284A     		ldr	r2, .L180+8
 3320 0194 5A63     		str	r2, [r3, #52]
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 3321              		.loc 1 2019 7
 3322 0196 FB68     		ldr	r3, [r7, #12]
 3323 0198 9B6D     		ldr	r3, [r3, #88]
 3324              		.loc 1 2019 35
 3325 019a 0022     		movs	r2, #0
 3326 019c 9A63     		str	r2, [r3, #56]
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
 3327              		.loc 1 2022 17
 3328 019e FB68     		ldr	r3, [r7, #12]
 3329 01a0 986D     		ldr	r0, [r3, #88]
 3330              		.loc 1 2022 63
 3331 01a2 FB68     		ldr	r3, [r7, #12]
 3332 01a4 1B68     		ldr	r3, [r3]
 3333              		.loc 1 2022 58
 3334 01a6 0C33     		adds	r3, r3, #12
 3335              		.loc 1 2022 17
 3336 01a8 1946     		mov	r1, r3
 3337              		.loc 1 2022 93
 3338 01aa FB68     		ldr	r3, [r7, #12]
 3339 01ac 1B6C     		ldr	r3, [r3, #64]
 3340              		.loc 1 2022 17
 3341 01ae 1A46     		mov	r2, r3
ARM GAS  /tmp/ccrdcdEL.s 			page 95


2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->RxXferCount))
 3342              		.loc 1 2023 38
 3343 01b0 FB68     		ldr	r3, [r7, #12]
 3344 01b2 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3345 01b6 9BB2     		uxth	r3, r3
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->RxXferCount))
 3346              		.loc 1 2022 17
 3347 01b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3348 01bc 0346     		mov	r3, r0
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->RxXferCount))
 3349              		.loc 1 2022 6
 3350 01be 002B     		cmp	r3, #0
 3351 01c0 0CD0     		beq	.L178
2024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Update SPI error code */
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 3352              		.loc 1 2026 5
 3353 01c2 FB68     		ldr	r3, [r7, #12]
 3354 01c4 1B6E     		ldr	r3, [r3, #96]
 3355 01c6 43F01002 		orr	r2, r3, #16
 3356 01ca FB68     		ldr	r3, [r7, #12]
 3357 01cc 1A66     		str	r2, [r3, #96]
2027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3358              		.loc 1 2027 15
 3359 01ce 0123     		movs	r3, #1
 3360 01d0 FB75     		strb	r3, [r7, #23]
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 3361              		.loc 1 2029 17
 3362 01d2 FB68     		ldr	r3, [r7, #12]
 3363 01d4 0122     		movs	r2, #1
 3364 01d6 83F85D20 		strb	r2, [r3, #93]
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 3365              		.loc 1 2030 5
 3366 01da 1EE0     		b	.L171
 3367              	.L178:
2031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 3368              		.loc 1 2034 12
 3369 01dc FB68     		ldr	r3, [r7, #12]
 3370 01de 1B68     		ldr	r3, [r3]
 3371              		.loc 1 2034 22
 3372 01e0 1B68     		ldr	r3, [r3]
 3373              		.loc 1 2034 28
 3374 01e2 03F04003 		and	r3, r3, #64
 3375              		.loc 1 2034 6
 3376 01e6 402B     		cmp	r3, #64
 3377 01e8 07D0     		beq	.L179
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
2037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 3378              		.loc 1 2037 5
 3379 01ea FB68     		ldr	r3, [r7, #12]
 3380 01ec 1B68     		ldr	r3, [r3]
 3381 01ee 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccrdcdEL.s 			page 96


 3382 01f0 FB68     		ldr	r3, [r7, #12]
 3383 01f2 1B68     		ldr	r3, [r3]
 3384 01f4 42F04002 		orr	r2, r2, #64
 3385 01f8 1A60     		str	r2, [r3]
 3386              	.L179:
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 3387              		.loc 1 2041 3
 3388 01fa FB68     		ldr	r3, [r7, #12]
 3389 01fc 1B68     		ldr	r3, [r3]
 3390 01fe 5A68     		ldr	r2, [r3, #4]
 3391 0200 FB68     		ldr	r3, [r7, #12]
 3392 0202 1B68     		ldr	r3, [r3]
 3393 0204 42F02002 		orr	r2, r2, #32
 3394 0208 5A60     		str	r2, [r3, #4]
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable Rx DMA Request */
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3395              		.loc 1 2044 3
 3396 020a FB68     		ldr	r3, [r7, #12]
 3397 020c 1B68     		ldr	r3, [r3]
 3398 020e 5A68     		ldr	r2, [r3, #4]
 3399 0210 FB68     		ldr	r3, [r7, #12]
 3400 0212 1B68     		ldr	r3, [r3]
 3401 0214 42F00102 		orr	r2, r2, #1
 3402 0218 5A60     		str	r2, [r3, #4]
 3403              	.L171:
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error:
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Unlocked */
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3404              		.loc 1 2048 3
 3405 021a FB68     		ldr	r3, [r7, #12]
 3406 021c 0022     		movs	r2, #0
 3407 021e 83F85C20 		strb	r2, [r3, #92]
2049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 3408              		.loc 1 2049 10
 3409 0222 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3410              	.L168:
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 3411              		.loc 1 2050 1
 3412 0224 1846     		mov	r0, r3
 3413 0226 1837     		adds	r7, r7, #24
 3414              	.LCFI62:
 3415              		.cfi_def_cfa_offset 8
 3416 0228 BD46     		mov	sp, r7
 3417              	.LCFI63:
 3418              		.cfi_def_cfa_register 13
 3419              		@ sp needed
 3420 022a 80BD     		pop	{r7, pc}
 3421              	.L181:
 3422              		.align	2
 3423              	.L180:
 3424 022c 00000000 		.word	SPI_DMAHalfReceiveCplt
 3425 0230 00000000 		.word	SPI_DMAReceiveCplt
ARM GAS  /tmp/ccrdcdEL.s 			page 97


 3426 0234 00000000 		.word	SPI_DMAError
 3427              		.cfi_endproc
 3428              	.LFE336:
 3430              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 3431              		.align	1
 3432              		.global	HAL_SPI_TransmitReceive_DMA
 3433              		.syntax unified
 3434              		.thumb
 3435              		.thumb_func
 3436              		.fpu fpv4-sp-d16
 3438              	HAL_SPI_TransmitReceive_DMA:
 3439              	.LFB337:
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Size amount of data to be sent
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
2061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                               uint16_t Size)
2064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 3440              		.loc 1 2064 1
 3441              		.cfi_startproc
 3442              		@ args = 0, pretend = 0, frame = 24
 3443              		@ frame_needed = 1, uses_anonymous_args = 0
 3444 0000 80B5     		push	{r7, lr}
 3445              	.LCFI64:
 3446              		.cfi_def_cfa_offset 8
 3447              		.cfi_offset 7, -8
 3448              		.cfi_offset 14, -4
 3449 0002 86B0     		sub	sp, sp, #24
 3450              	.LCFI65:
 3451              		.cfi_def_cfa_offset 32
 3452 0004 00AF     		add	r7, sp, #0
 3453              	.LCFI66:
 3454              		.cfi_def_cfa_register 7
 3455 0006 F860     		str	r0, [r7, #12]
 3456 0008 B960     		str	r1, [r7, #8]
 3457 000a 7A60     		str	r2, [r7, #4]
 3458 000c 7B80     		strh	r3, [r7, #2]	@ movhi
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t             tmp_mode;
2066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3459              		.loc 1 2067 21
 3460 000e 0023     		movs	r3, #0
 3461 0010 FB75     		strb	r3, [r7, #23]
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check rx & tx dma handles */
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
2071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check Direction parameter */
ARM GAS  /tmp/ccrdcdEL.s 			page 98


2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process locked */
2077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3462              		.loc 1 2077 3
 3463 0012 FB68     		ldr	r3, [r7, #12]
 3464 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3465 0018 012B     		cmp	r3, #1
 3466 001a 01D1     		bne	.L183
 3467              		.loc 1 2077 3 is_stmt 0 discriminator 1
 3468 001c 0223     		movs	r3, #2
 3469 001e 6CE1     		b	.L184
 3470              	.L183:
 3471              		.loc 1 2077 3 discriminator 2
 3472 0020 FB68     		ldr	r3, [r7, #12]
 3473 0022 0122     		movs	r2, #1
 3474 0024 83F85C20 		strb	r2, [r3, #92]
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init temporary variables */
2080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tmp_state           = hspi->State;
 3475              		.loc 1 2080 23 is_stmt 1 discriminator 2
 3476 0028 FB68     		ldr	r3, [r7, #12]
 3477 002a 93F85D30 		ldrb	r3, [r3, #93]
 3478 002e BB75     		strb	r3, [r7, #22]
2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 3479              		.loc 1 2081 23 discriminator 2
 3480 0030 FB68     		ldr	r3, [r7, #12]
 3481 0032 5B68     		ldr	r3, [r3, #4]
 3482 0034 3B61     		str	r3, [r7, #16]
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
 3483              		.loc 1 2083 6 discriminator 2
 3484 0036 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3485 0038 012B     		cmp	r3, #1
 3486 003a 0DD0     		beq	.L185
 3487              		.loc 1 2083 7 discriminator 1
 3488 003c 3B69     		ldr	r3, [r7, #16]
 3489 003e B3F5827F 		cmp	r3, #260
 3490 0042 06D1     		bne	.L186
2084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3491              		.loc 1 2084 54
 3492 0044 FB68     		ldr	r3, [r7, #12]
 3493 0046 9B68     		ldr	r3, [r3, #8]
 3494              		.loc 1 2084 40
 3495 0048 002B     		cmp	r3, #0
 3496 004a 02D1     		bne	.L186
 3497              		.loc 1 2084 90 discriminator 1
 3498 004c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3499 004e 042B     		cmp	r3, #4
 3500 0050 02D0     		beq	.L185
 3501              	.L186:
2085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_BUSY;
 3502              		.loc 1 2086 15
 3503 0052 0223     		movs	r3, #2
 3504 0054 FB75     		strb	r3, [r7, #23]
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/ccrdcdEL.s 			page 99


 3505              		.loc 1 2087 5
 3506 0056 4BE1     		b	.L187
 3507              	.L185:
2088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 3508              		.loc 1 2090 6
 3509 0058 BB68     		ldr	r3, [r7, #8]
 3510 005a 002B     		cmp	r3, #0
 3511 005c 05D0     		beq	.L188
 3512              		.loc 1 2090 25 discriminator 1
 3513 005e 7B68     		ldr	r3, [r7, #4]
 3514 0060 002B     		cmp	r3, #0
 3515 0062 02D0     		beq	.L188
 3516              		.loc 1 2090 46 discriminator 2
 3517 0064 7B88     		ldrh	r3, [r7, #2]
 3518 0066 002B     		cmp	r3, #0
 3519 0068 02D1     		bne	.L189
 3520              	.L188:
2091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3521              		.loc 1 2092 15
 3522 006a 0123     		movs	r3, #1
 3523 006c FB75     		strb	r3, [r7, #23]
2093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 3524              		.loc 1 2093 5
 3525 006e 3FE1     		b	.L187
 3526              	.L189:
2094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 3527              		.loc 1 2097 11
 3528 0070 FB68     		ldr	r3, [r7, #12]
 3529 0072 93F85D30 		ldrb	r3, [r3, #93]
 3530 0076 DBB2     		uxtb	r3, r3
 3531              		.loc 1 2097 6
 3532 0078 042B     		cmp	r3, #4
 3533 007a 03D0     		beq	.L190
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 3534              		.loc 1 2099 17
 3535 007c FB68     		ldr	r3, [r7, #12]
 3536 007e 0522     		movs	r2, #5
 3537 0080 83F85D20 		strb	r2, [r3, #93]
 3538              	.L190:
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the transaction information */
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3539              		.loc 1 2103 21
 3540 0084 FB68     		ldr	r3, [r7, #12]
 3541 0086 0022     		movs	r2, #0
 3542 0088 1A66     		str	r2, [r3, #96]
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3543              		.loc 1 2104 21
 3544 008a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 100


 3545 008c BA68     		ldr	r2, [r7, #8]
 3546 008e 9A63     		str	r2, [r3, #56]
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3547              		.loc 1 2105 21
 3548 0090 FB68     		ldr	r3, [r7, #12]
 3549 0092 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3550 0094 9A87     		strh	r2, [r3, #60]	@ movhi
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3551              		.loc 1 2106 21
 3552 0096 FB68     		ldr	r3, [r7, #12]
 3553 0098 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3554 009a DA87     		strh	r2, [r3, #62]	@ movhi
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3555              		.loc 1 2107 21
 3556 009c FB68     		ldr	r3, [r7, #12]
 3557 009e 7A68     		ldr	r2, [r7, #4]
 3558 00a0 1A64     		str	r2, [r3, #64]
2108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3559              		.loc 1 2108 21
 3560 00a2 FB68     		ldr	r3, [r7, #12]
 3561 00a4 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3562 00a6 A3F84420 		strh	r2, [r3, #68]	@ movhi
2109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3563              		.loc 1 2109 21
 3564 00aa FB68     		ldr	r3, [r7, #12]
 3565 00ac 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3566 00ae A3F84620 		strh	r2, [r3, #70]	@ movhi
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init field not used in handle to zero */
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3567              		.loc 1 2112 21
 3568 00b2 FB68     		ldr	r3, [r7, #12]
 3569 00b4 0022     		movs	r2, #0
 3570 00b6 DA64     		str	r2, [r3, #76]
2113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3571              		.loc 1 2113 21
 3572 00b8 FB68     		ldr	r3, [r7, #12]
 3573 00ba 0022     		movs	r2, #0
 3574 00bc 1A65     		str	r2, [r3, #80]
2114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset CRC Calculation */
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset the threshold bit */
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
 3575              		.loc 1 2124 3
 3576 00be FB68     		ldr	r3, [r7, #12]
 3577 00c0 1B68     		ldr	r3, [r3]
 3578 00c2 5A68     		ldr	r2, [r3, #4]
 3579 00c4 FB68     		ldr	r3, [r7, #12]
 3580 00c6 1B68     		ldr	r3, [r3]
 3581 00c8 22F4C042 		bic	r2, r2, #24576
ARM GAS  /tmp/ccrdcdEL.s 			page 101


 3582 00cc 5A60     		str	r2, [r3, #4]
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* The packing mode management is enabled by the DMA settings according the spi data size */
2127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3583              		.loc 1 2127 17
 3584 00ce FB68     		ldr	r3, [r7, #12]
 3585 00d0 DB68     		ldr	r3, [r3, #12]
 3586              		.loc 1 2127 6
 3587 00d2 B3F5E06F 		cmp	r3, #1792
 3588 00d6 08D9     		bls	.L191
2128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3589              		.loc 1 2130 5
 3590 00d8 FB68     		ldr	r3, [r7, #12]
 3591 00da 1B68     		ldr	r3, [r3]
 3592 00dc 5A68     		ldr	r2, [r3, #4]
 3593 00de FB68     		ldr	r3, [r7, #12]
 3594 00e0 1B68     		ldr	r3, [r3]
 3595 00e2 22F48052 		bic	r2, r2, #4096
 3596 00e6 5A60     		str	r2, [r3, #4]
 3597 00e8 6FE0     		b	.L192
 3598              	.L191:
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
2133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3599              		.loc 1 2135 5
 3600 00ea FB68     		ldr	r3, [r7, #12]
 3601 00ec 1B68     		ldr	r3, [r3]
 3602 00ee 5A68     		ldr	r2, [r3, #4]
 3603 00f0 FB68     		ldr	r3, [r7, #12]
 3604 00f2 1B68     		ldr	r3, [r3]
 3605 00f4 42F48052 		orr	r2, r2, #4096
 3606 00f8 5A60     		str	r2, [r3, #4]
2136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 3607              		.loc 1 2137 13
 3608 00fa FB68     		ldr	r3, [r7, #12]
 3609 00fc 5B6D     		ldr	r3, [r3, #84]
 3610              		.loc 1 2137 27
 3611 00fe 9B69     		ldr	r3, [r3, #24]
 3612              		.loc 1 2137 8
 3613 0100 B3F5806F 		cmp	r3, #1024
 3614 0104 26D1     		bne	.L193
2138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((hspi->TxXferSize & 0x1U) == 0x0U)
 3615              		.loc 1 2139 16
 3616 0106 FB68     		ldr	r3, [r7, #12]
 3617 0108 9B8F     		ldrh	r3, [r3, #60]
 3618              		.loc 1 2139 29
 3619 010a 03F00103 		and	r3, r3, #1
 3620              		.loc 1 2139 10
 3621 010e 002B     		cmp	r3, #0
 3622 0110 0FD1     		bne	.L194
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
ARM GAS  /tmp/ccrdcdEL.s 			page 102


2141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 3623              		.loc 1 2141 9
 3624 0112 FB68     		ldr	r3, [r7, #12]
 3625 0114 1B68     		ldr	r3, [r3]
 3626 0116 5A68     		ldr	r2, [r3, #4]
 3627 0118 FB68     		ldr	r3, [r7, #12]
 3628 011a 1B68     		ldr	r3, [r3]
 3629 011c 22F48042 		bic	r2, r2, #16384
 3630 0120 5A60     		str	r2, [r3, #4]
2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
 3631              		.loc 1 2142 33
 3632 0122 FB68     		ldr	r3, [r7, #12]
 3633 0124 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3634 0126 9BB2     		uxth	r3, r3
 3635              		.loc 1 2142 27
 3636 0128 5B08     		lsrs	r3, r3, #1
 3637 012a 9AB2     		uxth	r2, r3
 3638 012c FB68     		ldr	r3, [r7, #12]
 3639 012e DA87     		strh	r2, [r3, #62]	@ movhi
 3640 0130 10E0     		b	.L193
 3641              	.L194:
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 3642              		.loc 1 2146 9
 3643 0132 FB68     		ldr	r3, [r7, #12]
 3644 0134 1B68     		ldr	r3, [r3]
 3645 0136 5A68     		ldr	r2, [r3, #4]
 3646 0138 FB68     		ldr	r3, [r7, #12]
 3647 013a 1B68     		ldr	r3, [r3]
 3648 013c 42F48042 		orr	r2, r2, #16384
 3649 0140 5A60     		str	r2, [r3, #4]
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3650              		.loc 1 2147 34
 3651 0142 FB68     		ldr	r3, [r7, #12]
 3652 0144 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3653 0146 9BB2     		uxth	r3, r3
 3654              		.loc 1 2147 55
 3655 0148 5B08     		lsrs	r3, r3, #1
 3656 014a 9BB2     		uxth	r3, r3
 3657 014c 0133     		adds	r3, r3, #1
 3658 014e 9AB2     		uxth	r2, r3
 3659              		.loc 1 2147 27
 3660 0150 FB68     		ldr	r3, [r7, #12]
 3661 0152 DA87     		strh	r2, [r3, #62]	@ movhi
 3662              	.L193:
2148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 3663              		.loc 1 2151 13
 3664 0154 FB68     		ldr	r3, [r7, #12]
 3665 0156 9B6D     		ldr	r3, [r3, #88]
 3666              		.loc 1 2151 27
 3667 0158 9B69     		ldr	r3, [r3, #24]
 3668              		.loc 1 2151 8
ARM GAS  /tmp/ccrdcdEL.s 			page 103


 3669 015a B3F5806F 		cmp	r3, #1024
 3670 015e 34D1     		bne	.L192
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 3671              		.loc 1 2154 7
 3672 0160 FB68     		ldr	r3, [r7, #12]
 3673 0162 1B68     		ldr	r3, [r3]
 3674 0164 5A68     		ldr	r2, [r3, #4]
 3675 0166 FB68     		ldr	r3, [r7, #12]
 3676 0168 1B68     		ldr	r3, [r3]
 3677 016a 22F48052 		bic	r2, r2, #4096
 3678 016e 5A60     		str	r2, [r3, #4]
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
 3679              		.loc 1 2156 16
 3680 0170 FB68     		ldr	r3, [r7, #12]
 3681 0172 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3682 0176 9BB2     		uxth	r3, r3
 3683              		.loc 1 2156 30
 3684 0178 03F00103 		and	r3, r3, #1
 3685              		.loc 1 2156 10
 3686 017c 002B     		cmp	r3, #0
 3687 017e 11D1     		bne	.L195
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3688              		.loc 1 2158 9
 3689 0180 FB68     		ldr	r3, [r7, #12]
 3690 0182 1B68     		ldr	r3, [r3]
 3691 0184 5A68     		ldr	r2, [r3, #4]
 3692 0186 FB68     		ldr	r3, [r7, #12]
 3693 0188 1B68     		ldr	r3, [r3]
 3694 018a 22F40052 		bic	r2, r2, #8192
 3695 018e 5A60     		str	r2, [r3, #4]
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3696              		.loc 1 2159 33
 3697 0190 FB68     		ldr	r3, [r7, #12]
 3698 0192 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3699 0196 9BB2     		uxth	r3, r3
 3700              		.loc 1 2159 27
 3701 0198 5B08     		lsrs	r3, r3, #1
 3702 019a 9AB2     		uxth	r2, r3
 3703 019c FB68     		ldr	r3, [r7, #12]
 3704 019e A3F84620 		strh	r2, [r3, #70]	@ movhi
 3705 01a2 12E0     		b	.L192
 3706              	.L195:
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
 3707              		.loc 1 2163 9
 3708 01a4 FB68     		ldr	r3, [r7, #12]
 3709 01a6 1B68     		ldr	r3, [r3]
 3710 01a8 5A68     		ldr	r2, [r3, #4]
 3711 01aa FB68     		ldr	r3, [r7, #12]
 3712 01ac 1B68     		ldr	r3, [r3]
 3713 01ae 42F40052 		orr	r2, r2, #8192
ARM GAS  /tmp/ccrdcdEL.s 			page 104


 3714 01b2 5A60     		str	r2, [r3, #4]
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3715              		.loc 1 2164 34
 3716 01b4 FB68     		ldr	r3, [r7, #12]
 3717 01b6 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3718 01ba 9BB2     		uxth	r3, r3
 3719              		.loc 1 2164 55
 3720 01bc 5B08     		lsrs	r3, r3, #1
 3721 01be 9BB2     		uxth	r3, r3
 3722 01c0 0133     		adds	r3, r3, #1
 3723 01c2 9AB2     		uxth	r2, r3
 3724              		.loc 1 2164 27
 3725 01c4 FB68     		ldr	r3, [r7, #12]
 3726 01c6 A3F84620 		strh	r2, [r3, #70]	@ movhi
 3727              	.L192:
2165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
2170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 3728              		.loc 1 2170 11
 3729 01ca FB68     		ldr	r3, [r7, #12]
 3730 01cc 93F85D30 		ldrb	r3, [r3, #93]
 3731 01d0 DBB2     		uxtb	r3, r3
 3732              		.loc 1 2170 6
 3733 01d2 042B     		cmp	r3, #4
 3734 01d4 08D1     		bne	.L196
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 3735              		.loc 1 2173 9
 3736 01d6 FB68     		ldr	r3, [r7, #12]
 3737 01d8 9B6D     		ldr	r3, [r3, #88]
 3738              		.loc 1 2173 40
 3739 01da 4A4A     		ldr	r2, .L201
 3740 01dc 1A63     		str	r2, [r3, #48]
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3741              		.loc 1 2174 9
 3742 01de FB68     		ldr	r3, [r7, #12]
 3743 01e0 9B6D     		ldr	r3, [r3, #88]
 3744              		.loc 1 2174 40
 3745 01e2 494A     		ldr	r2, .L201+4
 3746 01e4 DA62     		str	r2, [r3, #44]
 3747 01e6 07E0     		b	.L197
 3748              	.L196:
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
2177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
 3749              		.loc 1 2179 9
 3750 01e8 FB68     		ldr	r3, [r7, #12]
 3751 01ea 9B6D     		ldr	r3, [r3, #88]
 3752              		.loc 1 2179 40
 3753 01ec 474A     		ldr	r2, .L201+8
 3754 01ee 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccrdcdEL.s 			page 105


2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3755              		.loc 1 2180 9
 3756 01f0 FB68     		ldr	r3, [r7, #12]
 3757 01f2 9B6D     		ldr	r3, [r3, #88]
 3758              		.loc 1 2180 40
 3759 01f4 464A     		ldr	r2, .L201+12
 3760 01f6 DA62     		str	r2, [r3, #44]
 3761              	.L197:
2181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the DMA error callback */
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 3762              		.loc 1 2184 7
 3763 01f8 FB68     		ldr	r3, [r7, #12]
 3764 01fa 9B6D     		ldr	r3, [r3, #88]
 3765              		.loc 1 2184 35
 3766 01fc 454A     		ldr	r2, .L201+16
 3767 01fe 5A63     		str	r2, [r3, #52]
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 3768              		.loc 1 2187 7
 3769 0200 FB68     		ldr	r3, [r7, #12]
 3770 0202 9B6D     		ldr	r3, [r3, #88]
 3771              		.loc 1 2187 35
 3772 0204 0022     		movs	r2, #0
 3773 0206 9A63     		str	r2, [r3, #56]
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
 3774              		.loc 1 2190 17
 3775 0208 FB68     		ldr	r3, [r7, #12]
 3776 020a 986D     		ldr	r0, [r3, #88]
 3777              		.loc 1 2190 63
 3778 020c FB68     		ldr	r3, [r7, #12]
 3779 020e 1B68     		ldr	r3, [r3]
 3780              		.loc 1 2190 58
 3781 0210 0C33     		adds	r3, r3, #12
 3782              		.loc 1 2190 17
 3783 0212 1946     		mov	r1, r3
 3784              		.loc 1 2190 93
 3785 0214 FB68     		ldr	r3, [r7, #12]
 3786 0216 1B6C     		ldr	r3, [r3, #64]
 3787              		.loc 1 2190 17
 3788 0218 1A46     		mov	r2, r3
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->RxXferCount))
 3789              		.loc 1 2191 38
 3790 021a FB68     		ldr	r3, [r7, #12]
 3791 021c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 3792 0220 9BB2     		uxth	r3, r3
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->RxXferCount))
 3793              		.loc 1 2190 17
 3794 0222 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3795 0226 0346     		mov	r3, r0
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->RxXferCount))
 3796              		.loc 1 2190 6
 3797 0228 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrdcdEL.s 			page 106


 3798 022a 0CD0     		beq	.L198
2192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Update SPI error code */
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 3799              		.loc 1 2194 5
 3800 022c FB68     		ldr	r3, [r7, #12]
 3801 022e 1B6E     		ldr	r3, [r3, #96]
 3802 0230 43F01002 		orr	r2, r3, #16
 3803 0234 FB68     		ldr	r3, [r7, #12]
 3804 0236 1A66     		str	r2, [r3, #96]
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3805              		.loc 1 2195 15
 3806 0238 0123     		movs	r3, #1
 3807 023a FB75     		strb	r3, [r7, #23]
2196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 3808              		.loc 1 2197 17
 3809 023c FB68     		ldr	r3, [r7, #12]
 3810 023e 0122     		movs	r2, #1
 3811 0240 83F85D20 		strb	r2, [r3, #93]
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 3812              		.loc 1 2198 5
 3813 0244 54E0     		b	.L187
 3814              	.L198:
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable Rx DMA Request */
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3815              		.loc 1 2202 3
 3816 0246 FB68     		ldr	r3, [r7, #12]
 3817 0248 1B68     		ldr	r3, [r3]
 3818 024a 5A68     		ldr	r2, [r3, #4]
 3819 024c FB68     		ldr	r3, [r7, #12]
 3820 024e 1B68     		ldr	r3, [r3]
 3821 0250 42F00102 		orr	r2, r2, #1
 3822 0254 5A60     		str	r2, [r3, #4]
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
 3823              		.loc 1 2206 7
 3824 0256 FB68     		ldr	r3, [r7, #12]
 3825 0258 5B6D     		ldr	r3, [r3, #84]
 3826              		.loc 1 2206 38
 3827 025a 0022     		movs	r2, #0
 3828 025c 1A63     		str	r2, [r3, #48]
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3829              		.loc 1 2207 7
 3830 025e FB68     		ldr	r3, [r7, #12]
 3831 0260 5B6D     		ldr	r3, [r3, #84]
 3832              		.loc 1 2207 38
 3833 0262 0022     		movs	r2, #0
 3834 0264 DA62     		str	r2, [r3, #44]
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3835              		.loc 1 2208 7
 3836 0266 FB68     		ldr	r3, [r7, #12]
 3837 0268 5B6D     		ldr	r3, [r3, #84]
ARM GAS  /tmp/ccrdcdEL.s 			page 107


 3838              		.loc 1 2208 38
 3839 026a 0022     		movs	r2, #0
 3840 026c 5A63     		str	r2, [r3, #52]
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3841              		.loc 1 2209 7
 3842 026e FB68     		ldr	r3, [r7, #12]
 3843 0270 5B6D     		ldr	r3, [r3, #84]
 3844              		.loc 1 2209 38
 3845 0272 0022     		movs	r2, #0
 3846 0274 9A63     		str	r2, [r3, #56]
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
 3847              		.loc 1 2212 17
 3848 0276 FB68     		ldr	r3, [r7, #12]
 3849 0278 586D     		ldr	r0, [r3, #84]
 3850              		.loc 1 2212 62
 3851 027a FB68     		ldr	r3, [r7, #12]
 3852 027c 9B6B     		ldr	r3, [r3, #56]
 3853              		.loc 1 2212 17
 3854 027e 1946     		mov	r1, r3
 3855              		.loc 1 2212 91
 3856 0280 FB68     		ldr	r3, [r7, #12]
 3857 0282 1B68     		ldr	r3, [r3]
 3858              		.loc 1 2212 86
 3859 0284 0C33     		adds	r3, r3, #12
 3860              		.loc 1 2212 17
 3861 0286 1A46     		mov	r2, r3
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->TxXferCount))
 3862              		.loc 1 2213 38
 3863 0288 FB68     		ldr	r3, [r7, #12]
 3864 028a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3865 028c 9BB2     		uxth	r3, r3
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->TxXferCount))
 3866              		.loc 1 2212 17
 3867 028e FFF7FEFF 		bl	HAL_DMA_Start_IT
 3868 0292 0346     		mov	r3, r0
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                  hspi->TxXferCount))
 3869              		.loc 1 2212 6
 3870 0294 002B     		cmp	r3, #0
 3871 0296 0CD0     		beq	.L199
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Update SPI error code */
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 3872              		.loc 1 2216 5
 3873 0298 FB68     		ldr	r3, [r7, #12]
 3874 029a 1B6E     		ldr	r3, [r3, #96]
 3875 029c 43F01002 		orr	r2, r3, #16
 3876 02a0 FB68     		ldr	r3, [r7, #12]
 3877 02a2 1A66     		str	r2, [r3, #96]
2217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3878              		.loc 1 2217 15
 3879 02a4 0123     		movs	r3, #1
 3880 02a6 FB75     		strb	r3, [r7, #23]
2218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 3881              		.loc 1 2219 17
ARM GAS  /tmp/ccrdcdEL.s 			page 108


 3882 02a8 FB68     		ldr	r3, [r7, #12]
 3883 02aa 0122     		movs	r2, #1
 3884 02ac 83F85D20 		strb	r2, [r3, #93]
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     goto error;
 3885              		.loc 1 2220 5
 3886 02b0 1EE0     		b	.L187
 3887              	.L199:
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 3888              		.loc 1 2224 12
 3889 02b2 FB68     		ldr	r3, [r7, #12]
 3890 02b4 1B68     		ldr	r3, [r3]
 3891              		.loc 1 2224 22
 3892 02b6 1B68     		ldr	r3, [r3]
 3893              		.loc 1 2224 28
 3894 02b8 03F04003 		and	r3, r3, #64
 3895              		.loc 1 2224 6
 3896 02bc 402B     		cmp	r3, #64
 3897 02be 07D0     		beq	.L200
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Enable SPI peripheral */
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 3898              		.loc 1 2227 5
 3899 02c0 FB68     		ldr	r3, [r7, #12]
 3900 02c2 1B68     		ldr	r3, [r3]
 3901 02c4 1A68     		ldr	r2, [r3]
 3902 02c6 FB68     		ldr	r3, [r7, #12]
 3903 02c8 1B68     		ldr	r3, [r3]
 3904 02ca 42F04002 		orr	r2, r2, #64
 3905 02ce 1A60     		str	r2, [r3]
 3906              	.L200:
2228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 3907              		.loc 1 2230 3
 3908 02d0 FB68     		ldr	r3, [r7, #12]
 3909 02d2 1B68     		ldr	r3, [r3]
 3910 02d4 5A68     		ldr	r2, [r3, #4]
 3911 02d6 FB68     		ldr	r3, [r7, #12]
 3912 02d8 1B68     		ldr	r3, [r3]
 3913 02da 42F02002 		orr	r2, r2, #32
 3914 02de 5A60     		str	r2, [r3, #4]
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable Tx DMA Request */
2233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 3915              		.loc 1 2233 3
 3916 02e0 FB68     		ldr	r3, [r7, #12]
 3917 02e2 1B68     		ldr	r3, [r3]
 3918 02e4 5A68     		ldr	r2, [r3, #4]
 3919 02e6 FB68     		ldr	r3, [r7, #12]
 3920 02e8 1B68     		ldr	r3, [r3]
 3921 02ea 42F00202 		orr	r2, r2, #2
 3922 02ee 5A60     		str	r2, [r3, #4]
 3923              	.L187:
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 109


2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** error :
2236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Unlocked */
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3924              		.loc 1 2237 3
 3925 02f0 FB68     		ldr	r3, [r7, #12]
 3926 02f2 0022     		movs	r2, #0
 3927 02f4 83F85C20 		strb	r2, [r3, #92]
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 3928              		.loc 1 2238 10
 3929 02f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3930              	.L184:
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 3931              		.loc 1 2239 1
 3932 02fa 1846     		mov	r0, r3
 3933 02fc 1837     		adds	r7, r7, #24
 3934              	.LCFI67:
 3935              		.cfi_def_cfa_offset 8
 3936 02fe BD46     		mov	sp, r7
 3937              	.LCFI68:
 3938              		.cfi_def_cfa_register 13
 3939              		@ sp needed
 3940 0300 80BD     		pop	{r7, pc}
 3941              	.L202:
 3942 0302 00BF     		.align	2
 3943              	.L201:
 3944 0304 00000000 		.word	SPI_DMAHalfReceiveCplt
 3945 0308 00000000 		.word	SPI_DMAReceiveCplt
 3946 030c 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3947 0310 00000000 		.word	SPI_DMATransmitReceiveCplt
 3948 0314 00000000 		.word	SPI_DMAError
 3949              		.cfi_endproc
 3950              	.LFE337:
 3952              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3953              		.align	1
 3954              		.global	HAL_SPI_Abort
 3955              		.syntax unified
 3956              		.thumb
 3957              		.thumb_func
 3958              		.fpu fpv4-sp-d16
 3960              	HAL_SPI_Abort:
 3961              	.LFB338:
2240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi SPI handle.
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         This procedure performs following operations :
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - Set handle State to READY
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
ARM GAS  /tmp/ccrdcdEL.s 			page 110


 3962              		.loc 1 2255 1
 3963              		.cfi_startproc
 3964              		@ args = 0, pretend = 0, frame = 32
 3965              		@ frame_needed = 1, uses_anonymous_args = 0
 3966 0000 80B5     		push	{r7, lr}
 3967              	.LCFI69:
 3968              		.cfi_def_cfa_offset 8
 3969              		.cfi_offset 7, -8
 3970              		.cfi_offset 14, -4
 3971 0002 8AB0     		sub	sp, sp, #40
 3972              	.LCFI70:
 3973              		.cfi_def_cfa_offset 48
 3974 0004 02AF     		add	r7, sp, #8
 3975              	.LCFI71:
 3976              		.cfi_def_cfa 7, 40
 3977 0006 7860     		str	r0, [r7, #4]
2256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __IO uint32_t count;
2258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __IO uint32_t resetcount;
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Initialized local variable  */
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   errorcode = HAL_OK;
 3978              		.loc 1 2261 13
 3979 0008 0023     		movs	r3, #0
 3980 000a FB77     		strb	r3, [r7, #31]
2262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 3981              		.loc 1 2262 61
 3982 000c 884B     		ldr	r3, .L222
 3983 000e 1B68     		ldr	r3, [r3]
 3984 0010 884A     		ldr	r2, .L222+4
 3985 0012 A2FB0323 		umull	r2, r3, r2, r3
 3986 0016 5B0A     		lsrs	r3, r3, #9
 3987              		.loc 1 2262 36
 3988 0018 6422     		movs	r2, #100
 3989 001a 02FB03F3 		mul	r3, r2, r3
 3990              		.loc 1 2262 14
 3991 001e 7B61     		str	r3, [r7, #20]
2263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   count = resetcount;
 3992              		.loc 1 2263 9
 3993 0020 7B69     		ldr	r3, [r7, #20]
 3994 0022 BB61     		str	r3, [r7, #24]
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3995              		.loc 1 2266 3
 3996 0024 7B68     		ldr	r3, [r7, #4]
 3997 0026 1B68     		ldr	r3, [r3]
 3998 0028 5A68     		ldr	r2, [r3, #4]
 3999 002a 7B68     		ldr	r3, [r7, #4]
 4000 002c 1B68     		ldr	r3, [r3]
 4001 002e 22F02002 		bic	r2, r2, #32
 4002 0032 5A60     		str	r2, [r3, #4]
2267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 4003              		.loc 1 2269 7
 4004 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 111


 4005 0036 1B68     		ldr	r3, [r3]
 4006 0038 5B68     		ldr	r3, [r3, #4]
 4007 003a 03F08003 		and	r3, r3, #128
 4008              		.loc 1 2269 6
 4009 003e 802B     		cmp	r3, #128
 4010 0040 17D1     		bne	.L204
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 4011              		.loc 1 2271 17
 4012 0042 7B68     		ldr	r3, [r7, #4]
 4013 0044 7C4A     		ldr	r2, .L222+8
 4014 0046 1A65     		str	r2, [r3, #80]
 4015              	.L207:
2272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     do
2274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (count == 0U)
 4016              		.loc 1 2275 17
 4017 0048 BB69     		ldr	r3, [r7, #24]
 4018              		.loc 1 2275 10
 4019 004a 002B     		cmp	r3, #0
 4020 004c 06D1     		bne	.L205
2276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 4021              		.loc 1 2277 9
 4022 004e 7B68     		ldr	r3, [r7, #4]
 4023 0050 1B6E     		ldr	r3, [r3, #96]
 4024 0052 43F04002 		orr	r2, r3, #64
 4025 0056 7B68     		ldr	r3, [r7, #4]
 4026 0058 1A66     		str	r2, [r3, #96]
2278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 4027              		.loc 1 2278 9
 4028 005a 08E0     		b	.L206
 4029              	.L205:
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       count--;
 4030              		.loc 1 2280 12
 4031 005c BB69     		ldr	r3, [r7, #24]
 4032 005e 013B     		subs	r3, r3, #1
 4033 0060 BB61     		str	r3, [r7, #24]
2281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4034              		.loc 1 2281 18
 4035 0062 7B68     		ldr	r3, [r7, #4]
 4036 0064 93F85D30 		ldrb	r3, [r3, #93]
 4037 0068 DBB2     		uxtb	r3, r3
 4038              		.loc 1 2281 5
 4039 006a 072B     		cmp	r3, #7
 4040 006c ECD1     		bne	.L207
 4041              	.L206:
2282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Reset Timeout Counter */
2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     count = resetcount;
 4042              		.loc 1 2283 11
 4043 006e 7B69     		ldr	r3, [r7, #20]
 4044 0070 BB61     		str	r3, [r7, #24]
 4045              	.L204:
2284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 112


2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 4046              		.loc 1 2286 7
 4047 0072 7B68     		ldr	r3, [r7, #4]
 4048 0074 1B68     		ldr	r3, [r3]
 4049 0076 5B68     		ldr	r3, [r3, #4]
 4050 0078 03F04003 		and	r3, r3, #64
 4051              		.loc 1 2286 6
 4052 007c 402B     		cmp	r3, #64
 4053 007e 17D1     		bne	.L208
2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 4054              		.loc 1 2288 17
 4055 0080 7B68     		ldr	r3, [r7, #4]
 4056 0082 6E4A     		ldr	r2, .L222+12
 4057 0084 DA64     		str	r2, [r3, #76]
 4058              	.L211:
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     do
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (count == 0U)
 4059              		.loc 1 2292 17
 4060 0086 BB69     		ldr	r3, [r7, #24]
 4061              		.loc 1 2292 10
 4062 0088 002B     		cmp	r3, #0
 4063 008a 06D1     		bne	.L209
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 4064              		.loc 1 2294 9
 4065 008c 7B68     		ldr	r3, [r7, #4]
 4066 008e 1B6E     		ldr	r3, [r3, #96]
 4067 0090 43F04002 		orr	r2, r3, #64
 4068 0094 7B68     		ldr	r3, [r7, #4]
 4069 0096 1A66     		str	r2, [r3, #96]
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 4070              		.loc 1 2295 9
 4071 0098 08E0     		b	.L210
 4072              	.L209:
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       count--;
 4073              		.loc 1 2297 12
 4074 009a BB69     		ldr	r3, [r7, #24]
 4075 009c 013B     		subs	r3, r3, #1
 4076 009e BB61     		str	r3, [r7, #24]
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4077              		.loc 1 2298 18
 4078 00a0 7B68     		ldr	r3, [r7, #4]
 4079 00a2 93F85D30 		ldrb	r3, [r3, #93]
 4080 00a6 DBB2     		uxtb	r3, r3
 4081              		.loc 1 2298 5
 4082 00a8 072B     		cmp	r3, #7
 4083 00aa ECD1     		bne	.L211
 4084              	.L210:
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Reset Timeout Counter */
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     count = resetcount;
 4085              		.loc 1 2300 11
 4086 00ac 7B69     		ldr	r3, [r7, #20]
 4087 00ae BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccrdcdEL.s 			page 113


 4088              	.L208:
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 4089              		.loc 1 2304 7
 4090 00b0 7B68     		ldr	r3, [r7, #4]
 4091 00b2 1B68     		ldr	r3, [r3]
 4092 00b4 5B68     		ldr	r3, [r3, #4]
 4093 00b6 03F00203 		and	r3, r3, #2
 4094              		.loc 1 2304 6
 4095 00ba 022B     		cmp	r3, #2
 4096 00bc 41D1     		bne	.L212
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 4097              		.loc 1 2307 13
 4098 00be 7B68     		ldr	r3, [r7, #4]
 4099 00c0 5B6D     		ldr	r3, [r3, #84]
 4100              		.loc 1 2307 8
 4101 00c2 002B     		cmp	r3, #0
 4102 00c4 3DD0     		beq	.L212
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 4103              		.loc 1 2311 11
 4104 00c6 7B68     		ldr	r3, [r7, #4]
 4105 00c8 5B6D     		ldr	r3, [r3, #84]
 4106              		.loc 1 2311 39
 4107 00ca 0022     		movs	r2, #0
 4108 00cc 9A63     		str	r2, [r3, #56]
2312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
 4109              		.loc 1 2314 11
 4110 00ce 7B68     		ldr	r3, [r7, #4]
 4111 00d0 5B6D     		ldr	r3, [r3, #84]
 4112 00d2 1846     		mov	r0, r3
 4113 00d4 FFF7FEFF 		bl	HAL_DMA_Abort
 4114 00d8 0346     		mov	r3, r0
 4115              		.loc 1 2314 10
 4116 00da 002B     		cmp	r3, #0
 4117 00dc 02D0     		beq	.L213
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4118              		.loc 1 2316 25
 4119 00de 7B68     		ldr	r3, [r7, #4]
 4120 00e0 4022     		movs	r2, #64
 4121 00e2 1A66     		str	r2, [r3, #96]
 4122              	.L213:
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Disable Tx DMA Request */
2320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
 4123              		.loc 1 2320 7
 4124 00e4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 114


 4125 00e6 1B68     		ldr	r3, [r3]
 4126 00e8 5A68     		ldr	r2, [r3, #4]
 4127 00ea 7B68     		ldr	r3, [r7, #4]
 4128 00ec 1B68     		ldr	r3, [r3]
 4129 00ee 22F00202 		bic	r2, r2, #2
 4130 00f2 5A60     		str	r2, [r3, #4]
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 4131              		.loc 1 2322 11
 4132 00f4 FFF7FEFF 		bl	HAL_GetTick
 4133 00f8 0346     		mov	r3, r0
 4134 00fa 1A46     		mov	r2, r3
 4135 00fc 6421     		movs	r1, #100
 4136 00fe 7868     		ldr	r0, [r7, #4]
 4137 0100 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4138 0104 0346     		mov	r3, r0
 4139              		.loc 1 2322 10
 4140 0106 002B     		cmp	r3, #0
 4141 0108 02D0     		beq	.L214
2323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4142              		.loc 1 2324 25
 4143 010a 7B68     		ldr	r3, [r7, #4]
 4144 010c 4022     		movs	r2, #64
 4145 010e 1A66     		str	r2, [r3, #96]
 4146              	.L214:
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Disable SPI Peripheral */
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 4147              		.loc 1 2328 7
 4148 0110 7B68     		ldr	r3, [r7, #4]
 4149 0112 1B68     		ldr	r3, [r3]
 4150 0114 1A68     		ldr	r2, [r3]
 4151 0116 7B68     		ldr	r3, [r7, #4]
 4152 0118 1B68     		ldr	r3, [r3]
 4153 011a 22F04002 		bic	r2, r2, #64
 4154 011e 1A60     		str	r2, [r3]
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
 4155              		.loc 1 2331 11
 4156 0120 FFF7FEFF 		bl	HAL_GetTick
 4157 0124 0346     		mov	r3, r0
 4158 0126 0093     		str	r3, [sp]
 4159 0128 6423     		movs	r3, #100
 4160 012a 0022     		movs	r2, #0
 4161 012c 4FF4C061 		mov	r1, #1536
 4162 0130 7868     		ldr	r0, [r7, #4]
 4163 0132 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 4164 0136 0346     		mov	r3, r0
 4165              		.loc 1 2331 10
 4166 0138 002B     		cmp	r3, #0
 4167 013a 02D0     		beq	.L212
2332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4168              		.loc 1 2333 25
ARM GAS  /tmp/ccrdcdEL.s 			page 115


 4169 013c 7B68     		ldr	r3, [r7, #4]
 4170 013e 4022     		movs	r2, #64
 4171 0140 1A66     		str	r2, [r3, #96]
 4172              	.L212:
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 4173              		.loc 1 2339 7
 4174 0142 7B68     		ldr	r3, [r7, #4]
 4175 0144 1B68     		ldr	r3, [r3]
 4176 0146 5B68     		ldr	r3, [r3, #4]
 4177 0148 03F00103 		and	r3, r3, #1
 4178              		.loc 1 2339 6
 4179 014c 012B     		cmp	r3, #1
 4180 014e 43D1     		bne	.L215
2340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 4181              		.loc 1 2342 13
 4182 0150 7B68     		ldr	r3, [r7, #4]
 4183 0152 9B6D     		ldr	r3, [r3, #88]
 4184              		.loc 1 2342 8
 4185 0154 002B     		cmp	r3, #0
 4186 0156 3FD0     		beq	.L215
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 4187              		.loc 1 2346 11
 4188 0158 7B68     		ldr	r3, [r7, #4]
 4189 015a 9B6D     		ldr	r3, [r3, #88]
 4190              		.loc 1 2346 39
 4191 015c 0022     		movs	r2, #0
 4192 015e 9A63     		str	r2, [r3, #56]
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
 4193              		.loc 1 2349 11
 4194 0160 7B68     		ldr	r3, [r7, #4]
 4195 0162 9B6D     		ldr	r3, [r3, #88]
 4196 0164 1846     		mov	r0, r3
 4197 0166 FFF7FEFF 		bl	HAL_DMA_Abort
 4198 016a 0346     		mov	r3, r0
 4199              		.loc 1 2349 10
 4200 016c 002B     		cmp	r3, #0
 4201 016e 02D0     		beq	.L216
2350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4202              		.loc 1 2351 25
 4203 0170 7B68     		ldr	r3, [r7, #4]
 4204 0172 4022     		movs	r2, #64
 4205 0174 1A66     		str	r2, [r3, #96]
 4206              	.L216:
2352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
ARM GAS  /tmp/ccrdcdEL.s 			page 116


2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Disable peripheral */
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 4207              		.loc 1 2355 7
 4208 0176 7B68     		ldr	r3, [r7, #4]
 4209 0178 1B68     		ldr	r3, [r3]
 4210 017a 1A68     		ldr	r2, [r3]
 4211 017c 7B68     		ldr	r3, [r7, #4]
 4212 017e 1B68     		ldr	r3, [r3]
 4213 0180 22F04002 		bic	r2, r2, #64
 4214 0184 1A60     		str	r2, [r3]
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Control the BSY flag */
2358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick
 4215              		.loc 1 2358 11
 4216 0186 FFF7FEFF 		bl	HAL_GetTick
 4217 018a 0346     		mov	r3, r0
 4218 018c 0093     		str	r3, [sp]
 4219 018e 6423     		movs	r3, #100
 4220 0190 0022     		movs	r2, #0
 4221 0192 8021     		movs	r1, #128
 4222 0194 7868     		ldr	r0, [r7, #4]
 4223 0196 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 4224 019a 0346     		mov	r3, r0
 4225              		.loc 1 2358 10
 4226 019c 002B     		cmp	r3, #0
 4227 019e 02D0     		beq	.L217
2359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4228              		.loc 1 2360 25
 4229 01a0 7B68     		ldr	r3, [r7, #4]
 4230 01a2 4022     		movs	r2, #64
 4231 01a4 1A66     		str	r2, [r3, #96]
 4232              	.L217:
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
 4233              		.loc 1 2364 11
 4234 01a6 FFF7FEFF 		bl	HAL_GetTick
 4235 01aa 0346     		mov	r3, r0
 4236 01ac 0093     		str	r3, [sp]
 4237 01ae 6423     		movs	r3, #100
 4238 01b0 0022     		movs	r2, #0
 4239 01b2 4FF4C061 		mov	r1, #1536
 4240 01b6 7868     		ldr	r0, [r7, #4]
 4241 01b8 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 4242 01bc 0346     		mov	r3, r0
 4243              		.loc 1 2364 10
 4244 01be 002B     		cmp	r3, #0
 4245 01c0 02D0     		beq	.L218
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4246              		.loc 1 2366 25
 4247 01c2 7B68     		ldr	r3, [r7, #4]
 4248 01c4 4022     		movs	r2, #64
 4249 01c6 1A66     		str	r2, [r3, #96]
ARM GAS  /tmp/ccrdcdEL.s 			page 117


 4250              	.L218:
2367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Disable Rx DMA Request */
2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
 4251              		.loc 1 2370 7
 4252 01c8 7B68     		ldr	r3, [r7, #4]
 4253 01ca 1B68     		ldr	r3, [r3]
 4254 01cc 5A68     		ldr	r2, [r3, #4]
 4255 01ce 7B68     		ldr	r3, [r7, #4]
 4256 01d0 1B68     		ldr	r3, [r3]
 4257 01d2 22F00102 		bic	r2, r2, #1
 4258 01d6 5A60     		str	r2, [r3, #4]
 4259              	.L215:
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 4260              		.loc 1 2374 21
 4261 01d8 7B68     		ldr	r3, [r7, #4]
 4262 01da 0022     		movs	r2, #0
 4263 01dc A3F84620 		strh	r2, [r3, #70]	@ movhi
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4264              		.loc 1 2375 21
 4265 01e0 7B68     		ldr	r3, [r7, #4]
 4266 01e2 0022     		movs	r2, #0
 4267 01e4 DA87     		strh	r2, [r3, #62]	@ movhi
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check error during Abort procedure */
2378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 4268              		.loc 1 2378 11
 4269 01e6 7B68     		ldr	r3, [r7, #4]
 4270 01e8 1B6E     		ldr	r3, [r3, #96]
 4271              		.loc 1 2378 6
 4272 01ea 402B     		cmp	r3, #64
 4273 01ec 02D1     		bne	.L219
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     errorcode = HAL_ERROR;
 4274              		.loc 1 2381 15
 4275 01ee 0123     		movs	r3, #1
 4276 01f0 FB77     		strb	r3, [r7, #31]
 4277 01f2 02E0     		b	.L220
 4278              	.L219:
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Reset errorCode */
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 4279              		.loc 1 2386 21
 4280 01f4 7B68     		ldr	r3, [r7, #4]
 4281 01f6 0022     		movs	r2, #0
 4282 01f8 1A66     		str	r2, [r3, #96]
 4283              	.L220:
 4284              	.LBB3:
2387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 118


2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4285              		.loc 1 2390 3
 4286 01fa 0023     		movs	r3, #0
 4287 01fc 3B61     		str	r3, [r7, #16]
 4288 01fe 7B68     		ldr	r3, [r7, #4]
 4289 0200 1B68     		ldr	r3, [r3]
 4290 0202 DB68     		ldr	r3, [r3, #12]
 4291 0204 3B61     		str	r3, [r7, #16]
 4292 0206 7B68     		ldr	r3, [r7, #4]
 4293 0208 1B68     		ldr	r3, [r3]
 4294 020a 9B68     		ldr	r3, [r3, #8]
 4295 020c 3B61     		str	r3, [r7, #16]
 4296 020e 3B69     		ldr	r3, [r7, #16]
 4297              	.LBE3:
 4298              	.LBB4:
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 4299              		.loc 1 2391 3
 4300 0210 0023     		movs	r3, #0
 4301 0212 FB60     		str	r3, [r7, #12]
 4302 0214 7B68     		ldr	r3, [r7, #4]
 4303 0216 1B68     		ldr	r3, [r3]
 4304 0218 9B68     		ldr	r3, [r3, #8]
 4305 021a FB60     		str	r3, [r7, #12]
 4306 021c FB68     		ldr	r3, [r7, #12]
 4307              	.LBE4:
2392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Restore hspi->state to ready */
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4308              		.loc 1 2394 15
 4309 021e 7B68     		ldr	r3, [r7, #4]
 4310 0220 0122     		movs	r2, #1
 4311 0222 83F85D20 		strb	r2, [r3, #93]
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 4312              		.loc 1 2396 10
 4313 0226 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 4314              		.loc 1 2397 1
 4315 0228 1846     		mov	r0, r3
 4316 022a 2037     		adds	r7, r7, #32
 4317              	.LCFI72:
 4318              		.cfi_def_cfa_offset 8
 4319 022c BD46     		mov	sp, r7
 4320              	.LCFI73:
 4321              		.cfi_def_cfa_register 13
 4322              		@ sp needed
 4323 022e 80BD     		pop	{r7, pc}
 4324              	.L223:
 4325              		.align	2
 4326              	.L222:
 4327 0230 00000000 		.word	SystemCoreClock
 4328 0234 F1197605 		.word	91625969
 4329 0238 00000000 		.word	SPI_AbortTx_ISR
 4330 023c 00000000 		.word	SPI_AbortRx_ISR
 4331              		.cfi_endproc
 4332              	.LFE338:
ARM GAS  /tmp/ccrdcdEL.s 			page 119


 4334              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 4335              		.align	1
 4336              		.global	HAL_SPI_Abort_IT
 4337              		.syntax unified
 4338              		.thumb
 4339              		.thumb_func
 4340              		.fpu fpv4-sp-d16
 4342              	HAL_SPI_Abort_IT:
 4343              	.LFB339:
2398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi SPI handle.
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         This procedure performs following operations :
2405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - Set handle State to READY
2409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 4344              		.loc 1 2415 1
 4345              		.cfi_startproc
 4346              		@ args = 0, pretend = 0, frame = 32
 4347              		@ frame_needed = 1, uses_anonymous_args = 0
 4348 0000 80B5     		push	{r7, lr}
 4349              	.LCFI74:
 4350              		.cfi_def_cfa_offset 8
 4351              		.cfi_offset 7, -8
 4352              		.cfi_offset 14, -4
 4353 0002 88B0     		sub	sp, sp, #32
 4354              	.LCFI75:
 4355              		.cfi_def_cfa_offset 40
 4356 0004 00AF     		add	r7, sp, #0
 4357              	.LCFI76:
 4358              		.cfi_def_cfa_register 7
 4359 0006 7860     		str	r0, [r7, #4]
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t abortcplt ;
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __IO uint32_t count;
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __IO uint32_t resetcount;
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Initialized local variable  */
2422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   errorcode = HAL_OK;
 4360              		.loc 1 2422 13
 4361 0008 0023     		movs	r3, #0
 4362 000a FB77     		strb	r3, [r7, #31]
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   abortcplt = 1U;
 4363              		.loc 1 2423 13
 4364 000c 0123     		movs	r3, #1
 4365 000e BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccrdcdEL.s 			page 120


2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 4366              		.loc 1 2424 61
 4367 0010 724B     		ldr	r3, .L245
 4368 0012 1B68     		ldr	r3, [r3]
 4369 0014 724A     		ldr	r2, .L245+4
 4370 0016 A2FB0323 		umull	r2, r3, r2, r3
 4371 001a 5B0A     		lsrs	r3, r3, #9
 4372              		.loc 1 2424 36
 4373 001c 6422     		movs	r2, #100
 4374 001e 02FB03F3 		mul	r3, r2, r3
 4375              		.loc 1 2424 14
 4376 0022 3B61     		str	r3, [r7, #16]
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   count = resetcount;
 4377              		.loc 1 2425 9
 4378 0024 3B69     		ldr	r3, [r7, #16]
 4379 0026 7B61     		str	r3, [r7, #20]
2426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 4380              		.loc 1 2428 3
 4381 0028 7B68     		ldr	r3, [r7, #4]
 4382 002a 1B68     		ldr	r3, [r3]
 4383 002c 5A68     		ldr	r2, [r3, #4]
 4384 002e 7B68     		ldr	r3, [r7, #4]
 4385 0030 1B68     		ldr	r3, [r3]
 4386 0032 22F02002 		bic	r2, r2, #32
 4387 0036 5A60     		str	r2, [r3, #4]
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 4388              		.loc 1 2431 7
 4389 0038 7B68     		ldr	r3, [r7, #4]
 4390 003a 1B68     		ldr	r3, [r3]
 4391 003c 5B68     		ldr	r3, [r3, #4]
 4392 003e 03F08003 		and	r3, r3, #128
 4393              		.loc 1 2431 6
 4394 0042 802B     		cmp	r3, #128
 4395 0044 17D1     		bne	.L225
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 4396              		.loc 1 2433 17
 4397 0046 7B68     		ldr	r3, [r7, #4]
 4398 0048 664A     		ldr	r2, .L245+8
 4399 004a 1A65     		str	r2, [r3, #80]
 4400              	.L228:
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     do
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (count == 0U)
 4401              		.loc 1 2437 17
 4402 004c 7B69     		ldr	r3, [r7, #20]
 4403              		.loc 1 2437 10
 4404 004e 002B     		cmp	r3, #0
 4405 0050 06D1     		bne	.L226
2438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 4406              		.loc 1 2439 9
ARM GAS  /tmp/ccrdcdEL.s 			page 121


 4407 0052 7B68     		ldr	r3, [r7, #4]
 4408 0054 1B6E     		ldr	r3, [r3, #96]
 4409 0056 43F04002 		orr	r2, r3, #64
 4410 005a 7B68     		ldr	r3, [r7, #4]
 4411 005c 1A66     		str	r2, [r3, #96]
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 4412              		.loc 1 2440 9
 4413 005e 08E0     		b	.L227
 4414              	.L226:
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       count--;
 4415              		.loc 1 2442 12
 4416 0060 7B69     		ldr	r3, [r7, #20]
 4417 0062 013B     		subs	r3, r3, #1
 4418 0064 7B61     		str	r3, [r7, #20]
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4419              		.loc 1 2443 18
 4420 0066 7B68     		ldr	r3, [r7, #4]
 4421 0068 93F85D30 		ldrb	r3, [r3, #93]
 4422 006c DBB2     		uxtb	r3, r3
 4423              		.loc 1 2443 5
 4424 006e 072B     		cmp	r3, #7
 4425 0070 ECD1     		bne	.L228
 4426              	.L227:
2444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Reset Timeout Counter */
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     count = resetcount;
 4427              		.loc 1 2445 11
 4428 0072 3B69     		ldr	r3, [r7, #16]
 4429 0074 7B61     		str	r3, [r7, #20]
 4430              	.L225:
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 4431              		.loc 1 2448 7
 4432 0076 7B68     		ldr	r3, [r7, #4]
 4433 0078 1B68     		ldr	r3, [r3]
 4434 007a 5B68     		ldr	r3, [r3, #4]
 4435 007c 03F04003 		and	r3, r3, #64
 4436              		.loc 1 2448 6
 4437 0080 402B     		cmp	r3, #64
 4438 0082 17D1     		bne	.L229
2449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 4439              		.loc 1 2450 17
 4440 0084 7B68     		ldr	r3, [r7, #4]
 4441 0086 584A     		ldr	r2, .L245+12
 4442 0088 DA64     		str	r2, [r3, #76]
 4443              	.L232:
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     do
2453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (count == 0U)
 4444              		.loc 1 2454 17
 4445 008a 7B69     		ldr	r3, [r7, #20]
 4446              		.loc 1 2454 10
 4447 008c 002B     		cmp	r3, #0
 4448 008e 06D1     		bne	.L230
ARM GAS  /tmp/ccrdcdEL.s 			page 122


2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 4449              		.loc 1 2456 9
 4450 0090 7B68     		ldr	r3, [r7, #4]
 4451 0092 1B6E     		ldr	r3, [r3, #96]
 4452 0094 43F04002 		orr	r2, r3, #64
 4453 0098 7B68     		ldr	r3, [r7, #4]
 4454 009a 1A66     		str	r2, [r3, #96]
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 4455              		.loc 1 2457 9
 4456 009c 08E0     		b	.L231
 4457              	.L230:
2458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       count--;
 4458              		.loc 1 2459 12
 4459 009e 7B69     		ldr	r3, [r7, #20]
 4460 00a0 013B     		subs	r3, r3, #1
 4461 00a2 7B61     		str	r3, [r7, #20]
2460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4462              		.loc 1 2460 18
 4463 00a4 7B68     		ldr	r3, [r7, #4]
 4464 00a6 93F85D30 		ldrb	r3, [r3, #93]
 4465 00aa DBB2     		uxtb	r3, r3
 4466              		.loc 1 2460 5
 4467 00ac 072B     		cmp	r3, #7
 4468 00ae ECD1     		bne	.L232
 4469              	.L231:
2461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Reset Timeout Counter */
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     count = resetcount;
 4470              		.loc 1 2462 11
 4471 00b0 3B69     		ldr	r3, [r7, #16]
 4472 00b2 7B61     		str	r3, [r7, #20]
 4473              	.L229:
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      before any call to DMA Abort functions */
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 4474              		.loc 1 2468 11
 4475 00b4 7B68     		ldr	r3, [r7, #4]
 4476 00b6 5B6D     		ldr	r3, [r3, #84]
 4477              		.loc 1 2468 6
 4478 00b8 002B     		cmp	r3, #0
 4479 00ba 0FD0     		beq	.L233
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Otherwise, set it to NULL */
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 4480              		.loc 1 2472 9
 4481 00bc 7B68     		ldr	r3, [r7, #4]
 4482 00be 1B68     		ldr	r3, [r3]
 4483 00c0 5B68     		ldr	r3, [r3, #4]
 4484 00c2 03F00203 		and	r3, r3, #2
 4485              		.loc 1 2472 8
 4486 00c6 022B     		cmp	r3, #2
 4487 00c8 04D1     		bne	.L234
ARM GAS  /tmp/ccrdcdEL.s 			page 123


2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
 4488              		.loc 1 2474 11
 4489 00ca 7B68     		ldr	r3, [r7, #4]
 4490 00cc 5B6D     		ldr	r3, [r3, #84]
 4491              		.loc 1 2474 39
 4492 00ce 474A     		ldr	r2, .L245+16
 4493 00d0 9A63     		str	r2, [r3, #56]
 4494 00d2 03E0     		b	.L233
 4495              	.L234:
2475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
2477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 4496              		.loc 1 2478 11
 4497 00d4 7B68     		ldr	r3, [r7, #4]
 4498 00d6 5B6D     		ldr	r3, [r3, #84]
 4499              		.loc 1 2478 39
 4500 00d8 0022     		movs	r2, #0
 4501 00da 9A63     		str	r2, [r3, #56]
 4502              	.L233:
2479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 4503              		.loc 1 2482 11
 4504 00dc 7B68     		ldr	r3, [r7, #4]
 4505 00de 9B6D     		ldr	r3, [r3, #88]
 4506              		.loc 1 2482 6
 4507 00e0 002B     		cmp	r3, #0
 4508 00e2 0FD0     		beq	.L235
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        Otherwise, set it to NULL */
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 4509              		.loc 1 2486 9
 4510 00e4 7B68     		ldr	r3, [r7, #4]
 4511 00e6 1B68     		ldr	r3, [r3]
 4512 00e8 5B68     		ldr	r3, [r3, #4]
 4513 00ea 03F00103 		and	r3, r3, #1
 4514              		.loc 1 2486 8
 4515 00ee 012B     		cmp	r3, #1
 4516 00f0 04D1     		bne	.L236
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
 4517              		.loc 1 2488 11
 4518 00f2 7B68     		ldr	r3, [r7, #4]
 4519 00f4 9B6D     		ldr	r3, [r3, #88]
 4520              		.loc 1 2488 39
 4521 00f6 3E4A     		ldr	r2, .L245+20
 4522 00f8 9A63     		str	r2, [r3, #56]
 4523 00fa 03E0     		b	.L235
 4524              	.L236:
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccrdcdEL.s 			page 124


 4525              		.loc 1 2492 11
 4526 00fc 7B68     		ldr	r3, [r7, #4]
 4527 00fe 9B6D     		ldr	r3, [r3, #88]
 4528              		.loc 1 2492 39
 4529 0100 0022     		movs	r2, #0
 4530 0102 9A63     		str	r2, [r3, #56]
 4531              	.L235:
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 4532              		.loc 1 2497 7
 4533 0104 7B68     		ldr	r3, [r7, #4]
 4534 0106 1B68     		ldr	r3, [r3]
 4535 0108 5B68     		ldr	r3, [r3, #4]
 4536 010a 03F00203 		and	r3, r3, #2
 4537              		.loc 1 2497 6
 4538 010e 022B     		cmp	r3, #2
 4539 0110 15D1     		bne	.L237
2498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 4540              		.loc 1 2500 13
 4541 0112 7B68     		ldr	r3, [r7, #4]
 4542 0114 5B6D     		ldr	r3, [r3, #84]
 4543              		.loc 1 2500 8
 4544 0116 002B     		cmp	r3, #0
 4545 0118 11D0     		beq	.L237
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
 4546              		.loc 1 2503 11
 4547 011a 7B68     		ldr	r3, [r7, #4]
 4548 011c 5B6D     		ldr	r3, [r3, #84]
 4549 011e 1846     		mov	r0, r3
 4550 0120 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4551 0124 0346     		mov	r3, r0
 4552              		.loc 1 2503 10
 4553 0126 002B     		cmp	r3, #0
 4554 0128 07D0     		beq	.L238
2504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
 4555              		.loc 1 2505 13
 4556 012a 7B68     		ldr	r3, [r7, #4]
 4557 012c 5B6D     		ldr	r3, [r3, #84]
 4558              		.loc 1 2505 41
 4559 012e 0022     		movs	r2, #0
 4560 0130 9A63     		str	r2, [r3, #56]
2506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4561              		.loc 1 2506 25
 4562 0132 7B68     		ldr	r3, [r7, #4]
 4563 0134 4022     		movs	r2, #64
 4564 0136 1A66     		str	r2, [r3, #96]
 4565 0138 01E0     		b	.L237
 4566              	.L238:
2507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
ARM GAS  /tmp/ccrdcdEL.s 			page 125


2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
2509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         abortcplt = 0U;
 4567              		.loc 1 2510 19
 4568 013a 0023     		movs	r3, #0
 4569 013c BB61     		str	r3, [r7, #24]
 4570              	.L237:
2511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 4571              		.loc 1 2515 7
 4572 013e 7B68     		ldr	r3, [r7, #4]
 4573 0140 1B68     		ldr	r3, [r3]
 4574 0142 5B68     		ldr	r3, [r3, #4]
 4575 0144 03F00103 		and	r3, r3, #1
 4576              		.loc 1 2515 6
 4577 0148 012B     		cmp	r3, #1
 4578 014a 15D1     		bne	.L239
2516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 4579              		.loc 1 2518 13
 4580 014c 7B68     		ldr	r3, [r7, #4]
 4581 014e 9B6D     		ldr	r3, [r3, #88]
 4582              		.loc 1 2518 8
 4583 0150 002B     		cmp	r3, #0
 4584 0152 11D0     		beq	.L239
2519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
 4585              		.loc 1 2521 11
 4586 0154 7B68     		ldr	r3, [r7, #4]
 4587 0156 9B6D     		ldr	r3, [r3, #88]
 4588 0158 1846     		mov	r0, r3
 4589 015a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4590 015e 0346     		mov	r3, r0
 4591              		.loc 1 2521 10
 4592 0160 002B     		cmp	r3, #0
 4593 0162 07D0     		beq	.L240
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
 4594              		.loc 1 2523 13
 4595 0164 7B68     		ldr	r3, [r7, #4]
 4596 0166 9B6D     		ldr	r3, [r3, #88]
 4597              		.loc 1 2523 41
 4598 0168 0022     		movs	r2, #0
 4599 016a 9A63     		str	r2, [r3, #56]
2524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 4600              		.loc 1 2524 25
 4601 016c 7B68     		ldr	r3, [r7, #4]
 4602 016e 4022     		movs	r2, #64
 4603 0170 1A66     		str	r2, [r3, #96]
 4604 0172 01E0     		b	.L239
 4605              	.L240:
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
ARM GAS  /tmp/ccrdcdEL.s 			page 126


2526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
2527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         abortcplt = 0U;
 4606              		.loc 1 2528 19
 4607 0174 0023     		movs	r3, #0
 4608 0176 BB61     		str	r3, [r7, #24]
 4609              	.L239:
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (abortcplt == 1U)
 4610              		.loc 1 2533 6
 4611 0178 BB69     		ldr	r3, [r7, #24]
 4612 017a 012B     		cmp	r3, #1
 4613 017c 29D1     		bne	.L241
2534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4614              		.loc 1 2536 23
 4615 017e 7B68     		ldr	r3, [r7, #4]
 4616 0180 0022     		movs	r2, #0
 4617 0182 A3F84620 		strh	r2, [r3, #70]	@ movhi
2537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 4618              		.loc 1 2537 23
 4619 0186 7B68     		ldr	r3, [r7, #4]
 4620 0188 0022     		movs	r2, #0
 4621 018a DA87     		strh	r2, [r3, #62]	@ movhi
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check error during Abort procedure */
2540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 4622              		.loc 1 2540 13
 4623 018c 7B68     		ldr	r3, [r7, #4]
 4624 018e 1B6E     		ldr	r3, [r3, #96]
 4625              		.loc 1 2540 8
 4626 0190 402B     		cmp	r3, #64
 4627 0192 02D1     		bne	.L242
2541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4628              		.loc 1 2543 17
 4629 0194 0123     		movs	r3, #1
 4630 0196 FB77     		strb	r3, [r7, #31]
 4631 0198 02E0     		b	.L243
 4632              	.L242:
2544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Reset errorCode */
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 4633              		.loc 1 2548 23
 4634 019a 7B68     		ldr	r3, [r7, #4]
 4635 019c 0022     		movs	r2, #0
 4636 019e 1A66     		str	r2, [r3, #96]
 4637              	.L243:
 4638              	.LBB5:
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
ARM GAS  /tmp/ccrdcdEL.s 			page 127


2550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4639              		.loc 1 2552 5
 4640 01a0 0023     		movs	r3, #0
 4641 01a2 FB60     		str	r3, [r7, #12]
 4642 01a4 7B68     		ldr	r3, [r7, #4]
 4643 01a6 1B68     		ldr	r3, [r3]
 4644 01a8 DB68     		ldr	r3, [r3, #12]
 4645 01aa FB60     		str	r3, [r7, #12]
 4646 01ac 7B68     		ldr	r3, [r7, #4]
 4647 01ae 1B68     		ldr	r3, [r3]
 4648 01b0 9B68     		ldr	r3, [r3, #8]
 4649 01b2 FB60     		str	r3, [r7, #12]
 4650 01b4 FB68     		ldr	r3, [r7, #12]
 4651              	.LBE5:
 4652              	.LBB6:
2553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 4653              		.loc 1 2553 5
 4654 01b6 0023     		movs	r3, #0
 4655 01b8 BB60     		str	r3, [r7, #8]
 4656 01ba 7B68     		ldr	r3, [r7, #4]
 4657 01bc 1B68     		ldr	r3, [r3]
 4658 01be 9B68     		ldr	r3, [r3, #8]
 4659 01c0 BB60     		str	r3, [r7, #8]
 4660 01c2 BB68     		ldr	r3, [r7, #8]
 4661              	.LBE6:
2554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4662              		.loc 1 2556 17
 4663 01c4 7B68     		ldr	r3, [r7, #4]
 4664 01c6 0122     		movs	r2, #1
 4665 01c8 83F85D20 		strb	r2, [r3, #93]
2557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
2562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
 4666              		.loc 1 2562 5
 4667 01cc 7868     		ldr	r0, [r7, #4]
 4668 01ce FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4669              	.L241:
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 4670              		.loc 1 2566 10
 4671 01d2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
2567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 4672              		.loc 1 2567 1
 4673 01d4 1846     		mov	r0, r3
 4674 01d6 2037     		adds	r7, r7, #32
 4675              	.LCFI77:
 4676              		.cfi_def_cfa_offset 8
 4677 01d8 BD46     		mov	sp, r7
ARM GAS  /tmp/ccrdcdEL.s 			page 128


 4678              	.LCFI78:
 4679              		.cfi_def_cfa_register 13
 4680              		@ sp needed
 4681 01da 80BD     		pop	{r7, pc}
 4682              	.L246:
 4683              		.align	2
 4684              	.L245:
 4685 01dc 00000000 		.word	SystemCoreClock
 4686 01e0 F1197605 		.word	91625969
 4687 01e4 00000000 		.word	SPI_AbortTx_ISR
 4688 01e8 00000000 		.word	SPI_AbortRx_ISR
 4689 01ec 00000000 		.word	SPI_DMATxAbortCallback
 4690 01f0 00000000 		.word	SPI_DMARxAbortCallback
 4691              		.cfi_endproc
 4692              	.LFE339:
 4694              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4695              		.align	1
 4696              		.global	HAL_SPI_DMAPause
 4697              		.syntax unified
 4698              		.thumb
 4699              		.thumb_func
 4700              		.fpu fpv4-sp-d16
 4702              	HAL_SPI_DMAPause:
 4703              	.LFB340:
2568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
2574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 4704              		.loc 1 2576 1
 4705              		.cfi_startproc
 4706              		@ args = 0, pretend = 0, frame = 8
 4707              		@ frame_needed = 1, uses_anonymous_args = 0
 4708              		@ link register save eliminated.
 4709 0000 80B4     		push	{r7}
 4710              	.LCFI79:
 4711              		.cfi_def_cfa_offset 4
 4712              		.cfi_offset 7, -4
 4713 0002 83B0     		sub	sp, sp, #12
 4714              	.LCFI80:
 4715              		.cfi_def_cfa_offset 16
 4716 0004 00AF     		add	r7, sp, #0
 4717              	.LCFI81:
 4718              		.cfi_def_cfa_register 7
 4719 0006 7860     		str	r0, [r7, #4]
2577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4720              		.loc 1 2578 3
 4721 0008 7B68     		ldr	r3, [r7, #4]
 4722 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 4723 000e 012B     		cmp	r3, #1
 4724 0010 01D1     		bne	.L248
 4725              		.loc 1 2578 3 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccrdcdEL.s 			page 129


 4726 0012 0223     		movs	r3, #2
 4727 0014 10E0     		b	.L249
 4728              	.L248:
 4729              		.loc 1 2578 3 discriminator 2
 4730 0016 7B68     		ldr	r3, [r7, #4]
 4731 0018 0122     		movs	r2, #1
 4732 001a 83F85C20 		strb	r2, [r3, #92]
2579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4733              		.loc 1 2581 3 is_stmt 1 discriminator 2
 4734 001e 7B68     		ldr	r3, [r7, #4]
 4735 0020 1B68     		ldr	r3, [r3]
 4736 0022 5A68     		ldr	r2, [r3, #4]
 4737 0024 7B68     		ldr	r3, [r7, #4]
 4738 0026 1B68     		ldr	r3, [r3]
 4739 0028 22F00302 		bic	r2, r2, #3
 4740 002c 5A60     		str	r2, [r3, #4]
2582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Unlocked */
2584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4741              		.loc 1 2584 3 discriminator 2
 4742 002e 7B68     		ldr	r3, [r7, #4]
 4743 0030 0022     		movs	r2, #0
 4744 0032 83F85C20 		strb	r2, [r3, #92]
2585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return HAL_OK;
 4745              		.loc 1 2586 10 discriminator 2
 4746 0036 0023     		movs	r3, #0
 4747              	.L249:
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 4748              		.loc 1 2587 1
 4749 0038 1846     		mov	r0, r3
 4750 003a 0C37     		adds	r7, r7, #12
 4751              	.LCFI82:
 4752              		.cfi_def_cfa_offset 4
 4753 003c BD46     		mov	sp, r7
 4754              	.LCFI83:
 4755              		.cfi_def_cfa_register 13
 4756              		@ sp needed
 4757 003e 5DF8047B 		ldr	r7, [sp], #4
 4758              	.LCFI84:
 4759              		.cfi_restore 7
 4760              		.cfi_def_cfa_offset 0
 4761 0042 7047     		bx	lr
 4762              		.cfi_endproc
 4763              	.LFE340:
 4765              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4766              		.align	1
 4767              		.global	HAL_SPI_DMAResume
 4768              		.syntax unified
 4769              		.thumb
 4770              		.thumb_func
 4771              		.fpu fpv4-sp-d16
 4773              	HAL_SPI_DMAResume:
 4774              	.LFB341:
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 130


2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
2594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 4775              		.loc 1 2596 1
 4776              		.cfi_startproc
 4777              		@ args = 0, pretend = 0, frame = 8
 4778              		@ frame_needed = 1, uses_anonymous_args = 0
 4779              		@ link register save eliminated.
 4780 0000 80B4     		push	{r7}
 4781              	.LCFI85:
 4782              		.cfi_def_cfa_offset 4
 4783              		.cfi_offset 7, -4
 4784 0002 83B0     		sub	sp, sp, #12
 4785              	.LCFI86:
 4786              		.cfi_def_cfa_offset 16
 4787 0004 00AF     		add	r7, sp, #0
 4788              	.LCFI87:
 4789              		.cfi_def_cfa_register 7
 4790 0006 7860     		str	r0, [r7, #4]
2597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Locked */
2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4791              		.loc 1 2598 3
 4792 0008 7B68     		ldr	r3, [r7, #4]
 4793 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 4794 000e 012B     		cmp	r3, #1
 4795 0010 01D1     		bne	.L251
 4796              		.loc 1 2598 3 is_stmt 0 discriminator 1
 4797 0012 0223     		movs	r3, #2
 4798 0014 10E0     		b	.L252
 4799              	.L251:
 4800              		.loc 1 2598 3 discriminator 2
 4801 0016 7B68     		ldr	r3, [r7, #4]
 4802 0018 0122     		movs	r2, #1
 4803 001a 83F85C20 		strb	r2, [r3, #92]
2599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4804              		.loc 1 2601 3 is_stmt 1 discriminator 2
 4805 001e 7B68     		ldr	r3, [r7, #4]
 4806 0020 1B68     		ldr	r3, [r3]
 4807 0022 5A68     		ldr	r2, [r3, #4]
 4808 0024 7B68     		ldr	r3, [r7, #4]
 4809 0026 1B68     		ldr	r3, [r3]
 4810 0028 42F00302 		orr	r2, r2, #3
 4811 002c 5A60     		str	r2, [r3, #4]
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Process Unlocked */
2604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4812              		.loc 1 2604 3 discriminator 2
 4813 002e 7B68     		ldr	r3, [r7, #4]
 4814 0030 0022     		movs	r2, #0
 4815 0032 83F85C20 		strb	r2, [r3, #92]
ARM GAS  /tmp/ccrdcdEL.s 			page 131


2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return HAL_OK;
 4816              		.loc 1 2606 10 discriminator 2
 4817 0036 0023     		movs	r3, #0
 4818              	.L252:
2607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 4819              		.loc 1 2607 1
 4820 0038 1846     		mov	r0, r3
 4821 003a 0C37     		adds	r7, r7, #12
 4822              	.LCFI88:
 4823              		.cfi_def_cfa_offset 4
 4824 003c BD46     		mov	sp, r7
 4825              	.LCFI89:
 4826              		.cfi_def_cfa_register 13
 4827              		@ sp needed
 4828 003e 5DF8047B 		ldr	r7, [sp], #4
 4829              	.LCFI90:
 4830              		.cfi_restore 7
 4831              		.cfi_def_cfa_offset 0
 4832 0042 7047     		bx	lr
 4833              		.cfi_endproc
 4834              	.LFE341:
 4836              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4837              		.align	1
 4838              		.global	HAL_SPI_DMAStop
 4839              		.syntax unified
 4840              		.thumb
 4841              		.thumb_func
 4842              		.fpu fpv4-sp-d16
 4844              	HAL_SPI_DMAStop:
 4845              	.LFB342:
2608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 4846              		.loc 1 2616 1
 4847              		.cfi_startproc
 4848              		@ args = 0, pretend = 0, frame = 16
 4849              		@ frame_needed = 1, uses_anonymous_args = 0
 4850 0000 80B5     		push	{r7, lr}
 4851              	.LCFI91:
 4852              		.cfi_def_cfa_offset 8
 4853              		.cfi_offset 7, -8
 4854              		.cfi_offset 14, -4
 4855 0002 84B0     		sub	sp, sp, #16
 4856              	.LCFI92:
 4857              		.cfi_def_cfa_offset 24
 4858 0004 00AF     		add	r7, sp, #0
 4859              	.LCFI93:
 4860              		.cfi_def_cfa_register 7
 4861 0006 7860     		str	r0, [r7, #4]
2617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
ARM GAS  /tmp/ccrdcdEL.s 			page 132


 4862              		.loc 1 2617 21
 4863 0008 0023     		movs	r3, #0
 4864 000a FB73     		strb	r3, [r7, #15]
2618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      */
2623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 4865              		.loc 1 2625 11
 4866 000c 7B68     		ldr	r3, [r7, #4]
 4867 000e 5B6D     		ldr	r3, [r3, #84]
 4868              		.loc 1 2625 6
 4869 0010 002B     		cmp	r3, #0
 4870 0012 0FD0     		beq	.L254
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
 4871              		.loc 1 2627 19
 4872 0014 7B68     		ldr	r3, [r7, #4]
 4873 0016 5B6D     		ldr	r3, [r3, #84]
 4874 0018 1846     		mov	r0, r3
 4875 001a FFF7FEFF 		bl	HAL_DMA_Abort
 4876 001e 0346     		mov	r3, r0
 4877              		.loc 1 2627 8
 4878 0020 002B     		cmp	r3, #0
 4879 0022 07D0     		beq	.L254
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 4880              		.loc 1 2629 7
 4881 0024 7B68     		ldr	r3, [r7, #4]
 4882 0026 1B6E     		ldr	r3, [r3, #96]
 4883 0028 43F01002 		orr	r2, r3, #16
 4884 002c 7B68     		ldr	r3, [r7, #4]
 4885 002e 1A66     		str	r2, [r3, #96]
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4886              		.loc 1 2630 17
 4887 0030 0123     		movs	r3, #1
 4888 0032 FB73     		strb	r3, [r7, #15]
 4889              	.L254:
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 4890              		.loc 1 2634 11
 4891 0034 7B68     		ldr	r3, [r7, #4]
 4892 0036 9B6D     		ldr	r3, [r3, #88]
 4893              		.loc 1 2634 6
 4894 0038 002B     		cmp	r3, #0
 4895 003a 0FD0     		beq	.L255
2635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
 4896              		.loc 1 2636 19
 4897 003c 7B68     		ldr	r3, [r7, #4]
 4898 003e 9B6D     		ldr	r3, [r3, #88]
 4899 0040 1846     		mov	r0, r3
ARM GAS  /tmp/ccrdcdEL.s 			page 133


 4900 0042 FFF7FEFF 		bl	HAL_DMA_Abort
 4901 0046 0346     		mov	r3, r0
 4902              		.loc 1 2636 8
 4903 0048 002B     		cmp	r3, #0
 4904 004a 07D0     		beq	.L255
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 4905              		.loc 1 2638 7
 4906 004c 7B68     		ldr	r3, [r7, #4]
 4907 004e 1B6E     		ldr	r3, [r3, #96]
 4908 0050 43F01002 		orr	r2, r3, #16
 4909 0054 7B68     		ldr	r3, [r7, #4]
 4910 0056 1A66     		str	r2, [r3, #96]
2639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4911              		.loc 1 2639 17
 4912 0058 0123     		movs	r3, #1
 4913 005a FB73     		strb	r3, [r7, #15]
 4914              	.L255:
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4915              		.loc 1 2644 3
 4916 005c 7B68     		ldr	r3, [r7, #4]
 4917 005e 1B68     		ldr	r3, [r3]
 4918 0060 5A68     		ldr	r2, [r3, #4]
 4919 0062 7B68     		ldr	r3, [r7, #4]
 4920 0064 1B68     		ldr	r3, [r3]
 4921 0066 22F00302 		bic	r2, r2, #3
 4922 006a 5A60     		str	r2, [r3, #4]
2645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4923              		.loc 1 2645 15
 4924 006c 7B68     		ldr	r3, [r7, #4]
 4925 006e 0122     		movs	r2, #1
 4926 0070 83F85D20 		strb	r2, [r3, #93]
2646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return errorcode;
 4927              		.loc 1 2646 10
 4928 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 4929              		.loc 1 2647 1
 4930 0076 1846     		mov	r0, r3
 4931 0078 1037     		adds	r7, r7, #16
 4932              	.LCFI94:
 4933              		.cfi_def_cfa_offset 8
 4934 007a BD46     		mov	sp, r7
 4935              	.LCFI95:
 4936              		.cfi_def_cfa_register 13
 4937              		@ sp needed
 4938 007c 80BD     		pop	{r7, pc}
 4939              		.cfi_endproc
 4940              	.LFE342:
 4942              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4943              		.align	1
 4944              		.global	HAL_SPI_IRQHandler
 4945              		.syntax unified
 4946              		.thumb
ARM GAS  /tmp/ccrdcdEL.s 			page 134


 4947              		.thumb_func
 4948              		.fpu fpv4-sp-d16
 4950              	HAL_SPI_IRQHandler:
 4951              	.LFB343:
2648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 4952              		.loc 1 2656 1
 4953              		.cfi_startproc
 4954              		@ args = 0, pretend = 0, frame = 32
 4955              		@ frame_needed = 1, uses_anonymous_args = 0
 4956 0000 80B5     		push	{r7, lr}
 4957              	.LCFI96:
 4958              		.cfi_def_cfa_offset 8
 4959              		.cfi_offset 7, -8
 4960              		.cfi_offset 14, -4
 4961 0002 88B0     		sub	sp, sp, #32
 4962              	.LCFI97:
 4963              		.cfi_def_cfa_offset 40
 4964 0004 00AF     		add	r7, sp, #0
 4965              	.LCFI98:
 4966              		.cfi_def_cfa_register 7
 4967 0006 7860     		str	r0, [r7, #4]
2657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4968              		.loc 1 2657 27
 4969 0008 7B68     		ldr	r3, [r7, #4]
 4970 000a 1B68     		ldr	r3, [r3]
 4971              		.loc 1 2657 12
 4972 000c 5B68     		ldr	r3, [r3, #4]
 4973 000e FB61     		str	r3, [r7, #28]
2658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4974              		.loc 1 2658 27
 4975 0010 7B68     		ldr	r3, [r7, #4]
 4976 0012 1B68     		ldr	r3, [r3]
 4977              		.loc 1 2658 12
 4978 0014 9B68     		ldr	r3, [r3, #8]
 4979 0016 BB61     		str	r3, [r7, #24]
2659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 4980              		.loc 1 2661 8
 4981 0018 BB69     		ldr	r3, [r7, #24]
 4982 001a 9B09     		lsrs	r3, r3, #6
 4983 001c 03F00103 		and	r3, r3, #1
 4984              		.loc 1 2661 6
 4985 0020 002B     		cmp	r3, #0
 4986 0022 0FD1     		bne	.L258
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4987              		.loc 1 2662 8 discriminator 1
 4988 0024 BB69     		ldr	r3, [r7, #24]
 4989 0026 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccrdcdEL.s 			page 135


2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4990              		.loc 1 2661 55 discriminator 1
 4991 002a 002B     		cmp	r3, #0
 4992 002c 0AD0     		beq	.L258
 4993              		.loc 1 2662 60
 4994 002e FB69     		ldr	r3, [r7, #28]
 4995 0030 9B09     		lsrs	r3, r3, #6
 4996 0032 03F00103 		and	r3, r3, #1
 4997              		.loc 1 2662 56
 4998 0036 002B     		cmp	r3, #0
 4999 0038 04D0     		beq	.L258
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxISR(hspi);
 5000              		.loc 1 2664 9
 5001 003a 7B68     		ldr	r3, [r7, #4]
 5002 003c DB6C     		ldr	r3, [r3, #76]
 5003              		.loc 1 2664 5
 5004 003e 7868     		ldr	r0, [r7, #4]
 5005 0040 9847     		blx	r3
 5006              	.LVL0:
2665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return;
 5007              		.loc 1 2665 5
 5008 0042 D8E0     		b	.L257
 5009              	.L258:
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
 5010              		.loc 1 2669 8
 5011 0044 BB69     		ldr	r3, [r7, #24]
 5012 0046 5B08     		lsrs	r3, r3, #1
 5013 0048 03F00103 		and	r3, r3, #1
 5014              		.loc 1 2669 6
 5015 004c 002B     		cmp	r3, #0
 5016 004e 0AD0     		beq	.L260
 5017              		.loc 1 2669 59 discriminator 1
 5018 0050 FB69     		ldr	r3, [r7, #28]
 5019 0052 DB09     		lsrs	r3, r3, #7
 5020 0054 03F00103 		and	r3, r3, #1
 5021              		.loc 1 2669 55 discriminator 1
 5022 0058 002B     		cmp	r3, #0
 5023 005a 04D0     		beq	.L260
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxISR(hspi);
 5024              		.loc 1 2671 9
 5025 005c 7B68     		ldr	r3, [r7, #4]
 5026 005e 1B6D     		ldr	r3, [r3, #80]
 5027              		.loc 1 2671 5
 5028 0060 7868     		ldr	r0, [r7, #4]
 5029 0062 9847     		blx	r3
 5030              	.LVL1:
2672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return;
 5031              		.loc 1 2672 5
 5032 0064 C7E0     		b	.L257
 5033              	.L260:
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 136


2675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
 5034              		.loc 1 2676 9
 5035 0066 BB69     		ldr	r3, [r7, #24]
 5036 0068 5B09     		lsrs	r3, r3, #5
 5037 006a 03F00103 		and	r3, r3, #1
 5038              		.loc 1 2676 6
 5039 006e 002B     		cmp	r3, #0
 5040 0070 0CD1     		bne	.L261
 5041              		.loc 1 2676 61 discriminator 1
 5042 0072 BB69     		ldr	r3, [r7, #24]
 5043 0074 9B09     		lsrs	r3, r3, #6
 5044 0076 03F00103 		and	r3, r3, #1
 5045              		.loc 1 2676 57 discriminator 1
 5046 007a 002B     		cmp	r3, #0
 5047 007c 06D1     		bne	.L261
2677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
 5048              		.loc 1 2677 12
 5049 007e BB69     		ldr	r3, [r7, #24]
 5050 0080 1B0A     		lsrs	r3, r3, #8
 5051 0082 03F00103 		and	r3, r3, #1
 5052              		.loc 1 2677 8
 5053 0086 002B     		cmp	r3, #0
 5054 0088 00F0B580 		beq	.L257
 5055              	.L261:
 5056              		.loc 1 2677 64 discriminator 1
 5057 008c FB69     		ldr	r3, [r7, #28]
 5058 008e 5B09     		lsrs	r3, r3, #5
 5059 0090 03F00103 		and	r3, r3, #1
 5060              		.loc 1 2677 60 discriminator 1
 5061 0094 002B     		cmp	r3, #0
 5062 0096 00F0AE80 		beq	.L257
2678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 5063              		.loc 1 2680 9
 5064 009a BB69     		ldr	r3, [r7, #24]
 5065 009c 9B09     		lsrs	r3, r3, #6
 5066 009e 03F00103 		and	r3, r3, #1
 5067              		.loc 1 2680 8
 5068 00a2 002B     		cmp	r3, #0
 5069 00a4 23D0     		beq	.L262
2681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 5070              		.loc 1 2682 15
 5071 00a6 7B68     		ldr	r3, [r7, #4]
 5072 00a8 93F85D30 		ldrb	r3, [r3, #93]
 5073 00ac DBB2     		uxtb	r3, r3
 5074              		.loc 1 2682 10
 5075 00ae 032B     		cmp	r3, #3
 5076 00b0 11D0     		beq	.L263
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 5077              		.loc 1 2684 9
 5078 00b2 7B68     		ldr	r3, [r7, #4]
 5079 00b4 1B6E     		ldr	r3, [r3, #96]
 5080 00b6 43F00402 		orr	r2, r3, #4
ARM GAS  /tmp/ccrdcdEL.s 			page 137


 5081 00ba 7B68     		ldr	r3, [r7, #4]
 5082 00bc 1A66     		str	r2, [r3, #96]
 5083              	.LBB7:
2685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5084              		.loc 1 2685 9
 5085 00be 0023     		movs	r3, #0
 5086 00c0 7B61     		str	r3, [r7, #20]
 5087 00c2 7B68     		ldr	r3, [r7, #4]
 5088 00c4 1B68     		ldr	r3, [r3]
 5089 00c6 DB68     		ldr	r3, [r3, #12]
 5090 00c8 7B61     		str	r3, [r7, #20]
 5091 00ca 7B68     		ldr	r3, [r7, #4]
 5092 00cc 1B68     		ldr	r3, [r3]
 5093 00ce 9B68     		ldr	r3, [r3, #8]
 5094 00d0 7B61     		str	r3, [r7, #20]
 5095 00d2 7B69     		ldr	r3, [r7, #20]
 5096              	.LBE7:
 5097 00d4 0BE0     		b	.L262
 5098              	.L263:
 5099              	.LBB8:
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
2688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5100              		.loc 1 2689 9
 5101 00d6 0023     		movs	r3, #0
 5102 00d8 3B61     		str	r3, [r7, #16]
 5103 00da 7B68     		ldr	r3, [r7, #4]
 5104 00dc 1B68     		ldr	r3, [r3]
 5105 00de DB68     		ldr	r3, [r3, #12]
 5106 00e0 3B61     		str	r3, [r7, #16]
 5107 00e2 7B68     		ldr	r3, [r7, #4]
 5108 00e4 1B68     		ldr	r3, [r3]
 5109 00e6 9B68     		ldr	r3, [r3, #8]
 5110 00e8 3B61     		str	r3, [r7, #16]
 5111 00ea 3B69     		ldr	r3, [r7, #16]
 5112              	.LBE8:
2690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         return;
 5113              		.loc 1 2690 9
 5114 00ec 83E0     		b	.L257
 5115              	.L262:
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 5116              		.loc 1 2695 9
 5117 00ee BB69     		ldr	r3, [r7, #24]
 5118 00f0 5B09     		lsrs	r3, r3, #5
 5119 00f2 03F00103 		and	r3, r3, #1
 5120              		.loc 1 2695 8
 5121 00f6 002B     		cmp	r3, #0
 5122 00f8 14D0     		beq	.L264
2696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 5123              		.loc 1 2697 7
 5124 00fa 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 138


 5125 00fc 1B6E     		ldr	r3, [r3, #96]
 5126 00fe 43F00102 		orr	r2, r3, #1
 5127 0102 7B68     		ldr	r3, [r7, #4]
 5128 0104 1A66     		str	r2, [r3, #96]
 5129              	.LBB9:
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 5130              		.loc 1 2698 7
 5131 0106 0023     		movs	r3, #0
 5132 0108 FB60     		str	r3, [r7, #12]
 5133 010a 7B68     		ldr	r3, [r7, #4]
 5134 010c 1B68     		ldr	r3, [r3]
 5135 010e 9B68     		ldr	r3, [r3, #8]
 5136 0110 FB60     		str	r3, [r7, #12]
 5137 0112 7B68     		ldr	r3, [r7, #4]
 5138 0114 1B68     		ldr	r3, [r3]
 5139 0116 1A68     		ldr	r2, [r3]
 5140 0118 7B68     		ldr	r3, [r7, #4]
 5141 011a 1B68     		ldr	r3, [r3]
 5142 011c 22F04002 		bic	r2, r2, #64
 5143 0120 1A60     		str	r2, [r3]
 5144 0122 FB68     		ldr	r3, [r7, #12]
 5145              	.L264:
 5146              	.LBE9:
2699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 5147              		.loc 1 2702 9
 5148 0124 BB69     		ldr	r3, [r7, #24]
 5149 0126 1B0A     		lsrs	r3, r3, #8
 5150 0128 03F00103 		and	r3, r3, #1
 5151              		.loc 1 2702 8
 5152 012c 002B     		cmp	r3, #0
 5153 012e 0CD0     		beq	.L265
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 5154              		.loc 1 2704 7
 5155 0130 7B68     		ldr	r3, [r7, #4]
 5156 0132 1B6E     		ldr	r3, [r3, #96]
 5157 0134 43F00802 		orr	r2, r3, #8
 5158 0138 7B68     		ldr	r3, [r7, #4]
 5159 013a 1A66     		str	r2, [r3, #96]
 5160              	.LBB10:
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 5161              		.loc 1 2705 7
 5162 013c 0023     		movs	r3, #0
 5163 013e BB60     		str	r3, [r7, #8]
 5164 0140 7B68     		ldr	r3, [r7, #4]
 5165 0142 1B68     		ldr	r3, [r3]
 5166 0144 9B68     		ldr	r3, [r3, #8]
 5167 0146 BB60     		str	r3, [r7, #8]
 5168 0148 BB68     		ldr	r3, [r7, #8]
 5169              	.L265:
 5170              	.LBE10:
2706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
ARM GAS  /tmp/ccrdcdEL.s 			page 139


 5171              		.loc 1 2708 13
 5172 014a 7B68     		ldr	r3, [r7, #4]
 5173 014c 1B6E     		ldr	r3, [r3, #96]
 5174              		.loc 1 2708 8
 5175 014e 002B     		cmp	r3, #0
 5176 0150 50D0     		beq	.L271
2709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Disable all interrupts */
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 5177              		.loc 1 2711 7
 5178 0152 7B68     		ldr	r3, [r7, #4]
 5179 0154 1B68     		ldr	r3, [r3]
 5180 0156 5A68     		ldr	r2, [r3, #4]
 5181 0158 7B68     		ldr	r3, [r7, #4]
 5182 015a 1B68     		ldr	r3, [r3]
 5183 015c 22F0E002 		bic	r2, r2, #224
 5184 0160 5A60     		str	r2, [r3, #4]
2712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 5185              		.loc 1 2713 19
 5186 0162 7B68     		ldr	r3, [r7, #4]
 5187 0164 0122     		movs	r2, #1
 5188 0166 83F85D20 		strb	r2, [r3, #93]
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
 5189              		.loc 1 2715 12
 5190 016a FB69     		ldr	r3, [r7, #28]
 5191 016c 03F00203 		and	r3, r3, #2
 5192              		.loc 1 2715 10
 5193 0170 002B     		cmp	r3, #0
 5194 0172 04D1     		bne	.L267
 5195              		.loc 1 2715 59 discriminator 1
 5196 0174 FB69     		ldr	r3, [r7, #28]
 5197 0176 03F00103 		and	r3, r3, #1
 5198              		.loc 1 2715 55 discriminator 1
 5199 017a 002B     		cmp	r3, #0
 5200 017c 34D0     		beq	.L268
 5201              	.L267:
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 5202              		.loc 1 2717 9
 5203 017e 7B68     		ldr	r3, [r7, #4]
 5204 0180 1B68     		ldr	r3, [r3]
 5205 0182 5A68     		ldr	r2, [r3, #4]
 5206 0184 7B68     		ldr	r3, [r7, #4]
 5207 0186 1B68     		ldr	r3, [r3]
 5208 0188 22F00302 		bic	r2, r2, #3
 5209 018c 5A60     		str	r2, [r3, #4]
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
 5210              		.loc 1 2720 17
 5211 018e 7B68     		ldr	r3, [r7, #4]
 5212 0190 9B6D     		ldr	r3, [r3, #88]
 5213              		.loc 1 2720 12
 5214 0192 002B     		cmp	r3, #0
 5215 0194 11D0     		beq	.L269
ARM GAS  /tmp/ccrdcdEL.s 			page 140


2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 5216              		.loc 1 2724 15
 5217 0196 7B68     		ldr	r3, [r7, #4]
 5218 0198 9B6D     		ldr	r3, [r3, #88]
 5219              		.loc 1 2724 43
 5220 019a 184A     		ldr	r2, .L273
 5221 019c 9A63     		str	r2, [r3, #56]
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 5222              		.loc 1 2725 25
 5223 019e 7B68     		ldr	r3, [r7, #4]
 5224 01a0 9B6D     		ldr	r3, [r3, #88]
 5225 01a2 1846     		mov	r0, r3
 5226 01a4 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5227 01a8 0346     		mov	r3, r0
 5228              		.loc 1 2725 14
 5229 01aa 002B     		cmp	r3, #0
 5230 01ac 05D0     		beq	.L269
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           {
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 5231              		.loc 1 2727 13
 5232 01ae 7B68     		ldr	r3, [r7, #4]
 5233 01b0 1B6E     		ldr	r3, [r3, #96]
 5234 01b2 43F04002 		orr	r2, r3, #64
 5235 01b6 7B68     		ldr	r3, [r7, #4]
 5236 01b8 1A66     		str	r2, [r3, #96]
 5237              	.L269:
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           }
2729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
2730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
 5238              		.loc 1 2731 17
 5239 01ba 7B68     		ldr	r3, [r7, #4]
 5240 01bc 5B6D     		ldr	r3, [r3, #84]
 5241              		.loc 1 2731 12
 5242 01be 002B     		cmp	r3, #0
 5243 01c0 16D0     		beq	.L272
2732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 5244              		.loc 1 2735 15
 5245 01c2 7B68     		ldr	r3, [r7, #4]
 5246 01c4 5B6D     		ldr	r3, [r3, #84]
 5247              		.loc 1 2735 43
 5248 01c6 0D4A     		ldr	r2, .L273
 5249 01c8 9A63     		str	r2, [r3, #56]
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 5250              		.loc 1 2736 25
 5251 01ca 7B68     		ldr	r3, [r7, #4]
 5252 01cc 5B6D     		ldr	r3, [r3, #84]
 5253 01ce 1846     		mov	r0, r3
 5254 01d0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5255 01d4 0346     		mov	r3, r0
 5256              		.loc 1 2736 14
ARM GAS  /tmp/ccrdcdEL.s 			page 141


 5257 01d6 002B     		cmp	r3, #0
 5258 01d8 0AD0     		beq	.L272
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           {
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 5259              		.loc 1 2738 13
 5260 01da 7B68     		ldr	r3, [r7, #4]
 5261 01dc 1B6E     		ldr	r3, [r3, #96]
 5262 01de 43F04002 		orr	r2, r3, #64
 5263 01e2 7B68     		ldr	r3, [r7, #4]
 5264 01e4 1A66     		str	r2, [r3, #96]
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
 5265              		.loc 1 2731 12
 5266 01e6 03E0     		b	.L272
 5267              	.L268:
2739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           }
2740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Call user error callback */
2745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
 5268              		.loc 1 2748 9
 5269 01e8 7868     		ldr	r0, [r7, #4]
 5270 01ea FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return;
 5271              		.loc 1 2752 5
 5272 01ee 00E0     		b	.L266
 5273              	.L272:
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
 5274              		.loc 1 2731 12
 5275 01f0 00BF     		nop
 5276              	.L266:
 5277              		.loc 1 2752 5
 5278 01f2 00BF     		nop
 5279              	.L271:
 5280 01f4 00BF     		nop
 5281              	.L257:
2753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5282              		.loc 1 2754 1
 5283 01f6 2037     		adds	r7, r7, #32
 5284              	.LCFI99:
 5285              		.cfi_def_cfa_offset 8
 5286 01f8 BD46     		mov	sp, r7
 5287              	.LCFI100:
 5288              		.cfi_def_cfa_register 13
 5289              		@ sp needed
 5290 01fa 80BD     		pop	{r7, pc}
 5291              	.L274:
 5292              		.align	2
 5293              	.L273:
ARM GAS  /tmp/ccrdcdEL.s 			page 142


 5294 01fc 00000000 		.word	SPI_DMAAbortOnError
 5295              		.cfi_endproc
 5296              	.LFE343:
 5298              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 5299              		.align	1
 5300              		.weak	HAL_SPI_TxCpltCallback
 5301              		.syntax unified
 5302              		.thumb
 5303              		.thumb_func
 5304              		.fpu fpv4-sp-d16
 5306              	HAL_SPI_TxCpltCallback:
 5307              	.LFB344:
2755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5308              		.loc 1 2763 1
 5309              		.cfi_startproc
 5310              		@ args = 0, pretend = 0, frame = 8
 5311              		@ frame_needed = 1, uses_anonymous_args = 0
 5312              		@ link register save eliminated.
 5313 0000 80B4     		push	{r7}
 5314              	.LCFI101:
 5315              		.cfi_def_cfa_offset 4
 5316              		.cfi_offset 7, -4
 5317 0002 83B0     		sub	sp, sp, #12
 5318              	.LCFI102:
 5319              		.cfi_def_cfa_offset 16
 5320 0004 00AF     		add	r7, sp, #0
 5321              	.LCFI103:
 5322              		.cfi_def_cfa_register 7
 5323 0006 7860     		str	r0, [r7, #4]
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5324              		.loc 1 2770 1
 5325 0008 00BF     		nop
 5326 000a 0C37     		adds	r7, r7, #12
 5327              	.LCFI104:
 5328              		.cfi_def_cfa_offset 4
 5329 000c BD46     		mov	sp, r7
 5330              	.LCFI105:
 5331              		.cfi_def_cfa_register 13
 5332              		@ sp needed
 5333 000e 5DF8047B 		ldr	r7, [sp], #4
 5334              	.LCFI106:
 5335              		.cfi_restore 7
 5336              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccrdcdEL.s 			page 143


 5337 0012 7047     		bx	lr
 5338              		.cfi_endproc
 5339              	.LFE344:
 5341              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 5342              		.align	1
 5343              		.weak	HAL_SPI_RxCpltCallback
 5344              		.syntax unified
 5345              		.thumb
 5346              		.thumb_func
 5347              		.fpu fpv4-sp-d16
 5349              	HAL_SPI_RxCpltCallback:
 5350              	.LFB345:
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5351              		.loc 1 2779 1
 5352              		.cfi_startproc
 5353              		@ args = 0, pretend = 0, frame = 8
 5354              		@ frame_needed = 1, uses_anonymous_args = 0
 5355              		@ link register save eliminated.
 5356 0000 80B4     		push	{r7}
 5357              	.LCFI107:
 5358              		.cfi_def_cfa_offset 4
 5359              		.cfi_offset 7, -4
 5360 0002 83B0     		sub	sp, sp, #12
 5361              	.LCFI108:
 5362              		.cfi_def_cfa_offset 16
 5363 0004 00AF     		add	r7, sp, #0
 5364              	.LCFI109:
 5365              		.cfi_def_cfa_register 7
 5366 0006 7860     		str	r0, [r7, #4]
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
2782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5367              		.loc 1 2786 1
 5368 0008 00BF     		nop
 5369 000a 0C37     		adds	r7, r7, #12
 5370              	.LCFI110:
 5371              		.cfi_def_cfa_offset 4
 5372 000c BD46     		mov	sp, r7
 5373              	.LCFI111:
 5374              		.cfi_def_cfa_register 13
 5375              		@ sp needed
 5376 000e 5DF8047B 		ldr	r7, [sp], #4
 5377              	.LCFI112:
 5378              		.cfi_restore 7
 5379              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccrdcdEL.s 			page 144


 5380 0012 7047     		bx	lr
 5381              		.cfi_endproc
 5382              	.LFE345:
 5384              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 5385              		.align	1
 5386              		.weak	HAL_SPI_TxRxCpltCallback
 5387              		.syntax unified
 5388              		.thumb
 5389              		.thumb_func
 5390              		.fpu fpv4-sp-d16
 5392              	HAL_SPI_TxRxCpltCallback:
 5393              	.LFB346:
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5394              		.loc 1 2795 1
 5395              		.cfi_startproc
 5396              		@ args = 0, pretend = 0, frame = 8
 5397              		@ frame_needed = 1, uses_anonymous_args = 0
 5398              		@ link register save eliminated.
 5399 0000 80B4     		push	{r7}
 5400              	.LCFI113:
 5401              		.cfi_def_cfa_offset 4
 5402              		.cfi_offset 7, -4
 5403 0002 83B0     		sub	sp, sp, #12
 5404              	.LCFI114:
 5405              		.cfi_def_cfa_offset 16
 5406 0004 00AF     		add	r7, sp, #0
 5407              	.LCFI115:
 5408              		.cfi_def_cfa_register 7
 5409 0006 7860     		str	r0, [r7, #4]
2796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
2798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5410              		.loc 1 2802 1
 5411 0008 00BF     		nop
 5412 000a 0C37     		adds	r7, r7, #12
 5413              	.LCFI116:
 5414              		.cfi_def_cfa_offset 4
 5415 000c BD46     		mov	sp, r7
 5416              	.LCFI117:
 5417              		.cfi_def_cfa_register 13
 5418              		@ sp needed
 5419 000e 5DF8047B 		ldr	r7, [sp], #4
 5420              	.LCFI118:
 5421              		.cfi_restore 7
 5422              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccrdcdEL.s 			page 145


 5423 0012 7047     		bx	lr
 5424              		.cfi_endproc
 5425              	.LFE346:
 5427              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 5428              		.align	1
 5429              		.weak	HAL_SPI_TxHalfCpltCallback
 5430              		.syntax unified
 5431              		.thumb
 5432              		.thumb_func
 5433              		.fpu fpv4-sp-d16
 5435              	HAL_SPI_TxHalfCpltCallback:
 5436              	.LFB347:
2803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5437              		.loc 1 2811 1
 5438              		.cfi_startproc
 5439              		@ args = 0, pretend = 0, frame = 8
 5440              		@ frame_needed = 1, uses_anonymous_args = 0
 5441              		@ link register save eliminated.
 5442 0000 80B4     		push	{r7}
 5443              	.LCFI119:
 5444              		.cfi_def_cfa_offset 4
 5445              		.cfi_offset 7, -4
 5446 0002 83B0     		sub	sp, sp, #12
 5447              	.LCFI120:
 5448              		.cfi_def_cfa_offset 16
 5449 0004 00AF     		add	r7, sp, #0
 5450              	.LCFI121:
 5451              		.cfi_def_cfa_register 7
 5452 0006 7860     		str	r0, [r7, #4]
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5453              		.loc 1 2818 1
 5454 0008 00BF     		nop
 5455 000a 0C37     		adds	r7, r7, #12
 5456              	.LCFI122:
 5457              		.cfi_def_cfa_offset 4
 5458 000c BD46     		mov	sp, r7
 5459              	.LCFI123:
 5460              		.cfi_def_cfa_register 13
 5461              		@ sp needed
 5462 000e 5DF8047B 		ldr	r7, [sp], #4
 5463              	.LCFI124:
 5464              		.cfi_restore 7
 5465              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccrdcdEL.s 			page 146


 5466 0012 7047     		bx	lr
 5467              		.cfi_endproc
 5468              	.LFE347:
 5470              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 5471              		.align	1
 5472              		.weak	HAL_SPI_RxHalfCpltCallback
 5473              		.syntax unified
 5474              		.thumb
 5475              		.thumb_func
 5476              		.fpu fpv4-sp-d16
 5478              	HAL_SPI_RxHalfCpltCallback:
 5479              	.LFB348:
2819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5480              		.loc 1 2827 1
 5481              		.cfi_startproc
 5482              		@ args = 0, pretend = 0, frame = 8
 5483              		@ frame_needed = 1, uses_anonymous_args = 0
 5484              		@ link register save eliminated.
 5485 0000 80B4     		push	{r7}
 5486              	.LCFI125:
 5487              		.cfi_def_cfa_offset 4
 5488              		.cfi_offset 7, -4
 5489 0002 83B0     		sub	sp, sp, #12
 5490              	.LCFI126:
 5491              		.cfi_def_cfa_offset 16
 5492 0004 00AF     		add	r7, sp, #0
 5493              	.LCFI127:
 5494              		.cfi_def_cfa_register 7
 5495 0006 7860     		str	r0, [r7, #4]
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
2830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5496              		.loc 1 2834 1
 5497 0008 00BF     		nop
 5498 000a 0C37     		adds	r7, r7, #12
 5499              	.LCFI128:
 5500              		.cfi_def_cfa_offset 4
 5501 000c BD46     		mov	sp, r7
 5502              	.LCFI129:
 5503              		.cfi_def_cfa_register 13
 5504              		@ sp needed
 5505 000e 5DF8047B 		ldr	r7, [sp], #4
 5506              	.LCFI130:
 5507              		.cfi_restore 7
 5508              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccrdcdEL.s 			page 147


 5509 0012 7047     		bx	lr
 5510              		.cfi_endproc
 5511              	.LFE348:
 5513              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 5514              		.align	1
 5515              		.weak	HAL_SPI_TxRxHalfCpltCallback
 5516              		.syntax unified
 5517              		.thumb
 5518              		.thumb_func
 5519              		.fpu fpv4-sp-d16
 5521              	HAL_SPI_TxRxHalfCpltCallback:
 5522              	.LFB349:
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5523              		.loc 1 2843 1
 5524              		.cfi_startproc
 5525              		@ args = 0, pretend = 0, frame = 8
 5526              		@ frame_needed = 1, uses_anonymous_args = 0
 5527              		@ link register save eliminated.
 5528 0000 80B4     		push	{r7}
 5529              	.LCFI131:
 5530              		.cfi_def_cfa_offset 4
 5531              		.cfi_offset 7, -4
 5532 0002 83B0     		sub	sp, sp, #12
 5533              	.LCFI132:
 5534              		.cfi_def_cfa_offset 16
 5535 0004 00AF     		add	r7, sp, #0
 5536              	.LCFI133:
 5537              		.cfi_def_cfa_register 7
 5538 0006 7860     		str	r0, [r7, #4]
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5539              		.loc 1 2850 1
 5540 0008 00BF     		nop
 5541 000a 0C37     		adds	r7, r7, #12
 5542              	.LCFI134:
 5543              		.cfi_def_cfa_offset 4
 5544 000c BD46     		mov	sp, r7
 5545              	.LCFI135:
 5546              		.cfi_def_cfa_register 13
 5547              		@ sp needed
 5548 000e 5DF8047B 		ldr	r7, [sp], #4
 5549              	.LCFI136:
 5550              		.cfi_restore 7
 5551              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccrdcdEL.s 			page 148


 5552 0012 7047     		bx	lr
 5553              		.cfi_endproc
 5554              	.LFE349:
 5556              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 5557              		.align	1
 5558              		.weak	HAL_SPI_ErrorCallback
 5559              		.syntax unified
 5560              		.thumb
 5561              		.thumb_func
 5562              		.fpu fpv4-sp-d16
 5564              	HAL_SPI_ErrorCallback:
 5565              	.LFB350:
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  SPI error callback.
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5566              		.loc 1 2859 1
 5567              		.cfi_startproc
 5568              		@ args = 0, pretend = 0, frame = 8
 5569              		@ frame_needed = 1, uses_anonymous_args = 0
 5570              		@ link register save eliminated.
 5571 0000 80B4     		push	{r7}
 5572              	.LCFI137:
 5573              		.cfi_def_cfa_offset 4
 5574              		.cfi_offset 7, -4
 5575 0002 83B0     		sub	sp, sp, #12
 5576              	.LCFI138:
 5577              		.cfi_def_cfa_offset 16
 5578 0004 00AF     		add	r7, sp, #0
 5579              	.LCFI139:
 5580              		.cfi_def_cfa_register 7
 5581 0006 7860     		str	r0, [r7, #4]
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5582              		.loc 1 2869 1
 5583 0008 00BF     		nop
 5584 000a 0C37     		adds	r7, r7, #12
 5585              	.LCFI140:
 5586              		.cfi_def_cfa_offset 4
 5587 000c BD46     		mov	sp, r7
 5588              	.LCFI141:
 5589              		.cfi_def_cfa_register 13
 5590              		@ sp needed
 5591 000e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccrdcdEL.s 			page 149


 5592              	.LCFI142:
 5593              		.cfi_restore 7
 5594              		.cfi_def_cfa_offset 0
 5595 0012 7047     		bx	lr
 5596              		.cfi_endproc
 5597              	.LFE350:
 5599              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 5600              		.align	1
 5601              		.weak	HAL_SPI_AbortCpltCallback
 5602              		.syntax unified
 5603              		.thumb
 5604              		.thumb_func
 5605              		.fpu fpv4-sp-d16
 5607              	HAL_SPI_AbortCpltCallback:
 5608              	.LFB351:
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi SPI handle.
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5609              		.loc 1 2877 1
 5610              		.cfi_startproc
 5611              		@ args = 0, pretend = 0, frame = 8
 5612              		@ frame_needed = 1, uses_anonymous_args = 0
 5613              		@ link register save eliminated.
 5614 0000 80B4     		push	{r7}
 5615              	.LCFI143:
 5616              		.cfi_def_cfa_offset 4
 5617              		.cfi_offset 7, -4
 5618 0002 83B0     		sub	sp, sp, #12
 5619              	.LCFI144:
 5620              		.cfi_def_cfa_offset 16
 5621 0004 00AF     		add	r7, sp, #0
 5622              	.LCFI145:
 5623              		.cfi_def_cfa_register 7
 5624 0006 7860     		str	r0, [r7, #4]
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   UNUSED(hspi);
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****    */
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5625              		.loc 1 2884 1
 5626 0008 00BF     		nop
 5627 000a 0C37     		adds	r7, r7, #12
 5628              	.LCFI146:
 5629              		.cfi_def_cfa_offset 4
 5630 000c BD46     		mov	sp, r7
 5631              	.LCFI147:
 5632              		.cfi_def_cfa_register 13
 5633              		@ sp needed
 5634 000e 5DF8047B 		ldr	r7, [sp], #4
 5635              	.LCFI148:
ARM GAS  /tmp/ccrdcdEL.s 			page 150


 5636              		.cfi_restore 7
 5637              		.cfi_def_cfa_offset 0
 5638 0012 7047     		bx	lr
 5639              		.cfi_endproc
 5640              	.LFE351:
 5642              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5643              		.align	1
 5644              		.global	HAL_SPI_GetState
 5645              		.syntax unified
 5646              		.thumb
 5647              		.thumb_func
 5648              		.fpu fpv4-sp-d16
 5650              	HAL_SPI_GetState:
 5651              	.LFB352:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @}
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief   SPI control functions
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *
2893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** @verbatim
2894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****  ===============================================================================
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****  ===============================================================================
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     [..]
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** @endverbatim
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval SPI state
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5652              		.loc 1 2912 1
 5653              		.cfi_startproc
 5654              		@ args = 0, pretend = 0, frame = 8
 5655              		@ frame_needed = 1, uses_anonymous_args = 0
 5656              		@ link register save eliminated.
 5657 0000 80B4     		push	{r7}
 5658              	.LCFI149:
 5659              		.cfi_def_cfa_offset 4
 5660              		.cfi_offset 7, -4
 5661 0002 83B0     		sub	sp, sp, #12
 5662              	.LCFI150:
 5663              		.cfi_def_cfa_offset 16
 5664 0004 00AF     		add	r7, sp, #0
 5665              	.LCFI151:
 5666              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccrdcdEL.s 			page 151


 5667 0006 7860     		str	r0, [r7, #4]
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Return SPI handle state */
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return hspi->State;
 5668              		.loc 1 2914 14
 5669 0008 7B68     		ldr	r3, [r7, #4]
 5670 000a 93F85D30 		ldrb	r3, [r3, #93]
 5671 000e DBB2     		uxtb	r3, r3
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5672              		.loc 1 2915 1
 5673 0010 1846     		mov	r0, r3
 5674 0012 0C37     		adds	r7, r7, #12
 5675              	.LCFI152:
 5676              		.cfi_def_cfa_offset 4
 5677 0014 BD46     		mov	sp, r7
 5678              	.LCFI153:
 5679              		.cfi_def_cfa_register 13
 5680              		@ sp needed
 5681 0016 5DF8047B 		ldr	r7, [sp], #4
 5682              	.LCFI154:
 5683              		.cfi_restore 7
 5684              		.cfi_def_cfa_offset 0
 5685 001a 7047     		bx	lr
 5686              		.cfi_endproc
 5687              	.LFE352:
 5689              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5690              		.align	1
 5691              		.global	HAL_SPI_GetError
 5692              		.syntax unified
 5693              		.thumb
 5694              		.thumb_func
 5695              		.fpu fpv4-sp-d16
 5697              	HAL_SPI_GetError:
 5698              	.LFB353:
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Return the SPI error code.
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
2921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5699              		.loc 1 2924 1
 5700              		.cfi_startproc
 5701              		@ args = 0, pretend = 0, frame = 8
 5702              		@ frame_needed = 1, uses_anonymous_args = 0
 5703              		@ link register save eliminated.
 5704 0000 80B4     		push	{r7}
 5705              	.LCFI155:
 5706              		.cfi_def_cfa_offset 4
 5707              		.cfi_offset 7, -4
 5708 0002 83B0     		sub	sp, sp, #12
 5709              	.LCFI156:
 5710              		.cfi_def_cfa_offset 16
 5711 0004 00AF     		add	r7, sp, #0
 5712              	.LCFI157:
 5713              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccrdcdEL.s 			page 152


 5714 0006 7860     		str	r0, [r7, #4]
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Return SPI ErrorCode */
2926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return hspi->ErrorCode;
 5715              		.loc 1 2926 14
 5716 0008 7B68     		ldr	r3, [r7, #4]
 5717 000a 1B6E     		ldr	r3, [r3, #96]
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5718              		.loc 1 2927 1
 5719 000c 1846     		mov	r0, r3
 5720 000e 0C37     		adds	r7, r7, #12
 5721              	.LCFI158:
 5722              		.cfi_def_cfa_offset 4
 5723 0010 BD46     		mov	sp, r7
 5724              	.LCFI159:
 5725              		.cfi_def_cfa_register 13
 5726              		@ sp needed
 5727 0012 5DF8047B 		ldr	r7, [sp], #4
 5728              	.LCFI160:
 5729              		.cfi_restore 7
 5730              		.cfi_def_cfa_offset 0
 5731 0016 7047     		bx	lr
 5732              		.cfi_endproc
 5733              	.LFE353:
 5735              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 5736              		.align	1
 5737              		.syntax unified
 5738              		.thumb
 5739              		.thumb_func
 5740              		.fpu fpv4-sp-d16
 5742              	SPI_DMATransmitCplt:
 5743              	.LFB354:
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @}
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @}
2935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief   Private functions
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @{
2940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5744              		.loc 1 2949 1
 5745              		.cfi_startproc
 5746              		@ args = 0, pretend = 0, frame = 24
 5747              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccrdcdEL.s 			page 153


 5748 0000 80B5     		push	{r7, lr}
 5749              	.LCFI161:
 5750              		.cfi_def_cfa_offset 8
 5751              		.cfi_offset 7, -8
 5752              		.cfi_offset 14, -4
 5753 0002 86B0     		sub	sp, sp, #24
 5754              	.LCFI162:
 5755              		.cfi_def_cfa_offset 32
 5756 0004 00AF     		add	r7, sp, #0
 5757              	.LCFI163:
 5758              		.cfi_def_cfa_register 7
 5759 0006 7860     		str	r0, [r7, #4]
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5760              		.loc 1 2950 22
 5761 0008 7B68     		ldr	r3, [r7, #4]
 5762 000a 9B6A     		ldr	r3, [r3, #40]
 5763 000c 7B61     		str	r3, [r7, #20]
2951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t tickstart;
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5764              		.loc 1 2954 15
 5765 000e FFF7FEFF 		bl	HAL_GetTick
 5766 0012 3861     		str	r0, [r7, #16]
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* DMA Normal Mode */
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 5767              		.loc 1 2957 12
 5768 0014 7B68     		ldr	r3, [r7, #4]
 5769 0016 1B68     		ldr	r3, [r3]
 5770              		.loc 1 2957 22
 5771 0018 1B68     		ldr	r3, [r3]
 5772              		.loc 1 2957 28
 5773 001a 03F02003 		and	r3, r3, #32
 5774              		.loc 1 2957 6
 5775 001e 202B     		cmp	r3, #32
 5776 0020 3BD0     		beq	.L288
2958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable ERR interrupt */
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5777              		.loc 1 2960 5
 5778 0022 7B69     		ldr	r3, [r7, #20]
 5779 0024 1B68     		ldr	r3, [r3]
 5780 0026 5A68     		ldr	r2, [r3, #4]
 5781 0028 7B69     		ldr	r3, [r7, #20]
 5782 002a 1B68     		ldr	r3, [r3]
 5783 002c 22F02002 		bic	r2, r2, #32
 5784 0030 5A60     		str	r2, [r3, #4]
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable Tx DMA Request */
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5785              		.loc 1 2963 5
 5786 0032 7B69     		ldr	r3, [r7, #20]
 5787 0034 1B68     		ldr	r3, [r3]
 5788 0036 5A68     		ldr	r2, [r3, #4]
 5789 0038 7B69     		ldr	r3, [r7, #20]
 5790 003a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccrdcdEL.s 			page 154


 5791 003c 22F00202 		bic	r2, r2, #2
 5792 0040 5A60     		str	r2, [r3, #4]
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check the end of the transaction */
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5793              		.loc 1 2966 9
 5794 0042 3A69     		ldr	r2, [r7, #16]
 5795 0044 6421     		movs	r1, #100
 5796 0046 7869     		ldr	r0, [r7, #20]
 5797 0048 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5798 004c 0346     		mov	r3, r0
 5799              		.loc 1 2966 8
 5800 004e 002B     		cmp	r3, #0
 5801 0050 05D0     		beq	.L289
2967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5802              		.loc 1 2968 7
 5803 0052 7B69     		ldr	r3, [r7, #20]
 5804 0054 1B6E     		ldr	r3, [r3, #96]
 5805 0056 43F02002 		orr	r2, r3, #32
 5806 005a 7B69     		ldr	r3, [r7, #20]
 5807 005c 1A66     		str	r2, [r3, #96]
 5808              	.L289:
2969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 5809              		.loc 1 2972 19
 5810 005e 7B69     		ldr	r3, [r7, #20]
 5811 0060 9B68     		ldr	r3, [r3, #8]
 5812              		.loc 1 2972 8
 5813 0062 002B     		cmp	r3, #0
 5814 0064 0AD1     		bne	.L290
 5815              	.LBB11:
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5816              		.loc 1 2974 7
 5817 0066 0023     		movs	r3, #0
 5818 0068 FB60     		str	r3, [r7, #12]
 5819 006a 7B69     		ldr	r3, [r7, #20]
 5820 006c 1B68     		ldr	r3, [r3]
 5821 006e DB68     		ldr	r3, [r3, #12]
 5822 0070 FB60     		str	r3, [r7, #12]
 5823 0072 7B69     		ldr	r3, [r7, #20]
 5824 0074 1B68     		ldr	r3, [r3]
 5825 0076 9B68     		ldr	r3, [r3, #8]
 5826 0078 FB60     		str	r3, [r7, #12]
 5827 007a FB68     		ldr	r3, [r7, #12]
 5828              	.L290:
 5829              	.LBE11:
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5830              		.loc 1 2977 23
 5831 007c 7B69     		ldr	r3, [r7, #20]
 5832 007e 0022     		movs	r2, #0
 5833 0080 DA87     		strh	r2, [r3, #62]	@ movhi
ARM GAS  /tmp/ccrdcdEL.s 			page 155


2978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5834              		.loc 1 2978 17
 5835 0082 7B69     		ldr	r3, [r7, #20]
 5836 0084 0122     		movs	r2, #1
 5837 0086 83F85D20 		strb	r2, [r3, #93]
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5838              		.loc 1 2980 13
 5839 008a 7B69     		ldr	r3, [r7, #20]
 5840 008c 1B6E     		ldr	r3, [r3, #96]
 5841              		.loc 1 2980 8
 5842 008e 002B     		cmp	r3, #0
 5843 0090 03D0     		beq	.L288
2981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
2982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Call user error callback */
2983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5844              		.loc 1 2986 7
 5845 0092 7869     		ldr	r0, [r7, #20]
 5846 0094 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
 5847              		.loc 1 2988 7
 5848 0098 02E0     		b	.L287
 5849              	.L288:
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user Tx complete callback */
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
 5850              		.loc 1 2995 3
 5851 009a 7869     		ldr	r0, [r7, #20]
 5852 009c FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5853              	.L287:
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5854              		.loc 1 2997 1
 5855 00a0 1837     		adds	r7, r7, #24
 5856              	.LCFI164:
 5857              		.cfi_def_cfa_offset 8
 5858 00a2 BD46     		mov	sp, r7
 5859              	.LCFI165:
 5860              		.cfi_def_cfa_register 13
 5861              		@ sp needed
 5862 00a4 80BD     		pop	{r7, pc}
 5863              		.cfi_endproc
 5864              	.LFE354:
 5866              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5867              		.align	1
 5868              		.syntax unified
 5869              		.thumb
 5870              		.thumb_func
 5871              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccrdcdEL.s 			page 156


 5873              	SPI_DMAReceiveCplt:
 5874              	.LFB355:
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5875              		.loc 1 3006 1
 5876              		.cfi_startproc
 5877              		@ args = 0, pretend = 0, frame = 16
 5878              		@ frame_needed = 1, uses_anonymous_args = 0
 5879 0000 80B5     		push	{r7, lr}
 5880              	.LCFI166:
 5881              		.cfi_def_cfa_offset 8
 5882              		.cfi_offset 7, -8
 5883              		.cfi_offset 14, -4
 5884 0002 84B0     		sub	sp, sp, #16
 5885              	.LCFI167:
 5886              		.cfi_def_cfa_offset 24
 5887 0004 00AF     		add	r7, sp, #0
 5888              	.LCFI168:
 5889              		.cfi_def_cfa_register 7
 5890 0006 7860     		str	r0, [r7, #4]
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5891              		.loc 1 3007 22
 5892 0008 7B68     		ldr	r3, [r7, #4]
 5893 000a 9B6A     		ldr	r3, [r3, #40]
 5894 000c FB60     		str	r3, [r7, #12]
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t tickstart;
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5895              		.loc 1 3011 15
 5896 000e FFF7FEFF 		bl	HAL_GetTick
 5897 0012 B860     		str	r0, [r7, #8]
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* DMA Normal Mode */
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 5898              		.loc 1 3014 12
 5899 0014 7B68     		ldr	r3, [r7, #4]
 5900 0016 1B68     		ldr	r3, [r3]
 5901              		.loc 1 3014 22
 5902 0018 1B68     		ldr	r3, [r3]
 5903              		.loc 1 3014 28
 5904 001a 03F02003 		and	r3, r3, #32
 5905              		.loc 1 3014 6
 5906 001e 202B     		cmp	r3, #32
 5907 0020 2AD0     		beq	.L293
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable ERR interrupt */
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5908              		.loc 1 3017 5
 5909 0022 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 157


 5910 0024 1B68     		ldr	r3, [r3]
 5911 0026 5A68     		ldr	r2, [r3, #4]
 5912 0028 FB68     		ldr	r3, [r7, #12]
 5913 002a 1B68     		ldr	r3, [r3]
 5914 002c 22F02002 		bic	r2, r2, #32
 5915 0030 5A60     		str	r2, [r3, #4]
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* CRC handling */
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Wait until RXNE flag */
3024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
3025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Error on the CRC reception */
3027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Read CRC */
3030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
3031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Read 16bit CRC */
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Read 8bit CRC */
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstar
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           {
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             /* Error on the CRC reception */
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           }
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
3051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5916              		.loc 1 3055 5
 5917 0032 FB68     		ldr	r3, [r7, #12]
 5918 0034 1B68     		ldr	r3, [r3]
 5919 0036 5A68     		ldr	r2, [r3, #4]
 5920 0038 FB68     		ldr	r3, [r7, #12]
 5921 003a 1B68     		ldr	r3, [r3]
 5922 003c 22F00302 		bic	r2, r2, #3
 5923 0040 5A60     		str	r2, [r3, #4]
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check the end of the transaction */
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5924              		.loc 1 3058 9
 5925 0042 BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccrdcdEL.s 			page 158


 5926 0044 6421     		movs	r1, #100
 5927 0046 F868     		ldr	r0, [r7, #12]
 5928 0048 FFF7FEFF 		bl	SPI_EndRxTransaction
 5929 004c 0346     		mov	r3, r0
 5930              		.loc 1 3058 8
 5931 004e 002B     		cmp	r3, #0
 5932 0050 02D0     		beq	.L294
3059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 5933              		.loc 1 3060 23
 5934 0052 FB68     		ldr	r3, [r7, #12]
 5935 0054 2022     		movs	r2, #32
 5936 0056 1A66     		str	r2, [r3, #96]
 5937              	.L294:
3061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5938              		.loc 1 3063 23
 5939 0058 FB68     		ldr	r3, [r7, #12]
 5940 005a 0022     		movs	r2, #0
 5941 005c A3F84620 		strh	r2, [r3, #70]	@ movhi
3064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5942              		.loc 1 3064 17
 5943 0060 FB68     		ldr	r3, [r7, #12]
 5944 0062 0122     		movs	r2, #1
 5945 0064 83F85D20 		strb	r2, [r3, #93]
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check if CRC error occurred */
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5946              		.loc 1 3075 13
 5947 0068 FB68     		ldr	r3, [r7, #12]
 5948 006a 1B6E     		ldr	r3, [r3, #96]
 5949              		.loc 1 3075 8
 5950 006c 002B     		cmp	r3, #0
 5951 006e 03D0     		beq	.L293
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Call user error callback */
3078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5952              		.loc 1 3081 7
 5953 0070 F868     		ldr	r0, [r7, #12]
 5954 0072 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
 5955              		.loc 1 3083 7
 5956 0076 02E0     		b	.L292
 5957              	.L293:
ARM GAS  /tmp/ccrdcdEL.s 			page 159


3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user Rx complete callback */
3087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
 5958              		.loc 1 3090 3
 5959 0078 F868     		ldr	r0, [r7, #12]
 5960 007a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5961              	.L292:
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 5962              		.loc 1 3092 1
 5963 007e 1037     		adds	r7, r7, #16
 5964              	.LCFI169:
 5965              		.cfi_def_cfa_offset 8
 5966 0080 BD46     		mov	sp, r7
 5967              	.LCFI170:
 5968              		.cfi_def_cfa_register 13
 5969              		@ sp needed
 5970 0082 80BD     		pop	{r7, pc}
 5971              		.cfi_endproc
 5972              	.LFE355:
 5974              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5975              		.align	1
 5976              		.syntax unified
 5977              		.thumb
 5978              		.thumb_func
 5979              		.fpu fpv4-sp-d16
 5981              	SPI_DMATransmitReceiveCplt:
 5982              	.LFB356:
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 5983              		.loc 1 3101 1
 5984              		.cfi_startproc
 5985              		@ args = 0, pretend = 0, frame = 16
 5986              		@ frame_needed = 1, uses_anonymous_args = 0
 5987 0000 80B5     		push	{r7, lr}
 5988              	.LCFI171:
 5989              		.cfi_def_cfa_offset 8
 5990              		.cfi_offset 7, -8
 5991              		.cfi_offset 14, -4
 5992 0002 84B0     		sub	sp, sp, #16
 5993              	.LCFI172:
 5994              		.cfi_def_cfa_offset 24
 5995 0004 00AF     		add	r7, sp, #0
 5996              	.LCFI173:
 5997              		.cfi_def_cfa_register 7
 5998 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 160


3102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5999              		.loc 1 3102 22
 6000 0008 7B68     		ldr	r3, [r7, #4]
 6001 000a 9B6A     		ldr	r3, [r3, #40]
 6002 000c FB60     		str	r3, [r7, #12]
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t tickstart;
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tickstart = HAL_GetTick();
 6003              		.loc 1 3106 15
 6004 000e FFF7FEFF 		bl	HAL_GetTick
 6005 0012 B860     		str	r0, [r7, #8]
3107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* DMA Normal Mode */
3109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 6006              		.loc 1 3109 12
 6007 0014 7B68     		ldr	r3, [r7, #4]
 6008 0016 1B68     		ldr	r3, [r3]
 6009              		.loc 1 3109 22
 6010 0018 1B68     		ldr	r3, [r3]
 6011              		.loc 1 3109 28
 6012 001a 03F02003 		and	r3, r3, #32
 6013              		.loc 1 3109 6
 6014 001e 202B     		cmp	r3, #32
 6015 0020 30D0     		beq	.L297
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable ERR interrupt */
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 6016              		.loc 1 3112 5
 6017 0022 FB68     		ldr	r3, [r7, #12]
 6018 0024 1B68     		ldr	r3, [r3]
 6019 0026 5A68     		ldr	r2, [r3, #4]
 6020 0028 FB68     		ldr	r3, [r7, #12]
 6021 002a 1B68     		ldr	r3, [r3]
 6022 002c 22F02002 		bic	r2, r2, #32
 6023 0030 5A60     		str	r2, [r3, #4]
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* CRC handling */
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_8BI
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_QUARTER_FULL, SPI_DEFAULT
3121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                           tickstart) != HAL_OK)
3122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Error on the CRC reception */
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_HALF_FULL, SPI_DEFAULT_TI
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Error on the CRC reception */
ARM GAS  /tmp/ccrdcdEL.s 			page 161


3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check the end of the transaction */
3143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 6024              		.loc 1 3143 9
 6025 0032 BA68     		ldr	r2, [r7, #8]
 6026 0034 6421     		movs	r1, #100
 6027 0036 F868     		ldr	r0, [r7, #12]
 6028 0038 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 6029 003c 0346     		mov	r3, r0
 6030              		.loc 1 3143 8
 6031 003e 002B     		cmp	r3, #0
 6032 0040 05D0     		beq	.L298
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6033              		.loc 1 3145 7
 6034 0042 FB68     		ldr	r3, [r7, #12]
 6035 0044 1B6E     		ldr	r3, [r3, #96]
 6036 0046 43F02002 		orr	r2, r3, #32
 6037 004a FB68     		ldr	r3, [r7, #12]
 6038 004c 1A66     		str	r2, [r3, #96]
 6039              	.L298:
3146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
3149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 6040              		.loc 1 3149 5
 6041 004e FB68     		ldr	r3, [r7, #12]
 6042 0050 1B68     		ldr	r3, [r3]
 6043 0052 5A68     		ldr	r2, [r3, #4]
 6044 0054 FB68     		ldr	r3, [r7, #12]
 6045 0056 1B68     		ldr	r3, [r3]
 6046 0058 22F00302 		bic	r2, r2, #3
 6047 005c 5A60     		str	r2, [r3, #4]
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 6048              		.loc 1 3151 23
 6049 005e FB68     		ldr	r3, [r7, #12]
 6050 0060 0022     		movs	r2, #0
 6051 0062 DA87     		strh	r2, [r3, #62]	@ movhi
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 6052              		.loc 1 3152 23
 6053 0064 FB68     		ldr	r3, [r7, #12]
 6054 0066 0022     		movs	r2, #0
 6055 0068 A3F84620 		strh	r2, [r3, #70]	@ movhi
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 6056              		.loc 1 3153 17
 6057 006c FB68     		ldr	r3, [r7, #12]
 6058 006e 0122     		movs	r2, #1
 6059 0070 83F85D20 		strb	r2, [r3, #93]
3154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 162


3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check if CRC error occurred */
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 6060              		.loc 1 3164 13
 6061 0074 FB68     		ldr	r3, [r7, #12]
 6062 0076 1B6E     		ldr	r3, [r3, #96]
 6063              		.loc 1 3164 8
 6064 0078 002B     		cmp	r3, #0
 6065 007a 03D0     		beq	.L297
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Call user error callback */
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 6066              		.loc 1 3170 7
 6067 007c F868     		ldr	r0, [r7, #12]
 6068 007e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
 6069              		.loc 1 3172 7
 6070 0082 02E0     		b	.L296
 6071              	.L297:
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user TxRx complete callback */
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
 6072              		.loc 1 3179 3
 6073 0084 F868     		ldr	r0, [r7, #12]
 6074 0086 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 6075              	.L296:
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6076              		.loc 1 3181 1
 6077 008a 1037     		adds	r7, r7, #16
 6078              	.LCFI174:
 6079              		.cfi_def_cfa_offset 8
 6080 008c BD46     		mov	sp, r7
 6081              	.LCFI175:
 6082              		.cfi_def_cfa_register 13
 6083              		@ sp needed
 6084 008e 80BD     		pop	{r7, pc}
 6085              		.cfi_endproc
 6086              	.LFE356:
 6088              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 6089              		.align	1
 6090              		.syntax unified
ARM GAS  /tmp/ccrdcdEL.s 			page 163


 6091              		.thumb
 6092              		.thumb_func
 6093              		.fpu fpv4-sp-d16
 6095              	SPI_DMAHalfTransmitCplt:
 6096              	.LFB357:
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6097              		.loc 1 3190 1
 6098              		.cfi_startproc
 6099              		@ args = 0, pretend = 0, frame = 16
 6100              		@ frame_needed = 1, uses_anonymous_args = 0
 6101 0000 80B5     		push	{r7, lr}
 6102              	.LCFI176:
 6103              		.cfi_def_cfa_offset 8
 6104              		.cfi_offset 7, -8
 6105              		.cfi_offset 14, -4
 6106 0002 84B0     		sub	sp, sp, #16
 6107              	.LCFI177:
 6108              		.cfi_def_cfa_offset 24
 6109 0004 00AF     		add	r7, sp, #0
 6110              	.LCFI178:
 6111              		.cfi_def_cfa_register 7
 6112 0006 7860     		str	r0, [r7, #4]
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6113              		.loc 1 3191 22
 6114 0008 7B68     		ldr	r3, [r7, #4]
 6115 000a 9B6A     		ldr	r3, [r3, #40]
 6116 000c FB60     		str	r3, [r7, #12]
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user Tx half complete callback */
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
 6117              		.loc 1 3197 3
 6118 000e F868     		ldr	r0, [r7, #12]
 6119 0010 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6120              		.loc 1 3199 1
 6121 0014 00BF     		nop
 6122 0016 1037     		adds	r7, r7, #16
 6123              	.LCFI179:
 6124              		.cfi_def_cfa_offset 8
 6125 0018 BD46     		mov	sp, r7
 6126              	.LCFI180:
 6127              		.cfi_def_cfa_register 13
 6128              		@ sp needed
 6129 001a 80BD     		pop	{r7, pc}
 6130              		.cfi_endproc
ARM GAS  /tmp/ccrdcdEL.s 			page 164


 6131              	.LFE357:
 6133              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 6134              		.align	1
 6135              		.syntax unified
 6136              		.thumb
 6137              		.thumb_func
 6138              		.fpu fpv4-sp-d16
 6140              	SPI_DMAHalfReceiveCplt:
 6141              	.LFB358:
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6142              		.loc 1 3208 1
 6143              		.cfi_startproc
 6144              		@ args = 0, pretend = 0, frame = 16
 6145              		@ frame_needed = 1, uses_anonymous_args = 0
 6146 0000 80B5     		push	{r7, lr}
 6147              	.LCFI181:
 6148              		.cfi_def_cfa_offset 8
 6149              		.cfi_offset 7, -8
 6150              		.cfi_offset 14, -4
 6151 0002 84B0     		sub	sp, sp, #16
 6152              	.LCFI182:
 6153              		.cfi_def_cfa_offset 24
 6154 0004 00AF     		add	r7, sp, #0
 6155              	.LCFI183:
 6156              		.cfi_def_cfa_register 7
 6157 0006 7860     		str	r0, [r7, #4]
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6158              		.loc 1 3209 22
 6159 0008 7B68     		ldr	r3, [r7, #4]
 6160 000a 9B6A     		ldr	r3, [r3, #40]
 6161 000c FB60     		str	r3, [r7, #12]
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user Rx half complete callback */
3212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
 6162              		.loc 1 3215 3
 6163 000e F868     		ldr	r0, [r7, #12]
 6164 0010 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6165              		.loc 1 3217 1
 6166 0014 00BF     		nop
 6167 0016 1037     		adds	r7, r7, #16
 6168              	.LCFI184:
 6169              		.cfi_def_cfa_offset 8
 6170 0018 BD46     		mov	sp, r7
 6171              	.LCFI185:
ARM GAS  /tmp/ccrdcdEL.s 			page 165


 6172              		.cfi_def_cfa_register 13
 6173              		@ sp needed
 6174 001a 80BD     		pop	{r7, pc}
 6175              		.cfi_endproc
 6176              	.LFE358:
 6178              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 6179              		.align	1
 6180              		.syntax unified
 6181              		.thumb
 6182              		.thumb_func
 6183              		.fpu fpv4-sp-d16
 6185              	SPI_DMAHalfTransmitReceiveCplt:
 6186              	.LFB359:
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6187              		.loc 1 3226 1
 6188              		.cfi_startproc
 6189              		@ args = 0, pretend = 0, frame = 16
 6190              		@ frame_needed = 1, uses_anonymous_args = 0
 6191 0000 80B5     		push	{r7, lr}
 6192              	.LCFI186:
 6193              		.cfi_def_cfa_offset 8
 6194              		.cfi_offset 7, -8
 6195              		.cfi_offset 14, -4
 6196 0002 84B0     		sub	sp, sp, #16
 6197              	.LCFI187:
 6198              		.cfi_def_cfa_offset 24
 6199 0004 00AF     		add	r7, sp, #0
 6200              	.LCFI188:
 6201              		.cfi_def_cfa_register 7
 6202 0006 7860     		str	r0, [r7, #4]
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6203              		.loc 1 3227 22
 6204 0008 7B68     		ldr	r3, [r7, #4]
 6205 000a 9B6A     		ldr	r3, [r3, #40]
 6206 000c FB60     		str	r3, [r7, #12]
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user TxRx half complete callback */
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
 6207              		.loc 1 3233 3
 6208 000e F868     		ldr	r0, [r7, #12]
 6209 0010 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6210              		.loc 1 3235 1
 6211 0014 00BF     		nop
 6212 0016 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccrdcdEL.s 			page 166


 6213              	.LCFI189:
 6214              		.cfi_def_cfa_offset 8
 6215 0018 BD46     		mov	sp, r7
 6216              	.LCFI190:
 6217              		.cfi_def_cfa_register 13
 6218              		@ sp needed
 6219 001a 80BD     		pop	{r7, pc}
 6220              		.cfi_endproc
 6221              	.LFE359:
 6223              		.section	.text.SPI_DMAError,"ax",%progbits
 6224              		.align	1
 6225              		.syntax unified
 6226              		.thumb
 6227              		.thumb_func
 6228              		.fpu fpv4-sp-d16
 6230              	SPI_DMAError:
 6231              	.LFB360:
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6232              		.loc 1 3244 1
 6233              		.cfi_startproc
 6234              		@ args = 0, pretend = 0, frame = 16
 6235              		@ frame_needed = 1, uses_anonymous_args = 0
 6236 0000 80B5     		push	{r7, lr}
 6237              	.LCFI191:
 6238              		.cfi_def_cfa_offset 8
 6239              		.cfi_offset 7, -8
 6240              		.cfi_offset 14, -4
 6241 0002 84B0     		sub	sp, sp, #16
 6242              	.LCFI192:
 6243              		.cfi_def_cfa_offset 24
 6244 0004 00AF     		add	r7, sp, #0
 6245              	.LCFI193:
 6246              		.cfi_def_cfa_register 7
 6247 0006 7860     		str	r0, [r7, #4]
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6248              		.loc 1 3245 22
 6249 0008 7B68     		ldr	r3, [r7, #4]
 6250 000a 9B6A     		ldr	r3, [r3, #40]
 6251 000c FB60     		str	r3, [r7, #12]
3246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 6252              		.loc 1 3248 3
 6253 000e FB68     		ldr	r3, [r7, #12]
 6254 0010 1B68     		ldr	r3, [r3]
 6255 0012 5A68     		ldr	r2, [r3, #4]
 6256 0014 FB68     		ldr	r3, [r7, #12]
 6257 0016 1B68     		ldr	r3, [r3]
 6258 0018 22F00302 		bic	r2, r2, #3
ARM GAS  /tmp/ccrdcdEL.s 			page 167


 6259 001c 5A60     		str	r2, [r3, #4]
3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 6260              		.loc 1 3250 3
 6261 001e FB68     		ldr	r3, [r7, #12]
 6262 0020 1B6E     		ldr	r3, [r3, #96]
 6263 0022 43F01002 		orr	r2, r3, #16
 6264 0026 FB68     		ldr	r3, [r7, #12]
 6265 0028 1A66     		str	r2, [r3, #96]
3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 6266              		.loc 1 3251 15
 6267 002a FB68     		ldr	r3, [r7, #12]
 6268 002c 0122     		movs	r2, #1
 6269 002e 83F85D20 		strb	r2, [r3, #93]
3252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user error callback */
3253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 6270              		.loc 1 3256 3
 6271 0032 F868     		ldr	r0, [r7, #12]
 6272 0034 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6273              		.loc 1 3258 1
 6274 0038 00BF     		nop
 6275 003a 1037     		adds	r7, r7, #16
 6276              	.LCFI194:
 6277              		.cfi_def_cfa_offset 8
 6278 003c BD46     		mov	sp, r7
 6279              	.LCFI195:
 6280              		.cfi_def_cfa_register 13
 6281              		@ sp needed
 6282 003e 80BD     		pop	{r7, pc}
 6283              		.cfi_endproc
 6284              	.LFE360:
 6286              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 6287              		.align	1
 6288              		.syntax unified
 6289              		.thumb
 6290              		.thumb_func
 6291              		.fpu fpv4-sp-d16
 6293              	SPI_DMAAbortOnError:
 6294              	.LFB361:
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma DMA handle.
3264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6295              		.loc 1 3267 1
 6296              		.cfi_startproc
 6297              		@ args = 0, pretend = 0, frame = 16
 6298              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccrdcdEL.s 			page 168


 6299 0000 80B5     		push	{r7, lr}
 6300              	.LCFI196:
 6301              		.cfi_def_cfa_offset 8
 6302              		.cfi_offset 7, -8
 6303              		.cfi_offset 14, -4
 6304 0002 84B0     		sub	sp, sp, #16
 6305              	.LCFI197:
 6306              		.cfi_def_cfa_offset 24
 6307 0004 00AF     		add	r7, sp, #0
 6308              	.LCFI198:
 6309              		.cfi_def_cfa_register 7
 6310 0006 7860     		str	r0, [r7, #4]
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6311              		.loc 1 3268 22
 6312 0008 7B68     		ldr	r3, [r7, #4]
 6313 000a 9B6A     		ldr	r3, [r3, #40]
 6314 000c FB60     		str	r3, [r7, #12]
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 6315              		.loc 1 3269 21
 6316 000e FB68     		ldr	r3, [r7, #12]
 6317 0010 0022     		movs	r2, #0
 6318 0012 A3F84620 		strh	r2, [r3, #70]	@ movhi
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6319              		.loc 1 3270 21
 6320 0016 FB68     		ldr	r3, [r7, #12]
 6321 0018 0022     		movs	r2, #0
 6322 001a DA87     		strh	r2, [r3, #62]	@ movhi
3271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user error callback */
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 6323              		.loc 1 3276 3
 6324 001c F868     		ldr	r0, [r7, #12]
 6325 001e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6326              		.loc 1 3278 1
 6327 0022 00BF     		nop
 6328 0024 1037     		adds	r7, r7, #16
 6329              	.LCFI199:
 6330              		.cfi_def_cfa_offset 8
 6331 0026 BD46     		mov	sp, r7
 6332              	.LCFI200:
 6333              		.cfi_def_cfa_register 13
 6334              		@ sp needed
 6335 0028 80BD     		pop	{r7, pc}
 6336              		.cfi_endproc
 6337              	.LFE361:
 6339              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 6340              		.align	1
 6341              		.syntax unified
 6342              		.thumb
 6343              		.thumb_func
 6344              		.fpu fpv4-sp-d16
 6346              	SPI_DMATxAbortCallback:
ARM GAS  /tmp/ccrdcdEL.s 			page 169


 6347              	.LFB362:
3279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma DMA handle.
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6348              		.loc 1 3289 1
 6349              		.cfi_startproc
 6350              		@ args = 0, pretend = 0, frame = 24
 6351              		@ frame_needed = 1, uses_anonymous_args = 0
 6352 0000 80B5     		push	{r7, lr}
 6353              	.LCFI201:
 6354              		.cfi_def_cfa_offset 8
 6355              		.cfi_offset 7, -8
 6356              		.cfi_offset 14, -4
 6357 0002 88B0     		sub	sp, sp, #32
 6358              	.LCFI202:
 6359              		.cfi_def_cfa_offset 40
 6360 0004 02AF     		add	r7, sp, #8
 6361              	.LCFI203:
 6362              		.cfi_def_cfa 7, 32
 6363 0006 7860     		str	r0, [r7, #4]
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6364              		.loc 1 3290 22
 6365 0008 7B68     		ldr	r3, [r7, #4]
 6366 000a 9B6A     		ldr	r3, [r3, #40]
 6367 000c 7B61     		str	r3, [r7, #20]
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 6368              		.loc 1 3292 7
 6369 000e 7B69     		ldr	r3, [r7, #20]
 6370 0010 5B6D     		ldr	r3, [r3, #84]
 6371              		.loc 1 3292 35
 6372 0012 0022     		movs	r2, #0
 6373 0014 9A63     		str	r2, [r3, #56]
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable Tx DMA Request */
3295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 6374              		.loc 1 3295 3
 6375 0016 7B69     		ldr	r3, [r7, #20]
 6376 0018 1B68     		ldr	r3, [r3]
 6377 001a 5A68     		ldr	r2, [r3, #4]
 6378 001c 7B69     		ldr	r3, [r7, #20]
 6379 001e 1B68     		ldr	r3, [r3]
 6380 0020 22F00202 		bic	r2, r2, #2
 6381 0024 5A60     		str	r2, [r3, #4]
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 6382              		.loc 1 3297 7
 6383 0026 FFF7FEFF 		bl	HAL_GetTick
 6384 002a 0346     		mov	r3, r0
ARM GAS  /tmp/ccrdcdEL.s 			page 170


 6385 002c 1A46     		mov	r2, r3
 6386 002e 6421     		movs	r1, #100
 6387 0030 7869     		ldr	r0, [r7, #20]
 6388 0032 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 6389 0036 0346     		mov	r3, r0
 6390              		.loc 1 3297 6
 6391 0038 002B     		cmp	r3, #0
 6392 003a 02D0     		beq	.L306
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6393              		.loc 1 3299 21
 6394 003c 7B69     		ldr	r3, [r7, #20]
 6395 003e 4022     		movs	r2, #64
 6396 0040 1A66     		str	r2, [r3, #96]
 6397              	.L306:
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable SPI Peripheral */
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 6398              		.loc 1 3303 3
 6399 0042 7B69     		ldr	r3, [r7, #20]
 6400 0044 1B68     		ldr	r3, [r3]
 6401 0046 1A68     		ldr	r2, [r3]
 6402 0048 7B69     		ldr	r3, [r7, #20]
 6403 004a 1B68     		ldr	r3, [r3]
 6404 004c 22F04002 		bic	r2, r2, #64
 6405 0050 1A60     		str	r2, [r3]
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 6406              		.loc 1 3306 7
 6407 0052 FFF7FEFF 		bl	HAL_GetTick
 6408 0056 0346     		mov	r3, r0
 6409 0058 0093     		str	r3, [sp]
 6410 005a 6423     		movs	r3, #100
 6411 005c 0022     		movs	r2, #0
 6412 005e 4FF4C061 		mov	r1, #1536
 6413 0062 7869     		ldr	r0, [r7, #20]
 6414 0064 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 6415 0068 0346     		mov	r3, r0
 6416              		.loc 1 3306 6
 6417 006a 002B     		cmp	r3, #0
 6418 006c 02D0     		beq	.L307
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6419              		.loc 1 3308 21
 6420 006e 7B69     		ldr	r3, [r7, #20]
 6421 0070 4022     		movs	r2, #64
 6422 0072 1A66     		str	r2, [r3, #96]
 6423              	.L307:
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 6424              		.loc 1 3312 11
 6425 0074 7B69     		ldr	r3, [r7, #20]
 6426 0076 9B6D     		ldr	r3, [r3, #88]
ARM GAS  /tmp/ccrdcdEL.s 			page 171


 6427              		.loc 1 3312 6
 6428 0078 002B     		cmp	r3, #0
 6429 007a 04D0     		beq	.L308
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
 6430              		.loc 1 3314 13
 6431 007c 7B69     		ldr	r3, [r7, #20]
 6432 007e 9B6D     		ldr	r3, [r3, #88]
 6433              		.loc 1 3314 21
 6434 0080 9B6B     		ldr	r3, [r3, #56]
 6435              		.loc 1 3314 8
 6436 0082 002B     		cmp	r3, #0
 6437 0084 27D1     		bne	.L311
 6438              	.L308:
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
3317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 6439              		.loc 1 3321 21
 6440 0086 7B69     		ldr	r3, [r7, #20]
 6441 0088 0022     		movs	r2, #0
 6442 008a A3F84620 		strh	r2, [r3, #70]	@ movhi
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6443              		.loc 1 3322 21
 6444 008e 7B69     		ldr	r3, [r7, #20]
 6445 0090 0022     		movs	r2, #0
 6446 0092 DA87     		strh	r2, [r3, #62]	@ movhi
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check no error during Abort procedure */
3325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 6447              		.loc 1 3325 11
 6448 0094 7B69     		ldr	r3, [r7, #20]
 6449 0096 1B6E     		ldr	r3, [r3, #96]
 6450              		.loc 1 3325 6
 6451 0098 402B     		cmp	r3, #64
 6452 009a 02D0     		beq	.L310
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Reset errorCode */
3328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 6453              		.loc 1 3328 21
 6454 009c 7B69     		ldr	r3, [r7, #20]
 6455 009e 0022     		movs	r2, #0
 6456 00a0 1A66     		str	r2, [r3, #96]
 6457              	.L310:
 6458              	.LBB12:
3329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 6459              		.loc 1 3332 3
 6460 00a2 0023     		movs	r3, #0
 6461 00a4 3B61     		str	r3, [r7, #16]
 6462 00a6 7B69     		ldr	r3, [r7, #20]
 6463 00a8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccrdcdEL.s 			page 172


 6464 00aa DB68     		ldr	r3, [r3, #12]
 6465 00ac 3B61     		str	r3, [r7, #16]
 6466 00ae 7B69     		ldr	r3, [r7, #20]
 6467 00b0 1B68     		ldr	r3, [r3]
 6468 00b2 9B68     		ldr	r3, [r3, #8]
 6469 00b4 3B61     		str	r3, [r7, #16]
 6470 00b6 3B69     		ldr	r3, [r7, #16]
 6471              	.LBE12:
 6472              	.LBB13:
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6473              		.loc 1 3333 3
 6474 00b8 0023     		movs	r3, #0
 6475 00ba FB60     		str	r3, [r7, #12]
 6476 00bc 7B69     		ldr	r3, [r7, #20]
 6477 00be 1B68     		ldr	r3, [r3]
 6478 00c0 9B68     		ldr	r3, [r3, #8]
 6479 00c2 FB60     		str	r3, [r7, #12]
 6480 00c4 FB68     		ldr	r3, [r7, #12]
 6481              	.LBE13:
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 6482              		.loc 1 3336 16
 6483 00c6 7B69     		ldr	r3, [r7, #20]
 6484 00c8 0122     		movs	r2, #1
 6485 00ca 83F85D20 		strb	r2, [r3, #93]
3337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user Abort complete callback */
3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 6486              		.loc 1 3342 3
 6487 00ce 7869     		ldr	r0, [r7, #20]
 6488 00d0 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6489 00d4 00E0     		b	.L305
 6490              	.L311:
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 6491              		.loc 1 3316 7
 6492 00d6 00BF     		nop
 6493              	.L305:
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6494              		.loc 1 3344 1
 6495 00d8 1837     		adds	r7, r7, #24
 6496              	.LCFI204:
 6497              		.cfi_def_cfa_offset 8
 6498 00da BD46     		mov	sp, r7
 6499              	.LCFI205:
 6500              		.cfi_def_cfa_register 13
 6501              		@ sp needed
 6502 00dc 80BD     		pop	{r7, pc}
 6503              		.cfi_endproc
 6504              	.LFE362:
 6506              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 6507              		.align	1
 6508              		.syntax unified
ARM GAS  /tmp/ccrdcdEL.s 			page 173


 6509              		.thumb
 6510              		.thumb_func
 6511              		.fpu fpv4-sp-d16
 6513              	SPI_DMARxAbortCallback:
 6514              	.LFB363:
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hdma DMA handle.
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6515              		.loc 1 3355 1
 6516              		.cfi_startproc
 6517              		@ args = 0, pretend = 0, frame = 24
 6518              		@ frame_needed = 1, uses_anonymous_args = 0
 6519 0000 80B5     		push	{r7, lr}
 6520              	.LCFI206:
 6521              		.cfi_def_cfa_offset 8
 6522              		.cfi_offset 7, -8
 6523              		.cfi_offset 14, -4
 6524 0002 88B0     		sub	sp, sp, #32
 6525              	.LCFI207:
 6526              		.cfi_def_cfa_offset 40
 6527 0004 02AF     		add	r7, sp, #8
 6528              	.LCFI208:
 6529              		.cfi_def_cfa 7, 32
 6530 0006 7860     		str	r0, [r7, #4]
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 6531              		.loc 1 3356 22
 6532 0008 7B68     		ldr	r3, [r7, #4]
 6533 000a 9B6A     		ldr	r3, [r3, #40]
 6534 000c 7B61     		str	r3, [r7, #20]
3357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable SPI Peripheral */
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 6535              		.loc 1 3359 3
 6536 000e 7B69     		ldr	r3, [r7, #20]
 6537 0010 1B68     		ldr	r3, [r3]
 6538 0012 1A68     		ldr	r2, [r3]
 6539 0014 7B69     		ldr	r3, [r7, #20]
 6540 0016 1B68     		ldr	r3, [r3]
 6541 0018 22F04002 		bic	r2, r2, #64
 6542 001c 1A60     		str	r2, [r3]
3360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 6543              		.loc 1 3361 7
 6544 001e 7B69     		ldr	r3, [r7, #20]
 6545 0020 9B6D     		ldr	r3, [r3, #88]
 6546              		.loc 1 3361 35
 6547 0022 0022     		movs	r2, #0
 6548 0024 9A63     		str	r2, [r3, #56]
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 174


3363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable Rx DMA Request */
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 6549              		.loc 1 3364 3
 6550 0026 7B69     		ldr	r3, [r7, #20]
 6551 0028 1B68     		ldr	r3, [r3]
 6552 002a 5A68     		ldr	r2, [r3, #4]
 6553 002c 7B69     		ldr	r3, [r7, #20]
 6554 002e 1B68     		ldr	r3, [r3]
 6555 0030 22F00102 		bic	r2, r2, #1
 6556 0034 5A60     		str	r2, [r3, #4]
3365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Control the BSY flag */
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 6557              		.loc 1 3367 7
 6558 0036 FFF7FEFF 		bl	HAL_GetTick
 6559 003a 0346     		mov	r3, r0
 6560 003c 0093     		str	r3, [sp]
 6561 003e 6423     		movs	r3, #100
 6562 0040 0022     		movs	r2, #0
 6563 0042 8021     		movs	r1, #128
 6564 0044 7869     		ldr	r0, [r7, #20]
 6565 0046 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6566 004a 0346     		mov	r3, r0
 6567              		.loc 1 3367 6
 6568 004c 002B     		cmp	r3, #0
 6569 004e 02D0     		beq	.L313
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6570              		.loc 1 3369 21
 6571 0050 7B69     		ldr	r3, [r7, #20]
 6572 0052 4022     		movs	r2, #64
 6573 0054 1A66     		str	r2, [r3, #96]
 6574              	.L313:
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 6575              		.loc 1 3373 7
 6576 0056 FFF7FEFF 		bl	HAL_GetTick
 6577 005a 0346     		mov	r3, r0
 6578 005c 0093     		str	r3, [sp]
 6579 005e 6423     		movs	r3, #100
 6580 0060 0022     		movs	r2, #0
 6581 0062 4FF4C061 		mov	r1, #1536
 6582 0066 7869     		ldr	r0, [r7, #20]
 6583 0068 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 6584 006c 0346     		mov	r3, r0
 6585              		.loc 1 3373 6
 6586 006e 002B     		cmp	r3, #0
 6587 0070 02D0     		beq	.L314
3374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 6588              		.loc 1 3375 21
 6589 0072 7B69     		ldr	r3, [r7, #20]
 6590 0074 4022     		movs	r2, #64
 6591 0076 1A66     		str	r2, [r3, #96]
 6592              	.L314:
ARM GAS  /tmp/ccrdcdEL.s 			page 175


3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 6593              		.loc 1 3379 11
 6594 0078 7B69     		ldr	r3, [r7, #20]
 6595 007a 5B6D     		ldr	r3, [r3, #84]
 6596              		.loc 1 3379 6
 6597 007c 002B     		cmp	r3, #0
 6598 007e 04D0     		beq	.L315
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
 6599              		.loc 1 3381 13
 6600 0080 7B69     		ldr	r3, [r7, #20]
 6601 0082 5B6D     		ldr	r3, [r3, #84]
 6602              		.loc 1 3381 21
 6603 0084 9B6B     		ldr	r3, [r3, #56]
 6604              		.loc 1 3381 8
 6605 0086 002B     		cmp	r3, #0
 6606 0088 27D1     		bne	.L318
 6607              	.L315:
3382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 6608              		.loc 1 3388 21
 6609 008a 7B69     		ldr	r3, [r7, #20]
 6610 008c 0022     		movs	r2, #0
 6611 008e A3F84620 		strh	r2, [r3, #70]	@ movhi
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 6612              		.loc 1 3389 21
 6613 0092 7B69     		ldr	r3, [r7, #20]
 6614 0094 0022     		movs	r2, #0
 6615 0096 DA87     		strh	r2, [r3, #62]	@ movhi
3390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check no error during Abort procedure */
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 6616              		.loc 1 3392 11
 6617 0098 7B69     		ldr	r3, [r7, #20]
 6618 009a 1B6E     		ldr	r3, [r3, #96]
 6619              		.loc 1 3392 6
 6620 009c 402B     		cmp	r3, #64
 6621 009e 02D0     		beq	.L317
3393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Reset errorCode */
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 6622              		.loc 1 3395 21
 6623 00a0 7B69     		ldr	r3, [r7, #20]
 6624 00a2 0022     		movs	r2, #0
 6625 00a4 1A66     		str	r2, [r3, #96]
 6626              	.L317:
 6627              	.LBB14:
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
ARM GAS  /tmp/ccrdcdEL.s 			page 176


3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 6628              		.loc 1 3399 3
 6629 00a6 0023     		movs	r3, #0
 6630 00a8 3B61     		str	r3, [r7, #16]
 6631 00aa 7B69     		ldr	r3, [r7, #20]
 6632 00ac 1B68     		ldr	r3, [r3]
 6633 00ae DB68     		ldr	r3, [r3, #12]
 6634 00b0 3B61     		str	r3, [r7, #16]
 6635 00b2 7B69     		ldr	r3, [r7, #20]
 6636 00b4 1B68     		ldr	r3, [r3]
 6637 00b6 9B68     		ldr	r3, [r3, #8]
 6638 00b8 3B61     		str	r3, [r7, #16]
 6639 00ba 3B69     		ldr	r3, [r7, #16]
 6640              	.LBE14:
 6641              	.LBB15:
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6642              		.loc 1 3400 3
 6643 00bc 0023     		movs	r3, #0
 6644 00be FB60     		str	r3, [r7, #12]
 6645 00c0 7B69     		ldr	r3, [r7, #20]
 6646 00c2 1B68     		ldr	r3, [r3]
 6647 00c4 9B68     		ldr	r3, [r3, #8]
 6648 00c6 FB60     		str	r3, [r7, #12]
 6649 00c8 FB68     		ldr	r3, [r7, #12]
 6650              	.LBE15:
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 6651              		.loc 1 3403 16
 6652 00ca 7B69     		ldr	r3, [r7, #20]
 6653 00cc 0122     		movs	r2, #1
 6654 00ce 83F85D20 		strb	r2, [r3, #93]
3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Call user Abort complete callback */
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 6655              		.loc 1 3409 3
 6656 00d2 7869     		ldr	r0, [r7, #20]
 6657 00d4 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6658 00d8 00E0     		b	.L312
 6659              	.L318:
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
 6660              		.loc 1 3383 7
 6661 00da 00BF     		nop
 6662              	.L312:
3410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6663              		.loc 1 3411 1
 6664 00dc 1837     		adds	r7, r7, #24
 6665              	.LCFI209:
 6666              		.cfi_def_cfa_offset 8
 6667 00de BD46     		mov	sp, r7
 6668              	.LCFI210:
 6669              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccrdcdEL.s 			page 177


 6670              		@ sp needed
 6671 00e0 80BD     		pop	{r7, pc}
 6672              		.cfi_endproc
 6673              	.LFE363:
 6675              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 6676              		.align	1
 6677              		.syntax unified
 6678              		.thumb
 6679              		.thumb_func
 6680              		.fpu fpv4-sp-d16
 6682              	SPI_2linesRxISR_8BIT:
 6683              	.LFB364:
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6684              		.loc 1 3420 1
 6685              		.cfi_startproc
 6686              		@ args = 0, pretend = 0, frame = 8
 6687              		@ frame_needed = 1, uses_anonymous_args = 0
 6688 0000 80B5     		push	{r7, lr}
 6689              	.LCFI211:
 6690              		.cfi_def_cfa_offset 8
 6691              		.cfi_offset 7, -8
 6692              		.cfi_offset 14, -4
 6693 0002 82B0     		sub	sp, sp, #8
 6694              	.LCFI212:
 6695              		.cfi_def_cfa_offset 16
 6696 0004 00AF     		add	r7, sp, #0
 6697              	.LCFI213:
 6698              		.cfi_def_cfa_register 7
 6699 0006 7860     		str	r0, [r7, #4]
3421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Receive data in packing mode */
3422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->RxXferCount > 1U)
 6700              		.loc 1 3422 11
 6701 0008 7B68     		ldr	r3, [r7, #4]
 6702 000a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6703 000e 9BB2     		uxth	r3, r3
 6704              		.loc 1 3422 6
 6705 0010 012B     		cmp	r3, #1
 6706 0012 23D9     		bls	.L320
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 6707              		.loc 1 3424 54
 6708 0014 7B68     		ldr	r3, [r7, #4]
 6709 0016 1B68     		ldr	r3, [r3]
 6710              		.loc 1 3424 64
 6711 0018 DA68     		ldr	r2, [r3, #12]
 6712              		.loc 1 3424 23
 6713 001a 7B68     		ldr	r3, [r7, #4]
 6714 001c 1B6C     		ldr	r3, [r3, #64]
 6715              		.loc 1 3424 39
ARM GAS  /tmp/ccrdcdEL.s 			page 178


 6716 001e 92B2     		uxth	r2, r2
 6717              		.loc 1 3424 37
 6718 0020 1A80     		strh	r2, [r3]	@ movhi
3425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
 6719              		.loc 1 3425 22
 6720 0022 7B68     		ldr	r3, [r7, #4]
 6721 0024 1B6C     		ldr	r3, [r3, #64]
 6722 0026 9A1C     		adds	r2, r3, #2
 6723 0028 7B68     		ldr	r3, [r7, #4]
 6724 002a 1A64     		str	r2, [r3, #64]
3426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
 6725              		.loc 1 3426 23
 6726 002c 7B68     		ldr	r3, [r7, #4]
 6727 002e B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6728 0032 9BB2     		uxth	r3, r3
 6729 0034 023B     		subs	r3, r3, #2
 6730 0036 9AB2     		uxth	r2, r3
 6731 0038 7B68     		ldr	r3, [r7, #4]
 6732 003a A3F84620 		strh	r2, [r3, #70]	@ movhi
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
 6733              		.loc 1 3427 13
 6734 003e 7B68     		ldr	r3, [r7, #4]
 6735 0040 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6736 0044 9BB2     		uxth	r3, r3
 6737              		.loc 1 3427 8
 6738 0046 012B     		cmp	r3, #1
 6739 0048 1FD1     		bne	.L322
3428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 8bit */
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 6740              		.loc 1 3430 7
 6741 004a 7B68     		ldr	r3, [r7, #4]
 6742 004c 1B68     		ldr	r3, [r3]
 6743 004e 5A68     		ldr	r2, [r3, #4]
 6744 0050 7B68     		ldr	r3, [r7, #4]
 6745 0052 1B68     		ldr	r3, [r3]
 6746 0054 42F48052 		orr	r2, r2, #4096
 6747 0058 5A60     		str	r2, [r3, #4]
 6748 005a 16E0     		b	.L322
 6749              	.L320:
3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
 6750              		.loc 1 3436 48
 6751 005c 7B68     		ldr	r3, [r7, #4]
 6752 005e 1B68     		ldr	r3, [r3]
 6753              		.loc 1 3436 43
 6754 0060 03F10C02 		add	r2, r3, #12
 6755              		.loc 1 3436 10
 6756 0064 7B68     		ldr	r3, [r7, #4]
 6757 0066 1B6C     		ldr	r3, [r3, #64]
 6758              		.loc 1 3436 25
 6759 0068 1278     		ldrb	r2, [r2]
 6760 006a D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccrdcdEL.s 			page 179


 6761              		.loc 1 3436 23
 6762 006c 1A70     		strb	r2, [r3]
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->pRxBuffPtr++;
 6763              		.loc 1 3437 9
 6764 006e 7B68     		ldr	r3, [r7, #4]
 6765 0070 1B6C     		ldr	r3, [r3, #64]
 6766              		.loc 1 3437 21
 6767 0072 5A1C     		adds	r2, r3, #1
 6768 0074 7B68     		ldr	r3, [r7, #4]
 6769 0076 1A64     		str	r2, [r3, #64]
3438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->RxXferCount--;
 6770              		.loc 1 3438 9
 6771 0078 7B68     		ldr	r3, [r7, #4]
 6772 007a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6773 007e 9BB2     		uxth	r3, r3
 6774              		.loc 1 3438 22
 6775 0080 013B     		subs	r3, r3, #1
 6776 0082 9AB2     		uxth	r2, r3
 6777 0084 7B68     		ldr	r3, [r7, #4]
 6778 0086 A3F84620 		strh	r2, [r3, #70]	@ movhi
 6779              	.L322:
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check end of the reception */
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6780              		.loc 1 3442 11
 6781 008a 7B68     		ldr	r3, [r7, #4]
 6782 008c B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6783 0090 9BB2     		uxth	r3, r3
 6784              		.loc 1 3442 6
 6785 0092 002B     		cmp	r3, #0
 6786 0094 0FD1     		bne	.L324
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
3450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 6787              		.loc 1 3454 5
 6788 0096 7B68     		ldr	r3, [r7, #4]
 6789 0098 1B68     		ldr	r3, [r3]
 6790 009a 5A68     		ldr	r2, [r3, #4]
 6791 009c 7B68     		ldr	r3, [r7, #4]
 6792 009e 1B68     		ldr	r3, [r3]
 6793 00a0 22F06002 		bic	r2, r2, #96
 6794 00a4 5A60     		str	r2, [r3, #4]
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 6795              		.loc 1 3456 13
 6796 00a6 7B68     		ldr	r3, [r7, #4]
 6797 00a8 DB8F     		ldrh	r3, [r3, #62]	@ movhi
ARM GAS  /tmp/ccrdcdEL.s 			page 180


 6798 00aa 9BB2     		uxth	r3, r3
 6799              		.loc 1 3456 8
 6800 00ac 002B     		cmp	r3, #0
 6801 00ae 02D1     		bne	.L324
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6802              		.loc 1 3458 7
 6803 00b0 7868     		ldr	r0, [r7, #4]
 6804 00b2 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6805              	.L324:
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6806              		.loc 1 3461 1
 6807 00b6 00BF     		nop
 6808 00b8 0837     		adds	r7, r7, #8
 6809              	.LCFI214:
 6810              		.cfi_def_cfa_offset 8
 6811 00ba BD46     		mov	sp, r7
 6812              	.LCFI215:
 6813              		.cfi_def_cfa_register 13
 6814              		@ sp needed
 6815 00bc 80BD     		pop	{r7, pc}
 6816              		.cfi_endproc
 6817              	.LFE364:
 6819              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 6820              		.align	1
 6821              		.syntax unified
 6822              		.thumb
 6823              		.thumb_func
 6824              		.fpu fpv4-sp-d16
 6826              	SPI_2linesTxISR_8BIT:
 6827              	.LFB365:
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
3472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->CRCSize--;
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check end of the reception */
3478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
ARM GAS  /tmp/ccrdcdEL.s 			page 181


3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
3489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6828              		.loc 1 3498 1
 6829              		.cfi_startproc
 6830              		@ args = 0, pretend = 0, frame = 8
 6831              		@ frame_needed = 1, uses_anonymous_args = 0
 6832 0000 80B5     		push	{r7, lr}
 6833              	.LCFI216:
 6834              		.cfi_def_cfa_offset 8
 6835              		.cfi_offset 7, -8
 6836              		.cfi_offset 14, -4
 6837 0002 82B0     		sub	sp, sp, #8
 6838              	.LCFI217:
 6839              		.cfi_def_cfa_offset 16
 6840 0004 00AF     		add	r7, sp, #0
 6841              	.LCFI218:
 6842              		.cfi_def_cfa_register 7
 6843 0006 7860     		str	r0, [r7, #4]
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->TxXferCount >= 2U)
 6844              		.loc 1 3500 11
 6845 0008 7B68     		ldr	r3, [r7, #4]
 6846 000a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6847 000c 9BB2     		uxth	r3, r3
 6848              		.loc 1 3500 6
 6849 000e 012B     		cmp	r3, #1
 6850 0010 12D9     		bls	.L326
3501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6851              		.loc 1 3502 44
 6852 0012 7B68     		ldr	r3, [r7, #4]
 6853 0014 9B6B     		ldr	r3, [r3, #56]
 6854              		.loc 1 3502 26
 6855 0016 1A88     		ldrh	r2, [r3]
 6856              		.loc 1 3502 9
 6857 0018 7B68     		ldr	r3, [r7, #4]
 6858 001a 1B68     		ldr	r3, [r3]
 6859              		.loc 1 3502 24
 6860 001c DA60     		str	r2, [r3, #12]
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
 6861              		.loc 1 3503 22
 6862 001e 7B68     		ldr	r3, [r7, #4]
 6863 0020 9B6B     		ldr	r3, [r3, #56]
 6864 0022 9A1C     		adds	r2, r3, #2
 6865 0024 7B68     		ldr	r3, [r7, #4]
 6866 0026 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/ccrdcdEL.s 			page 182


3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
 6867              		.loc 1 3504 23
 6868 0028 7B68     		ldr	r3, [r7, #4]
 6869 002a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6870 002c 9BB2     		uxth	r3, r3
 6871 002e 023B     		subs	r3, r3, #2
 6872 0030 9AB2     		uxth	r2, r3
 6873 0032 7B68     		ldr	r3, [r7, #4]
 6874 0034 DA87     		strh	r2, [r3, #62]	@ movhi
 6875 0036 12E0     		b	.L327
 6876              	.L326:
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 6877              		.loc 1 3509 50
 6878 0038 7B68     		ldr	r3, [r7, #4]
 6879 003a 9A6B     		ldr	r2, [r3, #56]
 6880              		.loc 1 3509 27
 6881 003c 7B68     		ldr	r3, [r7, #4]
 6882 003e 1B68     		ldr	r3, [r3]
 6883              		.loc 1 3509 22
 6884 0040 0C33     		adds	r3, r3, #12
 6885              		.loc 1 3509 45
 6886 0042 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6887              		.loc 1 3509 42
 6888 0044 1A70     		strb	r2, [r3]
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->pTxBuffPtr++;
 6889              		.loc 1 3510 9
 6890 0046 7B68     		ldr	r3, [r7, #4]
 6891 0048 9B6B     		ldr	r3, [r3, #56]
 6892              		.loc 1 3510 21
 6893 004a 5A1C     		adds	r2, r3, #1
 6894 004c 7B68     		ldr	r3, [r7, #4]
 6895 004e 9A63     		str	r2, [r3, #56]
3511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxXferCount--;
 6896              		.loc 1 3511 9
 6897 0050 7B68     		ldr	r3, [r7, #4]
 6898 0052 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6899 0054 9BB2     		uxth	r3, r3
 6900              		.loc 1 3511 22
 6901 0056 013B     		subs	r3, r3, #1
 6902 0058 9AB2     		uxth	r2, r3
 6903 005a 7B68     		ldr	r3, [r7, #4]
 6904 005c DA87     		strh	r2, [r3, #62]	@ movhi
 6905              	.L327:
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the end of the transmission */
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6906              		.loc 1 3515 11
 6907 005e 7B68     		ldr	r3, [r7, #4]
 6908 0060 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6909 0062 9BB2     		uxth	r3, r3
 6910              		.loc 1 3515 6
 6911 0064 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrdcdEL.s 			page 183


 6912 0066 10D1     		bne	.L329
3516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Disable TXE interrupt */
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable TXE interrupt */
3529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6913              		.loc 1 3529 5
 6914 0068 7B68     		ldr	r3, [r7, #4]
 6915 006a 1B68     		ldr	r3, [r3]
 6916 006c 5A68     		ldr	r2, [r3, #4]
 6917 006e 7B68     		ldr	r3, [r7, #4]
 6918 0070 1B68     		ldr	r3, [r3]
 6919 0072 22F08002 		bic	r2, r2, #128
 6920 0076 5A60     		str	r2, [r3, #4]
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6921              		.loc 1 3531 13
 6922 0078 7B68     		ldr	r3, [r7, #4]
 6923 007a B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6924 007e 9BB2     		uxth	r3, r3
 6925              		.loc 1 3531 8
 6926 0080 002B     		cmp	r3, #0
 6927 0082 02D1     		bne	.L329
3532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6928              		.loc 1 3533 7
 6929 0084 7868     		ldr	r0, [r7, #4]
 6930 0086 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6931              	.L329:
3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 6932              		.loc 1 3536 1
 6933 008a 00BF     		nop
 6934 008c 0837     		adds	r7, r7, #8
 6935              	.LCFI219:
 6936              		.cfi_def_cfa_offset 8
 6937 008e BD46     		mov	sp, r7
 6938              	.LCFI220:
 6939              		.cfi_def_cfa_register 13
 6940              		@ sp needed
 6941 0090 80BD     		pop	{r7, pc}
 6942              		.cfi_endproc
 6943              	.LFE365:
 6945              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 6946              		.align	1
 6947              		.syntax unified
 6948              		.thumb
ARM GAS  /tmp/ccrdcdEL.s 			page 184


 6949              		.thumb_func
 6950              		.fpu fpv4-sp-d16
 6952              	SPI_2linesRxISR_16BIT:
 6953              	.LFB366:
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 6954              		.loc 1 3545 1
 6955              		.cfi_startproc
 6956              		@ args = 0, pretend = 0, frame = 8
 6957              		@ frame_needed = 1, uses_anonymous_args = 0
 6958 0000 80B5     		push	{r7, lr}
 6959              	.LCFI221:
 6960              		.cfi_def_cfa_offset 8
 6961              		.cfi_offset 7, -8
 6962              		.cfi_offset 14, -4
 6963 0002 82B0     		sub	sp, sp, #8
 6964              	.LCFI222:
 6965              		.cfi_def_cfa_offset 16
 6966 0004 00AF     		add	r7, sp, #0
 6967              	.LCFI223:
 6968              		.cfi_def_cfa_register 7
 6969 0006 7860     		str	r0, [r7, #4]
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 6970              		.loc 1 3547 52
 6971 0008 7B68     		ldr	r3, [r7, #4]
 6972 000a 1B68     		ldr	r3, [r3]
 6973              		.loc 1 3547 62
 6974 000c DA68     		ldr	r2, [r3, #12]
 6975              		.loc 1 3547 21
 6976 000e 7B68     		ldr	r3, [r7, #4]
 6977 0010 1B6C     		ldr	r3, [r3, #64]
 6978              		.loc 1 3547 37
 6979 0012 92B2     		uxth	r2, r2
 6980              		.loc 1 3547 35
 6981 0014 1A80     		strh	r2, [r3]	@ movhi
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 6982              		.loc 1 3548 20
 6983 0016 7B68     		ldr	r3, [r7, #4]
 6984 0018 1B6C     		ldr	r3, [r3, #64]
 6985 001a 9A1C     		adds	r2, r3, #2
 6986 001c 7B68     		ldr	r3, [r7, #4]
 6987 001e 1A64     		str	r2, [r3, #64]
3549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount--;
 6988              		.loc 1 3549 7
 6989 0020 7B68     		ldr	r3, [r7, #4]
 6990 0022 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 6991 0026 9BB2     		uxth	r3, r3
 6992              		.loc 1 3549 20
 6993 0028 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccrdcdEL.s 			page 185


 6994 002a 9AB2     		uxth	r2, r3
 6995 002c 7B68     		ldr	r3, [r7, #4]
 6996 002e A3F84620 		strh	r2, [r3, #70]	@ movhi
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6997              		.loc 1 3551 11
 6998 0032 7B68     		ldr	r3, [r7, #4]
 6999 0034 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 7000 0038 9BB2     		uxth	r3, r3
 7001              		.loc 1 3551 6
 7002 003a 002B     		cmp	r3, #0
 7003 003c 0FD1     		bne	.L332
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
3558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable RXNE interrupt */
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
 7004              		.loc 1 3562 5
 7005 003e 7B68     		ldr	r3, [r7, #4]
 7006 0040 1B68     		ldr	r3, [r3]
 7007 0042 5A68     		ldr	r2, [r3, #4]
 7008 0044 7B68     		ldr	r3, [r7, #4]
 7009 0046 1B68     		ldr	r3, [r3]
 7010 0048 22F04002 		bic	r2, r2, #64
 7011 004c 5A60     		str	r2, [r3, #4]
3563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 7012              		.loc 1 3564 13
 7013 004e 7B68     		ldr	r3, [r7, #4]
 7014 0050 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 7015 0052 9BB2     		uxth	r3, r3
 7016              		.loc 1 3564 8
 7017 0054 002B     		cmp	r3, #0
 7018 0056 02D1     		bne	.L332
3565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 7019              		.loc 1 3566 7
 7020 0058 7868     		ldr	r0, [r7, #4]
 7021 005a FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 7022              	.L332:
3567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7023              		.loc 1 3569 1
 7024 005e 00BF     		nop
 7025 0060 0837     		adds	r7, r7, #8
 7026              	.LCFI224:
 7027              		.cfi_def_cfa_offset 8
 7028 0062 BD46     		mov	sp, r7
 7029              	.LCFI225:
 7030              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccrdcdEL.s 			page 186


 7031              		@ sp needed
 7032 0064 80BD     		pop	{r7, pc}
 7033              		.cfi_endproc
 7034              	.LFE366:
 7036              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 7037              		.align	1
 7038              		.syntax unified
 7039              		.thumb
 7040              		.thumb_func
 7041              		.fpu fpv4-sp-d16
 7043              	SPI_2linesTxISR_16BIT:
 7044              	.LFB367:
3570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable RXNE interrupt */
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7045              		.loc 1 3597 1
 7046              		.cfi_startproc
 7047              		@ args = 0, pretend = 0, frame = 8
 7048              		@ frame_needed = 1, uses_anonymous_args = 0
 7049 0000 80B5     		push	{r7, lr}
 7050              	.LCFI226:
 7051              		.cfi_def_cfa_offset 8
 7052              		.cfi_offset 7, -8
 7053              		.cfi_offset 14, -4
 7054 0002 82B0     		sub	sp, sp, #8
 7055              	.LCFI227:
 7056              		.cfi_def_cfa_offset 16
 7057 0004 00AF     		add	r7, sp, #0
 7058              	.LCFI228:
 7059              		.cfi_def_cfa_register 7
 7060 0006 7860     		str	r0, [r7, #4]
3598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
ARM GAS  /tmp/ccrdcdEL.s 			page 187


3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 7061              		.loc 1 3599 42
 7062 0008 7B68     		ldr	r3, [r7, #4]
 7063 000a 9B6B     		ldr	r3, [r3, #56]
 7064              		.loc 1 3599 24
 7065 000c 1A88     		ldrh	r2, [r3]
 7066              		.loc 1 3599 7
 7067 000e 7B68     		ldr	r3, [r7, #4]
 7068 0010 1B68     		ldr	r3, [r3]
 7069              		.loc 1 3599 22
 7070 0012 DA60     		str	r2, [r3, #12]
3600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 7071              		.loc 1 3600 20
 7072 0014 7B68     		ldr	r3, [r7, #4]
 7073 0016 9B6B     		ldr	r3, [r3, #56]
 7074 0018 9A1C     		adds	r2, r3, #2
 7075 001a 7B68     		ldr	r3, [r7, #4]
 7076 001c 9A63     		str	r2, [r3, #56]
3601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount--;
 7077              		.loc 1 3601 7
 7078 001e 7B68     		ldr	r3, [r7, #4]
 7079 0020 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 7080 0022 9BB2     		uxth	r3, r3
 7081              		.loc 1 3601 20
 7082 0024 013B     		subs	r3, r3, #1
 7083 0026 9AB2     		uxth	r2, r3
 7084 0028 7B68     		ldr	r3, [r7, #4]
 7085 002a DA87     		strh	r2, [r3, #62]	@ movhi
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable CRC Transmission */
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 7086              		.loc 1 3604 11
 7087 002c 7B68     		ldr	r3, [r7, #4]
 7088 002e DB8F     		ldrh	r3, [r3, #62]	@ movhi
 7089 0030 9BB2     		uxth	r3, r3
 7090              		.loc 1 3604 6
 7091 0032 002B     		cmp	r3, #0
 7092 0034 10D1     		bne	.L335
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Disable TXE interrupt */
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable TXE interrupt */
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 7093              		.loc 1 3618 5
 7094 0036 7B68     		ldr	r3, [r7, #4]
 7095 0038 1B68     		ldr	r3, [r3]
 7096 003a 5A68     		ldr	r2, [r3, #4]
 7097 003c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 188


 7098 003e 1B68     		ldr	r3, [r3]
 7099 0040 22F08002 		bic	r2, r2, #128
 7100 0044 5A60     		str	r2, [r3, #4]
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 7101              		.loc 1 3620 13
 7102 0046 7B68     		ldr	r3, [r7, #4]
 7103 0048 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 7104 004c 9BB2     		uxth	r3, r3
 7105              		.loc 1 3620 8
 7106 004e 002B     		cmp	r3, #0
 7107 0050 02D1     		bne	.L335
3621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 7108              		.loc 1 3622 7
 7109 0052 7868     		ldr	r0, [r7, #4]
 7110 0054 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 7111              	.L335:
3623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7112              		.loc 1 3625 1
 7113 0058 00BF     		nop
 7114 005a 0837     		adds	r7, r7, #8
 7115              	.LCFI229:
 7116              		.cfi_def_cfa_offset 8
 7117 005c BD46     		mov	sp, r7
 7118              	.LCFI230:
 7119              		.cfi_def_cfa_register 13
 7120              		@ sp needed
 7121 005e 80BD     		pop	{r7, pc}
 7122              		.cfi_endproc
 7123              	.LFE367:
 7125              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 7126              		.align	1
 7127              		.syntax unified
 7128              		.thumb
 7129              		.thumb_func
 7130              		.fpu fpv4-sp-d16
 7132              	SPI_RxISR_8BIT:
 7133              	.LFB368:
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
3636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->CRCSize--;
3640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
ARM GAS  /tmp/ccrdcdEL.s 			page 189


3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7134              		.loc 1 3655 1
 7135              		.cfi_startproc
 7136              		@ args = 0, pretend = 0, frame = 8
 7137              		@ frame_needed = 1, uses_anonymous_args = 0
 7138 0000 80B5     		push	{r7, lr}
 7139              	.LCFI231:
 7140              		.cfi_def_cfa_offset 8
 7141              		.cfi_offset 7, -8
 7142              		.cfi_offset 14, -4
 7143 0002 82B0     		sub	sp, sp, #8
 7144              	.LCFI232:
 7145              		.cfi_def_cfa_offset 16
 7146 0004 00AF     		add	r7, sp, #0
 7147              	.LCFI233:
 7148              		.cfi_def_cfa_register 7
 7149 0006 7860     		str	r0, [r7, #4]
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 7150              		.loc 1 3656 46
 7151 0008 7B68     		ldr	r3, [r7, #4]
 7152 000a 1B68     		ldr	r3, [r3]
 7153              		.loc 1 3656 41
 7154 000c 03F10C02 		add	r2, r3, #12
 7155              		.loc 1 3656 8
 7156 0010 7B68     		ldr	r3, [r7, #4]
 7157 0012 1B6C     		ldr	r3, [r3, #64]
 7158              		.loc 1 3656 24
 7159 0014 1278     		ldrb	r2, [r2]
 7160 0016 D2B2     		uxtb	r2, r2
 7161              		.loc 1 3656 21
 7162 0018 1A70     		strb	r2, [r3]
3657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 7163              		.loc 1 3657 7
 7164 001a 7B68     		ldr	r3, [r7, #4]
 7165 001c 1B6C     		ldr	r3, [r3, #64]
 7166              		.loc 1 3657 19
 7167 001e 5A1C     		adds	r2, r3, #1
 7168 0020 7B68     		ldr	r3, [r7, #4]
 7169 0022 1A64     		str	r2, [r3, #64]
3658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount--;
 7170              		.loc 1 3658 7
 7171 0024 7B68     		ldr	r3, [r7, #4]
 7172 0026 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 7173 002a 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccrdcdEL.s 			page 190


 7174              		.loc 1 3658 20
 7175 002c 013B     		subs	r3, r3, #1
 7176 002e 9AB2     		uxth	r2, r3
 7177 0030 7B68     		ldr	r3, [r7, #4]
 7178 0032 A3F84620 		strh	r2, [r3, #70]	@ movhi
3659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable CRC Transmission */
3662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 7179              		.loc 1 3668 11
 7180 0036 7B68     		ldr	r3, [r7, #4]
 7181 0038 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 7182 003c 9BB2     		uxth	r3, r3
 7183              		.loc 1 3668 6
 7184 003e 002B     		cmp	r3, #0
 7185 0040 02D1     		bne	.L338
3669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
3675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 7186              		.loc 1 3677 5
 7187 0042 7868     		ldr	r0, [r7, #4]
 7188 0044 FFF7FEFF 		bl	SPI_CloseRx_ISR
 7189              	.L338:
3678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7190              		.loc 1 3679 1
 7191 0048 00BF     		nop
 7192 004a 0837     		adds	r7, r7, #8
 7193              	.LCFI234:
 7194              		.cfi_def_cfa_offset 8
 7195 004c BD46     		mov	sp, r7
 7196              	.LCFI235:
 7197              		.cfi_def_cfa_register 13
 7198              		@ sp needed
 7199 004e 80BD     		pop	{r7, pc}
 7200              		.cfi_endproc
 7201              	.LFE368:
 7203              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 7204              		.align	1
 7205              		.syntax unified
 7206              		.thumb
 7207              		.thumb_func
 7208              		.fpu fpv4-sp-d16
 7210              	SPI_RxISR_16BIT:
 7211              	.LFB369:
ARM GAS  /tmp/ccrdcdEL.s 			page 191


3680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
3690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
3698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7212              		.loc 1 3707 1
 7213              		.cfi_startproc
 7214              		@ args = 0, pretend = 0, frame = 8
 7215              		@ frame_needed = 1, uses_anonymous_args = 0
 7216 0000 80B5     		push	{r7, lr}
 7217              	.LCFI236:
 7218              		.cfi_def_cfa_offset 8
 7219              		.cfi_offset 7, -8
 7220              		.cfi_offset 14, -4
 7221 0002 82B0     		sub	sp, sp, #8
 7222              	.LCFI237:
 7223              		.cfi_def_cfa_offset 16
 7224 0004 00AF     		add	r7, sp, #0
 7225              	.LCFI238:
 7226              		.cfi_def_cfa_register 7
 7227 0006 7860     		str	r0, [r7, #4]
3708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 7228              		.loc 1 3708 52
 7229 0008 7B68     		ldr	r3, [r7, #4]
 7230 000a 1B68     		ldr	r3, [r3]
 7231              		.loc 1 3708 62
 7232 000c DA68     		ldr	r2, [r3, #12]
 7233              		.loc 1 3708 21
 7234 000e 7B68     		ldr	r3, [r7, #4]
 7235 0010 1B6C     		ldr	r3, [r3, #64]
 7236              		.loc 1 3708 37
 7237 0012 92B2     		uxth	r2, r2
 7238              		.loc 1 3708 35
 7239 0014 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccrdcdEL.s 			page 192


3709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 7240              		.loc 1 3709 20
 7241 0016 7B68     		ldr	r3, [r7, #4]
 7242 0018 1B6C     		ldr	r3, [r3, #64]
 7243 001a 9A1C     		adds	r2, r3, #2
 7244 001c 7B68     		ldr	r3, [r7, #4]
 7245 001e 1A64     		str	r2, [r3, #64]
3710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->RxXferCount--;
 7246              		.loc 1 3710 7
 7247 0020 7B68     		ldr	r3, [r7, #4]
 7248 0022 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 7249 0026 9BB2     		uxth	r3, r3
 7250              		.loc 1 3710 20
 7251 0028 013B     		subs	r3, r3, #1
 7252 002a 9AB2     		uxth	r2, r3
 7253 002c 7B68     		ldr	r3, [r7, #4]
 7254 002e A3F84620 		strh	r2, [r3, #70]	@ movhi
3711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Enable CRC Transmission */
3714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 7255              		.loc 1 3720 11
 7256 0032 7B68     		ldr	r3, [r7, #4]
 7257 0034 B3F84630 		ldrh	r3, [r3, #70]	@ movhi
 7258 0038 9BB2     		uxth	r3, r3
 7259              		.loc 1 3720 6
 7260 003a 002B     		cmp	r3, #0
 7261 003c 02D1     		bne	.L341
3721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return;
3727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 7262              		.loc 1 3729 5
 7263 003e 7868     		ldr	r0, [r7, #4]
 7264 0040 FFF7FEFF 		bl	SPI_CloseRx_ISR
 7265              	.L341:
3730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7266              		.loc 1 3731 1
 7267 0044 00BF     		nop
 7268 0046 0837     		adds	r7, r7, #8
 7269              	.LCFI239:
 7270              		.cfi_def_cfa_offset 8
 7271 0048 BD46     		mov	sp, r7
 7272              	.LCFI240:
 7273              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccrdcdEL.s 			page 193


 7274              		@ sp needed
 7275 004a 80BD     		pop	{r7, pc}
 7276              		.cfi_endproc
 7277              	.LFE369:
 7279              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 7280              		.align	1
 7281              		.syntax unified
 7282              		.thumb
 7283              		.thumb_func
 7284              		.fpu fpv4-sp-d16
 7286              	SPI_TxISR_8BIT:
 7287              	.LFB370:
3732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7288              		.loc 1 3740 1
 7289              		.cfi_startproc
 7290              		@ args = 0, pretend = 0, frame = 8
 7291              		@ frame_needed = 1, uses_anonymous_args = 0
 7292 0000 80B5     		push	{r7, lr}
 7293              	.LCFI241:
 7294              		.cfi_def_cfa_offset 8
 7295              		.cfi_offset 7, -8
 7296              		.cfi_offset 14, -4
 7297 0002 82B0     		sub	sp, sp, #8
 7298              	.LCFI242:
 7299              		.cfi_def_cfa_offset 16
 7300 0004 00AF     		add	r7, sp, #0
 7301              	.LCFI243:
 7302              		.cfi_def_cfa_register 7
 7303 0006 7860     		str	r0, [r7, #4]
3741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 7304              		.loc 1 3741 48
 7305 0008 7B68     		ldr	r3, [r7, #4]
 7306 000a 9A6B     		ldr	r2, [r3, #56]
 7307              		.loc 1 3741 25
 7308 000c 7B68     		ldr	r3, [r7, #4]
 7309 000e 1B68     		ldr	r3, [r3]
 7310              		.loc 1 3741 20
 7311 0010 0C33     		adds	r3, r3, #12
 7312              		.loc 1 3741 43
 7313 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7314              		.loc 1 3741 40
 7315 0014 1A70     		strb	r2, [r3]
3742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 7316              		.loc 1 3742 7
 7317 0016 7B68     		ldr	r3, [r7, #4]
 7318 0018 9B6B     		ldr	r3, [r3, #56]
 7319              		.loc 1 3742 19
 7320 001a 5A1C     		adds	r2, r3, #1
 7321 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 194


 7322 001e 9A63     		str	r2, [r3, #56]
3743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount--;
 7323              		.loc 1 3743 7
 7324 0020 7B68     		ldr	r3, [r7, #4]
 7325 0022 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 7326 0024 9BB2     		uxth	r3, r3
 7327              		.loc 1 3743 20
 7328 0026 013B     		subs	r3, r3, #1
 7329 0028 9AB2     		uxth	r2, r3
 7330 002a 7B68     		ldr	r3, [r7, #4]
 7331 002c DA87     		strh	r2, [r3, #62]	@ movhi
3744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 7332              		.loc 1 3745 11
 7333 002e 7B68     		ldr	r3, [r7, #4]
 7334 0030 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 7335 0032 9BB2     		uxth	r3, r3
 7336              		.loc 1 3745 6
 7337 0034 002B     		cmp	r3, #0
 7338 0036 02D1     		bne	.L344
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Enable CRC Transmission */
3751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 7339              		.loc 1 3754 5
 7340 0038 7868     		ldr	r0, [r7, #4]
 7341 003a FFF7FEFF 		bl	SPI_CloseTx_ISR
 7342              	.L344:
3755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7343              		.loc 1 3756 1
 7344 003e 00BF     		nop
 7345 0040 0837     		adds	r7, r7, #8
 7346              	.LCFI244:
 7347              		.cfi_def_cfa_offset 8
 7348 0042 BD46     		mov	sp, r7
 7349              	.LCFI245:
 7350              		.cfi_def_cfa_register 13
 7351              		@ sp needed
 7352 0044 80BD     		pop	{r7, pc}
 7353              		.cfi_endproc
 7354              	.LFE370:
 7356              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 7357              		.align	1
 7358              		.syntax unified
 7359              		.thumb
 7360              		.thumb_func
 7361              		.fpu fpv4-sp-d16
 7363              	SPI_TxISR_16BIT:
 7364              	.LFB371:
3757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
ARM GAS  /tmp/ccrdcdEL.s 			page 195


3759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7365              		.loc 1 3765 1
 7366              		.cfi_startproc
 7367              		@ args = 0, pretend = 0, frame = 8
 7368              		@ frame_needed = 1, uses_anonymous_args = 0
 7369 0000 80B5     		push	{r7, lr}
 7370              	.LCFI246:
 7371              		.cfi_def_cfa_offset 8
 7372              		.cfi_offset 7, -8
 7373              		.cfi_offset 14, -4
 7374 0002 82B0     		sub	sp, sp, #8
 7375              	.LCFI247:
 7376              		.cfi_def_cfa_offset 16
 7377 0004 00AF     		add	r7, sp, #0
 7378              	.LCFI248:
 7379              		.cfi_def_cfa_register 7
 7380 0006 7860     		str	r0, [r7, #4]
3766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 7381              		.loc 1 3767 42
 7382 0008 7B68     		ldr	r3, [r7, #4]
 7383 000a 9B6B     		ldr	r3, [r3, #56]
 7384              		.loc 1 3767 24
 7385 000c 1A88     		ldrh	r2, [r3]
 7386              		.loc 1 3767 7
 7387 000e 7B68     		ldr	r3, [r7, #4]
 7388 0010 1B68     		ldr	r3, [r3]
 7389              		.loc 1 3767 22
 7390 0012 DA60     		str	r2, [r3, #12]
3768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 7391              		.loc 1 3768 20
 7392 0014 7B68     		ldr	r3, [r7, #4]
 7393 0016 9B6B     		ldr	r3, [r3, #56]
 7394 0018 9A1C     		adds	r2, r3, #2
 7395 001a 7B68     		ldr	r3, [r7, #4]
 7396 001c 9A63     		str	r2, [r3, #56]
3769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->TxXferCount--;
 7397              		.loc 1 3769 7
 7398 001e 7B68     		ldr	r3, [r7, #4]
 7399 0020 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 7400 0022 9BB2     		uxth	r3, r3
 7401              		.loc 1 3769 20
 7402 0024 013B     		subs	r3, r3, #1
 7403 0026 9AB2     		uxth	r2, r3
 7404 0028 7B68     		ldr	r3, [r7, #4]
 7405 002a DA87     		strh	r2, [r3, #62]	@ movhi
3770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 7406              		.loc 1 3771 11
 7407 002c 7B68     		ldr	r3, [r7, #4]
 7408 002e DB8F     		ldrh	r3, [r3, #62]	@ movhi
ARM GAS  /tmp/ccrdcdEL.s 			page 196


 7409 0030 9BB2     		uxth	r3, r3
 7410              		.loc 1 3771 6
 7411 0032 002B     		cmp	r3, #0
 7412 0034 02D1     		bne	.L347
3772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Enable CRC Transmission */
3777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 7413              		.loc 1 3780 5
 7414 0036 7868     		ldr	r0, [r7, #4]
 7415 0038 FFF7FEFF 		bl	SPI_CloseTx_ISR
 7416              	.L347:
3781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7417              		.loc 1 3782 1
 7418 003c 00BF     		nop
 7419 003e 0837     		adds	r7, r7, #8
 7420              	.LCFI249:
 7421              		.cfi_def_cfa_offset 8
 7422 0040 BD46     		mov	sp, r7
 7423              	.LCFI250:
 7424              		.cfi_def_cfa_register 13
 7425              		@ sp needed
 7426 0042 80BD     		pop	{r7, pc}
 7427              		.cfi_endproc
 7428              	.LFE371:
 7430              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 7431              		.align	1
 7432              		.syntax unified
 7433              		.thumb
 7434              		.thumb_func
 7435              		.fpu fpv4-sp-d16
 7437              	SPI_WaitFlagStateUntilTimeout:
 7438              	.LFB372:
3783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *              the configuration information for SPI module.
3788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Flag SPI flag to check
3789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  State flag state to check
3790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Timeout Timeout duration
3791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Tickstart tick start value
3792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
3793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7439              		.loc 1 3796 1
 7440              		.cfi_startproc
 7441              		@ args = 4, pretend = 0, frame = 16
 7442              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccrdcdEL.s 			page 197


 7443 0000 80B5     		push	{r7, lr}
 7444              	.LCFI251:
 7445              		.cfi_def_cfa_offset 8
 7446              		.cfi_offset 7, -8
 7447              		.cfi_offset 14, -4
 7448 0002 84B0     		sub	sp, sp, #16
 7449              	.LCFI252:
 7450              		.cfi_def_cfa_offset 24
 7451 0004 00AF     		add	r7, sp, #0
 7452              	.LCFI253:
 7453              		.cfi_def_cfa_register 7
 7454 0006 F860     		str	r0, [r7, #12]
 7455 0008 B960     		str	r1, [r7, #8]
 7456 000a 3B60     		str	r3, [r7]
 7457 000c 1346     		mov	r3, r2
 7458 000e FB71     		strb	r3, [r7, #7]
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 7459              		.loc 1 3797 9
 7460 0010 4CE0     		b	.L349
 7461              	.L355:
3798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 7462              		.loc 1 3799 8
 7463 0012 3B68     		ldr	r3, [r7]
 7464 0014 B3F1FF3F 		cmp	r3, #-1
 7465 0018 48D0     		beq	.L349
3800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 7466              		.loc 1 3801 13
 7467 001a FFF7FEFF 		bl	HAL_GetTick
 7468 001e 0246     		mov	r2, r0
 7469              		.loc 1 3801 27
 7470 0020 BB69     		ldr	r3, [r7, #24]
 7471 0022 D31A     		subs	r3, r2, r3
 7472              		.loc 1 3801 10
 7473 0024 3A68     		ldr	r2, [r7]
 7474 0026 9A42     		cmp	r2, r3
 7475 0028 02D9     		bls	.L350
 7476              		.loc 1 3801 52 discriminator 1
 7477 002a 3B68     		ldr	r3, [r7]
 7478 002c 002B     		cmp	r3, #0
 7479 002e 3DD1     		bne	.L349
 7480              	.L350:
3802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
3803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         and slave for their respective CRC calculation */
3806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 7481              		.loc 1 3808 9
 7482 0030 FB68     		ldr	r3, [r7, #12]
 7483 0032 1B68     		ldr	r3, [r3]
 7484 0034 5A68     		ldr	r2, [r3, #4]
 7485 0036 FB68     		ldr	r3, [r7, #12]
 7486 0038 1B68     		ldr	r3, [r3]
 7487 003a 22F0E002 		bic	r2, r2, #224
ARM GAS  /tmp/ccrdcdEL.s 			page 198


 7488 003e 5A60     		str	r2, [r3, #4]
3809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 7489              		.loc 1 3810 24
 7490 0040 FB68     		ldr	r3, [r7, #12]
 7491 0042 5B68     		ldr	r3, [r3, #4]
 7492              		.loc 1 3810 12
 7493 0044 B3F5827F 		cmp	r3, #260
 7494 0048 11D1     		bne	.L351
 7495              		.loc 1 3810 65 discriminator 1
 7496 004a FB68     		ldr	r3, [r7, #12]
 7497 004c 9B68     		ldr	r3, [r3, #8]
 7498              		.loc 1 3810 50 discriminator 1
 7499 004e B3F5004F 		cmp	r3, #32768
 7500 0052 04D0     		beq	.L352
3811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 7501              		.loc 1 3811 68
 7502 0054 FB68     		ldr	r3, [r7, #12]
 7503 0056 9B68     		ldr	r3, [r3, #8]
 7504              		.loc 1 3811 54
 7505 0058 B3F5806F 		cmp	r3, #1024
 7506 005c 07D1     		bne	.L351
 7507              	.L352:
3812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
3813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Disable SPI peripheral */
3814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 7508              		.loc 1 3814 11
 7509 005e FB68     		ldr	r3, [r7, #12]
 7510 0060 1B68     		ldr	r3, [r3]
 7511 0062 1A68     		ldr	r2, [r3]
 7512 0064 FB68     		ldr	r3, [r7, #12]
 7513 0066 1B68     		ldr	r3, [r3]
 7514 0068 22F04002 		bic	r2, r2, #64
 7515 006c 1A60     		str	r2, [r3]
 7516              	.L351:
3815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
3816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Reset CRC Calculation */
3818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 7517              		.loc 1 3818 23
 7518 006e FB68     		ldr	r3, [r7, #12]
 7519 0070 9B6A     		ldr	r3, [r3, #40]
 7520              		.loc 1 3818 12
 7521 0072 B3F5005F 		cmp	r3, #8192
 7522 0076 0FD1     		bne	.L353
3819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
3820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
 7523              		.loc 1 3820 11
 7524 0078 FB68     		ldr	r3, [r7, #12]
 7525 007a 1B68     		ldr	r3, [r3]
 7526 007c 1A68     		ldr	r2, [r3]
 7527 007e FB68     		ldr	r3, [r7, #12]
 7528 0080 1B68     		ldr	r3, [r3]
 7529 0082 22F40052 		bic	r2, r2, #8192
 7530 0086 1A60     		str	r2, [r3]
 7531 0088 FB68     		ldr	r3, [r7, #12]
 7532 008a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccrdcdEL.s 			page 199


 7533 008c 1A68     		ldr	r2, [r3]
 7534 008e FB68     		ldr	r3, [r7, #12]
 7535 0090 1B68     		ldr	r3, [r3]
 7536 0092 42F40052 		orr	r2, r2, #8192
 7537 0096 1A60     		str	r2, [r3]
 7538              	.L353:
3821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
3822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 7539              		.loc 1 3823 21
 7540 0098 FB68     		ldr	r3, [r7, #12]
 7541 009a 0122     		movs	r2, #1
 7542 009c 83F85D20 		strb	r2, [r3, #93]
3824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Process Unlocked */
3826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 7543              		.loc 1 3826 9
 7544 00a0 FB68     		ldr	r3, [r7, #12]
 7545 00a2 0022     		movs	r2, #0
 7546 00a4 83F85C20 		strb	r2, [r3, #92]
3827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         return HAL_TIMEOUT;
 7547              		.loc 1 3828 16
 7548 00a8 0323     		movs	r3, #3
 7549 00aa 0FE0     		b	.L354
 7550              	.L349:
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 7551              		.loc 1 3797 11
 7552 00ac FB68     		ldr	r3, [r7, #12]
 7553 00ae 1B68     		ldr	r3, [r3]
 7554 00b0 9A68     		ldr	r2, [r3, #8]
 7555 00b2 BB68     		ldr	r3, [r7, #8]
 7556 00b4 1340     		ands	r3, r3, r2
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 7557              		.loc 1 3797 48
 7558 00b6 BA68     		ldr	r2, [r7, #8]
 7559 00b8 9A42     		cmp	r2, r3
 7560 00ba 0CBF     		ite	eq
 7561 00bc 0123     		moveq	r3, #1
 7562 00be 0023     		movne	r3, #0
 7563 00c0 DBB2     		uxtb	r3, r3
 7564 00c2 1A46     		mov	r2, r3
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 7565              		.loc 1 3797 57
 7566 00c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 7567              		.loc 1 3797 9
 7568 00c6 9A42     		cmp	r2, r3
 7569 00c8 A3D1     		bne	.L355
3829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
3830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return HAL_OK;
 7570              		.loc 1 3833 10
 7571 00ca 0023     		movs	r3, #0
 7572              	.L354:
ARM GAS  /tmp/ccrdcdEL.s 			page 200


3834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7573              		.loc 1 3834 1
 7574 00cc 1846     		mov	r0, r3
 7575 00ce 1037     		adds	r7, r7, #16
 7576              	.LCFI254:
 7577              		.cfi_def_cfa_offset 8
 7578 00d0 BD46     		mov	sp, r7
 7579              	.LCFI255:
 7580              		.cfi_def_cfa_register 13
 7581              		@ sp needed
 7582 00d2 80BD     		pop	{r7, pc}
 7583              		.cfi_endproc
 7584              	.LFE372:
 7586              		.section	.text.SPI_WaitFifoStateUntilTimeout,"ax",%progbits
 7587              		.align	1
 7588              		.syntax unified
 7589              		.thumb
 7590              		.thumb_func
 7591              		.fpu fpv4-sp-d16
 7593              	SPI_WaitFifoStateUntilTimeout:
 7594              	.LFB373:
3835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle SPI FIFO Communication Timeout.
3838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *              the configuration information for SPI module.
3840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Fifo Fifo to check
3841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  State Fifo state to check
3842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Timeout Timeout duration
3843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Tickstart tick start value
3844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
3845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
3847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7595              		.loc 1 3848 1
 7596              		.cfi_startproc
 7597              		@ args = 4, pretend = 0, frame = 16
 7598              		@ frame_needed = 1, uses_anonymous_args = 0
 7599 0000 80B5     		push	{r7, lr}
 7600              	.LCFI256:
 7601              		.cfi_def_cfa_offset 8
 7602              		.cfi_offset 7, -8
 7603              		.cfi_offset 14, -4
 7604 0002 84B0     		sub	sp, sp, #16
 7605              	.LCFI257:
 7606              		.cfi_def_cfa_offset 24
 7607 0004 00AF     		add	r7, sp, #0
 7608              	.LCFI258:
 7609              		.cfi_def_cfa_register 7
 7610 0006 F860     		str	r0, [r7, #12]
 7611 0008 B960     		str	r1, [r7, #8]
 7612 000a 7A60     		str	r2, [r7, #4]
 7613 000c 3B60     		str	r3, [r7]
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 7614              		.loc 1 3849 9
 7615 000e 57E0     		b	.L357
ARM GAS  /tmp/ccrdcdEL.s 			page 201


 7616              	.L364:
3850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 7617              		.loc 1 3851 8
 7618 0010 BB68     		ldr	r3, [r7, #8]
 7619 0012 B3F5C06F 		cmp	r3, #1536
 7620 0016 06D1     		bne	.L358
 7621              		.loc 1 3851 32 discriminator 1
 7622 0018 7B68     		ldr	r3, [r7, #4]
 7623 001a 002B     		cmp	r3, #0
 7624 001c 03D1     		bne	.L358
3852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Read 8bit CRC to flush Data Register */
3854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       READ_REG(*((__IO uint8_t *)&hspi->Instance->DR));
 7625              		.loc 1 3854 7
 7626 001e FB68     		ldr	r3, [r7, #12]
 7627 0020 1B68     		ldr	r3, [r3]
 7628 0022 0C33     		adds	r3, r3, #12
 7629 0024 1B78     		ldrb	r3, [r3]
 7630              	.L358:
3855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 7631              		.loc 1 3857 8
 7632 0026 3B68     		ldr	r3, [r7]
 7633 0028 B3F1FF3F 		cmp	r3, #-1
 7634 002c 48D0     		beq	.L357
3858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 7635              		.loc 1 3859 13
 7636 002e FFF7FEFF 		bl	HAL_GetTick
 7637 0032 0246     		mov	r2, r0
 7638              		.loc 1 3859 27
 7639 0034 BB69     		ldr	r3, [r7, #24]
 7640 0036 D31A     		subs	r3, r2, r3
 7641              		.loc 1 3859 10
 7642 0038 3A68     		ldr	r2, [r7]
 7643 003a 9A42     		cmp	r2, r3
 7644 003c 02D9     		bls	.L359
 7645              		.loc 1 3859 52 discriminator 1
 7646 003e 3B68     		ldr	r3, [r7]
 7647 0040 002B     		cmp	r3, #0
 7648 0042 3DD1     		bne	.L357
 7649              	.L359:
3860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
3861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****            and slave for their respective CRC calculation */
3864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 7650              		.loc 1 3866 9
 7651 0044 FB68     		ldr	r3, [r7, #12]
 7652 0046 1B68     		ldr	r3, [r3]
 7653 0048 5A68     		ldr	r2, [r3, #4]
 7654 004a FB68     		ldr	r3, [r7, #12]
 7655 004c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccrdcdEL.s 			page 202


 7656 004e 22F0E002 		bic	r2, r2, #224
 7657 0052 5A60     		str	r2, [r3, #4]
3867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 7658              		.loc 1 3868 24
 7659 0054 FB68     		ldr	r3, [r7, #12]
 7660 0056 5B68     		ldr	r3, [r3, #4]
 7661              		.loc 1 3868 12
 7662 0058 B3F5827F 		cmp	r3, #260
 7663 005c 11D1     		bne	.L360
 7664              		.loc 1 3868 65 discriminator 1
 7665 005e FB68     		ldr	r3, [r7, #12]
 7666 0060 9B68     		ldr	r3, [r3, #8]
 7667              		.loc 1 3868 50 discriminator 1
 7668 0062 B3F5004F 		cmp	r3, #32768
 7669 0066 04D0     		beq	.L361
3869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 7670              		.loc 1 3869 68
 7671 0068 FB68     		ldr	r3, [r7, #12]
 7672 006a 9B68     		ldr	r3, [r3, #8]
 7673              		.loc 1 3869 54
 7674 006c B3F5806F 		cmp	r3, #1024
 7675 0070 07D1     		bne	.L360
 7676              	.L361:
3870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
3871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           /* Disable SPI peripheral */
3872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 7677              		.loc 1 3872 11
 7678 0072 FB68     		ldr	r3, [r7, #12]
 7679 0074 1B68     		ldr	r3, [r3]
 7680 0076 1A68     		ldr	r2, [r3]
 7681 0078 FB68     		ldr	r3, [r7, #12]
 7682 007a 1B68     		ldr	r3, [r3]
 7683 007c 22F04002 		bic	r2, r2, #64
 7684 0080 1A60     		str	r2, [r3]
 7685              	.L360:
3873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
3874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Reset CRC Calculation */
3876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 7686              		.loc 1 3876 23
 7687 0082 FB68     		ldr	r3, [r7, #12]
 7688 0084 9B6A     		ldr	r3, [r3, #40]
 7689              		.loc 1 3876 12
 7690 0086 B3F5005F 		cmp	r3, #8192
 7691 008a 0FD1     		bne	.L362
3877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         {
3878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
 7692              		.loc 1 3878 11
 7693 008c FB68     		ldr	r3, [r7, #12]
 7694 008e 1B68     		ldr	r3, [r3]
 7695 0090 1A68     		ldr	r2, [r3]
 7696 0092 FB68     		ldr	r3, [r7, #12]
 7697 0094 1B68     		ldr	r3, [r3]
 7698 0096 22F40052 		bic	r2, r2, #8192
 7699 009a 1A60     		str	r2, [r3]
 7700 009c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrdcdEL.s 			page 203


 7701 009e 1B68     		ldr	r3, [r3]
 7702 00a0 1A68     		ldr	r2, [r3]
 7703 00a2 FB68     		ldr	r3, [r7, #12]
 7704 00a4 1B68     		ldr	r3, [r3]
 7705 00a6 42F40052 		orr	r2, r2, #8192
 7706 00aa 1A60     		str	r2, [r3]
 7707              	.L362:
3879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         }
3880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 7708              		.loc 1 3881 21
 7709 00ac FB68     		ldr	r3, [r7, #12]
 7710 00ae 0122     		movs	r2, #1
 7711 00b0 83F85D20 		strb	r2, [r3, #93]
3882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Process Unlocked */
3884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 7712              		.loc 1 3884 9
 7713 00b4 FB68     		ldr	r3, [r7, #12]
 7714 00b6 0022     		movs	r2, #0
 7715 00b8 83F85C20 		strb	r2, [r3, #92]
3885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         return HAL_TIMEOUT;
 7716              		.loc 1 3886 16
 7717 00bc 0323     		movs	r3, #3
 7718 00be 08E0     		b	.L363
 7719              	.L357:
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 7720              		.loc 1 3849 15
 7721 00c0 FB68     		ldr	r3, [r7, #12]
 7722 00c2 1B68     		ldr	r3, [r3]
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 7723              		.loc 1 3849 25
 7724 00c4 9A68     		ldr	r2, [r3, #8]
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 7725              		.loc 1 3849 30
 7726 00c6 BB68     		ldr	r3, [r7, #8]
 7727 00c8 1340     		ands	r3, r3, r2
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
 7728              		.loc 1 3849 9
 7729 00ca 7A68     		ldr	r2, [r7, #4]
 7730 00cc 9A42     		cmp	r2, r3
 7731 00ce 9FD1     		bne	.L364
3887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
3888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return HAL_OK;
 7732              		.loc 1 3891 10
 7733 00d0 0023     		movs	r3, #0
 7734              	.L363:
3892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7735              		.loc 1 3892 1
 7736 00d2 1846     		mov	r0, r3
 7737 00d4 1037     		adds	r7, r7, #16
 7738              	.LCFI259:
 7739              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccrdcdEL.s 			page 204


 7740 00d6 BD46     		mov	sp, r7
 7741              	.LCFI260:
 7742              		.cfi_def_cfa_register 13
 7743              		@ sp needed
 7744 00d8 80BD     		pop	{r7, pc}
 7745              		.cfi_endproc
 7746              	.LFE373:
 7748              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 7749              		.align	1
 7750              		.syntax unified
 7751              		.thumb
 7752              		.thumb_func
 7753              		.fpu fpv4-sp-d16
 7755              	SPI_EndRxTransaction:
 7756              	.LFB374:
3893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Timeout Timeout duration
3899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Tickstart tick start value
3900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
3901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7757              		.loc 1 3903 1
 7758              		.cfi_startproc
 7759              		@ args = 0, pretend = 0, frame = 16
 7760              		@ frame_needed = 1, uses_anonymous_args = 0
 7761 0000 80B5     		push	{r7, lr}
 7762              	.LCFI261:
 7763              		.cfi_def_cfa_offset 8
 7764              		.cfi_offset 7, -8
 7765              		.cfi_offset 14, -4
 7766 0002 86B0     		sub	sp, sp, #24
 7767              	.LCFI262:
 7768              		.cfi_def_cfa_offset 32
 7769 0004 02AF     		add	r7, sp, #8
 7770              	.LCFI263:
 7771              		.cfi_def_cfa 7, 24
 7772 0006 F860     		str	r0, [r7, #12]
 7773 0008 B960     		str	r1, [r7, #8]
 7774 000a 7A60     		str	r2, [r7, #4]
3904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 7775              		.loc 1 3904 18
 7776 000c FB68     		ldr	r3, [r7, #12]
 7777 000e 5B68     		ldr	r3, [r3, #4]
 7778              		.loc 1 3904 6
 7779 0010 B3F5827F 		cmp	r3, #260
 7780 0014 11D1     		bne	.L366
 7781              		.loc 1 3904 59 discriminator 1
 7782 0016 FB68     		ldr	r3, [r7, #12]
 7783 0018 9B68     		ldr	r3, [r3, #8]
 7784              		.loc 1 3904 44 discriminator 1
 7785 001a B3F5004F 		cmp	r3, #32768
 7786 001e 04D0     		beq	.L367
ARM GAS  /tmp/ccrdcdEL.s 			page 205


3905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 7787              		.loc 1 3905 62
 7788 0020 FB68     		ldr	r3, [r7, #12]
 7789 0022 9B68     		ldr	r3, [r3, #8]
 7790              		.loc 1 3905 48
 7791 0024 B3F5806F 		cmp	r3, #1024
 7792 0028 07D1     		bne	.L366
 7793              	.L367:
3906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable SPI peripheral */
3908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 7794              		.loc 1 3908 5
 7795 002a FB68     		ldr	r3, [r7, #12]
 7796 002c 1B68     		ldr	r3, [r3]
 7797 002e 1A68     		ldr	r2, [r3]
 7798 0030 FB68     		ldr	r3, [r7, #12]
 7799 0032 1B68     		ldr	r3, [r3]
 7800 0034 22F04002 		bic	r2, r2, #64
 7801 0038 1A60     		str	r2, [r3]
 7802              	.L366:
3909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Control the BSY flag */
3912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 7803              		.loc 1 3912 7
 7804 003a 7B68     		ldr	r3, [r7, #4]
 7805 003c 0093     		str	r3, [sp]
 7806 003e BB68     		ldr	r3, [r7, #8]
 7807 0040 0022     		movs	r2, #0
 7808 0042 8021     		movs	r1, #128
 7809 0044 F868     		ldr	r0, [r7, #12]
 7810 0046 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 7811 004a 0346     		mov	r3, r0
 7812              		.loc 1 3912 6
 7813 004c 002B     		cmp	r3, #0
 7814 004e 07D0     		beq	.L368
3913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7815              		.loc 1 3914 5
 7816 0050 FB68     		ldr	r3, [r7, #12]
 7817 0052 1B6E     		ldr	r3, [r3, #96]
 7818 0054 43F02002 		orr	r2, r3, #32
 7819 0058 FB68     		ldr	r3, [r7, #12]
 7820 005a 1A66     		str	r2, [r3, #96]
3915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_TIMEOUT;
 7821              		.loc 1 3915 12
 7822 005c 0323     		movs	r3, #3
 7823 005e 23E0     		b	.L369
 7824              	.L368:
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 7825              		.loc 1 3918 18
 7826 0060 FB68     		ldr	r3, [r7, #12]
 7827 0062 5B68     		ldr	r3, [r3, #4]
 7828              		.loc 1 3918 6
 7829 0064 B3F5827F 		cmp	r3, #260
ARM GAS  /tmp/ccrdcdEL.s 			page 206


 7830 0068 1DD1     		bne	.L370
 7831              		.loc 1 3918 59 discriminator 1
 7832 006a FB68     		ldr	r3, [r7, #12]
 7833 006c 9B68     		ldr	r3, [r3, #8]
 7834              		.loc 1 3918 44 discriminator 1
 7835 006e B3F5004F 		cmp	r3, #32768
 7836 0072 04D0     		beq	.L371
3919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 7837              		.loc 1 3919 62
 7838 0074 FB68     		ldr	r3, [r7, #12]
 7839 0076 9B68     		ldr	r3, [r3, #8]
 7840              		.loc 1 3919 48
 7841 0078 B3F5806F 		cmp	r3, #1024
 7842 007c 13D1     		bne	.L370
 7843              	.L371:
3920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Empty the FRLVL fifo */
3922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) !=
 7844              		.loc 1 3922 9
 7845 007e 7B68     		ldr	r3, [r7, #4]
 7846 0080 0093     		str	r3, [sp]
 7847 0082 BB68     		ldr	r3, [r7, #8]
 7848 0084 0022     		movs	r2, #0
 7849 0086 4FF4C061 		mov	r1, #1536
 7850 008a F868     		ldr	r0, [r7, #12]
 7851 008c FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7852 0090 0346     		mov	r3, r0
 7853              		.loc 1 3922 8
 7854 0092 002B     		cmp	r3, #0
 7855 0094 07D0     		beq	.L370
3923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
3924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7856              		.loc 1 3924 7
 7857 0096 FB68     		ldr	r3, [r7, #12]
 7858 0098 1B6E     		ldr	r3, [r3, #96]
 7859 009a 43F02002 		orr	r2, r3, #32
 7860 009e FB68     		ldr	r3, [r7, #12]
 7861 00a0 1A66     		str	r2, [r3, #96]
3925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       return HAL_TIMEOUT;
 7862              		.loc 1 3925 14
 7863 00a2 0323     		movs	r3, #3
 7864 00a4 00E0     		b	.L369
 7865              	.L370:
3926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
3927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return HAL_OK;
 7866              		.loc 1 3928 10
 7867 00a6 0023     		movs	r3, #0
 7868              	.L369:
3929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7869              		.loc 1 3929 1
 7870 00a8 1846     		mov	r0, r3
 7871 00aa 1037     		adds	r7, r7, #16
 7872              	.LCFI264:
 7873              		.cfi_def_cfa_offset 8
 7874 00ac BD46     		mov	sp, r7
 7875              	.LCFI265:
ARM GAS  /tmp/ccrdcdEL.s 			page 207


 7876              		.cfi_def_cfa_register 13
 7877              		@ sp needed
 7878 00ae 80BD     		pop	{r7, pc}
 7879              		.cfi_endproc
 7880              	.LFE374:
 7882              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 7883              		.align	1
 7884              		.syntax unified
 7885              		.thumb
 7886              		.thumb_func
 7887              		.fpu fpv4-sp-d16
 7889              	SPI_EndRxTxTransaction:
 7890              	.LFB375:
3930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi SPI handle
3934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Timeout Timeout duration
3935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  Tickstart tick start value
3936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval HAL status
3937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 7891              		.loc 1 3939 1
 7892              		.cfi_startproc
 7893              		@ args = 0, pretend = 0, frame = 16
 7894              		@ frame_needed = 1, uses_anonymous_args = 0
 7895 0000 80B5     		push	{r7, lr}
 7896              	.LCFI266:
 7897              		.cfi_def_cfa_offset 8
 7898              		.cfi_offset 7, -8
 7899              		.cfi_offset 14, -4
 7900 0002 86B0     		sub	sp, sp, #24
 7901              	.LCFI267:
 7902              		.cfi_def_cfa_offset 32
 7903 0004 02AF     		add	r7, sp, #8
 7904              	.LCFI268:
 7905              		.cfi_def_cfa 7, 24
 7906 0006 F860     		str	r0, [r7, #12]
 7907 0008 B960     		str	r1, [r7, #8]
 7908 000a 7A60     		str	r2, [r7, #4]
3940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Control if the TX fifo is empty */
3941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != H
 7909              		.loc 1 3941 7
 7910 000c 7B68     		ldr	r3, [r7, #4]
 7911 000e 0093     		str	r3, [sp]
 7912 0010 BB68     		ldr	r3, [r7, #8]
 7913 0012 0022     		movs	r2, #0
 7914 0014 4FF4C051 		mov	r1, #6144
 7915 0018 F868     		ldr	r0, [r7, #12]
 7916 001a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7917 001e 0346     		mov	r3, r0
 7918              		.loc 1 3941 6
 7919 0020 002B     		cmp	r3, #0
 7920 0022 07D0     		beq	.L373
3942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
ARM GAS  /tmp/ccrdcdEL.s 			page 208


 7921              		.loc 1 3943 5
 7922 0024 FB68     		ldr	r3, [r7, #12]
 7923 0026 1B6E     		ldr	r3, [r3, #96]
 7924 0028 43F02002 		orr	r2, r3, #32
 7925 002c FB68     		ldr	r3, [r7, #12]
 7926 002e 1A66     		str	r2, [r3, #96]
3944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_TIMEOUT;
 7927              		.loc 1 3944 12
 7928 0030 0323     		movs	r3, #3
 7929 0032 27E0     		b	.L374
 7930              	.L373:
3945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Control the BSY flag */
3948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 7931              		.loc 1 3948 7
 7932 0034 7B68     		ldr	r3, [r7, #4]
 7933 0036 0093     		str	r3, [sp]
 7934 0038 BB68     		ldr	r3, [r7, #8]
 7935 003a 0022     		movs	r2, #0
 7936 003c 8021     		movs	r1, #128
 7937 003e F868     		ldr	r0, [r7, #12]
 7938 0040 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 7939 0044 0346     		mov	r3, r0
 7940              		.loc 1 3948 6
 7941 0046 002B     		cmp	r3, #0
 7942 0048 07D0     		beq	.L375
3949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7943              		.loc 1 3950 5
 7944 004a FB68     		ldr	r3, [r7, #12]
 7945 004c 1B6E     		ldr	r3, [r3, #96]
 7946 004e 43F02002 		orr	r2, r3, #32
 7947 0052 FB68     		ldr	r3, [r7, #12]
 7948 0054 1A66     		str	r2, [r3, #96]
3951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_TIMEOUT;
 7949              		.loc 1 3951 12
 7950 0056 0323     		movs	r3, #3
 7951 0058 14E0     		b	.L374
 7952              	.L375:
3952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Control if the RX fifo is empty */
3955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != H
 7953              		.loc 1 3955 7
 7954 005a 7B68     		ldr	r3, [r7, #4]
 7955 005c 0093     		str	r3, [sp]
 7956 005e BB68     		ldr	r3, [r7, #8]
 7957 0060 0022     		movs	r2, #0
 7958 0062 4FF4C061 		mov	r1, #1536
 7959 0066 F868     		ldr	r0, [r7, #12]
 7960 0068 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 7961 006c 0346     		mov	r3, r0
 7962              		.loc 1 3955 6
 7963 006e 002B     		cmp	r3, #0
 7964 0070 07D0     		beq	.L376
3956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
ARM GAS  /tmp/ccrdcdEL.s 			page 209


3957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7965              		.loc 1 3957 5
 7966 0072 FB68     		ldr	r3, [r7, #12]
 7967 0074 1B6E     		ldr	r3, [r3, #96]
 7968 0076 43F02002 		orr	r2, r3, #32
 7969 007a FB68     		ldr	r3, [r7, #12]
 7970 007c 1A66     		str	r2, [r3, #96]
3958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     return HAL_TIMEOUT;
 7971              		.loc 1 3958 12
 7972 007e 0323     		movs	r3, #3
 7973 0080 00E0     		b	.L374
 7974              	.L376:
3959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   return HAL_OK;
 7975              		.loc 1 3961 10
 7976 0082 0023     		movs	r3, #0
 7977              	.L374:
3962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 7978              		.loc 1 3962 1
 7979 0084 1846     		mov	r0, r3
 7980 0086 1037     		adds	r7, r7, #16
 7981              	.LCFI269:
 7982              		.cfi_def_cfa_offset 8
 7983 0088 BD46     		mov	sp, r7
 7984              	.LCFI270:
 7985              		.cfi_def_cfa_register 13
 7986              		@ sp needed
 7987 008a 80BD     		pop	{r7, pc}
 7988              		.cfi_endproc
 7989              	.LFE375:
 7991              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 7992              		.align	1
 7993              		.syntax unified
 7994              		.thumb
 7995              		.thumb_func
 7996              		.fpu fpv4-sp-d16
 7998              	SPI_CloseRxTx_ISR:
 7999              	.LFB376:
3963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
3965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
3968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
3969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
3970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 8000              		.loc 1 3971 1
 8001              		.cfi_startproc
 8002              		@ args = 0, pretend = 0, frame = 16
 8003              		@ frame_needed = 1, uses_anonymous_args = 0
 8004 0000 80B5     		push	{r7, lr}
 8005              	.LCFI271:
 8006              		.cfi_def_cfa_offset 8
 8007              		.cfi_offset 7, -8
 8008              		.cfi_offset 14, -4
ARM GAS  /tmp/ccrdcdEL.s 			page 210


 8009 0002 84B0     		sub	sp, sp, #16
 8010              	.LCFI272:
 8011              		.cfi_def_cfa_offset 24
 8012 0004 00AF     		add	r7, sp, #0
 8013              	.LCFI273:
 8014              		.cfi_def_cfa_register 7
 8015 0006 7860     		str	r0, [r7, #4]
3972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t tickstart;
3973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tickstart = HAL_GetTick();
 8016              		.loc 1 3975 15
 8017 0008 FFF7FEFF 		bl	HAL_GetTick
 8018 000c F860     		str	r0, [r7, #12]
3976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable ERR interrupt */
3978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8019              		.loc 1 3978 3
 8020 000e 7B68     		ldr	r3, [r7, #4]
 8021 0010 1B68     		ldr	r3, [r3]
 8022 0012 5A68     		ldr	r2, [r3, #4]
 8023 0014 7B68     		ldr	r3, [r7, #4]
 8024 0016 1B68     		ldr	r3, [r3]
 8025 0018 22F02002 		bic	r2, r2, #32
 8026 001c 5A60     		str	r2, [r3, #4]
3979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the end of the transaction */
3981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8027              		.loc 1 3981 7
 8028 001e FA68     		ldr	r2, [r7, #12]
 8029 0020 6421     		movs	r1, #100
 8030 0022 7868     		ldr	r0, [r7, #4]
 8031 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 8032 0028 0346     		mov	r3, r0
 8033              		.loc 1 3981 6
 8034 002a 002B     		cmp	r3, #0
 8035 002c 05D0     		beq	.L378
3982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8036              		.loc 1 3983 5
 8037 002e 7B68     		ldr	r3, [r7, #4]
 8038 0030 1B6E     		ldr	r3, [r3, #96]
 8039 0032 43F02002 		orr	r2, r3, #32
 8040 0036 7B68     		ldr	r3, [r7, #4]
 8041 0038 1A66     		str	r2, [r3, #96]
 8042              	.L378:
3984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
3985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
3986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if CRC error occurred */
3988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Call user error callback */
3994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/ccrdcdEL.s 			page 211


3995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
3997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
4001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 8043              		.loc 1 4003 13
 8044 003a 7B68     		ldr	r3, [r7, #4]
 8045 003c 1B6E     		ldr	r3, [r3, #96]
 8046              		.loc 1 4003 8
 8047 003e 002B     		cmp	r3, #0
 8048 0040 15D1     		bne	.L379
4004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 8049              		.loc 1 4005 15
 8050 0042 7B68     		ldr	r3, [r7, #4]
 8051 0044 93F85D30 		ldrb	r3, [r3, #93]
 8052 0048 DBB2     		uxtb	r3, r3
 8053              		.loc 1 4005 10
 8054 004a 042B     		cmp	r3, #4
 8055 004c 07D1     		bne	.L380
4006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
4007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 8056              		.loc 1 4007 21
 8057 004e 7B68     		ldr	r3, [r7, #4]
 8058 0050 0122     		movs	r2, #1
 8059 0052 83F85D20 		strb	r2, [r3, #93]
4008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Call user Rx complete callback */
4009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
4011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
4012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
 8060              		.loc 1 4012 9
 8061 0056 7868     		ldr	r0, [r7, #4]
 8062 0058 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
4013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
4015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       else
4016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
4017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Call user TxRx complete callback */
4019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
4021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
4022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
4023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
4025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
4026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
4027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
4029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Call user error callback */
4030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
ARM GAS  /tmp/ccrdcdEL.s 			page 212


4032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
4033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
4036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 8063              		.loc 1 4039 1
 8064 005c 0EE0     		b	.L383
 8065              	.L380:
4017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         /* Call user TxRx complete callback */
 8066              		.loc 1 4017 21
 8067 005e 7B68     		ldr	r3, [r7, #4]
 8068 0060 0122     		movs	r2, #1
 8069 0062 83F85D20 		strb	r2, [r3, #93]
4022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 8070              		.loc 1 4022 9
 8071 0066 7868     		ldr	r0, [r7, #4]
 8072 0068 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 8073              		.loc 1 4039 1
 8074 006c 06E0     		b	.L383
 8075              	.L379:
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Call user error callback */
 8076              		.loc 1 4028 19
 8077 006e 7B68     		ldr	r3, [r7, #4]
 8078 0070 0122     		movs	r2, #1
 8079 0072 83F85D20 		strb	r2, [r3, #93]
4033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 8080              		.loc 1 4033 7
 8081 0076 7868     		ldr	r0, [r7, #4]
 8082 0078 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 8083              	.L383:
 8084              		.loc 1 4039 1
 8085 007c 00BF     		nop
 8086 007e 1037     		adds	r7, r7, #16
 8087              	.LCFI274:
 8088              		.cfi_def_cfa_offset 8
 8089 0080 BD46     		mov	sp, r7
 8090              	.LCFI275:
 8091              		.cfi_def_cfa_register 13
 8092              		@ sp needed
 8093 0082 80BD     		pop	{r7, pc}
 8094              		.cfi_endproc
 8095              	.LFE376:
 8097              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 8098              		.align	1
 8099              		.syntax unified
 8100              		.thumb
 8101              		.thumb_func
 8102              		.fpu fpv4-sp-d16
 8104              	SPI_CloseRx_ISR:
 8105              	.LFB377:
4040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
4042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
4043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccrdcdEL.s 			page 213


4044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
4045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
4046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
4047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
4048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 8106              		.loc 1 4048 1
 8107              		.cfi_startproc
 8108              		@ args = 0, pretend = 0, frame = 8
 8109              		@ frame_needed = 1, uses_anonymous_args = 0
 8110 0000 80B5     		push	{r7, lr}
 8111              	.LCFI276:
 8112              		.cfi_def_cfa_offset 8
 8113              		.cfi_offset 7, -8
 8114              		.cfi_offset 14, -4
 8115 0002 82B0     		sub	sp, sp, #8
 8116              	.LCFI277:
 8117              		.cfi_def_cfa_offset 16
 8118 0004 00AF     		add	r7, sp, #0
 8119              	.LCFI278:
 8120              		.cfi_def_cfa_register 7
 8121 0006 7860     		str	r0, [r7, #4]
4049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
4050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 8122              		.loc 1 4050 3
 8123 0008 7B68     		ldr	r3, [r7, #4]
 8124 000a 1B68     		ldr	r3, [r3]
 8125 000c 5A68     		ldr	r2, [r3, #4]
 8126 000e 7B68     		ldr	r3, [r7, #4]
 8127 0010 1B68     		ldr	r3, [r3]
 8128 0012 22F06002 		bic	r2, r2, #96
 8129 0016 5A60     		str	r2, [r3, #4]
4051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the end of the transaction */
4053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 8130              		.loc 1 4053 7
 8131 0018 FFF7FEFF 		bl	HAL_GetTick
 8132 001c 0346     		mov	r3, r0
 8133 001e 1A46     		mov	r2, r3
 8134 0020 6421     		movs	r1, #100
 8135 0022 7868     		ldr	r0, [r7, #4]
 8136 0024 FFF7FEFF 		bl	SPI_EndRxTransaction
 8137 0028 0346     		mov	r3, r0
 8138              		.loc 1 4053 6
 8139 002a 002B     		cmp	r3, #0
 8140 002c 05D0     		beq	.L385
4054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8141              		.loc 1 4055 5
 8142 002e 7B68     		ldr	r3, [r7, #4]
 8143 0030 1B6E     		ldr	r3, [r3, #96]
 8144 0032 43F02002 		orr	r2, r3, #32
 8145 0036 7B68     		ldr	r3, [r7, #4]
 8146 0038 1A66     		str	r2, [r3, #96]
 8147              	.L385:
4056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 8148              		.loc 1 4057 15
ARM GAS  /tmp/ccrdcdEL.s 			page 214


 8149 003a 7B68     		ldr	r3, [r7, #4]
 8150 003c 0122     		movs	r2, #1
 8151 003e 83F85D20 		strb	r2, [r3, #93]
4058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check if CRC error occurred */
4061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
4062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
4064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
4065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Call user error callback */
4066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
4069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
4073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 8152              		.loc 1 4075 13
 8153 0042 7B68     		ldr	r3, [r7, #4]
 8154 0044 1B6E     		ldr	r3, [r3, #96]
 8155              		.loc 1 4075 8
 8156 0046 002B     		cmp	r3, #0
 8157 0048 03D1     		bne	.L386
4076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Call user Rx complete callback */
4078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
4080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
4081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
 8158              		.loc 1 4081 7
 8159 004a 7868     		ldr	r0, [r7, #4]
 8160 004c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
4082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
4084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     else
4085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       /* Call user error callback */
4087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
4090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
4093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 8161              		.loc 1 4096 1
 8162 0050 02E0     		b	.L388
 8163              	.L386:
4090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 8164              		.loc 1 4090 7
 8165 0052 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccrdcdEL.s 			page 215


 8166 0054 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 8167              	.L388:
 8168              		.loc 1 4096 1
 8169 0058 00BF     		nop
 8170 005a 0837     		adds	r7, r7, #8
 8171              	.LCFI279:
 8172              		.cfi_def_cfa_offset 8
 8173 005c BD46     		mov	sp, r7
 8174              	.LCFI280:
 8175              		.cfi_def_cfa_register 13
 8176              		@ sp needed
 8177 005e 80BD     		pop	{r7, pc}
 8178              		.cfi_endproc
 8179              	.LFE377:
 8181              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 8182              		.align	1
 8183              		.syntax unified
 8184              		.thumb
 8185              		.thumb_func
 8186              		.fpu fpv4-sp-d16
 8188              	SPI_CloseTx_ISR:
 8189              	.LFB378:
4097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
4099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
4100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
4102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
4103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
4104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
4105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 8190              		.loc 1 4105 1
 8191              		.cfi_startproc
 8192              		@ args = 0, pretend = 0, frame = 16
 8193              		@ frame_needed = 1, uses_anonymous_args = 0
 8194 0000 80B5     		push	{r7, lr}
 8195              	.LCFI281:
 8196              		.cfi_def_cfa_offset 8
 8197              		.cfi_offset 7, -8
 8198              		.cfi_offset 14, -4
 8199 0002 84B0     		sub	sp, sp, #16
 8200              	.LCFI282:
 8201              		.cfi_def_cfa_offset 24
 8202 0004 00AF     		add	r7, sp, #0
 8203              	.LCFI283:
 8204              		.cfi_def_cfa_register 7
 8205 0006 7860     		str	r0, [r7, #4]
4106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   uint32_t tickstart;
4107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Init tickstart for timeout management*/
4109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   tickstart = HAL_GetTick();
 8206              		.loc 1 4109 15
 8207 0008 FFF7FEFF 		bl	HAL_GetTick
 8208 000c F860     		str	r0, [r7, #12]
4110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
4112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
ARM GAS  /tmp/ccrdcdEL.s 			page 216


 8209              		.loc 1 4112 3
 8210 000e 7B68     		ldr	r3, [r7, #4]
 8211 0010 1B68     		ldr	r3, [r3]
 8212 0012 5A68     		ldr	r2, [r3, #4]
 8213 0014 7B68     		ldr	r3, [r7, #4]
 8214 0016 1B68     		ldr	r3, [r3]
 8215 0018 22F0A002 		bic	r2, r2, #160
 8216 001c 5A60     		str	r2, [r3, #4]
4113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check the end of the transaction */
4115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8217              		.loc 1 4115 7
 8218 001e FA68     		ldr	r2, [r7, #12]
 8219 0020 6421     		movs	r1, #100
 8220 0022 7868     		ldr	r0, [r7, #4]
 8221 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 8222 0028 0346     		mov	r3, r0
 8223              		.loc 1 4115 6
 8224 002a 002B     		cmp	r3, #0
 8225 002c 05D0     		beq	.L390
4116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8226              		.loc 1 4117 5
 8227 002e 7B68     		ldr	r3, [r7, #4]
 8228 0030 1B6E     		ldr	r3, [r3, #96]
 8229 0032 43F02002 		orr	r2, r3, #32
 8230 0036 7B68     		ldr	r3, [r7, #4]
 8231 0038 1A66     		str	r2, [r3, #96]
 8232              	.L390:
4118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
4121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8233              		.loc 1 4121 17
 8234 003a 7B68     		ldr	r3, [r7, #4]
 8235 003c 9B68     		ldr	r3, [r3, #8]
 8236              		.loc 1 4121 6
 8237 003e 002B     		cmp	r3, #0
 8238 0040 0AD1     		bne	.L391
 8239              	.LBB16:
4122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8240              		.loc 1 4123 5
 8241 0042 0023     		movs	r3, #0
 8242 0044 BB60     		str	r3, [r7, #8]
 8243 0046 7B68     		ldr	r3, [r7, #4]
 8244 0048 1B68     		ldr	r3, [r3]
 8245 004a DB68     		ldr	r3, [r3, #12]
 8246 004c BB60     		str	r3, [r7, #8]
 8247 004e 7B68     		ldr	r3, [r7, #4]
 8248 0050 1B68     		ldr	r3, [r3]
 8249 0052 9B68     		ldr	r3, [r3, #8]
 8250 0054 BB60     		str	r3, [r7, #8]
 8251 0056 BB68     		ldr	r3, [r7, #8]
 8252              	.L391:
 8253              	.LBE16:
4124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
ARM GAS  /tmp/ccrdcdEL.s 			page 217


4125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 8254              		.loc 1 4126 15
 8255 0058 7B68     		ldr	r3, [r7, #4]
 8256 005a 0122     		movs	r2, #1
 8257 005c 83F85D20 		strb	r2, [r3, #93]
4127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8258              		.loc 1 4127 11
 8259 0060 7B68     		ldr	r3, [r7, #4]
 8260 0062 1B6E     		ldr	r3, [r3, #96]
 8261              		.loc 1 4127 6
 8262 0064 002B     		cmp	r3, #0
 8263 0066 03D0     		beq	.L392
4128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Call user error callback */
4130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
4133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 8264              		.loc 1 4133 5
 8265 0068 7868     		ldr	r0, [r7, #4]
 8266 006a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
4134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   else
4137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Call user Rx complete callback */
4139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
4141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #else
4142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
4143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 8267              		.loc 1 4145 1
 8268 006e 02E0     		b	.L394
 8269              	.L392:
4142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 8270              		.loc 1 4142 5
 8271 0070 7868     		ldr	r0, [r7, #4]
 8272 0072 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 8273              	.L394:
 8274              		.loc 1 4145 1
 8275 0076 00BF     		nop
 8276 0078 1037     		adds	r7, r7, #16
 8277              	.LCFI284:
 8278              		.cfi_def_cfa_offset 8
 8279 007a BD46     		mov	sp, r7
 8280              	.LCFI285:
 8281              		.cfi_def_cfa_register 13
 8282              		@ sp needed
 8283 007c 80BD     		pop	{r7, pc}
 8284              		.cfi_endproc
 8285              	.LFE378:
 8287              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 8288              		.align	1
 8289              		.syntax unified
ARM GAS  /tmp/ccrdcdEL.s 			page 218


 8290              		.thumb
 8291              		.thumb_func
 8292              		.fpu fpv4-sp-d16
 8294              	SPI_AbortRx_ISR:
 8295              	.LFB379:
4146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
4148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
4149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
4151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
4152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
4153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
4154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 8296              		.loc 1 4154 1
 8297              		.cfi_startproc
 8298              		@ args = 0, pretend = 0, frame = 16
 8299              		@ frame_needed = 1, uses_anonymous_args = 0
 8300 0000 80B5     		push	{r7, lr}
 8301              	.LCFI286:
 8302              		.cfi_def_cfa_offset 8
 8303              		.cfi_offset 7, -8
 8304              		.cfi_offset 14, -4
 8305 0002 86B0     		sub	sp, sp, #24
 8306              	.LCFI287:
 8307              		.cfi_def_cfa_offset 32
 8308 0004 02AF     		add	r7, sp, #8
 8309              	.LCFI288:
 8310              		.cfi_def_cfa 7, 24
 8311 0006 7860     		str	r0, [r7, #4]
4155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __IO uint32_t count;
4156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable SPI Peripheral */
4158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 8312              		.loc 1 4158 3
 8313 0008 7B68     		ldr	r3, [r7, #4]
 8314 000a 1B68     		ldr	r3, [r3]
 8315 000c 1A68     		ldr	r2, [r3]
 8316 000e 7B68     		ldr	r3, [r7, #4]
 8317 0010 1B68     		ldr	r3, [r3]
 8318 0012 22F04002 		bic	r2, r2, #64
 8319 0016 1A60     		str	r2, [r3]
4159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 8320              		.loc 1 4160 56
 8321 0018 274B     		ldr	r3, .L401
 8322 001a 1B68     		ldr	r3, [r3]
 8323 001c 274A     		ldr	r2, .L401+4
 8324 001e A2FB0323 		umull	r2, r3, r2, r3
 8325 0022 5B0A     		lsrs	r3, r3, #9
 8326              		.loc 1 4160 31
 8327 0024 6422     		movs	r2, #100
 8328 0026 02FB03F3 		mul	r3, r2, r3
 8329              		.loc 1 4160 9
 8330 002a FB60     		str	r3, [r7, #12]
4161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable RXNEIE interrupt */
ARM GAS  /tmp/ccrdcdEL.s 			page 219


4163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 8331              		.loc 1 4163 3
 8332 002c 7B68     		ldr	r3, [r7, #4]
 8333 002e 1B68     		ldr	r3, [r3]
 8334 0030 5A68     		ldr	r2, [r3, #4]
 8335 0032 7B68     		ldr	r3, [r7, #4]
 8336 0034 1B68     		ldr	r3, [r3]
 8337 0036 22F04002 		bic	r2, r2, #64
 8338 003a 5A60     		str	r2, [r3, #4]
 8339              	.L398:
4164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check RXNEIE is disabled */
4166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   do
4167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (count == 0U)
 8340              		.loc 1 4168 15
 8341 003c FB68     		ldr	r3, [r7, #12]
 8342              		.loc 1 4168 8
 8343 003e 002B     		cmp	r3, #0
 8344 0040 06D1     		bne	.L396
4169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8345              		.loc 1 4170 7
 8346 0042 7B68     		ldr	r3, [r7, #4]
 8347 0044 1B6E     		ldr	r3, [r3, #96]
 8348 0046 43F04002 		orr	r2, r3, #64
 8349 004a 7B68     		ldr	r3, [r7, #4]
 8350 004c 1A66     		str	r2, [r3, #96]
4171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       break;
 8351              		.loc 1 4171 7
 8352 004e 09E0     		b	.L397
 8353              	.L396:
4172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
4173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     count--;
 8354              		.loc 1 4173 10
 8355 0050 FB68     		ldr	r3, [r7, #12]
 8356 0052 013B     		subs	r3, r3, #1
 8357 0054 FB60     		str	r3, [r7, #12]
4174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 8358              		.loc 1 4174 12
 8359 0056 7B68     		ldr	r3, [r7, #4]
 8360 0058 1B68     		ldr	r3, [r3]
 8361 005a 5B68     		ldr	r3, [r3, #4]
 8362 005c 03F04003 		and	r3, r3, #64
 8363              		.loc 1 4174 3
 8364 0060 402B     		cmp	r3, #64
 8365 0062 EBD0     		beq	.L398
 8366              	.L397:
4175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Control the BSY flag */
4177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 8367              		.loc 1 4177 7
 8368 0064 FFF7FEFF 		bl	HAL_GetTick
 8369 0068 0346     		mov	r3, r0
 8370 006a 0093     		str	r3, [sp]
 8371 006c 6423     		movs	r3, #100
 8372 006e 0022     		movs	r2, #0
ARM GAS  /tmp/ccrdcdEL.s 			page 220


 8373 0070 8021     		movs	r1, #128
 8374 0072 7868     		ldr	r0, [r7, #4]
 8375 0074 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 8376 0078 0346     		mov	r3, r0
 8377              		.loc 1 4177 6
 8378 007a 002B     		cmp	r3, #0
 8379 007c 02D0     		beq	.L399
4178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 8380              		.loc 1 4179 21
 8381 007e 7B68     		ldr	r3, [r7, #4]
 8382 0080 4022     		movs	r2, #64
 8383 0082 1A66     		str	r2, [r3, #96]
 8384              	.L399:
4180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 8385              		.loc 1 4183 7
 8386 0084 FFF7FEFF 		bl	HAL_GetTick
 8387 0088 0346     		mov	r3, r0
 8388 008a 0093     		str	r3, [sp]
 8389 008c 6423     		movs	r3, #100
 8390 008e 0022     		movs	r2, #0
 8391 0090 4FF4C061 		mov	r1, #1536
 8392 0094 7868     		ldr	r0, [r7, #4]
 8393 0096 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 8394 009a 0346     		mov	r3, r0
 8395              		.loc 1 4183 6
 8396 009c 002B     		cmp	r3, #0
 8397 009e 02D0     		beq	.L400
4184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 8398              		.loc 1 4185 21
 8399 00a0 7B68     		ldr	r3, [r7, #4]
 8400 00a2 4022     		movs	r2, #64
 8401 00a4 1A66     		str	r2, [r3, #96]
 8402              	.L400:
4186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 8403              		.loc 1 4188 15
 8404 00a6 7B68     		ldr	r3, [r7, #4]
 8405 00a8 0722     		movs	r2, #7
 8406 00aa 83F85D20 		strb	r2, [r3, #93]
4189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 8407              		.loc 1 4189 1
 8408 00ae 00BF     		nop
 8409 00b0 1037     		adds	r7, r7, #16
 8410              	.LCFI289:
 8411              		.cfi_def_cfa_offset 8
 8412 00b2 BD46     		mov	sp, r7
 8413              	.LCFI290:
 8414              		.cfi_def_cfa_register 13
 8415              		@ sp needed
 8416 00b4 80BD     		pop	{r7, pc}
 8417              	.L402:
ARM GAS  /tmp/ccrdcdEL.s 			page 221


 8418 00b6 00BF     		.align	2
 8419              	.L401:
 8420 00b8 00000000 		.word	SystemCoreClock
 8421 00bc F1197605 		.word	91625969
 8422              		.cfi_endproc
 8423              	.LFE379:
 8425              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 8426              		.align	1
 8427              		.syntax unified
 8428              		.thumb
 8429              		.thumb_func
 8430              		.fpu fpv4-sp-d16
 8432              	SPI_AbortTx_ISR:
 8433              	.LFB380:
4190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** /**
4192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
4193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   *               the configuration information for SPI module.
4195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   * @retval None
4196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   */
4197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
4198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** {
 8434              		.loc 1 4198 1
 8435              		.cfi_startproc
 8436              		@ args = 0, pretend = 0, frame = 16
 8437              		@ frame_needed = 1, uses_anonymous_args = 0
 8438 0000 80B5     		push	{r7, lr}
 8439              	.LCFI291:
 8440              		.cfi_def_cfa_offset 8
 8441              		.cfi_offset 7, -8
 8442              		.cfi_offset 14, -4
 8443 0002 86B0     		sub	sp, sp, #24
 8444              	.LCFI292:
 8445              		.cfi_def_cfa_offset 32
 8446 0004 02AF     		add	r7, sp, #8
 8447              	.LCFI293:
 8448              		.cfi_def_cfa 7, 24
 8449 0006 7860     		str	r0, [r7, #4]
4199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __IO uint32_t count;
4200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 8450              		.loc 1 4201 56
 8451 0008 4C4B     		ldr	r3, .L414
 8452 000a 1B68     		ldr	r3, [r3]
 8453 000c 4C4A     		ldr	r2, .L414+4
 8454 000e A2FB0323 		umull	r2, r3, r2, r3
 8455 0012 5B0A     		lsrs	r3, r3, #9
 8456              		.loc 1 4201 31
 8457 0014 6422     		movs	r2, #100
 8458 0016 02FB03F3 		mul	r3, r2, r3
 8459              		.loc 1 4201 9
 8460 001a FB60     		str	r3, [r7, #12]
4202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable TXEIE interrupt */
4204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 8461              		.loc 1 4204 3
ARM GAS  /tmp/ccrdcdEL.s 			page 222


 8462 001c 7B68     		ldr	r3, [r7, #4]
 8463 001e 1B68     		ldr	r3, [r3]
 8464 0020 5A68     		ldr	r2, [r3, #4]
 8465 0022 7B68     		ldr	r3, [r7, #4]
 8466 0024 1B68     		ldr	r3, [r3]
 8467 0026 22F08002 		bic	r2, r2, #128
 8468 002a 5A60     		str	r2, [r3, #4]
 8469              	.L406:
4205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check TXEIE is disabled */
4207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   do
4208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (count == 0U)
 8470              		.loc 1 4209 15
 8471 002c FB68     		ldr	r3, [r7, #12]
 8472              		.loc 1 4209 8
 8473 002e 002B     		cmp	r3, #0
 8474 0030 06D1     		bne	.L404
4210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8475              		.loc 1 4211 7
 8476 0032 7B68     		ldr	r3, [r7, #4]
 8477 0034 1B6E     		ldr	r3, [r3, #96]
 8478 0036 43F04002 		orr	r2, r3, #64
 8479 003a 7B68     		ldr	r3, [r7, #4]
 8480 003c 1A66     		str	r2, [r3, #96]
4212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       break;
 8481              		.loc 1 4212 7
 8482 003e 09E0     		b	.L405
 8483              	.L404:
4213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
4214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     count--;
 8484              		.loc 1 4214 10
 8485 0040 FB68     		ldr	r3, [r7, #12]
 8486 0042 013B     		subs	r3, r3, #1
 8487 0044 FB60     		str	r3, [r7, #12]
4215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE));
 8488              		.loc 1 4215 12
 8489 0046 7B68     		ldr	r3, [r7, #4]
 8490 0048 1B68     		ldr	r3, [r3]
 8491 004a 5B68     		ldr	r3, [r3, #4]
 8492 004c 03F08003 		and	r3, r3, #128
 8493              		.loc 1 4215 3
 8494 0050 802B     		cmp	r3, #128
 8495 0052 EBD0     		beq	.L406
 8496              	.L405:
4216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 8497              		.loc 1 4217 7
 8498 0054 FFF7FEFF 		bl	HAL_GetTick
 8499 0058 0346     		mov	r3, r0
 8500 005a 1A46     		mov	r2, r3
 8501 005c 6421     		movs	r1, #100
 8502 005e 7868     		ldr	r0, [r7, #4]
 8503 0060 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 8504 0064 0346     		mov	r3, r0
 8505              		.loc 1 4217 6
ARM GAS  /tmp/ccrdcdEL.s 			page 223


 8506 0066 002B     		cmp	r3, #0
 8507 0068 02D0     		beq	.L407
4218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 8508              		.loc 1 4219 21
 8509 006a 7B68     		ldr	r3, [r7, #4]
 8510 006c 4022     		movs	r2, #64
 8511 006e 1A66     		str	r2, [r3, #96]
 8512              	.L407:
4220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Disable SPI Peripheral */
4223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 8513              		.loc 1 4223 3
 8514 0070 7B68     		ldr	r3, [r7, #4]
 8515 0072 1B68     		ldr	r3, [r3]
 8516 0074 1A68     		ldr	r2, [r3]
 8517 0076 7B68     		ldr	r3, [r7, #4]
 8518 0078 1B68     		ldr	r3, [r3]
 8519 007a 22F04002 		bic	r2, r2, #64
 8520 007e 1A60     		str	r2, [r3]
4224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 8521              		.loc 1 4226 7
 8522 0080 FFF7FEFF 		bl	HAL_GetTick
 8523 0084 0346     		mov	r3, r0
 8524 0086 0093     		str	r3, [sp]
 8525 0088 6423     		movs	r3, #100
 8526 008a 0022     		movs	r2, #0
 8527 008c 4FF4C061 		mov	r1, #1536
 8528 0090 7868     		ldr	r0, [r7, #4]
 8529 0092 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 8530 0096 0346     		mov	r3, r0
 8531              		.loc 1 4226 6
 8532 0098 002B     		cmp	r3, #0
 8533 009a 02D0     		beq	.L408
4227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
4228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 8534              		.loc 1 4228 21
 8535 009c 7B68     		ldr	r3, [r7, #4]
 8536 009e 4022     		movs	r2, #64
 8537 00a0 1A66     		str	r2, [r3, #96]
 8538              	.L408:
4229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   /* Check case of Full-Duplex Mode and disable directly RXNEIE interrupt */
4232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 8539              		.loc 1 4232 7
 8540 00a2 7B68     		ldr	r3, [r7, #4]
 8541 00a4 1B68     		ldr	r3, [r3]
 8542 00a6 5B68     		ldr	r3, [r3, #4]
 8543 00a8 03F04003 		and	r3, r3, #64
 8544              		.loc 1 4232 6
 8545 00ac 402B     		cmp	r3, #64
 8546 00ae 3CD1     		bne	.L409
4233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   {
ARM GAS  /tmp/ccrdcdEL.s 			page 224


4234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Disable RXNEIE interrupt */
4235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 8547              		.loc 1 4235 5
 8548 00b0 7B68     		ldr	r3, [r7, #4]
 8549 00b2 1B68     		ldr	r3, [r3]
 8550 00b4 5A68     		ldr	r2, [r3, #4]
 8551 00b6 7B68     		ldr	r3, [r7, #4]
 8552 00b8 1B68     		ldr	r3, [r3]
 8553 00ba 22F04002 		bic	r2, r2, #64
 8554 00be 5A60     		str	r2, [r3, #4]
 8555              	.L412:
4236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Check RXNEIE is disabled */
4238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     do
4239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       if (count == 0U)
 8556              		.loc 1 4240 17
 8557 00c0 FB68     		ldr	r3, [r7, #12]
 8558              		.loc 1 4240 10
 8559 00c2 002B     		cmp	r3, #0
 8560 00c4 06D1     		bne	.L410
4241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       {
4242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8561              		.loc 1 4242 9
 8562 00c6 7B68     		ldr	r3, [r7, #4]
 8563 00c8 1B6E     		ldr	r3, [r3, #96]
 8564 00ca 43F04002 		orr	r2, r3, #64
 8565 00ce 7B68     		ldr	r3, [r7, #4]
 8566 00d0 1A66     		str	r2, [r3, #96]
4243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****         break;
 8567              		.loc 1 4243 9
 8568 00d2 09E0     		b	.L411
 8569              	.L410:
4244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       }
4245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       count--;
 8570              		.loc 1 4245 12
 8571 00d4 FB68     		ldr	r3, [r7, #12]
 8572 00d6 013B     		subs	r3, r3, #1
 8573 00d8 FB60     		str	r3, [r7, #12]
4246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     } while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 8574              		.loc 1 4246 14
 8575 00da 7B68     		ldr	r3, [r7, #4]
 8576 00dc 1B68     		ldr	r3, [r3]
 8577 00de 5B68     		ldr	r3, [r3, #4]
 8578 00e0 03F04003 		and	r3, r3, #64
 8579              		.loc 1 4246 5
 8580 00e4 402B     		cmp	r3, #64
 8581 00e6 EBD0     		beq	.L412
 8582              	.L411:
4247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Control the BSY flag */
4249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()
 8583              		.loc 1 4249 9
 8584 00e8 FFF7FEFF 		bl	HAL_GetTick
 8585 00ec 0346     		mov	r3, r0
 8586 00ee 0093     		str	r3, [sp]
 8587 00f0 6423     		movs	r3, #100
ARM GAS  /tmp/ccrdcdEL.s 			page 225


 8588 00f2 0022     		movs	r2, #0
 8589 00f4 8021     		movs	r1, #128
 8590 00f6 7868     		ldr	r0, [r7, #4]
 8591 00f8 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 8592 00fc 0346     		mov	r3, r0
 8593              		.loc 1 4249 8
 8594 00fe 002B     		cmp	r3, #0
 8595 0100 02D0     		beq	.L413
4250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 8596              		.loc 1 4251 23
 8597 0102 7B68     		ldr	r3, [r7, #4]
 8598 0104 4022     		movs	r2, #64
 8599 0106 1A66     		str	r2, [r3, #96]
 8600              	.L413:
4252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
4253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** 
4254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     /* Empty the FRLVL fifo */
4255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, H
 8601              		.loc 1 4255 9
 8602 0108 FFF7FEFF 		bl	HAL_GetTick
 8603 010c 0346     		mov	r3, r0
 8604 010e 0093     		str	r3, [sp]
 8605 0110 6423     		movs	r3, #100
 8606 0112 0022     		movs	r2, #0
 8607 0114 4FF4C061 		mov	r1, #1536
 8608 0118 7868     		ldr	r0, [r7, #4]
 8609 011a FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 8610 011e 0346     		mov	r3, r0
 8611              		.loc 1 4255 8
 8612 0120 002B     		cmp	r3, #0
 8613 0122 02D0     		beq	.L409
4256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     {
4257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 8614              		.loc 1 4257 23
 8615 0124 7B68     		ldr	r3, [r7, #4]
 8616 0126 4022     		movs	r2, #64
 8617 0128 1A66     		str	r2, [r3, #96]
 8618              	.L409:
4258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****     }
4259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   }
4260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 8619              		.loc 1 4260 15
 8620 012a 7B68     		ldr	r3, [r7, #4]
 8621 012c 0722     		movs	r2, #7
 8622 012e 83F85D20 		strb	r2, [r3, #93]
4261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_spi.c **** }
 8623              		.loc 1 4261 1
 8624 0132 00BF     		nop
 8625 0134 1037     		adds	r7, r7, #16
 8626              	.LCFI294:
 8627              		.cfi_def_cfa_offset 8
 8628 0136 BD46     		mov	sp, r7
 8629              	.LCFI295:
 8630              		.cfi_def_cfa_register 13
 8631              		@ sp needed
 8632 0138 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccrdcdEL.s 			page 226


 8633              	.L415:
 8634 013a 00BF     		.align	2
 8635              	.L414:
 8636 013c 00000000 		.word	SystemCoreClock
 8637 0140 F1197605 		.word	91625969
 8638              		.cfi_endproc
 8639              	.LFE380:
 8641              		.text
 8642              	.Letext0:
 8643              		.file 2 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_types.h"
 8644              		.file 3 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 8645              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 8646              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 8647              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 8648              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 8649              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 8650              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 8651              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 8652              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 8653              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccrdcdEL.s 			page 227


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_spi.c
     /tmp/ccrdcdEL.s:18     .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccrdcdEL.s:26     .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccrdcdEL.s:303    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccrdcdEL.s:219    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccrdcdEL.s:226    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccrdcdEL.s:346    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccrdcdEL.s:296    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccrdcdEL.s:339    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccrdcdEL.s:382    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccrdcdEL.s:389    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccrdcdEL.s:7889   .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccrdcdEL.s:904    .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccrdcdEL.s:911    .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccrdcdEL.s:1320   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccrdcdEL.s:7755   .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccrdcdEL.s:1313   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccrdcdEL.s:2039   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccrdcdEL.s:2046   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccrdcdEL.s:2234   .text.HAL_SPI_Transmit_IT:0000000000000104 $d
     /tmp/ccrdcdEL.s:7363   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccrdcdEL.s:7286   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccrdcdEL.s:2240   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccrdcdEL.s:2247   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccrdcdEL.s:2485   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccrdcdEL.s:2472   .text.HAL_SPI_Receive_IT:0000000000000148 $d
     /tmp/ccrdcdEL.s:7210   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccrdcdEL.s:7132   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccrdcdEL.s:2478   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccrdcdEL.s:2724   .text.HAL_SPI_TransmitReceive_IT:0000000000000150 $d
     /tmp/ccrdcdEL.s:6952   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccrdcdEL.s:7043   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccrdcdEL.s:6682   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccrdcdEL.s:6826   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccrdcdEL.s:2732   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccrdcdEL.s:2739   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccrdcdEL.s:3051   .text.HAL_SPI_Transmit_DMA:00000000000001cc $d
     /tmp/ccrdcdEL.s:6095   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccrdcdEL.s:5742   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccrdcdEL.s:6230   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccrdcdEL.s:3058   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccrdcdEL.s:3065   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccrdcdEL.s:3438   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccrdcdEL.s:3424   .text.HAL_SPI_Receive_DMA:000000000000022c $d
     /tmp/ccrdcdEL.s:6140   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccrdcdEL.s:5873   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccrdcdEL.s:3431   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccrdcdEL.s:3944   .text.HAL_SPI_TransmitReceive_DMA:0000000000000304 $d
     /tmp/ccrdcdEL.s:6185   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccrdcdEL.s:5981   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccrdcdEL.s:3953   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccrdcdEL.s:3960   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccrdcdEL.s:7593   .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 SPI_WaitFifoStateUntilTimeout
     /tmp/ccrdcdEL.s:7437   .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccrdcdEL.s:4327   .text.HAL_SPI_Abort:0000000000000230 $d
     /tmp/ccrdcdEL.s:8432   .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
ARM GAS  /tmp/ccrdcdEL.s 			page 228


     /tmp/ccrdcdEL.s:8294   .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccrdcdEL.s:4335   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccrdcdEL.s:4342   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccrdcdEL.s:5607   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccrdcdEL.s:4685   .text.HAL_SPI_Abort_IT:00000000000001dc $d
     /tmp/ccrdcdEL.s:6346   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccrdcdEL.s:6513   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccrdcdEL.s:4695   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccrdcdEL.s:4702   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccrdcdEL.s:4766   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccrdcdEL.s:4773   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccrdcdEL.s:4837   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccrdcdEL.s:4844   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccrdcdEL.s:4943   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccrdcdEL.s:4950   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccrdcdEL.s:5564   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccrdcdEL.s:5294   .text.HAL_SPI_IRQHandler:00000000000001fc $d
     /tmp/ccrdcdEL.s:6293   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccrdcdEL.s:5299   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:5306   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccrdcdEL.s:5342   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:5349   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccrdcdEL.s:5385   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:5392   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccrdcdEL.s:5428   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:5435   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccrdcdEL.s:5471   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:5478   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccrdcdEL.s:5514   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:5521   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccrdcdEL.s:5557   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:5600   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:5643   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccrdcdEL.s:5650   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccrdcdEL.s:5690   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccrdcdEL.s:5697   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
     /tmp/ccrdcdEL.s:5736   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccrdcdEL.s:5867   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccrdcdEL.s:5975   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccrdcdEL.s:6089   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccrdcdEL.s:6134   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccrdcdEL.s:6179   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccrdcdEL.s:6224   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccrdcdEL.s:6287   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccrdcdEL.s:6340   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:6507   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccrdcdEL.s:6676   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccrdcdEL.s:7998   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccrdcdEL.s:6820   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccrdcdEL.s:6946   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccrdcdEL.s:7037   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccrdcdEL.s:7126   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccrdcdEL.s:8104   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccrdcdEL.s:7204   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccrdcdEL.s:7280   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccrdcdEL.s:8188   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccrdcdEL.s:7357   .text.SPI_TxISR_16BIT:0000000000000000 $t
ARM GAS  /tmp/ccrdcdEL.s 			page 229


     /tmp/ccrdcdEL.s:7431   .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccrdcdEL.s:7587   .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 $t
     /tmp/ccrdcdEL.s:7749   .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccrdcdEL.s:7883   .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccrdcdEL.s:7992   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccrdcdEL.s:8098   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccrdcdEL.s:8182   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccrdcdEL.s:8288   .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccrdcdEL.s:8420   .text.SPI_AbortRx_ISR:00000000000000b8 $d
     /tmp/ccrdcdEL.s:8426   .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccrdcdEL.s:8636   .text.SPI_AbortTx_ISR:000000000000013c $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
SystemCoreClock
HAL_DMA_Abort_IT
