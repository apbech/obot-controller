ARM GAS  /tmp/ccuwK2ly.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB325:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @file    stm32g4xx_hal_uart.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   [..]
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) UART interrupts handling:
ARM GAS  /tmp/ccuwK2ly.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ==================================
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
ARM GAS  /tmp/ccuwK2ly.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @attention
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
ARM GAS  /tmp/ccuwK2ly.s 			page 4


 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #include "stm32g4xx_hal.h"
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup STM32G4xx_HAL_Driver
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccuwK2ly.s 			page 5


 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** ===============================================================================
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in asynchronous mode.
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Baud Rate
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Word Length
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Stop Bit
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Hardware flow control
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Over Sampling Method
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) data logical level inversion
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) RX and TX pins swap
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) RX overrun detection disabling
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) DMA disabling on RX error
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) MSB first on communication line
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) auto Baud rate detection
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
ARM GAS  /tmp/ccuwK2ly.s 			page 6


 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     are available in reference manual).
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   following table.
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   Table 1. UART frame format.
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
  29              		.loc 1 296 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 298 6
ARM GAS  /tmp/ccuwK2ly.s 			page 7


  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 300 12
  50 000e 0123     		movs	r3, #1
  51 0010 42E0     		b	.L3
  52              	.L2:
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check the parameters */
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check the parameters */
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 314 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 D3F88030 		ldr	r3, [r3, #128]
  56              		.loc 1 314 6
  57 0018 002B     		cmp	r3, #0
  58 001a 06D1     		bne	.L4
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  59              		.loc 1 317 17
  60 001c 7B68     		ldr	r3, [r7, #4]
  61 001e 0022     		movs	r2, #0
  62 0020 83F87C20 		strb	r2, [r3, #124]
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  63              		.loc 1 331 5
  64 0024 7868     		ldr	r0, [r7, #4]
  65 0026 FFF7FEFF 		bl	HAL_UART_MspInit
  66              	.L4:
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 8


 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  67              		.loc 1 335 17
  68 002a 7B68     		ldr	r3, [r7, #4]
  69 002c 2422     		movs	r2, #36
  70 002e C3F88020 		str	r2, [r3, #128]
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  71              		.loc 1 337 3
  72 0032 7B68     		ldr	r3, [r7, #4]
  73 0034 1B68     		ldr	r3, [r3]
  74 0036 1A68     		ldr	r2, [r3]
  75 0038 7B68     		ldr	r3, [r7, #4]
  76 003a 1B68     		ldr	r3, [r3]
  77 003c 22F00102 		bic	r2, r2, #1
  78 0040 1A60     		str	r2, [r3]
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  79              		.loc 1 340 7
  80 0042 7868     		ldr	r0, [r7, #4]
  81 0044 FFF7FEFF 		bl	UART_SetConfig
  82 0048 0346     		mov	r3, r0
  83              		.loc 1 340 6
  84 004a 012B     		cmp	r3, #1
  85 004c 01D1     		bne	.L5
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
  86              		.loc 1 342 12
  87 004e 0123     		movs	r3, #1
  88 0050 22E0     		b	.L3
  89              	.L5:
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  90              		.loc 1 345 26
  91 0052 7B68     		ldr	r3, [r7, #4]
  92 0054 9B6A     		ldr	r3, [r3, #40]
  93              		.loc 1 345 6
  94 0056 002B     		cmp	r3, #0
  95 0058 02D0     		beq	.L6
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  96              		.loc 1 347 5
  97 005a 7868     		ldr	r0, [r7, #4]
  98 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
  99              	.L6:
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 100              		.loc 1 353 3
 101 0060 7B68     		ldr	r3, [r7, #4]
 102 0062 1B68     		ldr	r3, [r3]
 103 0064 5A68     		ldr	r2, [r3, #4]
 104 0066 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 9


 105 0068 1B68     		ldr	r3, [r3]
 106 006a 22F49042 		bic	r2, r2, #18432
 107 006e 5A60     		str	r2, [r3, #4]
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 108              		.loc 1 354 3
 109 0070 7B68     		ldr	r3, [r7, #4]
 110 0072 1B68     		ldr	r3, [r3]
 111 0074 9A68     		ldr	r2, [r3, #8]
 112 0076 7B68     		ldr	r3, [r7, #4]
 113 0078 1B68     		ldr	r3, [r3]
 114 007a 22F02A02 		bic	r2, r2, #42
 115 007e 9A60     		str	r2, [r3, #8]
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 116              		.loc 1 356 3
 117 0080 7B68     		ldr	r3, [r7, #4]
 118 0082 1B68     		ldr	r3, [r3]
 119 0084 1A68     		ldr	r2, [r3]
 120 0086 7B68     		ldr	r3, [r7, #4]
 121 0088 1B68     		ldr	r3, [r3]
 122 008a 42F00102 		orr	r2, r2, #1
 123 008e 1A60     		str	r2, [r3]
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 124              		.loc 1 359 11
 125 0090 7868     		ldr	r0, [r7, #4]
 126 0092 FFF7FEFF 		bl	UART_CheckIdleState
 127 0096 0346     		mov	r3, r0
 128              	.L3:
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 129              		.loc 1 360 1
 130 0098 1846     		mov	r0, r3
 131 009a 0837     		adds	r7, r7, #8
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 8
 134 009c BD46     		mov	sp, r7
 135              	.LCFI4:
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 009e 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE325:
 142              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_HalfDuplex_Init
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	HAL_HalfDuplex_Init:
 151              	.LFB326:
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  /tmp/ccuwK2ly.s 			page 10


 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 152              		.loc 1 369 1
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 82B0     		sub	sp, sp, #8
 162              	.LCFI6:
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              	.LCFI7:
 166              		.cfi_def_cfa_register 7
 167 0006 7860     		str	r0, [r7, #4]
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 168              		.loc 1 371 6
 169 0008 7B68     		ldr	r3, [r7, #4]
 170 000a 002B     		cmp	r3, #0
 171 000c 01D1     		bne	.L8
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 172              		.loc 1 373 12
 173 000e 0123     		movs	r3, #1
 174 0010 4AE0     		b	.L9
 175              	.L8:
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check UART instance */
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 176              		.loc 1 379 12
 177 0012 7B68     		ldr	r3, [r7, #4]
 178 0014 D3F88030 		ldr	r3, [r3, #128]
 179              		.loc 1 379 6
 180 0018 002B     		cmp	r3, #0
 181 001a 06D1     		bne	.L10
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 182              		.loc 1 382 17
 183 001c 7B68     		ldr	r3, [r7, #4]
 184 001e 0022     		movs	r2, #0
 185 0020 83F87C20 		strb	r2, [r3, #124]
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccuwK2ly.s 			page 11


 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 186              		.loc 1 396 5
 187 0024 7868     		ldr	r0, [r7, #4]
 188 0026 FFF7FEFF 		bl	HAL_UART_MspInit
 189              	.L10:
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 190              		.loc 1 400 17
 191 002a 7B68     		ldr	r3, [r7, #4]
 192 002c 2422     		movs	r2, #36
 193 002e C3F88020 		str	r2, [r3, #128]
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 194              		.loc 1 402 3
 195 0032 7B68     		ldr	r3, [r7, #4]
 196 0034 1B68     		ldr	r3, [r3]
 197 0036 1A68     		ldr	r2, [r3]
 198 0038 7B68     		ldr	r3, [r7, #4]
 199 003a 1B68     		ldr	r3, [r3]
 200 003c 22F00102 		bic	r2, r2, #1
 201 0040 1A60     		str	r2, [r3]
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 202              		.loc 1 405 7
 203 0042 7868     		ldr	r0, [r7, #4]
 204 0044 FFF7FEFF 		bl	UART_SetConfig
 205 0048 0346     		mov	r3, r0
 206              		.loc 1 405 6
 207 004a 012B     		cmp	r3, #1
 208 004c 01D1     		bne	.L11
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 209              		.loc 1 407 12
 210 004e 0123     		movs	r3, #1
 211 0050 2AE0     		b	.L9
 212              	.L11:
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 213              		.loc 1 410 26
 214 0052 7B68     		ldr	r3, [r7, #4]
 215 0054 9B6A     		ldr	r3, [r3, #40]
 216              		.loc 1 410 6
 217 0056 002B     		cmp	r3, #0
 218 0058 02D0     		beq	.L12
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
ARM GAS  /tmp/ccuwK2ly.s 			page 12


 219              		.loc 1 412 5
 220 005a 7868     		ldr	r0, [r7, #4]
 221 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 222              	.L12:
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 223              		.loc 1 418 3
 224 0060 7B68     		ldr	r3, [r7, #4]
 225 0062 1B68     		ldr	r3, [r3]
 226 0064 5A68     		ldr	r2, [r3, #4]
 227 0066 7B68     		ldr	r3, [r7, #4]
 228 0068 1B68     		ldr	r3, [r3]
 229 006a 22F49042 		bic	r2, r2, #18432
 230 006e 5A60     		str	r2, [r3, #4]
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 231              		.loc 1 419 3
 232 0070 7B68     		ldr	r3, [r7, #4]
 233 0072 1B68     		ldr	r3, [r3]
 234 0074 9A68     		ldr	r2, [r3, #8]
 235 0076 7B68     		ldr	r3, [r7, #4]
 236 0078 1B68     		ldr	r3, [r3]
 237 007a 22F02202 		bic	r2, r2, #34
 238 007e 9A60     		str	r2, [r3, #8]
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 239              		.loc 1 422 3
 240 0080 7B68     		ldr	r3, [r7, #4]
 241 0082 1B68     		ldr	r3, [r3]
 242 0084 9A68     		ldr	r2, [r3, #8]
 243 0086 7B68     		ldr	r3, [r7, #4]
 244 0088 1B68     		ldr	r3, [r3]
 245 008a 42F00802 		orr	r2, r2, #8
 246 008e 9A60     		str	r2, [r3, #8]
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 247              		.loc 1 424 3
 248 0090 7B68     		ldr	r3, [r7, #4]
 249 0092 1B68     		ldr	r3, [r3]
 250 0094 1A68     		ldr	r2, [r3]
 251 0096 7B68     		ldr	r3, [r7, #4]
 252 0098 1B68     		ldr	r3, [r3]
 253 009a 42F00102 		orr	r2, r2, #1
 254 009e 1A60     		str	r2, [r3]
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 255              		.loc 1 427 11
 256 00a0 7868     		ldr	r0, [r7, #4]
 257 00a2 FFF7FEFF 		bl	UART_CheckIdleState
 258 00a6 0346     		mov	r3, r0
 259              	.L9:
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  /tmp/ccuwK2ly.s 			page 13


 260              		.loc 1 428 1
 261 00a8 1846     		mov	r0, r3
 262 00aa 0837     		adds	r7, r7, #8
 263              	.LCFI8:
 264              		.cfi_def_cfa_offset 8
 265 00ac BD46     		mov	sp, r7
 266              	.LCFI9:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 00ae 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE326:
 273              		.section	.text.HAL_LIN_Init,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_LIN_Init
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	HAL_LIN_Init:
 282              	.LFB327:
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart             UART handle.
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 283              		.loc 1 442 1
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              	.LCFI10:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 82B0     		sub	sp, sp, #8
 293              	.LCFI11:
 294              		.cfi_def_cfa_offset 16
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI12:
 297              		.cfi_def_cfa_register 7
 298 0006 7860     		str	r0, [r7, #4]
 299 0008 3960     		str	r1, [r7]
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 300              		.loc 1 444 6
 301 000a 7B68     		ldr	r3, [r7, #4]
 302 000c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccuwK2ly.s 			page 14


 303 000e 01D1     		bne	.L14
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 304              		.loc 1 446 12
 305 0010 0123     		movs	r3, #1
 306 0012 61E0     		b	.L15
 307              	.L14:
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the LIN UART instance */
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 308              		.loc 1 455 18
 309 0014 7B68     		ldr	r3, [r7, #4]
 310 0016 DB69     		ldr	r3, [r3, #28]
 311              		.loc 1 455 6
 312 0018 B3F5004F 		cmp	r3, #32768
 313 001c 01D1     		bne	.L16
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 314              		.loc 1 457 12
 315 001e 0123     		movs	r3, #1
 316 0020 5AE0     		b	.L15
 317              	.L16:
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 318              		.loc 1 460 18
 319 0022 7B68     		ldr	r3, [r7, #4]
 320 0024 9B68     		ldr	r3, [r3, #8]
 321              		.loc 1 460 6
 322 0026 002B     		cmp	r3, #0
 323 0028 01D0     		beq	.L17
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 324              		.loc 1 462 12
 325 002a 0123     		movs	r3, #1
 326 002c 54E0     		b	.L15
 327              	.L17:
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 328              		.loc 1 465 12
 329 002e 7B68     		ldr	r3, [r7, #4]
 330 0030 D3F88030 		ldr	r3, [r3, #128]
 331              		.loc 1 465 6
 332 0034 002B     		cmp	r3, #0
 333 0036 06D1     		bne	.L18
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 334              		.loc 1 468 17
 335 0038 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 15


 336 003a 0022     		movs	r2, #0
 337 003c 83F87C20 		strb	r2, [r3, #124]
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 338              		.loc 1 482 5
 339 0040 7868     		ldr	r0, [r7, #4]
 340 0042 FFF7FEFF 		bl	HAL_UART_MspInit
 341              	.L18:
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 342              		.loc 1 486 17
 343 0046 7B68     		ldr	r3, [r7, #4]
 344 0048 2422     		movs	r2, #36
 345 004a C3F88020 		str	r2, [r3, #128]
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 346              		.loc 1 488 3
 347 004e 7B68     		ldr	r3, [r7, #4]
 348 0050 1B68     		ldr	r3, [r3]
 349 0052 1A68     		ldr	r2, [r3]
 350 0054 7B68     		ldr	r3, [r7, #4]
 351 0056 1B68     		ldr	r3, [r3]
 352 0058 22F00102 		bic	r2, r2, #1
 353 005c 1A60     		str	r2, [r3]
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 354              		.loc 1 491 7
 355 005e 7868     		ldr	r0, [r7, #4]
 356 0060 FFF7FEFF 		bl	UART_SetConfig
 357 0064 0346     		mov	r3, r0
 358              		.loc 1 491 6
 359 0066 012B     		cmp	r3, #1
 360 0068 01D1     		bne	.L19
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 361              		.loc 1 493 12
 362 006a 0123     		movs	r3, #1
 363 006c 34E0     		b	.L15
 364              	.L19:
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
ARM GAS  /tmp/ccuwK2ly.s 			page 16


 365              		.loc 1 496 26
 366 006e 7B68     		ldr	r3, [r7, #4]
 367 0070 9B6A     		ldr	r3, [r3, #40]
 368              		.loc 1 496 6
 369 0072 002B     		cmp	r3, #0
 370 0074 02D0     		beq	.L20
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 371              		.loc 1 498 5
 372 0076 7868     		ldr	r0, [r7, #4]
 373 0078 FFF7FEFF 		bl	UART_AdvFeatureConfig
 374              	.L20:
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 375              		.loc 1 504 3
 376 007c 7B68     		ldr	r3, [r7, #4]
 377 007e 1B68     		ldr	r3, [r3]
 378 0080 5A68     		ldr	r2, [r3, #4]
 379 0082 7B68     		ldr	r3, [r7, #4]
 380 0084 1B68     		ldr	r3, [r3]
 381 0086 22F40062 		bic	r2, r2, #2048
 382 008a 5A60     		str	r2, [r3, #4]
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 383              		.loc 1 505 3
 384 008c 7B68     		ldr	r3, [r7, #4]
 385 008e 1B68     		ldr	r3, [r3]
 386 0090 9A68     		ldr	r2, [r3, #8]
 387 0092 7B68     		ldr	r3, [r7, #4]
 388 0094 1B68     		ldr	r3, [r3]
 389 0096 22F02A02 		bic	r2, r2, #42
 390 009a 9A60     		str	r2, [r3, #8]
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 391              		.loc 1 508 3
 392 009c 7B68     		ldr	r3, [r7, #4]
 393 009e 1B68     		ldr	r3, [r3]
 394 00a0 5A68     		ldr	r2, [r3, #4]
 395 00a2 7B68     		ldr	r3, [r7, #4]
 396 00a4 1B68     		ldr	r3, [r3]
 397 00a6 42F48042 		orr	r2, r2, #16384
 398 00aa 5A60     		str	r2, [r3, #4]
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 399              		.loc 1 511 3
 400 00ac 7B68     		ldr	r3, [r7, #4]
 401 00ae 1B68     		ldr	r3, [r3]
 402 00b0 5B68     		ldr	r3, [r3, #4]
 403 00b2 23F02001 		bic	r1, r3, #32
 404 00b6 7B68     		ldr	r3, [r7, #4]
 405 00b8 1B68     		ldr	r3, [r3]
 406 00ba 3A68     		ldr	r2, [r7]
ARM GAS  /tmp/ccuwK2ly.s 			page 17


 407 00bc 0A43     		orrs	r2, r2, r1
 408 00be 5A60     		str	r2, [r3, #4]
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 409              		.loc 1 513 3
 410 00c0 7B68     		ldr	r3, [r7, #4]
 411 00c2 1B68     		ldr	r3, [r3]
 412 00c4 1A68     		ldr	r2, [r3]
 413 00c6 7B68     		ldr	r3, [r7, #4]
 414 00c8 1B68     		ldr	r3, [r3]
 415 00ca 42F00102 		orr	r2, r2, #1
 416 00ce 1A60     		str	r2, [r3]
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 417              		.loc 1 516 11
 418 00d0 7868     		ldr	r0, [r7, #4]
 419 00d2 FFF7FEFF 		bl	UART_CheckIdleState
 420 00d6 0346     		mov	r3, r0
 421              	.L15:
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 422              		.loc 1 517 1
 423 00d8 1846     		mov	r0, r3
 424 00da 0837     		adds	r7, r7, #8
 425              	.LCFI13:
 426              		.cfi_def_cfa_offset 8
 427 00dc BD46     		mov	sp, r7
 428              	.LCFI14:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 00de 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE327:
 435              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_MultiProcessor_Init
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	HAL_MultiProcessor_Init:
 444              	.LFB328:
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart        UART handle.
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
ARM GAS  /tmp/ccuwK2ly.s 			page 18


 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 445              		.loc 1 539 1
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 80B5     		push	{r7, lr}
 450              	.LCFI15:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 84B0     		sub	sp, sp, #16
 455              	.LCFI16:
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI17:
 459              		.cfi_def_cfa_register 7
 460 0006 F860     		str	r0, [r7, #12]
 461 0008 0B46     		mov	r3, r1
 462 000a 7A60     		str	r2, [r7, #4]
 463 000c FB72     		strb	r3, [r7, #11]
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 464              		.loc 1 541 6
 465 000e FB68     		ldr	r3, [r7, #12]
 466 0010 002B     		cmp	r3, #0
 467 0012 01D1     		bne	.L22
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 468              		.loc 1 543 12
 469 0014 0123     		movs	r3, #1
 470 0016 5BE0     		b	.L23
 471              	.L22:
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the wake up method parameter */
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 472              		.loc 1 549 12
 473 0018 FB68     		ldr	r3, [r7, #12]
 474 001a D3F88030 		ldr	r3, [r3, #128]
 475              		.loc 1 549 6
 476 001e 002B     		cmp	r3, #0
 477 0020 06D1     		bne	.L24
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 478              		.loc 1 552 17
 479 0022 FB68     		ldr	r3, [r7, #12]
 480 0024 0022     		movs	r2, #0
 481 0026 83F87C20 		strb	r2, [r3, #124]
ARM GAS  /tmp/ccuwK2ly.s 			page 19


 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 482              		.loc 1 566 5
 483 002a F868     		ldr	r0, [r7, #12]
 484 002c FFF7FEFF 		bl	HAL_UART_MspInit
 485              	.L24:
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 486              		.loc 1 570 17
 487 0030 FB68     		ldr	r3, [r7, #12]
 488 0032 2422     		movs	r2, #36
 489 0034 C3F88020 		str	r2, [r3, #128]
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 490              		.loc 1 572 3
 491 0038 FB68     		ldr	r3, [r7, #12]
 492 003a 1B68     		ldr	r3, [r3]
 493 003c 1A68     		ldr	r2, [r3]
 494 003e FB68     		ldr	r3, [r7, #12]
 495 0040 1B68     		ldr	r3, [r3]
 496 0042 22F00102 		bic	r2, r2, #1
 497 0046 1A60     		str	r2, [r3]
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 498              		.loc 1 575 7
 499 0048 F868     		ldr	r0, [r7, #12]
 500 004a FFF7FEFF 		bl	UART_SetConfig
 501 004e 0346     		mov	r3, r0
 502              		.loc 1 575 6
 503 0050 012B     		cmp	r3, #1
 504 0052 01D1     		bne	.L25
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 505              		.loc 1 577 12
 506 0054 0123     		movs	r3, #1
 507 0056 3BE0     		b	.L23
 508              	.L25:
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 509              		.loc 1 580 26
 510 0058 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccuwK2ly.s 			page 20


 511 005a 9B6A     		ldr	r3, [r3, #40]
 512              		.loc 1 580 6
 513 005c 002B     		cmp	r3, #0
 514 005e 02D0     		beq	.L26
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 515              		.loc 1 582 5
 516 0060 F868     		ldr	r0, [r7, #12]
 517 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 518              	.L26:
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 519              		.loc 1 588 3
 520 0066 FB68     		ldr	r3, [r7, #12]
 521 0068 1B68     		ldr	r3, [r3]
 522 006a 5A68     		ldr	r2, [r3, #4]
 523 006c FB68     		ldr	r3, [r7, #12]
 524 006e 1B68     		ldr	r3, [r3]
 525 0070 22F49042 		bic	r2, r2, #18432
 526 0074 5A60     		str	r2, [r3, #4]
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 527              		.loc 1 589 3
 528 0076 FB68     		ldr	r3, [r7, #12]
 529 0078 1B68     		ldr	r3, [r3]
 530 007a 9A68     		ldr	r2, [r3, #8]
 531 007c FB68     		ldr	r3, [r7, #12]
 532 007e 1B68     		ldr	r3, [r3]
 533 0080 22F02A02 		bic	r2, r2, #42
 534 0084 9A60     		str	r2, [r3, #8]
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 535              		.loc 1 591 6
 536 0086 7B68     		ldr	r3, [r7, #4]
 537 0088 B3F5006F 		cmp	r3, #2048
 538 008c 0AD1     		bne	.L27
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 539              		.loc 1 594 5
 540 008e FB68     		ldr	r3, [r7, #12]
 541 0090 1B68     		ldr	r3, [r3]
 542 0092 5B68     		ldr	r3, [r3, #4]
 543 0094 23F07F41 		bic	r1, r3, #-16777216
 544 0098 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 545 009a 1A06     		lsls	r2, r3, #24
 546 009c FB68     		ldr	r3, [r7, #12]
 547 009e 1B68     		ldr	r3, [r3]
 548 00a0 0A43     		orrs	r2, r2, r1
 549 00a2 5A60     		str	r2, [r3, #4]
 550              	.L27:
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
ARM GAS  /tmp/ccuwK2ly.s 			page 21


 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 551              		.loc 1 598 3
 552 00a4 FB68     		ldr	r3, [r7, #12]
 553 00a6 1B68     		ldr	r3, [r3]
 554 00a8 1B68     		ldr	r3, [r3]
 555 00aa 23F40061 		bic	r1, r3, #2048
 556 00ae FB68     		ldr	r3, [r7, #12]
 557 00b0 1B68     		ldr	r3, [r3]
 558 00b2 7A68     		ldr	r2, [r7, #4]
 559 00b4 0A43     		orrs	r2, r2, r1
 560 00b6 1A60     		str	r2, [r3]
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 561              		.loc 1 600 3
 562 00b8 FB68     		ldr	r3, [r7, #12]
 563 00ba 1B68     		ldr	r3, [r3]
 564 00bc 1A68     		ldr	r2, [r3]
 565 00be FB68     		ldr	r3, [r7, #12]
 566 00c0 1B68     		ldr	r3, [r3]
 567 00c2 42F00102 		orr	r2, r2, #1
 568 00c6 1A60     		str	r2, [r3]
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 569              		.loc 1 603 11
 570 00c8 F868     		ldr	r0, [r7, #12]
 571 00ca FFF7FEFF 		bl	UART_CheckIdleState
 572 00ce 0346     		mov	r3, r0
 573              	.L23:
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 574              		.loc 1 604 1
 575 00d0 1846     		mov	r0, r3
 576 00d2 1037     		adds	r7, r7, #16
 577              	.LCFI18:
 578              		.cfi_def_cfa_offset 8
 579 00d4 BD46     		mov	sp, r7
 580              	.LCFI19:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 00d6 80BD     		pop	{r7, pc}
 584              		.cfi_endproc
 585              	.LFE328:
 587              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_UART_DeInit
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	HAL_UART_DeInit:
 596              	.LFB329:
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccuwK2ly.s 			page 22


 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 597              		.loc 1 613 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI20:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              	.LCFI21:
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI22:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 613              		.loc 1 615 6
 614 0008 7B68     		ldr	r3, [r7, #4]
 615 000a 002B     		cmp	r3, #0
 616 000c 01D1     		bne	.L29
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 617              		.loc 1 617 12
 618 000e 0123     		movs	r3, #1
 619 0010 2BE0     		b	.L30
 620              	.L29:
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 621              		.loc 1 623 17
 622 0012 7B68     		ldr	r3, [r7, #4]
 623 0014 2422     		movs	r2, #36
 624 0016 C3F88020 		str	r2, [r3, #128]
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 625              		.loc 1 625 3
 626 001a 7B68     		ldr	r3, [r7, #4]
 627 001c 1B68     		ldr	r3, [r3]
 628 001e 1A68     		ldr	r2, [r3]
 629 0020 7B68     		ldr	r3, [r7, #4]
 630 0022 1B68     		ldr	r3, [r3]
 631 0024 22F00102 		bic	r2, r2, #1
 632 0028 1A60     		str	r2, [r3]
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 633              		.loc 1 627 8
 634 002a 7B68     		ldr	r3, [r7, #4]
 635 002c 1B68     		ldr	r3, [r3]
 636              		.loc 1 627 24
ARM GAS  /tmp/ccuwK2ly.s 			page 23


 637 002e 0022     		movs	r2, #0
 638 0030 1A60     		str	r2, [r3]
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 639              		.loc 1 628 8
 640 0032 7B68     		ldr	r3, [r7, #4]
 641 0034 1B68     		ldr	r3, [r3]
 642              		.loc 1 628 24
 643 0036 0022     		movs	r2, #0
 644 0038 5A60     		str	r2, [r3, #4]
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 645              		.loc 1 629 8
 646 003a 7B68     		ldr	r3, [r7, #4]
 647 003c 1B68     		ldr	r3, [r3]
 648              		.loc 1 629 24
 649 003e 0022     		movs	r2, #0
 650 0040 9A60     		str	r2, [r3, #8]
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DeInit the low level hardware */
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DeInit the low level hardware */
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 651              		.loc 1 640 3
 652 0042 7868     		ldr	r0, [r7, #4]
 653 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 654              		.loc 1 643 20
 655 0048 7B68     		ldr	r3, [r7, #4]
 656 004a 0022     		movs	r2, #0
 657 004c C3F88820 		str	r2, [r3, #136]
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 658              		.loc 1 644 17
 659 0050 7B68     		ldr	r3, [r7, #4]
 660 0052 0022     		movs	r2, #0
 661 0054 C3F88020 		str	r2, [r3, #128]
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 662              		.loc 1 645 18
 663 0058 7B68     		ldr	r3, [r7, #4]
 664 005a 0022     		movs	r2, #0
 665 005c C3F88420 		str	r2, [r3, #132]
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 666              		.loc 1 647 3
 667 0060 7B68     		ldr	r3, [r7, #4]
 668 0062 0022     		movs	r2, #0
 669 0064 83F87C20 		strb	r2, [r3, #124]
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 670              		.loc 1 649 10
 671 0068 0023     		movs	r3, #0
ARM GAS  /tmp/ccuwK2ly.s 			page 24


 672              	.L30:
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 673              		.loc 1 650 1
 674 006a 1846     		mov	r0, r3
 675 006c 0837     		adds	r7, r7, #8
 676              	.LCFI23:
 677              		.cfi_def_cfa_offset 8
 678 006e BD46     		mov	sp, r7
 679              	.LCFI24:
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 0070 80BD     		pop	{r7, pc}
 683              		.cfi_endproc
 684              	.LFE329:
 686              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 687              		.align	1
 688              		.weak	HAL_UART_MspInit
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	HAL_UART_MspInit:
 695              	.LFB330:
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 696              		.loc 1 658 1
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 8
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              	.LCFI25:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 83B0     		sub	sp, sp, #12
 706              	.LCFI26:
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              	.LCFI27:
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 712              		.loc 1 665 1
 713 0008 00BF     		nop
 714 000a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccuwK2ly.s 			page 25


 715              	.LCFI28:
 716              		.cfi_def_cfa_offset 4
 717 000c BD46     		mov	sp, r7
 718              	.LCFI29:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 000e 5DF8047B 		ldr	r7, [sp], #4
 722              	.LCFI30:
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 0012 7047     		bx	lr
 726              		.cfi_endproc
 727              	.LFE330:
 729              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 730              		.align	1
 731              		.weak	HAL_UART_MspDeInit
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	HAL_UART_MspDeInit:
 738              	.LFB331:
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 739              		.loc 1 673 1
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744 0000 80B4     		push	{r7}
 745              	.LCFI31:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 83B0     		sub	sp, sp, #12
 749              	.LCFI32:
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI33:
 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 755              		.loc 1 680 1
 756 0008 00BF     		nop
 757 000a 0C37     		adds	r7, r7, #12
 758              	.LCFI34:
ARM GAS  /tmp/ccuwK2ly.s 			page 26


 759              		.cfi_def_cfa_offset 4
 760 000c BD46     		mov	sp, r7
 761              	.LCFI35:
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 000e 5DF8047B 		ldr	r7, [sp], #4
 765              	.LCFI36:
 766              		.cfi_restore 7
 767              		.cfi_def_cfa_offset 0
 768 0012 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE331:
 772              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_UART_Transmit
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_UART_Transmit:
 781              	.LFB332:
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart uart handle
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (pCallback == NULL)
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 27


 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccuwK2ly.s 			page 28


 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart uart handle
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
ARM GAS  /tmp/ccuwK2ly.s 			page 29


 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 30


 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                       ##### IO operation functions #####
ARM GAS  /tmp/ccuwK2ly.s 			page 31


 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and Half duplex data transfers.
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) There are two mode of transfer:
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            after finishing transfer.
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            using DMA mode.
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Blocking mode API's are :
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         Errors are handled as follows :
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
ARM GAS  /tmp/ccuwK2ly.s 			page 32


1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart   UART handle.
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 782              		.loc 1 1032 1
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 32
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786 0000 80B5     		push	{r7, lr}
 787              	.LCFI37:
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 8AB0     		sub	sp, sp, #40
 792              	.LCFI38:
 793              		.cfi_def_cfa_offset 48
 794 0004 02AF     		add	r7, sp, #8
 795              	.LCFI39:
 796              		.cfi_def_cfa 7, 40
 797 0006 F860     		str	r0, [r7, #12]
 798 0008 B960     		str	r1, [r7, #8]
 799 000a 3B60     		str	r3, [r7]
 800 000c 1346     		mov	r3, r2	@ movhi
 801 000e FB80     		strh	r3, [r7, #6]	@ movhi
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *pdata16bits;
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
ARM GAS  /tmp/ccuwK2ly.s 			page 33


 802              		.loc 1 1038 12
 803 0010 FB68     		ldr	r3, [r7, #12]
 804 0012 D3F88030 		ldr	r3, [r3, #128]
 805              		.loc 1 1038 6
 806 0016 202B     		cmp	r3, #32
 807 0018 40F08380 		bne	.L34
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 808              		.loc 1 1040 8
 809 001c BB68     		ldr	r3, [r7, #8]
 810 001e 002B     		cmp	r3, #0
 811 0020 02D0     		beq	.L35
 812              		.loc 1 1040 25 discriminator 1
 813 0022 FB88     		ldrh	r3, [r7, #6]
 814 0024 002B     		cmp	r3, #0
 815 0026 01D1     		bne	.L36
 816              	.L35:
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return  HAL_ERROR;
 817              		.loc 1 1042 15
 818 0028 0123     		movs	r3, #1
 819 002a 7BE0     		b	.L37
 820              	.L36:
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
 821              		.loc 1 1045 5
 822 002c FB68     		ldr	r3, [r7, #12]
 823 002e 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 824 0032 012B     		cmp	r3, #1
 825 0034 01D1     		bne	.L38
 826              		.loc 1 1045 5 is_stmt 0 discriminator 1
 827 0036 0223     		movs	r3, #2
 828 0038 74E0     		b	.L37
 829              	.L38:
 830              		.loc 1 1045 5 discriminator 2
 831 003a FB68     		ldr	r3, [r7, #12]
 832 003c 0122     		movs	r2, #1
 833 003e 83F87C20 		strb	r2, [r3, #124]
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 834              		.loc 1 1047 22 is_stmt 1 discriminator 2
 835 0042 FB68     		ldr	r3, [r7, #12]
 836 0044 0022     		movs	r2, #0
 837 0046 C3F88820 		str	r2, [r3, #136]
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 838              		.loc 1 1048 19 discriminator 2
 839 004a FB68     		ldr	r3, [r7, #12]
 840 004c 2122     		movs	r2, #33
 841 004e C3F88020 		str	r2, [r3, #128]
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 842              		.loc 1 1051 17 discriminator 2
 843 0052 FFF7FEFF 		bl	HAL_GetTick
 844 0056 7861     		str	r0, [r7, #20]
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 34


1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 845              		.loc 1 1053 24 discriminator 2
 846 0058 FB68     		ldr	r3, [r7, #12]
 847 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 848 005c A3F85420 		strh	r2, [r3, #84]	@ movhi
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 849              		.loc 1 1054 24 discriminator 2
 850 0060 FB68     		ldr	r3, [r7, #12]
 851 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 852 0064 A3F85620 		strh	r2, [r3, #86]	@ movhi
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 853              		.loc 1 1057 21 discriminator 2
 854 0068 FB68     		ldr	r3, [r7, #12]
 855 006a 9B68     		ldr	r3, [r3, #8]
 856              		.loc 1 1057 8 discriminator 2
 857 006c B3F5805F 		cmp	r3, #4096
 858 0070 08D1     		bne	.L39
 859              		.loc 1 1057 71 discriminator 1
 860 0072 FB68     		ldr	r3, [r7, #12]
 861 0074 1B69     		ldr	r3, [r3, #16]
 862              		.loc 1 1057 56 discriminator 1
 863 0076 002B     		cmp	r3, #0
 864 0078 04D1     		bne	.L39
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = NULL;
 865              		.loc 1 1059 19
 866 007a 0023     		movs	r3, #0
 867 007c FB61     		str	r3, [r7, #28]
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 868              		.loc 1 1060 19
 869 007e BB68     		ldr	r3, [r7, #8]
 870 0080 BB61     		str	r3, [r7, #24]
 871 0082 03E0     		b	.L40
 872              	.L39:
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = pData;
 873              		.loc 1 1064 19
 874 0084 BB68     		ldr	r3, [r7, #8]
 875 0086 FB61     		str	r3, [r7, #28]
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = NULL;
 876              		.loc 1 1065 19
 877 0088 0023     		movs	r3, #0
 878 008a BB61     		str	r3, [r7, #24]
 879              	.L40:
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 880              		.loc 1 1068 11
 881 008c 2CE0     		b	.L41
 882              	.L45:
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 883              		.loc 1 1070 11
ARM GAS  /tmp/ccuwK2ly.s 			page 35


 884 008e 3B68     		ldr	r3, [r7]
 885 0090 0093     		str	r3, [sp]
 886 0092 7B69     		ldr	r3, [r7, #20]
 887 0094 0022     		movs	r2, #0
 888 0096 8021     		movs	r1, #128
 889 0098 F868     		ldr	r0, [r7, #12]
 890 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 891 009e 0346     		mov	r3, r0
 892              		.loc 1 1070 10
 893 00a0 002B     		cmp	r3, #0
 894 00a2 01D0     		beq	.L42
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
 895              		.loc 1 1072 16
 896 00a4 0323     		movs	r3, #3
 897 00a6 3DE0     		b	.L37
 898              	.L42:
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (pdata8bits == NULL)
 899              		.loc 1 1074 10
 900 00a8 FB69     		ldr	r3, [r7, #28]
 901 00aa 002B     		cmp	r3, #0
 902 00ac 0BD1     		bne	.L43
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 903              		.loc 1 1076 43
 904 00ae BB69     		ldr	r3, [r7, #24]
 905 00b0 1B88     		ldrh	r3, [r3]
 906              		.loc 1 1076 32
 907 00b2 1A46     		mov	r2, r3
 908              		.loc 1 1076 14
 909 00b4 FB68     		ldr	r3, [r7, #12]
 910 00b6 1B68     		ldr	r3, [r3]
 911              		.loc 1 1076 32
 912 00b8 C2F30802 		ubfx	r2, r2, #0, #9
 913              		.loc 1 1076 30
 914 00bc 9A62     		str	r2, [r3, #40]
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 915              		.loc 1 1077 20
 916 00be BB69     		ldr	r3, [r7, #24]
 917 00c0 0233     		adds	r3, r3, #2
 918 00c2 BB61     		str	r3, [r7, #24]
 919 00c4 07E0     		b	.L44
 920              	.L43:
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 921              		.loc 1 1081 42
 922 00c6 FB69     		ldr	r3, [r7, #28]
 923 00c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 924              		.loc 1 1081 14
 925 00ca FB68     		ldr	r3, [r7, #12]
 926 00cc 1B68     		ldr	r3, [r3]
 927              		.loc 1 1081 30
 928 00ce 9A62     		str	r2, [r3, #40]
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
ARM GAS  /tmp/ccuwK2ly.s 			page 36


 929              		.loc 1 1082 19
 930 00d0 FB69     		ldr	r3, [r7, #28]
 931 00d2 0133     		adds	r3, r3, #1
 932 00d4 FB61     		str	r3, [r7, #28]
 933              	.L44:
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 934              		.loc 1 1084 12
 935 00d6 FB68     		ldr	r3, [r7, #12]
 936 00d8 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 937 00dc 9BB2     		uxth	r3, r3
 938              		.loc 1 1084 25
 939 00de 013B     		subs	r3, r3, #1
 940 00e0 9AB2     		uxth	r2, r3
 941 00e2 FB68     		ldr	r3, [r7, #12]
 942 00e4 A3F85620 		strh	r2, [r3, #86]	@ movhi
 943              	.L41:
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 944              		.loc 1 1068 17
 945 00e8 FB68     		ldr	r3, [r7, #12]
 946 00ea B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 947 00ee 9BB2     		uxth	r3, r3
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 948              		.loc 1 1068 11
 949 00f0 002B     		cmp	r3, #0
 950 00f2 CCD1     		bne	.L45
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 951              		.loc 1 1087 9
 952 00f4 3B68     		ldr	r3, [r7]
 953 00f6 0093     		str	r3, [sp]
 954 00f8 7B69     		ldr	r3, [r7, #20]
 955 00fa 0022     		movs	r2, #0
 956 00fc 4021     		movs	r1, #64
 957 00fe F868     		ldr	r0, [r7, #12]
 958 0100 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 959 0104 0346     		mov	r3, r0
 960              		.loc 1 1087 8
 961 0106 002B     		cmp	r3, #0
 962 0108 01D0     		beq	.L46
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
 963              		.loc 1 1089 14
 964 010a 0323     		movs	r3, #3
 965 010c 0AE0     		b	.L37
 966              	.L46:
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 967              		.loc 1 1093 19
 968 010e FB68     		ldr	r3, [r7, #12]
 969 0110 2022     		movs	r2, #32
 970 0112 C3F88020 		str	r2, [r3, #128]
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccuwK2ly.s 			page 37


 971              		.loc 1 1095 5
 972 0116 FB68     		ldr	r3, [r7, #12]
 973 0118 0022     		movs	r2, #0
 974 011a 83F87C20 		strb	r2, [r3, #124]
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
 975              		.loc 1 1097 12
 976 011e 0023     		movs	r3, #0
 977 0120 00E0     		b	.L37
 978              	.L34:
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
 979              		.loc 1 1101 12
 980 0122 0223     		movs	r3, #2
 981              	.L37:
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 982              		.loc 1 1103 1
 983 0124 1846     		mov	r0, r3
 984 0126 2037     		adds	r7, r7, #32
 985              	.LCFI40:
 986              		.cfi_def_cfa_offset 8
 987 0128 BD46     		mov	sp, r7
 988              	.LCFI41:
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 012a 80BD     		pop	{r7, pc}
 992              		.cfi_endproc
 993              	.LFE332:
 995              		.section	.text.HAL_UART_Receive,"ax",%progbits
 996              		.align	1
 997              		.global	HAL_UART_Receive
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1001              		.fpu fpv4-sp-d16
 1003              	HAL_UART_Receive:
 1004              	.LFB333:
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart   UART handle.
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
ARM GAS  /tmp/ccuwK2ly.s 			page 38


1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 1005              		.loc 1 1121 1
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 32
 1008              		@ frame_needed = 1, uses_anonymous_args = 0
 1009 0000 80B5     		push	{r7, lr}
 1010              	.LCFI42:
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 8AB0     		sub	sp, sp, #40
 1015              	.LCFI43:
 1016              		.cfi_def_cfa_offset 48
 1017 0004 02AF     		add	r7, sp, #8
 1018              	.LCFI44:
 1019              		.cfi_def_cfa 7, 40
 1020 0006 F860     		str	r0, [r7, #12]
 1021 0008 B960     		str	r1, [r7, #8]
 1022 000a 3B60     		str	r3, [r7]
 1023 000c 1346     		mov	r3, r2	@ movhi
 1024 000e FB80     		strh	r3, [r7, #6]	@ movhi
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *pdata16bits;
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask;
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1025              		.loc 1 1128 12
 1026 0010 FB68     		ldr	r3, [r7, #12]
 1027 0012 D3F88430 		ldr	r3, [r3, #132]
 1028              		.loc 1 1128 6
 1029 0016 202B     		cmp	r3, #32
 1030 0018 40F0BD80 		bne	.L48
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1031              		.loc 1 1130 8
 1032 001c BB68     		ldr	r3, [r7, #8]
 1033 001e 002B     		cmp	r3, #0
 1034 0020 02D0     		beq	.L49
 1035              		.loc 1 1130 25 discriminator 1
 1036 0022 FB88     		ldrh	r3, [r7, #6]
 1037 0024 002B     		cmp	r3, #0
 1038 0026 01D1     		bne	.L50
 1039              	.L49:
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return  HAL_ERROR;
 1040              		.loc 1 1132 15
 1041 0028 0123     		movs	r3, #1
 1042 002a B5E0     		b	.L51
 1043              	.L50:
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1044              		.loc 1 1135 5
 1045 002c FB68     		ldr	r3, [r7, #12]
 1046 002e 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
ARM GAS  /tmp/ccuwK2ly.s 			page 39


 1047 0032 012B     		cmp	r3, #1
 1048 0034 01D1     		bne	.L52
 1049              		.loc 1 1135 5 is_stmt 0 discriminator 1
 1050 0036 0223     		movs	r3, #2
 1051 0038 AEE0     		b	.L51
 1052              	.L52:
 1053              		.loc 1 1135 5 discriminator 2
 1054 003a FB68     		ldr	r3, [r7, #12]
 1055 003c 0122     		movs	r2, #1
 1056 003e 83F87C20 		strb	r2, [r3, #124]
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1057              		.loc 1 1137 22 is_stmt 1 discriminator 2
 1058 0042 FB68     		ldr	r3, [r7, #12]
 1059 0044 0022     		movs	r2, #0
 1060 0046 C3F88820 		str	r2, [r3, #136]
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1061              		.loc 1 1138 20 discriminator 2
 1062 004a FB68     		ldr	r3, [r7, #12]
 1063 004c 2222     		movs	r2, #34
 1064 004e C3F88420 		str	r2, [r3, #132]
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1065              		.loc 1 1141 17 discriminator 2
 1066 0052 FFF7FEFF 		bl	HAL_GetTick
 1067 0056 7861     		str	r0, [r7, #20]
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1068              		.loc 1 1143 24 discriminator 2
 1069 0058 FB68     		ldr	r3, [r7, #12]
 1070 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1071 005c A3F85C20 		strh	r2, [r3, #92]	@ movhi
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1072              		.loc 1 1144 24 discriminator 2
 1073 0060 FB68     		ldr	r3, [r7, #12]
 1074 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1075 0064 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1076              		.loc 1 1147 5 discriminator 2
 1077 0068 FB68     		ldr	r3, [r7, #12]
 1078 006a 9B68     		ldr	r3, [r3, #8]
 1079 006c B3F5805F 		cmp	r3, #4096
 1080 0070 0ED1     		bne	.L53
 1081              		.loc 1 1147 5 is_stmt 0 discriminator 1
 1082 0072 FB68     		ldr	r3, [r7, #12]
 1083 0074 1B69     		ldr	r3, [r3, #16]
 1084 0076 002B     		cmp	r3, #0
 1085 0078 05D1     		bne	.L54
 1086              		.loc 1 1147 5 discriminator 3
 1087 007a FB68     		ldr	r3, [r7, #12]
 1088 007c 40F2FF12 		movw	r2, #511
 1089 0080 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1090 0084 2DE0     		b	.L56
 1091              	.L54:
ARM GAS  /tmp/ccuwK2ly.s 			page 40


 1092              		.loc 1 1147 5 discriminator 4
 1093 0086 FB68     		ldr	r3, [r7, #12]
 1094 0088 FF22     		movs	r2, #255
 1095 008a A3F86020 		strh	r2, [r3, #96]	@ movhi
 1096 008e 28E0     		b	.L56
 1097              	.L53:
 1098              		.loc 1 1147 5 discriminator 2
 1099 0090 FB68     		ldr	r3, [r7, #12]
 1100 0092 9B68     		ldr	r3, [r3, #8]
 1101 0094 002B     		cmp	r3, #0
 1102 0096 0DD1     		bne	.L57
 1103              		.loc 1 1147 5 discriminator 5
 1104 0098 FB68     		ldr	r3, [r7, #12]
 1105 009a 1B69     		ldr	r3, [r3, #16]
 1106 009c 002B     		cmp	r3, #0
 1107 009e 04D1     		bne	.L58
 1108              		.loc 1 1147 5 discriminator 7
 1109 00a0 FB68     		ldr	r3, [r7, #12]
 1110 00a2 FF22     		movs	r2, #255
 1111 00a4 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1112 00a8 1BE0     		b	.L56
 1113              	.L58:
 1114              		.loc 1 1147 5 discriminator 8
 1115 00aa FB68     		ldr	r3, [r7, #12]
 1116 00ac 7F22     		movs	r2, #127
 1117 00ae A3F86020 		strh	r2, [r3, #96]	@ movhi
 1118 00b2 16E0     		b	.L56
 1119              	.L57:
 1120              		.loc 1 1147 5 discriminator 6
 1121 00b4 FB68     		ldr	r3, [r7, #12]
 1122 00b6 9B68     		ldr	r3, [r3, #8]
 1123 00b8 B3F1805F 		cmp	r3, #268435456
 1124 00bc 0DD1     		bne	.L60
 1125              		.loc 1 1147 5 discriminator 9
 1126 00be FB68     		ldr	r3, [r7, #12]
 1127 00c0 1B69     		ldr	r3, [r3, #16]
 1128 00c2 002B     		cmp	r3, #0
 1129 00c4 04D1     		bne	.L61
 1130              		.loc 1 1147 5 discriminator 11
 1131 00c6 FB68     		ldr	r3, [r7, #12]
 1132 00c8 7F22     		movs	r2, #127
 1133 00ca A3F86020 		strh	r2, [r3, #96]	@ movhi
 1134 00ce 08E0     		b	.L56
 1135              	.L61:
 1136              		.loc 1 1147 5 discriminator 12
 1137 00d0 FB68     		ldr	r3, [r7, #12]
 1138 00d2 3F22     		movs	r2, #63
 1139 00d4 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1140 00d8 03E0     		b	.L56
 1141              	.L60:
 1142              		.loc 1 1147 5 discriminator 10
 1143 00da FB68     		ldr	r3, [r7, #12]
 1144 00dc 0022     		movs	r2, #0
 1145 00de A3F86020 		strh	r2, [r3, #96]	@ movhi
 1146              	.L56:
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 1147              		.loc 1 1148 12 is_stmt 1
ARM GAS  /tmp/ccuwK2ly.s 			page 41


 1148 00e2 FB68     		ldr	r3, [r7, #12]
 1149 00e4 B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 1150 00e8 7B82     		strh	r3, [r7, #18]	@ movhi
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1151              		.loc 1 1151 21
 1152 00ea FB68     		ldr	r3, [r7, #12]
 1153 00ec 9B68     		ldr	r3, [r3, #8]
 1154              		.loc 1 1151 8
 1155 00ee B3F5805F 		cmp	r3, #4096
 1156 00f2 08D1     		bne	.L63
 1157              		.loc 1 1151 71 discriminator 1
 1158 00f4 FB68     		ldr	r3, [r7, #12]
 1159 00f6 1B69     		ldr	r3, [r3, #16]
 1160              		.loc 1 1151 56 discriminator 1
 1161 00f8 002B     		cmp	r3, #0
 1162 00fa 04D1     		bne	.L63
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = NULL;
 1163              		.loc 1 1153 19
 1164 00fc 0023     		movs	r3, #0
 1165 00fe FB61     		str	r3, [r7, #28]
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1166              		.loc 1 1154 19
 1167 0100 BB68     		ldr	r3, [r7, #8]
 1168 0102 BB61     		str	r3, [r7, #24]
 1169 0104 03E0     		b	.L64
 1170              	.L63:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = pData;
 1171              		.loc 1 1158 19
 1172 0106 BB68     		ldr	r3, [r7, #8]
 1173 0108 FB61     		str	r3, [r7, #28]
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = NULL;
 1174              		.loc 1 1159 19
 1175 010a 0023     		movs	r3, #0
 1176 010c BB61     		str	r3, [r7, #24]
 1177              	.L64:
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* as long as data have to be received */
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1178              		.loc 1 1163 11
 1179 010e 32E0     		b	.L65
 1180              	.L69:
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1181              		.loc 1 1165 11
 1182 0110 3B68     		ldr	r3, [r7]
 1183 0112 0093     		str	r3, [sp]
 1184 0114 7B69     		ldr	r3, [r7, #20]
 1185 0116 0022     		movs	r2, #0
 1186 0118 2021     		movs	r1, #32
 1187 011a F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/ccuwK2ly.s 			page 42


 1188 011c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1189 0120 0346     		mov	r3, r0
 1190              		.loc 1 1165 10
 1191 0122 002B     		cmp	r3, #0
 1192 0124 01D0     		beq	.L66
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1193              		.loc 1 1167 16
 1194 0126 0323     		movs	r3, #3
 1195 0128 36E0     		b	.L51
 1196              	.L66:
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1197              		.loc 1 1169 10
 1198 012a FB69     		ldr	r3, [r7, #28]
 1199 012c 002B     		cmp	r3, #0
 1200 012e 0CD1     		bne	.L67
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1201              		.loc 1 1171 40
 1202 0130 FB68     		ldr	r3, [r7, #12]
 1203 0132 1B68     		ldr	r3, [r3]
 1204              		.loc 1 1171 50
 1205 0134 5B6A     		ldr	r3, [r3, #36]
 1206              		.loc 1 1171 24
 1207 0136 9AB2     		uxth	r2, r3
 1208 0138 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1209 013a 1340     		ands	r3, r3, r2
 1210 013c 9AB2     		uxth	r2, r3
 1211              		.loc 1 1171 22
 1212 013e BB69     		ldr	r3, [r7, #24]
 1213 0140 1A80     		strh	r2, [r3]	@ movhi
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 1214              		.loc 1 1172 20
 1215 0142 BB69     		ldr	r3, [r7, #24]
 1216 0144 0233     		adds	r3, r3, #2
 1217 0146 BB61     		str	r3, [r7, #24]
 1218 0148 0CE0     		b	.L68
 1219              	.L67:
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1220              		.loc 1 1176 38
 1221 014a FB68     		ldr	r3, [r7, #12]
 1222 014c 1B68     		ldr	r3, [r3]
 1223              		.loc 1 1176 48
 1224 014e 5B6A     		ldr	r3, [r3, #36]
 1225              		.loc 1 1176 23
 1226 0150 DAB2     		uxtb	r2, r3
 1227              		.loc 1 1176 56
 1228 0152 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1229 0154 DBB2     		uxtb	r3, r3
 1230              		.loc 1 1176 23
 1231 0156 1340     		ands	r3, r3, r2
 1232 0158 DAB2     		uxtb	r2, r3
 1233              		.loc 1 1176 21
ARM GAS  /tmp/ccuwK2ly.s 			page 43


 1234 015a FB69     		ldr	r3, [r7, #28]
 1235 015c 1A70     		strb	r2, [r3]
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
 1236              		.loc 1 1177 19
 1237 015e FB69     		ldr	r3, [r7, #28]
 1238 0160 0133     		adds	r3, r3, #1
 1239 0162 FB61     		str	r3, [r7, #28]
 1240              	.L68:
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 1241              		.loc 1 1179 12
 1242 0164 FB68     		ldr	r3, [r7, #12]
 1243 0166 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1244 016a 9BB2     		uxth	r3, r3
 1245              		.loc 1 1179 25
 1246 016c 013B     		subs	r3, r3, #1
 1247 016e 9AB2     		uxth	r2, r3
 1248 0170 FB68     		ldr	r3, [r7, #12]
 1249 0172 A3F85E20 		strh	r2, [r3, #94]	@ movhi
 1250              	.L65:
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1251              		.loc 1 1163 17
 1252 0176 FB68     		ldr	r3, [r7, #12]
 1253 0178 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1254 017c 9BB2     		uxth	r3, r3
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1255              		.loc 1 1163 11
 1256 017e 002B     		cmp	r3, #0
 1257 0180 C6D1     		bne	.L69
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1258              		.loc 1 1183 20
 1259 0182 FB68     		ldr	r3, [r7, #12]
 1260 0184 2022     		movs	r2, #32
 1261 0186 C3F88420 		str	r2, [r3, #132]
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1262              		.loc 1 1185 5
 1263 018a FB68     		ldr	r3, [r7, #12]
 1264 018c 0022     		movs	r2, #0
 1265 018e 83F87C20 		strb	r2, [r3, #124]
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
 1266              		.loc 1 1187 12
 1267 0192 0023     		movs	r3, #0
 1268 0194 00E0     		b	.L51
 1269              	.L48:
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
 1270              		.loc 1 1191 12
 1271 0196 0223     		movs	r3, #2
 1272              	.L51:
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccuwK2ly.s 			page 44


1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1273              		.loc 1 1193 1
 1274 0198 1846     		mov	r0, r3
 1275 019a 2037     		adds	r7, r7, #32
 1276              	.LCFI45:
 1277              		.cfi_def_cfa_offset 8
 1278 019c BD46     		mov	sp, r7
 1279              	.LCFI46:
 1280              		.cfi_def_cfa_register 13
 1281              		@ sp needed
 1282 019e 80BD     		pop	{r7, pc}
 1283              		.cfi_endproc
 1284              	.LFE333:
 1286              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1287              		.align	1
 1288              		.global	HAL_UART_Transmit_IT
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1292              		.fpu fpv4-sp-d16
 1294              	HAL_UART_Transmit_IT:
 1295              	.LFB334:
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 1296              		.loc 1 1206 1
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 16
 1299              		@ frame_needed = 1, uses_anonymous_args = 0
 1300              		@ link register save eliminated.
 1301 0000 80B4     		push	{r7}
 1302              	.LCFI47:
 1303              		.cfi_def_cfa_offset 4
 1304              		.cfi_offset 7, -4
 1305 0002 85B0     		sub	sp, sp, #20
 1306              	.LCFI48:
 1307              		.cfi_def_cfa_offset 24
 1308 0004 00AF     		add	r7, sp, #0
 1309              	.LCFI49:
 1310              		.cfi_def_cfa_register 7
 1311 0006 F860     		str	r0, [r7, #12]
 1312 0008 B960     		str	r1, [r7, #8]
 1313 000a 1346     		mov	r3, r2
 1314 000c FB80     		strh	r3, [r7, #6]	@ movhi
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1315              		.loc 1 1208 12
ARM GAS  /tmp/ccuwK2ly.s 			page 45


 1316 000e FB68     		ldr	r3, [r7, #12]
 1317 0010 D3F88030 		ldr	r3, [r3, #128]
 1318              		.loc 1 1208 6
 1319 0014 202B     		cmp	r3, #32
 1320 0016 68D1     		bne	.L71
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1321              		.loc 1 1210 8
 1322 0018 BB68     		ldr	r3, [r7, #8]
 1323 001a 002B     		cmp	r3, #0
 1324 001c 02D0     		beq	.L72
 1325              		.loc 1 1210 25 discriminator 1
 1326 001e FB88     		ldrh	r3, [r7, #6]
 1327 0020 002B     		cmp	r3, #0
 1328 0022 01D1     		bne	.L73
 1329              	.L72:
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
 1330              		.loc 1 1212 14
 1331 0024 0123     		movs	r3, #1
 1332 0026 61E0     		b	.L74
 1333              	.L73:
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1334              		.loc 1 1215 5
 1335 0028 FB68     		ldr	r3, [r7, #12]
 1336 002a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 1337 002e 012B     		cmp	r3, #1
 1338 0030 01D1     		bne	.L75
 1339              		.loc 1 1215 5 is_stmt 0 discriminator 1
 1340 0032 0223     		movs	r3, #2
 1341 0034 5AE0     		b	.L74
 1342              	.L75:
 1343              		.loc 1 1215 5 discriminator 2
 1344 0036 FB68     		ldr	r3, [r7, #12]
 1345 0038 0122     		movs	r2, #1
 1346 003a 83F87C20 		strb	r2, [r3, #124]
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1347              		.loc 1 1217 24 is_stmt 1 discriminator 2
 1348 003e FB68     		ldr	r3, [r7, #12]
 1349 0040 BA68     		ldr	r2, [r7, #8]
 1350 0042 1A65     		str	r2, [r3, #80]
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1351              		.loc 1 1218 24 discriminator 2
 1352 0044 FB68     		ldr	r3, [r7, #12]
 1353 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1354 0048 A3F85420 		strh	r2, [r3, #84]	@ movhi
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1355              		.loc 1 1219 24 discriminator 2
 1356 004c FB68     		ldr	r3, [r7, #12]
 1357 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1358 0050 A3F85620 		strh	r2, [r3, #86]	@ movhi
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR       = NULL;
 1359              		.loc 1 1220 24 discriminator 2
 1360 0054 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccuwK2ly.s 			page 46


 1361 0056 0022     		movs	r2, #0
 1362 0058 1A67     		str	r2, [r3, #112]
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1363              		.loc 1 1222 22 discriminator 2
 1364 005a FB68     		ldr	r3, [r7, #12]
 1365 005c 0022     		movs	r2, #0
 1366 005e C3F88820 		str	r2, [r3, #136]
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1367              		.loc 1 1223 19 discriminator 2
 1368 0062 FB68     		ldr	r3, [r7, #12]
 1369 0064 2122     		movs	r2, #33
 1370 0066 C3F88020 		str	r2, [r3, #128]
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 1371              		.loc 1 1226 14 discriminator 2
 1372 006a FB68     		ldr	r3, [r7, #12]
 1373 006c 5B6E     		ldr	r3, [r3, #100]
 1374              		.loc 1 1226 8 discriminator 2
 1375 006e B3F1005F 		cmp	r3, #536870912
 1376 0072 1CD1     		bne	.L76
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1377              		.loc 1 1229 23
 1378 0074 FB68     		ldr	r3, [r7, #12]
 1379 0076 9B68     		ldr	r3, [r3, #8]
 1380              		.loc 1 1229 10
 1381 0078 B3F5805F 		cmp	r3, #4096
 1382 007c 07D1     		bne	.L77
 1383              		.loc 1 1229 73 discriminator 1
 1384 007e FB68     		ldr	r3, [r7, #12]
 1385 0080 1B69     		ldr	r3, [r3, #16]
 1386              		.loc 1 1229 58 discriminator 1
 1387 0082 002B     		cmp	r3, #0
 1388 0084 03D1     		bne	.L77
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
 1389              		.loc 1 1231 22
 1390 0086 FB68     		ldr	r3, [r7, #12]
 1391 0088 1B4A     		ldr	r2, .L82
 1392 008a 1A67     		str	r2, [r3, #112]
 1393 008c 02E0     		b	.L78
 1394              	.L77:
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
 1395              		.loc 1 1235 22
 1396 008e FB68     		ldr	r3, [r7, #12]
 1397 0090 1A4A     		ldr	r2, .L82+4
 1398 0092 1A67     		str	r2, [r3, #112]
 1399              	.L78:
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccuwK2ly.s 			page 47


 1400              		.loc 1 1238 7
 1401 0094 FB68     		ldr	r3, [r7, #12]
 1402 0096 0022     		movs	r2, #0
 1403 0098 83F87C20 		strb	r2, [r3, #124]
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 1404              		.loc 1 1241 7
 1405 009c FB68     		ldr	r3, [r7, #12]
 1406 009e 1B68     		ldr	r3, [r3]
 1407 00a0 9A68     		ldr	r2, [r3, #8]
 1408 00a2 FB68     		ldr	r3, [r7, #12]
 1409 00a4 1B68     		ldr	r3, [r3]
 1410 00a6 42F40002 		orr	r2, r2, #8388608
 1411 00aa 9A60     		str	r2, [r3, #8]
 1412 00ac 1BE0     		b	.L79
 1413              	.L76:
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1414              		.loc 1 1246 23
 1415 00ae FB68     		ldr	r3, [r7, #12]
 1416 00b0 9B68     		ldr	r3, [r3, #8]
 1417              		.loc 1 1246 10
 1418 00b2 B3F5805F 		cmp	r3, #4096
 1419 00b6 07D1     		bne	.L80
 1420              		.loc 1 1246 73 discriminator 1
 1421 00b8 FB68     		ldr	r3, [r7, #12]
 1422 00ba 1B69     		ldr	r3, [r3, #16]
 1423              		.loc 1 1246 58 discriminator 1
 1424 00bc 002B     		cmp	r3, #0
 1425 00be 03D1     		bne	.L80
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
 1426              		.loc 1 1248 22
 1427 00c0 FB68     		ldr	r3, [r7, #12]
 1428 00c2 0F4A     		ldr	r2, .L82+8
 1429 00c4 1A67     		str	r2, [r3, #112]
 1430 00c6 02E0     		b	.L81
 1431              	.L80:
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
 1432              		.loc 1 1252 22
 1433 00c8 FB68     		ldr	r3, [r7, #12]
 1434 00ca 0E4A     		ldr	r2, .L82+12
 1435 00cc 1A67     		str	r2, [r3, #112]
 1436              	.L81:
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 1437              		.loc 1 1255 7
 1438 00ce FB68     		ldr	r3, [r7, #12]
 1439 00d0 0022     		movs	r2, #0
ARM GAS  /tmp/ccuwK2ly.s 			page 48


 1440 00d2 83F87C20 		strb	r2, [r3, #124]
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 1441              		.loc 1 1258 7
 1442 00d6 FB68     		ldr	r3, [r7, #12]
 1443 00d8 1B68     		ldr	r3, [r3]
 1444 00da 1A68     		ldr	r2, [r3]
 1445 00dc FB68     		ldr	r3, [r7, #12]
 1446 00de 1B68     		ldr	r3, [r3]
 1447 00e0 42F08002 		orr	r2, r2, #128
 1448 00e4 1A60     		str	r2, [r3]
 1449              	.L79:
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
 1450              		.loc 1 1261 12
 1451 00e6 0023     		movs	r3, #0
 1452 00e8 00E0     		b	.L74
 1453              	.L71:
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
 1454              		.loc 1 1265 12
 1455 00ea 0223     		movs	r3, #2
 1456              	.L74:
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1457              		.loc 1 1267 1
 1458 00ec 1846     		mov	r0, r3
 1459 00ee 1437     		adds	r7, r7, #20
 1460              	.LCFI50:
 1461              		.cfi_def_cfa_offset 4
 1462 00f0 BD46     		mov	sp, r7
 1463              	.LCFI51:
 1464              		.cfi_def_cfa_register 13
 1465              		@ sp needed
 1466 00f2 5DF8047B 		ldr	r7, [sp], #4
 1467              	.LCFI52:
 1468              		.cfi_restore 7
 1469              		.cfi_def_cfa_offset 0
 1470 00f6 7047     		bx	lr
 1471              	.L83:
 1472              		.align	2
 1473              	.L82:
 1474 00f8 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 1475 00fc 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 1476 0100 00000000 		.word	UART_TxISR_16BIT
 1477 0104 00000000 		.word	UART_TxISR_8BIT
 1478              		.cfi_endproc
 1479              	.LFE334:
 1481              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1482              		.align	1
 1483              		.global	HAL_UART_Receive_IT
 1484              		.syntax unified
 1485              		.thumb
ARM GAS  /tmp/ccuwK2ly.s 			page 49


 1486              		.thumb_func
 1487              		.fpu fpv4-sp-d16
 1489              	HAL_UART_Receive_IT:
 1490              	.LFB335:
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 1491              		.loc 1 1280 1
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 16
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495              		@ link register save eliminated.
 1496 0000 80B4     		push	{r7}
 1497              	.LCFI53:
 1498              		.cfi_def_cfa_offset 4
 1499              		.cfi_offset 7, -4
 1500 0002 85B0     		sub	sp, sp, #20
 1501              	.LCFI54:
 1502              		.cfi_def_cfa_offset 24
 1503 0004 00AF     		add	r7, sp, #0
 1504              	.LCFI55:
 1505              		.cfi_def_cfa_register 7
 1506 0006 F860     		str	r0, [r7, #12]
 1507 0008 B960     		str	r1, [r7, #8]
 1508 000a 1346     		mov	r3, r2
 1509 000c FB80     		strh	r3, [r7, #6]	@ movhi
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1510              		.loc 1 1282 12
 1511 000e FB68     		ldr	r3, [r7, #12]
 1512 0010 D3F88430 		ldr	r3, [r3, #132]
 1513              		.loc 1 1282 6
 1514 0014 202B     		cmp	r3, #32
 1515 0016 40F0BC80 		bne	.L85
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1516              		.loc 1 1284 8
 1517 001a BB68     		ldr	r3, [r7, #8]
 1518 001c 002B     		cmp	r3, #0
 1519 001e 02D0     		beq	.L86
 1520              		.loc 1 1284 25 discriminator 1
 1521 0020 FB88     		ldrh	r3, [r7, #6]
 1522 0022 002B     		cmp	r3, #0
 1523 0024 01D1     		bne	.L87
 1524              	.L86:
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccuwK2ly.s 			page 50


 1525              		.loc 1 1286 14
 1526 0026 0123     		movs	r3, #1
 1527 0028 B4E0     		b	.L88
 1528              	.L87:
1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1529              		.loc 1 1289 5
 1530 002a FB68     		ldr	r3, [r7, #12]
 1531 002c 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 1532 0030 012B     		cmp	r3, #1
 1533 0032 01D1     		bne	.L89
 1534              		.loc 1 1289 5 is_stmt 0 discriminator 1
 1535 0034 0223     		movs	r3, #2
 1536 0036 ADE0     		b	.L88
 1537              	.L89:
 1538              		.loc 1 1289 5 discriminator 2
 1539 0038 FB68     		ldr	r3, [r7, #12]
 1540 003a 0122     		movs	r2, #1
 1541 003c 83F87C20 		strb	r2, [r3, #124]
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
 1542              		.loc 1 1291 24 is_stmt 1 discriminator 2
 1543 0040 FB68     		ldr	r3, [r7, #12]
 1544 0042 BA68     		ldr	r2, [r7, #8]
 1545 0044 9A65     		str	r2, [r3, #88]
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1546              		.loc 1 1292 24 discriminator 2
 1547 0046 FB68     		ldr	r3, [r7, #12]
 1548 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1549 004a A3F85C20 		strh	r2, [r3, #92]	@ movhi
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1550              		.loc 1 1293 24 discriminator 2
 1551 004e FB68     		ldr	r3, [r7, #12]
 1552 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1553 0052 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR       = NULL;
 1554              		.loc 1 1294 24 discriminator 2
 1555 0056 FB68     		ldr	r3, [r7, #12]
 1556 0058 0022     		movs	r2, #0
 1557 005a DA66     		str	r2, [r3, #108]
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1558              		.loc 1 1297 5 discriminator 2
 1559 005c FB68     		ldr	r3, [r7, #12]
 1560 005e 9B68     		ldr	r3, [r3, #8]
 1561 0060 B3F5805F 		cmp	r3, #4096
 1562 0064 0ED1     		bne	.L90
 1563              		.loc 1 1297 5 is_stmt 0 discriminator 1
 1564 0066 FB68     		ldr	r3, [r7, #12]
 1565 0068 1B69     		ldr	r3, [r3, #16]
 1566 006a 002B     		cmp	r3, #0
 1567 006c 05D1     		bne	.L91
 1568              		.loc 1 1297 5 discriminator 3
 1569 006e FB68     		ldr	r3, [r7, #12]
 1570 0070 40F2FF12 		movw	r2, #511
ARM GAS  /tmp/ccuwK2ly.s 			page 51


 1571 0074 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1572 0078 2DE0     		b	.L93
 1573              	.L91:
 1574              		.loc 1 1297 5 discriminator 4
 1575 007a FB68     		ldr	r3, [r7, #12]
 1576 007c FF22     		movs	r2, #255
 1577 007e A3F86020 		strh	r2, [r3, #96]	@ movhi
 1578 0082 28E0     		b	.L93
 1579              	.L90:
 1580              		.loc 1 1297 5 discriminator 2
 1581 0084 FB68     		ldr	r3, [r7, #12]
 1582 0086 9B68     		ldr	r3, [r3, #8]
 1583 0088 002B     		cmp	r3, #0
 1584 008a 0DD1     		bne	.L94
 1585              		.loc 1 1297 5 discriminator 5
 1586 008c FB68     		ldr	r3, [r7, #12]
 1587 008e 1B69     		ldr	r3, [r3, #16]
 1588 0090 002B     		cmp	r3, #0
 1589 0092 04D1     		bne	.L95
 1590              		.loc 1 1297 5 discriminator 7
 1591 0094 FB68     		ldr	r3, [r7, #12]
 1592 0096 FF22     		movs	r2, #255
 1593 0098 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1594 009c 1BE0     		b	.L93
 1595              	.L95:
 1596              		.loc 1 1297 5 discriminator 8
 1597 009e FB68     		ldr	r3, [r7, #12]
 1598 00a0 7F22     		movs	r2, #127
 1599 00a2 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1600 00a6 16E0     		b	.L93
 1601              	.L94:
 1602              		.loc 1 1297 5 discriminator 6
 1603 00a8 FB68     		ldr	r3, [r7, #12]
 1604 00aa 9B68     		ldr	r3, [r3, #8]
 1605 00ac B3F1805F 		cmp	r3, #268435456
 1606 00b0 0DD1     		bne	.L97
 1607              		.loc 1 1297 5 discriminator 9
 1608 00b2 FB68     		ldr	r3, [r7, #12]
 1609 00b4 1B69     		ldr	r3, [r3, #16]
 1610 00b6 002B     		cmp	r3, #0
 1611 00b8 04D1     		bne	.L98
 1612              		.loc 1 1297 5 discriminator 11
 1613 00ba FB68     		ldr	r3, [r7, #12]
 1614 00bc 7F22     		movs	r2, #127
 1615 00be A3F86020 		strh	r2, [r3, #96]	@ movhi
 1616 00c2 08E0     		b	.L93
 1617              	.L98:
 1618              		.loc 1 1297 5 discriminator 12
 1619 00c4 FB68     		ldr	r3, [r7, #12]
 1620 00c6 3F22     		movs	r2, #63
 1621 00c8 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1622 00cc 03E0     		b	.L93
 1623              	.L97:
 1624              		.loc 1 1297 5 discriminator 10
 1625 00ce FB68     		ldr	r3, [r7, #12]
 1626 00d0 0022     		movs	r2, #0
 1627 00d2 A3F86020 		strh	r2, [r3, #96]	@ movhi
ARM GAS  /tmp/ccuwK2ly.s 			page 52


 1628              	.L93:
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1629              		.loc 1 1299 22 is_stmt 1
 1630 00d6 FB68     		ldr	r3, [r7, #12]
 1631 00d8 0022     		movs	r2, #0
 1632 00da C3F88820 		str	r2, [r3, #136]
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1633              		.loc 1 1300 20
 1634 00de FB68     		ldr	r3, [r7, #12]
 1635 00e0 2222     		movs	r2, #34
 1636 00e2 C3F88420 		str	r2, [r3, #132]
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1637              		.loc 1 1303 5
 1638 00e6 FB68     		ldr	r3, [r7, #12]
 1639 00e8 1B68     		ldr	r3, [r3]
 1640 00ea 9A68     		ldr	r2, [r3, #8]
 1641 00ec FB68     		ldr	r3, [r7, #12]
 1642 00ee 1B68     		ldr	r3, [r3]
 1643 00f0 42F00102 		orr	r2, r2, #1
 1644 00f4 9A60     		str	r2, [r3, #8]
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 1645              		.loc 1 1306 15
 1646 00f6 FB68     		ldr	r3, [r7, #12]
 1647 00f8 5B6E     		ldr	r3, [r3, #100]
 1648              		.loc 1 1306 8
 1649 00fa B3F1005F 		cmp	r3, #536870912
 1650 00fe 2AD1     		bne	.L100
 1651              		.loc 1 1306 68 discriminator 1
 1652 0100 FB68     		ldr	r3, [r7, #12]
 1653 0102 B3F86830 		ldrh	r3, [r3, #104]
 1654              		.loc 1 1306 51 discriminator 1
 1655 0106 FA88     		ldrh	r2, [r7, #6]
 1656 0108 9A42     		cmp	r2, r3
 1657 010a 24D3     		bcc	.L100
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1658              		.loc 1 1309 23
 1659 010c FB68     		ldr	r3, [r7, #12]
 1660 010e 9B68     		ldr	r3, [r3, #8]
 1661              		.loc 1 1309 10
 1662 0110 B3F5805F 		cmp	r3, #4096
 1663 0114 07D1     		bne	.L101
 1664              		.loc 1 1309 73 discriminator 1
 1665 0116 FB68     		ldr	r3, [r7, #12]
 1666 0118 1B69     		ldr	r3, [r3, #16]
 1667              		.loc 1 1309 58 discriminator 1
 1668 011a 002B     		cmp	r3, #0
 1669 011c 03D1     		bne	.L101
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
 1670              		.loc 1 1311 22
ARM GAS  /tmp/ccuwK2ly.s 			page 53


 1671 011e FB68     		ldr	r3, [r7, #12]
 1672 0120 1F4A     		ldr	r2, .L106
 1673 0122 DA66     		str	r2, [r3, #108]
 1674 0124 02E0     		b	.L102
 1675              	.L101:
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 1676              		.loc 1 1315 22
 1677 0126 FB68     		ldr	r3, [r7, #12]
 1678 0128 1E4A     		ldr	r2, .L106+4
 1679 012a DA66     		str	r2, [r3, #108]
 1680              	.L102:
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 1681              		.loc 1 1318 7
 1682 012c FB68     		ldr	r3, [r7, #12]
 1683 012e 0022     		movs	r2, #0
 1684 0130 83F87C20 		strb	r2, [r3, #124]
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1685              		.loc 1 1321 7
 1686 0134 FB68     		ldr	r3, [r7, #12]
 1687 0136 1B68     		ldr	r3, [r3]
 1688 0138 1A68     		ldr	r2, [r3]
 1689 013a FB68     		ldr	r3, [r7, #12]
 1690 013c 1B68     		ldr	r3, [r3]
 1691 013e 42F48072 		orr	r2, r2, #256
 1692 0142 1A60     		str	r2, [r3]
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 1693              		.loc 1 1322 7
 1694 0144 FB68     		ldr	r3, [r7, #12]
 1695 0146 1B68     		ldr	r3, [r3]
 1696 0148 9A68     		ldr	r2, [r3, #8]
 1697 014a FB68     		ldr	r3, [r7, #12]
 1698 014c 1B68     		ldr	r3, [r3]
 1699 014e 42F08052 		orr	r2, r2, #268435456
 1700 0152 9A60     		str	r2, [r3, #8]
 1701 0154 1BE0     		b	.L103
 1702              	.L100:
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1703              		.loc 1 1327 23
 1704 0156 FB68     		ldr	r3, [r7, #12]
 1705 0158 9B68     		ldr	r3, [r3, #8]
 1706              		.loc 1 1327 10
 1707 015a B3F5805F 		cmp	r3, #4096
 1708 015e 07D1     		bne	.L104
 1709              		.loc 1 1327 73 discriminator 1
 1710 0160 FB68     		ldr	r3, [r7, #12]
 1711 0162 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccuwK2ly.s 			page 54


 1712              		.loc 1 1327 58 discriminator 1
 1713 0164 002B     		cmp	r3, #0
 1714 0166 03D1     		bne	.L104
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
 1715              		.loc 1 1329 22
 1716 0168 FB68     		ldr	r3, [r7, #12]
 1717 016a 0F4A     		ldr	r2, .L106+8
 1718 016c DA66     		str	r2, [r3, #108]
 1719 016e 02E0     		b	.L105
 1720              	.L104:
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
 1721              		.loc 1 1333 22
 1722 0170 FB68     		ldr	r3, [r7, #12]
 1723 0172 0E4A     		ldr	r2, .L106+12
 1724 0174 DA66     		str	r2, [r3, #108]
 1725              	.L105:
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 1726              		.loc 1 1336 7
 1727 0176 FB68     		ldr	r3, [r7, #12]
 1728 0178 0022     		movs	r2, #0
 1729 017a 83F87C20 		strb	r2, [r3, #124]
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 1730              		.loc 1 1339 7
 1731 017e FB68     		ldr	r3, [r7, #12]
 1732 0180 1B68     		ldr	r3, [r3]
 1733 0182 1A68     		ldr	r2, [r3]
 1734 0184 FB68     		ldr	r3, [r7, #12]
 1735 0186 1B68     		ldr	r3, [r3]
 1736 0188 42F49072 		orr	r2, r2, #288
 1737 018c 1A60     		str	r2, [r3]
 1738              	.L103:
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
 1739              		.loc 1 1342 12
 1740 018e 0023     		movs	r3, #0
 1741 0190 00E0     		b	.L88
 1742              	.L85:
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
 1743              		.loc 1 1346 12
 1744 0192 0223     		movs	r3, #2
 1745              	.L88:
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1746              		.loc 1 1348 1
 1747 0194 1846     		mov	r0, r3
ARM GAS  /tmp/ccuwK2ly.s 			page 55


 1748 0196 1437     		adds	r7, r7, #20
 1749              	.LCFI56:
 1750              		.cfi_def_cfa_offset 4
 1751 0198 BD46     		mov	sp, r7
 1752              	.LCFI57:
 1753              		.cfi_def_cfa_register 13
 1754              		@ sp needed
 1755 019a 5DF8047B 		ldr	r7, [sp], #4
 1756              	.LCFI58:
 1757              		.cfi_restore 7
 1758              		.cfi_def_cfa_offset 0
 1759 019e 7047     		bx	lr
 1760              	.L107:
 1761              		.align	2
 1762              	.L106:
 1763 01a0 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 1764 01a4 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 1765 01a8 00000000 		.word	UART_RxISR_16BIT
 1766 01ac 00000000 		.word	UART_RxISR_8BIT
 1767              		.cfi_endproc
 1768              	.LFE335:
 1770              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1771              		.align	1
 1772              		.global	HAL_UART_Transmit_DMA
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1776              		.fpu fpv4-sp-d16
 1778              	HAL_UART_Transmit_DMA:
 1779              	.LFB336:
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 1780              		.loc 1 1361 1
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 16
 1783              		@ frame_needed = 1, uses_anonymous_args = 0
 1784 0000 80B5     		push	{r7, lr}
 1785              	.LCFI59:
 1786              		.cfi_def_cfa_offset 8
 1787              		.cfi_offset 7, -8
 1788              		.cfi_offset 14, -4
 1789 0002 84B0     		sub	sp, sp, #16
 1790              	.LCFI60:
 1791              		.cfi_def_cfa_offset 24
 1792 0004 00AF     		add	r7, sp, #0
 1793              	.LCFI61:
ARM GAS  /tmp/ccuwK2ly.s 			page 56


 1794              		.cfi_def_cfa_register 7
 1795 0006 F860     		str	r0, [r7, #12]
 1796 0008 B960     		str	r1, [r7, #8]
 1797 000a 1346     		mov	r3, r2
 1798 000c FB80     		strh	r3, [r7, #6]	@ movhi
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1799              		.loc 1 1363 12
 1800 000e FB68     		ldr	r3, [r7, #12]
 1801 0010 D3F88030 		ldr	r3, [r3, #128]
 1802              		.loc 1 1363 6
 1803 0014 202B     		cmp	r3, #32
 1804 0016 68D1     		bne	.L109
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1805              		.loc 1 1365 8
 1806 0018 BB68     		ldr	r3, [r7, #8]
 1807 001a 002B     		cmp	r3, #0
 1808 001c 02D0     		beq	.L110
 1809              		.loc 1 1365 25 discriminator 1
 1810 001e FB88     		ldrh	r3, [r7, #6]
 1811 0020 002B     		cmp	r3, #0
 1812 0022 01D1     		bne	.L111
 1813              	.L110:
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
 1814              		.loc 1 1367 14
 1815 0024 0123     		movs	r3, #1
 1816 0026 61E0     		b	.L112
 1817              	.L111:
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1818              		.loc 1 1370 5
 1819 0028 FB68     		ldr	r3, [r7, #12]
 1820 002a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 1821 002e 012B     		cmp	r3, #1
 1822 0030 01D1     		bne	.L113
 1823              		.loc 1 1370 5 is_stmt 0 discriminator 1
 1824 0032 0223     		movs	r3, #2
 1825 0034 5AE0     		b	.L112
 1826              	.L113:
 1827              		.loc 1 1370 5 discriminator 2
 1828 0036 FB68     		ldr	r3, [r7, #12]
 1829 0038 0122     		movs	r2, #1
 1830 003a 83F87C20 		strb	r2, [r3, #124]
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1831              		.loc 1 1372 24 is_stmt 1 discriminator 2
 1832 003e FB68     		ldr	r3, [r7, #12]
 1833 0040 BA68     		ldr	r2, [r7, #8]
 1834 0042 1A65     		str	r2, [r3, #80]
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1835              		.loc 1 1373 24 discriminator 2
 1836 0044 FB68     		ldr	r3, [r7, #12]
 1837 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1838 0048 A3F85420 		strh	r2, [r3, #84]	@ movhi
ARM GAS  /tmp/ccuwK2ly.s 			page 57


1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1839              		.loc 1 1374 24 discriminator 2
 1840 004c FB68     		ldr	r3, [r7, #12]
 1841 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1842 0050 A3F85620 		strh	r2, [r3, #86]	@ movhi
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1843              		.loc 1 1376 22 discriminator 2
 1844 0054 FB68     		ldr	r3, [r7, #12]
 1845 0056 0022     		movs	r2, #0
 1846 0058 C3F88820 		str	r2, [r3, #136]
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1847              		.loc 1 1377 19 discriminator 2
 1848 005c FB68     		ldr	r3, [r7, #12]
 1849 005e 2122     		movs	r2, #33
 1850 0060 C3F88020 		str	r2, [r3, #128]
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1851              		.loc 1 1379 14 discriminator 2
 1852 0064 FB68     		ldr	r3, [r7, #12]
 1853 0066 5B6F     		ldr	r3, [r3, #116]
 1854              		.loc 1 1379 8 discriminator 2
 1855 0068 002B     		cmp	r3, #0
 1856 006a 2CD0     		beq	.L114
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1857              		.loc 1 1382 12
 1858 006c FB68     		ldr	r3, [r7, #12]
 1859 006e 5B6F     		ldr	r3, [r3, #116]
 1860              		.loc 1 1382 39
 1861 0070 204A     		ldr	r2, .L115
 1862 0072 DA62     		str	r2, [r3, #44]
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1863              		.loc 1 1385 12
 1864 0074 FB68     		ldr	r3, [r7, #12]
 1865 0076 5B6F     		ldr	r3, [r3, #116]
 1866              		.loc 1 1385 43
 1867 0078 1F4A     		ldr	r2, .L115+4
 1868 007a 1A63     		str	r2, [r3, #48]
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA error callback */
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1869              		.loc 1 1388 12
 1870 007c FB68     		ldr	r3, [r7, #12]
 1871 007e 5B6F     		ldr	r3, [r3, #116]
 1872              		.loc 1 1388 40
 1873 0080 1E4A     		ldr	r2, .L115+8
 1874 0082 5A63     		str	r2, [r3, #52]
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA abort callback */
1391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1875              		.loc 1 1391 12
 1876 0084 FB68     		ldr	r3, [r7, #12]
 1877 0086 5B6F     		ldr	r3, [r3, #116]
ARM GAS  /tmp/ccuwK2ly.s 			page 58


 1878              		.loc 1 1391 40
 1879 0088 0022     		movs	r2, #0
 1880 008a 9A63     		str	r2, [r3, #56]
1392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1881              		.loc 1 1394 11
 1882 008c FB68     		ldr	r3, [r7, #12]
 1883 008e 586F     		ldr	r0, [r3, #116]
 1884              		.loc 1 1394 58
 1885 0090 FB68     		ldr	r3, [r7, #12]
 1886 0092 1B6D     		ldr	r3, [r3, #80]
 1887              		.loc 1 1394 11
 1888 0094 1946     		mov	r1, r3
 1889              		.loc 1 1394 88
 1890 0096 FB68     		ldr	r3, [r7, #12]
 1891 0098 1B68     		ldr	r3, [r3]
 1892              		.loc 1 1394 82
 1893 009a 2833     		adds	r3, r3, #40
 1894              		.loc 1 1394 11
 1895 009c 1A46     		mov	r2, r3
 1896 009e FB88     		ldrh	r3, [r7, #6]
 1897 00a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1898 00a4 0346     		mov	r3, r0
 1899              		.loc 1 1394 10
 1900 00a6 002B     		cmp	r3, #0
 1901 00a8 0DD0     		beq	.L114
1395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set error code to DMA */
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1902              		.loc 1 1397 26
 1903 00aa FB68     		ldr	r3, [r7, #12]
 1904 00ac 1022     		movs	r2, #16
 1905 00ae C3F88820 		str	r2, [r3, #136]
1398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1906              		.loc 1 1399 9
 1907 00b2 FB68     		ldr	r3, [r7, #12]
 1908 00b4 0022     		movs	r2, #0
 1909 00b6 83F87C20 		strb	r2, [r3, #124]
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1910              		.loc 1 1402 23
 1911 00ba FB68     		ldr	r3, [r7, #12]
 1912 00bc 2022     		movs	r2, #32
 1913 00be C3F88020 		str	r2, [r3, #128]
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_ERROR;
 1914              		.loc 1 1404 16
 1915 00c2 0123     		movs	r3, #1
 1916 00c4 12E0     		b	.L112
 1917              	.L114:
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
ARM GAS  /tmp/ccuwK2ly.s 			page 59


 1918              		.loc 1 1408 5
 1919 00c6 FB68     		ldr	r3, [r7, #12]
 1920 00c8 1B68     		ldr	r3, [r3]
 1921 00ca 4022     		movs	r2, #64
 1922 00cc 1A62     		str	r2, [r3, #32]
1409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1923              		.loc 1 1410 5
 1924 00ce FB68     		ldr	r3, [r7, #12]
 1925 00d0 0022     		movs	r2, #0
 1926 00d2 83F87C20 		strb	r2, [r3, #124]
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in the UART CR3 register */
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1927              		.loc 1 1414 5
 1928 00d6 FB68     		ldr	r3, [r7, #12]
 1929 00d8 1B68     		ldr	r3, [r3]
 1930 00da 9A68     		ldr	r2, [r3, #8]
 1931 00dc FB68     		ldr	r3, [r7, #12]
 1932 00de 1B68     		ldr	r3, [r3]
 1933 00e0 42F08002 		orr	r2, r2, #128
 1934 00e4 9A60     		str	r2, [r3, #8]
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
 1935              		.loc 1 1416 12
 1936 00e6 0023     		movs	r3, #0
 1937 00e8 00E0     		b	.L112
 1938              	.L109:
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
 1939              		.loc 1 1420 12
 1940 00ea 0223     		movs	r3, #2
 1941              	.L112:
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1942              		.loc 1 1422 1
 1943 00ec 1846     		mov	r0, r3
 1944 00ee 1037     		adds	r7, r7, #16
 1945              	.LCFI62:
 1946              		.cfi_def_cfa_offset 8
 1947 00f0 BD46     		mov	sp, r7
 1948              	.LCFI63:
 1949              		.cfi_def_cfa_register 13
 1950              		@ sp needed
 1951 00f2 80BD     		pop	{r7, pc}
 1952              	.L116:
 1953              		.align	2
 1954              	.L115:
 1955 00f4 00000000 		.word	UART_DMATransmitCplt
 1956 00f8 00000000 		.word	UART_DMATxHalfCplt
 1957 00fc 00000000 		.word	UART_DMAError
 1958              		.cfi_endproc
 1959              	.LFE336:
 1961              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
ARM GAS  /tmp/ccuwK2ly.s 			page 60


 1962              		.align	1
 1963              		.global	HAL_UART_Receive_DMA
 1964              		.syntax unified
 1965              		.thumb
 1966              		.thumb_func
 1967              		.fpu fpv4-sp-d16
 1969              	HAL_UART_Receive_DMA:
 1970              	.LFB337:
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the parity bit (MSB position).
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 1971              		.loc 1 1437 1
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 16
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
 1975 0000 80B5     		push	{r7, lr}
 1976              	.LCFI64:
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 7, -8
 1979              		.cfi_offset 14, -4
 1980 0002 84B0     		sub	sp, sp, #16
 1981              	.LCFI65:
 1982              		.cfi_def_cfa_offset 24
 1983 0004 00AF     		add	r7, sp, #0
 1984              	.LCFI66:
 1985              		.cfi_def_cfa_register 7
 1986 0006 F860     		str	r0, [r7, #12]
 1987 0008 B960     		str	r1, [r7, #8]
 1988 000a 1346     		mov	r3, r2
 1989 000c FB80     		strh	r3, [r7, #6]	@ movhi
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1990              		.loc 1 1439 12
 1991 000e FB68     		ldr	r3, [r7, #12]
 1992 0010 D3F88430 		ldr	r3, [r3, #132]
 1993              		.loc 1 1439 6
 1994 0014 202B     		cmp	r3, #32
 1995 0016 70D1     		bne	.L118
1440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1996              		.loc 1 1441 8
 1997 0018 BB68     		ldr	r3, [r7, #8]
 1998 001a 002B     		cmp	r3, #0
 1999 001c 02D0     		beq	.L119
 2000              		.loc 1 1441 25 discriminator 1
ARM GAS  /tmp/ccuwK2ly.s 			page 61


 2001 001e FB88     		ldrh	r3, [r7, #6]
 2002 0020 002B     		cmp	r3, #0
 2003 0022 01D1     		bne	.L120
 2004              	.L119:
1442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
 2005              		.loc 1 1443 14
 2006 0024 0123     		movs	r3, #1
 2007 0026 69E0     		b	.L121
 2008              	.L120:
1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2009              		.loc 1 1446 5
 2010 0028 FB68     		ldr	r3, [r7, #12]
 2011 002a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 2012 002e 012B     		cmp	r3, #1
 2013 0030 01D1     		bne	.L122
 2014              		.loc 1 1446 5 is_stmt 0 discriminator 1
 2015 0032 0223     		movs	r3, #2
 2016 0034 62E0     		b	.L121
 2017              	.L122:
 2018              		.loc 1 1446 5 discriminator 2
 2019 0036 FB68     		ldr	r3, [r7, #12]
 2020 0038 0122     		movs	r2, #1
 2021 003a 83F87C20 		strb	r2, [r3, #124]
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 2022              		.loc 1 1448 23 is_stmt 1 discriminator 2
 2023 003e FB68     		ldr	r3, [r7, #12]
 2024 0040 BA68     		ldr	r2, [r7, #8]
 2025 0042 9A65     		str	r2, [r3, #88]
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize = Size;
 2026              		.loc 1 1449 23 discriminator 2
 2027 0044 FB68     		ldr	r3, [r7, #12]
 2028 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2029 0048 A3F85C20 		strh	r2, [r3, #92]	@ movhi
1450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2030              		.loc 1 1451 22 discriminator 2
 2031 004c FB68     		ldr	r3, [r7, #12]
 2032 004e 0022     		movs	r2, #0
 2033 0050 C3F88820 		str	r2, [r3, #136]
1452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2034              		.loc 1 1452 20 discriminator 2
 2035 0054 FB68     		ldr	r3, [r7, #12]
 2036 0056 2222     		movs	r2, #34
 2037 0058 C3F88420 		str	r2, [r3, #132]
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2038              		.loc 1 1454 14 discriminator 2
 2039 005c FB68     		ldr	r3, [r7, #12]
 2040 005e 9B6F     		ldr	r3, [r3, #120]
 2041              		.loc 1 1454 8 discriminator 2
 2042 0060 002B     		cmp	r3, #0
 2043 0062 2CD0     		beq	.L123
1455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccuwK2ly.s 			page 62


1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 2044              		.loc 1 1457 12
 2045 0064 FB68     		ldr	r3, [r7, #12]
 2046 0066 9B6F     		ldr	r3, [r3, #120]
 2047              		.loc 1 1457 39
 2048 0068 264A     		ldr	r2, .L124
 2049 006a DA62     		str	r2, [r3, #44]
1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 2050              		.loc 1 1460 12
 2051 006c FB68     		ldr	r3, [r7, #12]
 2052 006e 9B6F     		ldr	r3, [r3, #120]
 2053              		.loc 1 1460 43
 2054 0070 254A     		ldr	r2, .L124+4
 2055 0072 1A63     		str	r2, [r3, #48]
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA error callback */
1463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
 2056              		.loc 1 1463 12
 2057 0074 FB68     		ldr	r3, [r7, #12]
 2058 0076 9B6F     		ldr	r3, [r3, #120]
 2059              		.loc 1 1463 40
 2060 0078 244A     		ldr	r2, .L124+8
 2061 007a 5A63     		str	r2, [r3, #52]
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA abort callback */
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2062              		.loc 1 1466 12
 2063 007c FB68     		ldr	r3, [r7, #12]
 2064 007e 9B6F     		ldr	r3, [r3, #120]
 2065              		.loc 1 1466 40
 2066 0080 0022     		movs	r2, #0
 2067 0082 9A63     		str	r2, [r3, #56]
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the DMA channel */
1469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
 2068              		.loc 1 1469 11
 2069 0084 FB68     		ldr	r3, [r7, #12]
 2070 0086 986F     		ldr	r0, [r3, #120]
 2071              		.loc 1 1469 59
 2072 0088 FB68     		ldr	r3, [r7, #12]
 2073 008a 1B68     		ldr	r3, [r3]
 2074              		.loc 1 1469 53
 2075 008c 2433     		adds	r3, r3, #36
 2076              		.loc 1 1469 11
 2077 008e 1946     		mov	r1, r3
 2078              		.loc 1 1469 91
 2079 0090 FB68     		ldr	r3, [r7, #12]
 2080 0092 9B6D     		ldr	r3, [r3, #88]
 2081              		.loc 1 1469 11
 2082 0094 1A46     		mov	r2, r3
 2083 0096 FB88     		ldrh	r3, [r7, #6]
 2084 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2085 009c 0346     		mov	r3, r0
 2086              		.loc 1 1469 10
ARM GAS  /tmp/ccuwK2ly.s 			page 63


 2087 009e 002B     		cmp	r3, #0
 2088 00a0 0DD0     		beq	.L123
1470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set error code to DMA */
1472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 2089              		.loc 1 1472 26
 2090 00a2 FB68     		ldr	r3, [r7, #12]
 2091 00a4 1022     		movs	r2, #16
 2092 00a6 C3F88820 		str	r2, [r3, #136]
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 2093              		.loc 1 1474 9
 2094 00aa FB68     		ldr	r3, [r7, #12]
 2095 00ac 0022     		movs	r2, #0
 2096 00ae 83F87C20 		strb	r2, [r3, #124]
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 2097              		.loc 1 1477 23
 2098 00b2 FB68     		ldr	r3, [r7, #12]
 2099 00b4 2022     		movs	r2, #32
 2100 00b6 C3F88020 		str	r2, [r3, #128]
1478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_ERROR;
 2101              		.loc 1 1479 16
 2102 00ba 0123     		movs	r3, #1
 2103 00bc 1EE0     		b	.L121
 2104              	.L123:
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2105              		.loc 1 1482 5
 2106 00be FB68     		ldr	r3, [r7, #12]
 2107 00c0 0022     		movs	r2, #0
 2108 00c2 83F87C20 		strb	r2, [r3, #124]
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2109              		.loc 1 1485 5
 2110 00c6 FB68     		ldr	r3, [r7, #12]
 2111 00c8 1B68     		ldr	r3, [r3]
 2112 00ca 1A68     		ldr	r2, [r3]
 2113 00cc FB68     		ldr	r3, [r7, #12]
 2114 00ce 1B68     		ldr	r3, [r3]
 2115 00d0 42F48072 		orr	r2, r2, #256
 2116 00d4 1A60     		str	r2, [r3]
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2117              		.loc 1 1488 5
 2118 00d6 FB68     		ldr	r3, [r7, #12]
 2119 00d8 1B68     		ldr	r3, [r3]
 2120 00da 9A68     		ldr	r2, [r3, #8]
 2121 00dc FB68     		ldr	r3, [r7, #12]
 2122 00de 1B68     		ldr	r3, [r3]
 2123 00e0 42F00102 		orr	r2, r2, #1
 2124 00e4 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccuwK2ly.s 			page 64


1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in the UART CR3 register */
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2125              		.loc 1 1492 5
 2126 00e6 FB68     		ldr	r3, [r7, #12]
 2127 00e8 1B68     		ldr	r3, [r3]
 2128 00ea 9A68     		ldr	r2, [r3, #8]
 2129 00ec FB68     		ldr	r3, [r7, #12]
 2130 00ee 1B68     		ldr	r3, [r3]
 2131 00f0 42F04002 		orr	r2, r2, #64
 2132 00f4 9A60     		str	r2, [r3, #8]
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
 2133              		.loc 1 1494 12
 2134 00f6 0023     		movs	r3, #0
 2135 00f8 00E0     		b	.L121
 2136              	.L118:
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
 2137              		.loc 1 1498 12
 2138 00fa 0223     		movs	r3, #2
 2139              	.L121:
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2140              		.loc 1 1500 1
 2141 00fc 1846     		mov	r0, r3
 2142 00fe 1037     		adds	r7, r7, #16
 2143              	.LCFI67:
 2144              		.cfi_def_cfa_offset 8
 2145 0100 BD46     		mov	sp, r7
 2146              	.LCFI68:
 2147              		.cfi_def_cfa_register 13
 2148              		@ sp needed
 2149 0102 80BD     		pop	{r7, pc}
 2150              	.L125:
 2151              		.align	2
 2152              	.L124:
 2153 0104 00000000 		.word	UART_DMAReceiveCplt
 2154 0108 00000000 		.word	UART_DMARxHalfCplt
 2155 010c 00000000 		.word	UART_DMAError
 2156              		.cfi_endproc
 2157              	.LFE337:
 2159              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2160              		.align	1
 2161              		.global	HAL_UART_DMAPause
 2162              		.syntax unified
 2163              		.thumb
 2164              		.thumb_func
 2165              		.fpu fpv4-sp-d16
 2167              	HAL_UART_DMAPause:
 2168              	.LFB338:
1501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
ARM GAS  /tmp/ccuwK2ly.s 			page 65


1504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2169              		.loc 1 1508 1
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 16
 2172              		@ frame_needed = 1, uses_anonymous_args = 0
 2173              		@ link register save eliminated.
 2174 0000 80B4     		push	{r7}
 2175              	.LCFI69:
 2176              		.cfi_def_cfa_offset 4
 2177              		.cfi_offset 7, -4
 2178 0002 85B0     		sub	sp, sp, #20
 2179              	.LCFI70:
 2180              		.cfi_def_cfa_offset 24
 2181 0004 00AF     		add	r7, sp, #0
 2182              	.LCFI71:
 2183              		.cfi_def_cfa_register 7
 2184 0006 7860     		str	r0, [r7, #4]
1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2185              		.loc 1 1509 31
 2186 0008 7B68     		ldr	r3, [r7, #4]
 2187 000a D3F88030 		ldr	r3, [r3, #128]
 2188 000e FB60     		str	r3, [r7, #12]
1510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2189              		.loc 1 1510 31
 2190 0010 7B68     		ldr	r3, [r7, #4]
 2191 0012 D3F88430 		ldr	r3, [r3, #132]
 2192 0016 BB60     		str	r3, [r7, #8]
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2193              		.loc 1 1512 3
 2194 0018 7B68     		ldr	r3, [r7, #4]
 2195 001a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 2196 001e 012B     		cmp	r3, #1
 2197 0020 01D1     		bne	.L127
 2198              		.loc 1 1512 3 is_stmt 0 discriminator 1
 2199 0022 0223     		movs	r3, #2
 2200 0024 3CE0     		b	.L128
 2201              	.L127:
 2202              		.loc 1 1512 3 discriminator 2
 2203 0026 7B68     		ldr	r3, [r7, #4]
 2204 0028 0122     		movs	r2, #1
 2205 002a 83F87C20 		strb	r2, [r3, #124]
1513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2206              		.loc 1 1514 8 is_stmt 1 discriminator 2
 2207 002e 7B68     		ldr	r3, [r7, #4]
 2208 0030 1B68     		ldr	r3, [r3]
 2209 0032 9B68     		ldr	r3, [r3, #8]
 2210 0034 03F08003 		and	r3, r3, #128
 2211              		.loc 1 1514 6 discriminator 2
 2212 0038 802B     		cmp	r3, #128
 2213 003a 0AD1     		bne	.L129
 2214              		.loc 1 1514 62 discriminator 1
ARM GAS  /tmp/ccuwK2ly.s 			page 66


 2215 003c FB68     		ldr	r3, [r7, #12]
 2216 003e 212B     		cmp	r3, #33
 2217 0040 07D1     		bne	.L129
1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2218              		.loc 1 1518 5
 2219 0042 7B68     		ldr	r3, [r7, #4]
 2220 0044 1B68     		ldr	r3, [r3]
 2221 0046 9A68     		ldr	r2, [r3, #8]
 2222 0048 7B68     		ldr	r3, [r7, #4]
 2223 004a 1B68     		ldr	r3, [r3]
 2224 004c 22F08002 		bic	r2, r2, #128
 2225 0050 9A60     		str	r2, [r3, #8]
 2226              	.L129:
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2227              		.loc 1 1520 8
 2228 0052 7B68     		ldr	r3, [r7, #4]
 2229 0054 1B68     		ldr	r3, [r3]
 2230 0056 9B68     		ldr	r3, [r3, #8]
 2231 0058 03F04003 		and	r3, r3, #64
 2232              		.loc 1 1520 6
 2233 005c 402B     		cmp	r3, #64
 2234 005e 1AD1     		bne	.L130
 2235              		.loc 1 1520 62 discriminator 1
 2236 0060 BB68     		ldr	r3, [r7, #8]
 2237 0062 222B     		cmp	r3, #34
 2238 0064 17D1     		bne	.L130
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2239              		.loc 1 1524 5
 2240 0066 7B68     		ldr	r3, [r7, #4]
 2241 0068 1B68     		ldr	r3, [r3]
 2242 006a 1A68     		ldr	r2, [r3]
 2243 006c 7B68     		ldr	r3, [r7, #4]
 2244 006e 1B68     		ldr	r3, [r3]
 2245 0070 22F48072 		bic	r2, r2, #256
 2246 0074 1A60     		str	r2, [r3]
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2247              		.loc 1 1525 5
 2248 0076 7B68     		ldr	r3, [r7, #4]
 2249 0078 1B68     		ldr	r3, [r3]
 2250 007a 9A68     		ldr	r2, [r3, #8]
 2251 007c 7B68     		ldr	r3, [r7, #4]
 2252 007e 1B68     		ldr	r3, [r3]
 2253 0080 22F00102 		bic	r2, r2, #1
 2254 0084 9A60     		str	r2, [r3, #8]
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2255              		.loc 1 1528 5
 2256 0086 7B68     		ldr	r3, [r7, #4]
 2257 0088 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccuwK2ly.s 			page 67


 2258 008a 9A68     		ldr	r2, [r3, #8]
 2259 008c 7B68     		ldr	r3, [r7, #4]
 2260 008e 1B68     		ldr	r3, [r3]
 2261 0090 22F04002 		bic	r2, r2, #64
 2262 0094 9A60     		str	r2, [r3, #8]
 2263              	.L130:
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2264              		.loc 1 1531 3
 2265 0096 7B68     		ldr	r3, [r7, #4]
 2266 0098 0022     		movs	r2, #0
 2267 009a 83F87C20 		strb	r2, [r3, #124]
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 2268              		.loc 1 1533 10
 2269 009e 0023     		movs	r3, #0
 2270              	.L128:
1534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2271              		.loc 1 1534 1
 2272 00a0 1846     		mov	r0, r3
 2273 00a2 1437     		adds	r7, r7, #20
 2274              	.LCFI72:
 2275              		.cfi_def_cfa_offset 4
 2276 00a4 BD46     		mov	sp, r7
 2277              	.LCFI73:
 2278              		.cfi_def_cfa_register 13
 2279              		@ sp needed
 2280 00a6 5DF8047B 		ldr	r7, [sp], #4
 2281              	.LCFI74:
 2282              		.cfi_restore 7
 2283              		.cfi_def_cfa_offset 0
 2284 00aa 7047     		bx	lr
 2285              		.cfi_endproc
 2286              	.LFE338:
 2288              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2289              		.align	1
 2290              		.global	HAL_UART_DMAResume
 2291              		.syntax unified
 2292              		.thumb
 2293              		.thumb_func
 2294              		.fpu fpv4-sp-d16
 2296              	HAL_UART_DMAResume:
 2297              	.LFB339:
1535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2298              		.loc 1 1542 1
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 8
 2301              		@ frame_needed = 1, uses_anonymous_args = 0
 2302              		@ link register save eliminated.
ARM GAS  /tmp/ccuwK2ly.s 			page 68


 2303 0000 80B4     		push	{r7}
 2304              	.LCFI75:
 2305              		.cfi_def_cfa_offset 4
 2306              		.cfi_offset 7, -4
 2307 0002 83B0     		sub	sp, sp, #12
 2308              	.LCFI76:
 2309              		.cfi_def_cfa_offset 16
 2310 0004 00AF     		add	r7, sp, #0
 2311              	.LCFI77:
 2312              		.cfi_def_cfa_register 7
 2313 0006 7860     		str	r0, [r7, #4]
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2314              		.loc 1 1543 3
 2315 0008 7B68     		ldr	r3, [r7, #4]
 2316 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 2317 000e 012B     		cmp	r3, #1
 2318 0010 01D1     		bne	.L132
 2319              		.loc 1 1543 3 is_stmt 0 discriminator 1
 2320 0012 0223     		movs	r3, #2
 2321 0014 36E0     		b	.L133
 2322              	.L132:
 2323              		.loc 1 1543 3 discriminator 2
 2324 0016 7B68     		ldr	r3, [r7, #4]
 2325 0018 0122     		movs	r2, #1
 2326 001a 83F87C20 		strb	r2, [r3, #124]
1544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2327              		.loc 1 1545 12 is_stmt 1 discriminator 2
 2328 001e 7B68     		ldr	r3, [r7, #4]
 2329 0020 D3F88030 		ldr	r3, [r3, #128]
 2330              		.loc 1 1545 6 discriminator 2
 2331 0024 212B     		cmp	r3, #33
 2332 0026 07D1     		bne	.L134
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2333              		.loc 1 1548 5
 2334 0028 7B68     		ldr	r3, [r7, #4]
 2335 002a 1B68     		ldr	r3, [r3]
 2336 002c 9A68     		ldr	r2, [r3, #8]
 2337 002e 7B68     		ldr	r3, [r7, #4]
 2338 0030 1B68     		ldr	r3, [r3]
 2339 0032 42F08002 		orr	r2, r2, #128
 2340 0036 9A60     		str	r2, [r3, #8]
 2341              	.L134:
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2342              		.loc 1 1550 12
 2343 0038 7B68     		ldr	r3, [r7, #4]
 2344 003a D3F88430 		ldr	r3, [r3, #132]
 2345              		.loc 1 1550 6
 2346 003e 222B     		cmp	r3, #34
 2347 0040 1BD1     		bne	.L135
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2348              		.loc 1 1553 5
ARM GAS  /tmp/ccuwK2ly.s 			page 69


 2349 0042 7B68     		ldr	r3, [r7, #4]
 2350 0044 1B68     		ldr	r3, [r3]
 2351 0046 0822     		movs	r2, #8
 2352 0048 1A62     		str	r2, [r3, #32]
1554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2353              		.loc 1 1556 5
 2354 004a 7B68     		ldr	r3, [r7, #4]
 2355 004c 1B68     		ldr	r3, [r3]
 2356 004e 1A68     		ldr	r2, [r3]
 2357 0050 7B68     		ldr	r3, [r7, #4]
 2358 0052 1B68     		ldr	r3, [r3]
 2359 0054 42F48072 		orr	r2, r2, #256
 2360 0058 1A60     		str	r2, [r3]
1557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2361              		.loc 1 1557 5
 2362 005a 7B68     		ldr	r3, [r7, #4]
 2363 005c 1B68     		ldr	r3, [r3]
 2364 005e 9A68     		ldr	r2, [r3, #8]
 2365 0060 7B68     		ldr	r3, [r7, #4]
 2366 0062 1B68     		ldr	r3, [r3]
 2367 0064 42F00102 		orr	r2, r2, #1
 2368 0068 9A60     		str	r2, [r3, #8]
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2369              		.loc 1 1560 5
 2370 006a 7B68     		ldr	r3, [r7, #4]
 2371 006c 1B68     		ldr	r3, [r3]
 2372 006e 9A68     		ldr	r2, [r3, #8]
 2373 0070 7B68     		ldr	r3, [r7, #4]
 2374 0072 1B68     		ldr	r3, [r3]
 2375 0074 42F04002 		orr	r2, r2, #64
 2376 0078 9A60     		str	r2, [r3, #8]
 2377              	.L135:
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2378              		.loc 1 1563 3
 2379 007a 7B68     		ldr	r3, [r7, #4]
 2380 007c 0022     		movs	r2, #0
 2381 007e 83F87C20 		strb	r2, [r3, #124]
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 2382              		.loc 1 1565 10
 2383 0082 0023     		movs	r3, #0
 2384              	.L133:
1566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2385              		.loc 1 1566 1
 2386 0084 1846     		mov	r0, r3
 2387 0086 0C37     		adds	r7, r7, #12
 2388              	.LCFI78:
 2389              		.cfi_def_cfa_offset 4
 2390 0088 BD46     		mov	sp, r7
 2391              	.LCFI79:
 2392              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccuwK2ly.s 			page 70


 2393              		@ sp needed
 2394 008a 5DF8047B 		ldr	r7, [sp], #4
 2395              	.LCFI80:
 2396              		.cfi_restore 7
 2397              		.cfi_def_cfa_offset 0
 2398 008e 7047     		bx	lr
 2399              		.cfi_endproc
 2400              	.LFE339:
 2402              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2403              		.align	1
 2404              		.global	HAL_UART_DMAStop
 2405              		.syntax unified
 2406              		.thumb
 2407              		.thumb_func
 2408              		.fpu fpv4-sp-d16
 2410              	HAL_UART_DMAStop:
 2411              	.LFB340:
1567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2412              		.loc 1 1574 1
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 16
 2415              		@ frame_needed = 1, uses_anonymous_args = 0
 2416 0000 80B5     		push	{r7, lr}
 2417              	.LCFI81:
 2418              		.cfi_def_cfa_offset 8
 2419              		.cfi_offset 7, -8
 2420              		.cfi_offset 14, -4
 2421 0002 84B0     		sub	sp, sp, #16
 2422              	.LCFI82:
 2423              		.cfi_def_cfa_offset 24
 2424 0004 00AF     		add	r7, sp, #0
 2425              	.LCFI83:
 2426              		.cfi_def_cfa_register 7
 2427 0006 7860     		str	r0, [r7, #4]
1575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2428              		.loc 1 1582 31
 2429 0008 7B68     		ldr	r3, [r7, #4]
 2430 000a D3F88030 		ldr	r3, [r3, #128]
 2431 000e FB60     		str	r3, [r7, #12]
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2432              		.loc 1 1583 31
 2433 0010 7B68     		ldr	r3, [r7, #4]
 2434 0012 D3F88430 		ldr	r3, [r3, #132]
ARM GAS  /tmp/ccuwK2ly.s 			page 71


 2435 0016 BB60     		str	r3, [r7, #8]
1584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2436              		.loc 1 1586 8
 2437 0018 7B68     		ldr	r3, [r7, #4]
 2438 001a 1B68     		ldr	r3, [r3]
 2439 001c 9B68     		ldr	r3, [r3, #8]
 2440 001e 03F08003 		and	r3, r3, #128
 2441              		.loc 1 1586 6
 2442 0022 802B     		cmp	r3, #128
 2443 0024 27D1     		bne	.L137
 2444              		.loc 1 1586 62 discriminator 1
 2445 0026 FB68     		ldr	r3, [r7, #12]
 2446 0028 212B     		cmp	r3, #33
 2447 002a 24D1     		bne	.L137
1587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2448              		.loc 1 1589 5
 2449 002c 7B68     		ldr	r3, [r7, #4]
 2450 002e 1B68     		ldr	r3, [r3]
 2451 0030 9A68     		ldr	r2, [r3, #8]
 2452 0032 7B68     		ldr	r3, [r7, #4]
 2453 0034 1B68     		ldr	r3, [r3]
 2454 0036 22F08002 		bic	r2, r2, #128
 2455 003a 9A60     		str	r2, [r3, #8]
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2456              		.loc 1 1592 14
 2457 003c 7B68     		ldr	r3, [r7, #4]
 2458 003e 5B6F     		ldr	r3, [r3, #116]
 2459              		.loc 1 1592 8
 2460 0040 002B     		cmp	r3, #0
 2461 0042 15D0     		beq	.L138
1593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2462              		.loc 1 1594 11
 2463 0044 7B68     		ldr	r3, [r7, #4]
 2464 0046 5B6F     		ldr	r3, [r3, #116]
 2465 0048 1846     		mov	r0, r3
 2466 004a FFF7FEFF 		bl	HAL_DMA_Abort
 2467 004e 0346     		mov	r3, r0
 2468              		.loc 1 1594 10
 2469 0050 002B     		cmp	r3, #0
 2470 0052 0DD0     		beq	.L138
1595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2471              		.loc 1 1596 13
 2472 0054 7B68     		ldr	r3, [r7, #4]
 2473 0056 5B6F     		ldr	r3, [r3, #116]
 2474 0058 1846     		mov	r0, r3
 2475 005a FFF7FEFF 		bl	HAL_DMA_GetError
 2476 005e 0346     		mov	r3, r0
 2477              		.loc 1 1596 12
 2478 0060 202B     		cmp	r3, #32
ARM GAS  /tmp/ccuwK2ly.s 			page 72


 2479 0062 05D1     		bne	.L138
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2480              		.loc 1 1599 28
 2481 0064 7B68     		ldr	r3, [r7, #4]
 2482 0066 1022     		movs	r2, #16
 2483 0068 C3F88820 		str	r2, [r3, #136]
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2484              		.loc 1 1601 18
 2485 006c 0323     		movs	r3, #3
 2486 006e 32E0     		b	.L139
 2487              	.L138:
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2488              		.loc 1 1606 5
 2489 0070 7868     		ldr	r0, [r7, #4]
 2490 0072 FFF7FEFF 		bl	UART_EndTxTransfer
 2491              	.L137:
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2492              		.loc 1 1610 8
 2493 0076 7B68     		ldr	r3, [r7, #4]
 2494 0078 1B68     		ldr	r3, [r3]
 2495 007a 9B68     		ldr	r3, [r3, #8]
 2496 007c 03F04003 		and	r3, r3, #64
 2497              		.loc 1 1610 6
 2498 0080 402B     		cmp	r3, #64
 2499 0082 27D1     		bne	.L140
 2500              		.loc 1 1610 62 discriminator 1
 2501 0084 BB68     		ldr	r3, [r7, #8]
 2502 0086 222B     		cmp	r3, #34
 2503 0088 24D1     		bne	.L140
1611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2504              		.loc 1 1613 5
 2505 008a 7B68     		ldr	r3, [r7, #4]
 2506 008c 1B68     		ldr	r3, [r3]
 2507 008e 9A68     		ldr	r2, [r3, #8]
 2508 0090 7B68     		ldr	r3, [r7, #4]
 2509 0092 1B68     		ldr	r3, [r3]
 2510 0094 22F04002 		bic	r2, r2, #64
 2511 0098 9A60     		str	r2, [r3, #8]
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2512              		.loc 1 1616 14
 2513 009a 7B68     		ldr	r3, [r7, #4]
 2514 009c 9B6F     		ldr	r3, [r3, #120]
 2515              		.loc 1 1616 8
ARM GAS  /tmp/ccuwK2ly.s 			page 73


 2516 009e 002B     		cmp	r3, #0
 2517 00a0 15D0     		beq	.L141
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2518              		.loc 1 1618 11
 2519 00a2 7B68     		ldr	r3, [r7, #4]
 2520 00a4 9B6F     		ldr	r3, [r3, #120]
 2521 00a6 1846     		mov	r0, r3
 2522 00a8 FFF7FEFF 		bl	HAL_DMA_Abort
 2523 00ac 0346     		mov	r3, r0
 2524              		.loc 1 1618 10
 2525 00ae 002B     		cmp	r3, #0
 2526 00b0 0DD0     		beq	.L141
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2527              		.loc 1 1620 13
 2528 00b2 7B68     		ldr	r3, [r7, #4]
 2529 00b4 9B6F     		ldr	r3, [r3, #120]
 2530 00b6 1846     		mov	r0, r3
 2531 00b8 FFF7FEFF 		bl	HAL_DMA_GetError
 2532 00bc 0346     		mov	r3, r0
 2533              		.loc 1 1620 12
 2534 00be 202B     		cmp	r3, #32
 2535 00c0 05D1     		bne	.L141
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2536              		.loc 1 1623 28
 2537 00c2 7B68     		ldr	r3, [r7, #4]
 2538 00c4 1022     		movs	r2, #16
 2539 00c6 C3F88820 		str	r2, [r3, #136]
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2540              		.loc 1 1625 18
 2541 00ca 0323     		movs	r3, #3
 2542 00cc 03E0     		b	.L139
 2543              	.L141:
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2544              		.loc 1 1630 5
 2545 00ce 7868     		ldr	r0, [r7, #4]
 2546 00d0 FFF7FEFF 		bl	UART_EndRxTransfer
 2547              	.L140:
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 2548              		.loc 1 1633 10
 2549 00d4 0023     		movs	r3, #0
 2550              	.L139:
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2551              		.loc 1 1634 1
 2552 00d6 1846     		mov	r0, r3
 2553 00d8 1037     		adds	r7, r7, #16
 2554              	.LCFI84:
ARM GAS  /tmp/ccuwK2ly.s 			page 74


 2555              		.cfi_def_cfa_offset 8
 2556 00da BD46     		mov	sp, r7
 2557              	.LCFI85:
 2558              		.cfi_def_cfa_register 13
 2559              		@ sp needed
 2560 00dc 80BD     		pop	{r7, pc}
 2561              		.cfi_endproc
 2562              	.LFE340:
 2564              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2565              		.align	1
 2566              		.global	HAL_UART_Abort
 2567              		.syntax unified
 2568              		.thumb
 2569              		.thumb_func
 2570              		.fpu fpv4-sp-d16
 2572              	HAL_UART_Abort:
 2573              	.LFB341:
1635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2574              		.loc 1 1649 1
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 8
 2577              		@ frame_needed = 1, uses_anonymous_args = 0
 2578 0000 80B5     		push	{r7, lr}
 2579              	.LCFI86:
 2580              		.cfi_def_cfa_offset 8
 2581              		.cfi_offset 7, -8
 2582              		.cfi_offset 14, -4
 2583 0002 82B0     		sub	sp, sp, #8
 2584              	.LCFI87:
 2585              		.cfi_def_cfa_offset 16
 2586 0004 00AF     		add	r7, sp, #0
 2587              	.LCFI88:
 2588              		.cfi_def_cfa_register 7
 2589 0006 7860     		str	r0, [r7, #4]
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
 2590              		.loc 1 1651 3
 2591 0008 7B68     		ldr	r3, [r7, #4]
 2592 000a 1B68     		ldr	r3, [r3]
 2593 000c 1A68     		ldr	r2, [r3]
 2594 000e 7B68     		ldr	r3, [r7, #4]
 2595 0010 1B68     		ldr	r3, [r3]
 2596 0012 22F4F072 		bic	r2, r2, #480
ARM GAS  /tmp/ccuwK2ly.s 			page 75


 2597 0016 1A60     		str	r2, [r3]
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 2598              		.loc 1 1652 3
 2599 0018 7B68     		ldr	r3, [r7, #4]
 2600 001a 1B68     		ldr	r3, [r3]
 2601 001c 9B68     		ldr	r3, [r3, #8]
 2602 001e 7A68     		ldr	r2, [r7, #4]
 2603 0020 1268     		ldr	r2, [r2]
 2604 0022 23F08453 		bic	r3, r3, #276824064
 2605 0026 23F00103 		bic	r3, r3, #1
 2606 002a 9360     		str	r3, [r2, #8]
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2607              		.loc 1 1655 7
 2608 002c 7B68     		ldr	r3, [r7, #4]
 2609 002e 1B68     		ldr	r3, [r3]
 2610 0030 9B68     		ldr	r3, [r3, #8]
 2611 0032 03F08003 		and	r3, r3, #128
 2612              		.loc 1 1655 6
 2613 0036 802B     		cmp	r3, #128
 2614 0038 25D1     		bne	.L143
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2615              		.loc 1 1657 5
 2616 003a 7B68     		ldr	r3, [r7, #4]
 2617 003c 1B68     		ldr	r3, [r3]
 2618 003e 9A68     		ldr	r2, [r3, #8]
 2619 0040 7B68     		ldr	r3, [r7, #4]
 2620 0042 1B68     		ldr	r3, [r3]
 2621 0044 22F08002 		bic	r2, r2, #128
 2622 0048 9A60     		str	r2, [r3, #8]
1658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2623              		.loc 1 1660 14
 2624 004a 7B68     		ldr	r3, [r7, #4]
 2625 004c 5B6F     		ldr	r3, [r3, #116]
 2626              		.loc 1 1660 8
 2627 004e 002B     		cmp	r3, #0
 2628 0050 19D0     		beq	.L143
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2629              		.loc 1 1664 12
 2630 0052 7B68     		ldr	r3, [r7, #4]
 2631 0054 5B6F     		ldr	r3, [r3, #116]
 2632              		.loc 1 1664 40
 2633 0056 0022     		movs	r2, #0
 2634 0058 9A63     		str	r2, [r3, #56]
1665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2635              		.loc 1 1666 11
 2636 005a 7B68     		ldr	r3, [r7, #4]
 2637 005c 5B6F     		ldr	r3, [r3, #116]
 2638 005e 1846     		mov	r0, r3
ARM GAS  /tmp/ccuwK2ly.s 			page 76


 2639 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 2640 0064 0346     		mov	r3, r0
 2641              		.loc 1 1666 10
 2642 0066 002B     		cmp	r3, #0
 2643 0068 0DD0     		beq	.L143
1667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2644              		.loc 1 1668 13
 2645 006a 7B68     		ldr	r3, [r7, #4]
 2646 006c 5B6F     		ldr	r3, [r3, #116]
 2647 006e 1846     		mov	r0, r3
 2648 0070 FFF7FEFF 		bl	HAL_DMA_GetError
 2649 0074 0346     		mov	r3, r0
 2650              		.loc 1 1668 12
 2651 0076 202B     		cmp	r3, #32
 2652 0078 05D1     		bne	.L143
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2653              		.loc 1 1671 28
 2654 007a 7B68     		ldr	r3, [r7, #4]
 2655 007c 1022     		movs	r2, #16
 2656 007e C3F88820 		str	r2, [r3, #136]
1672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2657              		.loc 1 1673 18
 2658 0082 0323     		movs	r3, #3
 2659 0084 5AE0     		b	.L144
 2660              	.L143:
1674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2661              		.loc 1 1680 7
 2662 0086 7B68     		ldr	r3, [r7, #4]
 2663 0088 1B68     		ldr	r3, [r3]
 2664 008a 9B68     		ldr	r3, [r3, #8]
 2665 008c 03F04003 		and	r3, r3, #64
 2666              		.loc 1 1680 6
 2667 0090 402B     		cmp	r3, #64
 2668 0092 25D1     		bne	.L145
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2669              		.loc 1 1682 5
 2670 0094 7B68     		ldr	r3, [r7, #4]
 2671 0096 1B68     		ldr	r3, [r3]
 2672 0098 9A68     		ldr	r2, [r3, #8]
 2673 009a 7B68     		ldr	r3, [r7, #4]
 2674 009c 1B68     		ldr	r3, [r3]
 2675 009e 22F04002 		bic	r2, r2, #64
 2676 00a2 9A60     		str	r2, [r3, #8]
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
ARM GAS  /tmp/ccuwK2ly.s 			page 77


 2677              		.loc 1 1685 14
 2678 00a4 7B68     		ldr	r3, [r7, #4]
 2679 00a6 9B6F     		ldr	r3, [r3, #120]
 2680              		.loc 1 1685 8
 2681 00a8 002B     		cmp	r3, #0
 2682 00aa 19D0     		beq	.L145
1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2683              		.loc 1 1689 12
 2684 00ac 7B68     		ldr	r3, [r7, #4]
 2685 00ae 9B6F     		ldr	r3, [r3, #120]
 2686              		.loc 1 1689 40
 2687 00b0 0022     		movs	r2, #0
 2688 00b2 9A63     		str	r2, [r3, #56]
1690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2689              		.loc 1 1691 11
 2690 00b4 7B68     		ldr	r3, [r7, #4]
 2691 00b6 9B6F     		ldr	r3, [r3, #120]
 2692 00b8 1846     		mov	r0, r3
 2693 00ba FFF7FEFF 		bl	HAL_DMA_Abort
 2694 00be 0346     		mov	r3, r0
 2695              		.loc 1 1691 10
 2696 00c0 002B     		cmp	r3, #0
 2697 00c2 0DD0     		beq	.L145
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2698              		.loc 1 1693 13
 2699 00c4 7B68     		ldr	r3, [r7, #4]
 2700 00c6 9B6F     		ldr	r3, [r3, #120]
 2701 00c8 1846     		mov	r0, r3
 2702 00ca FFF7FEFF 		bl	HAL_DMA_GetError
 2703 00ce 0346     		mov	r3, r0
 2704              		.loc 1 1693 12
 2705 00d0 202B     		cmp	r3, #32
 2706 00d2 05D1     		bne	.L145
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2707              		.loc 1 1696 28
 2708 00d4 7B68     		ldr	r3, [r7, #4]
 2709 00d6 1022     		movs	r2, #16
 2710 00d8 C3F88820 		str	r2, [r3, #136]
1697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2711              		.loc 1 1698 18
 2712 00dc 0323     		movs	r3, #3
 2713 00de 2DE0     		b	.L144
 2714              	.L145:
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
ARM GAS  /tmp/ccuwK2ly.s 			page 78


1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2715              		.loc 1 1705 22
 2716 00e0 7B68     		ldr	r3, [r7, #4]
 2717 00e2 0022     		movs	r2, #0
 2718 00e4 A3F85620 		strh	r2, [r3, #86]	@ movhi
1706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2719              		.loc 1 1706 22
 2720 00e8 7B68     		ldr	r3, [r7, #4]
 2721 00ea 0022     		movs	r2, #0
 2722 00ec A3F85E20 		strh	r2, [r3, #94]	@ movhi
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2723              		.loc 1 1709 3
 2724 00f0 7B68     		ldr	r3, [r7, #4]
 2725 00f2 1B68     		ldr	r3, [r3]
 2726 00f4 0F22     		movs	r2, #15
 2727 00f6 1A62     		str	r2, [r3, #32]
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 2728              		.loc 1 1712 12
 2729 00f8 7B68     		ldr	r3, [r7, #4]
 2730 00fa 5B6E     		ldr	r3, [r3, #100]
 2731              		.loc 1 1712 6
 2732 00fc B3F1005F 		cmp	r3, #536870912
 2733 0100 07D1     		bne	.L146
1713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 2734              		.loc 1 1714 5
 2735 0102 7B68     		ldr	r3, [r7, #4]
 2736 0104 1B68     		ldr	r3, [r3]
 2737 0106 9A69     		ldr	r2, [r3, #24]
 2738 0108 7B68     		ldr	r3, [r7, #4]
 2739 010a 1B68     		ldr	r3, [r3]
 2740 010c 42F01002 		orr	r2, r2, #16
 2741 0110 9A61     		str	r2, [r3, #24]
 2742              	.L146:
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2743              		.loc 1 1718 3
 2744 0112 7B68     		ldr	r3, [r7, #4]
 2745 0114 1B68     		ldr	r3, [r3]
 2746 0116 9A69     		ldr	r2, [r3, #24]
 2747 0118 7B68     		ldr	r3, [r7, #4]
 2748 011a 1B68     		ldr	r3, [r3]
 2749 011c 42F00802 		orr	r2, r2, #8
 2750 0120 9A61     		str	r2, [r3, #24]
1719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2751              		.loc 1 1721 18
 2752 0122 7B68     		ldr	r3, [r7, #4]
 2753 0124 2022     		movs	r2, #32
 2754 0126 C3F88020 		str	r2, [r3, #128]
ARM GAS  /tmp/ccuwK2ly.s 			page 79


1722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2755              		.loc 1 1722 18
 2756 012a 7B68     		ldr	r3, [r7, #4]
 2757 012c 2022     		movs	r2, #32
 2758 012e C3F88420 		str	r2, [r3, #132]
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2759              		.loc 1 1724 20
 2760 0132 7B68     		ldr	r3, [r7, #4]
 2761 0134 0022     		movs	r2, #0
 2762 0136 C3F88820 		str	r2, [r3, #136]
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 2763              		.loc 1 1726 10
 2764 013a 0023     		movs	r3, #0
 2765              	.L144:
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2766              		.loc 1 1727 1
 2767 013c 1846     		mov	r0, r3
 2768 013e 0837     		adds	r7, r7, #8
 2769              	.LCFI89:
 2770              		.cfi_def_cfa_offset 8
 2771 0140 BD46     		mov	sp, r7
 2772              	.LCFI90:
 2773              		.cfi_def_cfa_register 13
 2774              		@ sp needed
 2775 0142 80BD     		pop	{r7, pc}
 2776              		.cfi_endproc
 2777              	.LFE341:
 2779              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2780              		.align	1
 2781              		.global	HAL_UART_AbortTransmit
 2782              		.syntax unified
 2783              		.thumb
 2784              		.thumb_func
 2785              		.fpu fpv4-sp-d16
 2787              	HAL_UART_AbortTransmit:
 2788              	.LFB342:
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2789              		.loc 1 1742 1
 2790              		.cfi_startproc
 2791              		@ args = 0, pretend = 0, frame = 8
 2792              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccuwK2ly.s 			page 80


 2793 0000 80B5     		push	{r7, lr}
 2794              	.LCFI91:
 2795              		.cfi_def_cfa_offset 8
 2796              		.cfi_offset 7, -8
 2797              		.cfi_offset 14, -4
 2798 0002 82B0     		sub	sp, sp, #8
 2799              	.LCFI92:
 2800              		.cfi_def_cfa_offset 16
 2801 0004 00AF     		add	r7, sp, #0
 2802              	.LCFI93:
 2803              		.cfi_def_cfa_register 7
 2804 0006 7860     		str	r0, [r7, #4]
1743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
 2805              		.loc 1 1744 3
 2806 0008 7B68     		ldr	r3, [r7, #4]
 2807 000a 1B68     		ldr	r3, [r3]
 2808 000c 1A68     		ldr	r2, [r3]
 2809 000e 7B68     		ldr	r3, [r7, #4]
 2810 0010 1B68     		ldr	r3, [r3]
 2811 0012 22F0C002 		bic	r2, r2, #192
 2812 0016 1A60     		str	r2, [r3]
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 2813              		.loc 1 1745 3
 2814 0018 7B68     		ldr	r3, [r7, #4]
 2815 001a 1B68     		ldr	r3, [r3]
 2816 001c 9A68     		ldr	r2, [r3, #8]
 2817 001e 7B68     		ldr	r3, [r7, #4]
 2818 0020 1B68     		ldr	r3, [r3]
 2819 0022 22F40002 		bic	r2, r2, #8388608
 2820 0026 9A60     		str	r2, [r3, #8]
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2821              		.loc 1 1748 7
 2822 0028 7B68     		ldr	r3, [r7, #4]
 2823 002a 1B68     		ldr	r3, [r3]
 2824 002c 9B68     		ldr	r3, [r3, #8]
 2825 002e 03F08003 		and	r3, r3, #128
 2826              		.loc 1 1748 6
 2827 0032 802B     		cmp	r3, #128
 2828 0034 25D1     		bne	.L148
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2829              		.loc 1 1750 5
 2830 0036 7B68     		ldr	r3, [r7, #4]
 2831 0038 1B68     		ldr	r3, [r3]
 2832 003a 9A68     		ldr	r2, [r3, #8]
 2833 003c 7B68     		ldr	r3, [r7, #4]
 2834 003e 1B68     		ldr	r3, [r3]
 2835 0040 22F08002 		bic	r2, r2, #128
 2836 0044 9A60     		str	r2, [r3, #8]
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2837              		.loc 1 1753 14
 2838 0046 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 81


 2839 0048 5B6F     		ldr	r3, [r3, #116]
 2840              		.loc 1 1753 8
 2841 004a 002B     		cmp	r3, #0
 2842 004c 19D0     		beq	.L148
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2843              		.loc 1 1757 12
 2844 004e 7B68     		ldr	r3, [r7, #4]
 2845 0050 5B6F     		ldr	r3, [r3, #116]
 2846              		.loc 1 1757 40
 2847 0052 0022     		movs	r2, #0
 2848 0054 9A63     		str	r2, [r3, #56]
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2849              		.loc 1 1759 11
 2850 0056 7B68     		ldr	r3, [r7, #4]
 2851 0058 5B6F     		ldr	r3, [r3, #116]
 2852 005a 1846     		mov	r0, r3
 2853 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2854 0060 0346     		mov	r3, r0
 2855              		.loc 1 1759 10
 2856 0062 002B     		cmp	r3, #0
 2857 0064 0DD0     		beq	.L148
1760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2858              		.loc 1 1761 13
 2859 0066 7B68     		ldr	r3, [r7, #4]
 2860 0068 5B6F     		ldr	r3, [r3, #116]
 2861 006a 1846     		mov	r0, r3
 2862 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2863 0070 0346     		mov	r3, r0
 2864              		.loc 1 1761 12
 2865 0072 202B     		cmp	r3, #32
 2866 0074 05D1     		bne	.L148
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2867              		.loc 1 1764 28
 2868 0076 7B68     		ldr	r3, [r7, #4]
 2869 0078 1022     		movs	r2, #16
 2870 007a C3F88820 		str	r2, [r3, #136]
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2871              		.loc 1 1766 18
 2872 007e 0323     		movs	r3, #3
 2873 0080 15E0     		b	.L149
 2874              	.L148:
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2875              		.loc 1 1773 22
ARM GAS  /tmp/ccuwK2ly.s 			page 82


 2876 0082 7B68     		ldr	r3, [r7, #4]
 2877 0084 0022     		movs	r2, #0
 2878 0086 A3F85620 		strh	r2, [r3, #86]	@ movhi
1774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 2879              		.loc 1 1776 12
 2880 008a 7B68     		ldr	r3, [r7, #4]
 2881 008c 5B6E     		ldr	r3, [r3, #100]
 2882              		.loc 1 1776 6
 2883 008e B3F1005F 		cmp	r3, #536870912
 2884 0092 07D1     		bne	.L150
1777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 2885              		.loc 1 1778 5
 2886 0094 7B68     		ldr	r3, [r7, #4]
 2887 0096 1B68     		ldr	r3, [r3]
 2888 0098 9A69     		ldr	r2, [r3, #24]
 2889 009a 7B68     		ldr	r3, [r7, #4]
 2890 009c 1B68     		ldr	r3, [r3]
 2891 009e 42F01002 		orr	r2, r2, #16
 2892 00a2 9A61     		str	r2, [r3, #24]
 2893              	.L150:
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2894              		.loc 1 1782 17
 2895 00a4 7B68     		ldr	r3, [r7, #4]
 2896 00a6 2022     		movs	r2, #32
 2897 00a8 C3F88020 		str	r2, [r3, #128]
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 2898              		.loc 1 1784 10
 2899 00ac 0023     		movs	r3, #0
 2900              	.L149:
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2901              		.loc 1 1785 1
 2902 00ae 1846     		mov	r0, r3
 2903 00b0 0837     		adds	r7, r7, #8
 2904              	.LCFI94:
 2905              		.cfi_def_cfa_offset 8
 2906 00b2 BD46     		mov	sp, r7
 2907              	.LCFI95:
 2908              		.cfi_def_cfa_register 13
 2909              		@ sp needed
 2910 00b4 80BD     		pop	{r7, pc}
 2911              		.cfi_endproc
 2912              	.LFE342:
 2914              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2915              		.align	1
 2916              		.global	HAL_UART_AbortReceive
 2917              		.syntax unified
 2918              		.thumb
 2919              		.thumb_func
 2920              		.fpu fpv4-sp-d16
 2922              	HAL_UART_AbortReceive:
ARM GAS  /tmp/ccuwK2ly.s 			page 83


 2923              	.LFB343:
1786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2924              		.loc 1 1800 1
 2925              		.cfi_startproc
 2926              		@ args = 0, pretend = 0, frame = 8
 2927              		@ frame_needed = 1, uses_anonymous_args = 0
 2928 0000 80B5     		push	{r7, lr}
 2929              	.LCFI96:
 2930              		.cfi_def_cfa_offset 8
 2931              		.cfi_offset 7, -8
 2932              		.cfi_offset 14, -4
 2933 0002 82B0     		sub	sp, sp, #8
 2934              	.LCFI97:
 2935              		.cfi_def_cfa_offset 16
 2936 0004 00AF     		add	r7, sp, #0
 2937              	.LCFI98:
 2938              		.cfi_def_cfa_register 7
 2939 0006 7860     		str	r0, [r7, #4]
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
 2940              		.loc 1 1802 3
 2941 0008 7B68     		ldr	r3, [r7, #4]
 2942 000a 1B68     		ldr	r3, [r3]
 2943 000c 1A68     		ldr	r2, [r3]
 2944 000e 7B68     		ldr	r3, [r7, #4]
 2945 0010 1B68     		ldr	r3, [r3]
 2946 0012 22F49072 		bic	r2, r2, #288
 2947 0016 1A60     		str	r2, [r3]
1803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 2948              		.loc 1 1803 3
 2949 0018 7B68     		ldr	r3, [r7, #4]
 2950 001a 1B68     		ldr	r3, [r3]
 2951 001c 9B68     		ldr	r3, [r3, #8]
 2952 001e 7A68     		ldr	r2, [r7, #4]
 2953 0020 1268     		ldr	r2, [r2]
 2954 0022 23F08053 		bic	r3, r3, #268435456
 2955 0026 23F00103 		bic	r3, r3, #1
 2956 002a 9360     		str	r3, [r2, #8]
1804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2957              		.loc 1 1806 7
 2958 002c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 84


 2959 002e 1B68     		ldr	r3, [r3]
 2960 0030 9B68     		ldr	r3, [r3, #8]
 2961 0032 03F04003 		and	r3, r3, #64
 2962              		.loc 1 1806 6
 2963 0036 402B     		cmp	r3, #64
 2964 0038 25D1     		bne	.L152
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2965              		.loc 1 1808 5
 2966 003a 7B68     		ldr	r3, [r7, #4]
 2967 003c 1B68     		ldr	r3, [r3]
 2968 003e 9A68     		ldr	r2, [r3, #8]
 2969 0040 7B68     		ldr	r3, [r7, #4]
 2970 0042 1B68     		ldr	r3, [r3]
 2971 0044 22F04002 		bic	r2, r2, #64
 2972 0048 9A60     		str	r2, [r3, #8]
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2973              		.loc 1 1811 14
 2974 004a 7B68     		ldr	r3, [r7, #4]
 2975 004c 9B6F     		ldr	r3, [r3, #120]
 2976              		.loc 1 1811 8
 2977 004e 002B     		cmp	r3, #0
 2978 0050 19D0     		beq	.L152
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2979              		.loc 1 1815 12
 2980 0052 7B68     		ldr	r3, [r7, #4]
 2981 0054 9B6F     		ldr	r3, [r3, #120]
 2982              		.loc 1 1815 40
 2983 0056 0022     		movs	r2, #0
 2984 0058 9A63     		str	r2, [r3, #56]
1816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2985              		.loc 1 1817 11
 2986 005a 7B68     		ldr	r3, [r7, #4]
 2987 005c 9B6F     		ldr	r3, [r3, #120]
 2988 005e 1846     		mov	r0, r3
 2989 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 2990 0064 0346     		mov	r3, r0
 2991              		.loc 1 1817 10
 2992 0066 002B     		cmp	r3, #0
 2993 0068 0DD0     		beq	.L152
1818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2994              		.loc 1 1819 13
 2995 006a 7B68     		ldr	r3, [r7, #4]
 2996 006c 9B6F     		ldr	r3, [r3, #120]
 2997 006e 1846     		mov	r0, r3
 2998 0070 FFF7FEFF 		bl	HAL_DMA_GetError
 2999 0074 0346     		mov	r3, r0
 3000              		.loc 1 1819 12
 3001 0076 202B     		cmp	r3, #32
 3002 0078 05D1     		bne	.L152
ARM GAS  /tmp/ccuwK2ly.s 			page 85


1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3003              		.loc 1 1822 28
 3004 007a 7B68     		ldr	r3, [r7, #4]
 3005 007c 1022     		movs	r2, #16
 3006 007e C3F88820 		str	r2, [r3, #136]
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3007              		.loc 1 1824 18
 3008 0082 0323     		movs	r3, #3
 3009 0084 14E0     		b	.L153
 3010              	.L152:
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3011              		.loc 1 1831 22
 3012 0086 7B68     		ldr	r3, [r7, #4]
 3013 0088 0022     		movs	r2, #0
 3014 008a A3F85E20 		strh	r2, [r3, #94]	@ movhi
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3015              		.loc 1 1834 3
 3016 008e 7B68     		ldr	r3, [r7, #4]
 3017 0090 1B68     		ldr	r3, [r3]
 3018 0092 0F22     		movs	r2, #15
 3019 0094 1A62     		str	r2, [r3, #32]
1835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
1837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3020              		.loc 1 1837 3
 3021 0096 7B68     		ldr	r3, [r7, #4]
 3022 0098 1B68     		ldr	r3, [r3]
 3023 009a 9A69     		ldr	r2, [r3, #24]
 3024 009c 7B68     		ldr	r3, [r7, #4]
 3025 009e 1B68     		ldr	r3, [r3]
 3026 00a0 42F00802 		orr	r2, r2, #8
 3027 00a4 9A61     		str	r2, [r3, #24]
1838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3028              		.loc 1 1840 18
 3029 00a6 7B68     		ldr	r3, [r7, #4]
 3030 00a8 2022     		movs	r2, #32
 3031 00aa C3F88420 		str	r2, [r3, #132]
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 3032              		.loc 1 1842 10
 3033 00ae 0023     		movs	r3, #0
 3034              	.L153:
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 3035              		.loc 1 1843 1
ARM GAS  /tmp/ccuwK2ly.s 			page 86


 3036 00b0 1846     		mov	r0, r3
 3037 00b2 0837     		adds	r7, r7, #8
 3038              	.LCFI99:
 3039              		.cfi_def_cfa_offset 8
 3040 00b4 BD46     		mov	sp, r7
 3041              	.LCFI100:
 3042              		.cfi_def_cfa_register 13
 3043              		@ sp needed
 3044 00b6 80BD     		pop	{r7, pc}
 3045              		.cfi_endproc
 3046              	.LFE343:
 3048              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3049              		.align	1
 3050              		.global	HAL_UART_Abort_IT
 3051              		.syntax unified
 3052              		.thumb
 3053              		.thumb_func
 3054              		.fpu fpv4-sp-d16
 3056              	HAL_UART_Abort_IT:
 3057              	.LFB344:
1844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 3058              		.loc 1 1860 1
 3059              		.cfi_startproc
 3060              		@ args = 0, pretend = 0, frame = 16
 3061              		@ frame_needed = 1, uses_anonymous_args = 0
 3062 0000 80B5     		push	{r7, lr}
 3063              	.LCFI101:
 3064              		.cfi_def_cfa_offset 8
 3065              		.cfi_offset 7, -8
 3066              		.cfi_offset 14, -4
 3067 0002 84B0     		sub	sp, sp, #16
 3068              	.LCFI102:
 3069              		.cfi_def_cfa_offset 24
 3070 0004 00AF     		add	r7, sp, #0
 3071              	.LCFI103:
 3072              		.cfi_def_cfa_register 7
 3073 0006 7860     		str	r0, [r7, #4]
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3074              		.loc 1 1861 12
 3075 0008 0123     		movs	r3, #1
 3076 000a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccuwK2ly.s 			page 87


1862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
 3077              		.loc 1 1864 3
 3078 000c 7B68     		ldr	r3, [r7, #4]
 3079 000e 1B68     		ldr	r3, [r3]
 3080 0010 1A68     		ldr	r2, [r3]
 3081 0012 7B68     		ldr	r3, [r7, #4]
 3082 0014 1B68     		ldr	r3, [r3]
 3083 0016 22F4F072 		bic	r2, r2, #480
 3084 001a 1A60     		str	r2, [r3]
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 3085              		.loc 1 1865 3
 3086 001c 7B68     		ldr	r3, [r7, #4]
 3087 001e 1B68     		ldr	r3, [r3]
 3088 0020 9B68     		ldr	r3, [r3, #8]
 3089 0022 7A68     		ldr	r2, [r7, #4]
 3090 0024 1268     		ldr	r2, [r2]
 3091 0026 23F08453 		bic	r3, r3, #276824064
 3092 002a 23F00103 		bic	r3, r3, #1
 3093 002e 9360     		str	r3, [r2, #8]
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      before any call to DMA Abort functions */
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 3094              		.loc 1 1870 12
 3095 0030 7B68     		ldr	r3, [r7, #4]
 3096 0032 5B6F     		ldr	r3, [r3, #116]
 3097              		.loc 1 1870 6
 3098 0034 002B     		cmp	r3, #0
 3099 0036 0FD0     		beq	.L155
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        Otherwise, set it to NULL */
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3100              		.loc 1 1874 9
 3101 0038 7B68     		ldr	r3, [r7, #4]
 3102 003a 1B68     		ldr	r3, [r3]
 3103 003c 9B68     		ldr	r3, [r3, #8]
 3104 003e 03F08003 		and	r3, r3, #128
 3105              		.loc 1 1874 8
 3106 0042 802B     		cmp	r3, #128
 3107 0044 04D1     		bne	.L156
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 3108              		.loc 1 1876 12
 3109 0046 7B68     		ldr	r3, [r7, #4]
 3110 0048 5B6F     		ldr	r3, [r3, #116]
 3111              		.loc 1 1876 40
 3112 004a 4F4A     		ldr	r2, .L166
 3113 004c 9A63     		str	r2, [r3, #56]
 3114 004e 03E0     		b	.L155
 3115              	.L156:
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccuwK2ly.s 			page 88


1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3116              		.loc 1 1880 12
 3117 0050 7B68     		ldr	r3, [r7, #4]
 3118 0052 5B6F     		ldr	r3, [r3, #116]
 3119              		.loc 1 1880 40
 3120 0054 0022     		movs	r2, #0
 3121 0056 9A63     		str	r2, [r3, #56]
 3122              	.L155:
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 3123              		.loc 1 1884 12
 3124 0058 7B68     		ldr	r3, [r7, #4]
 3125 005a 9B6F     		ldr	r3, [r3, #120]
 3126              		.loc 1 1884 6
 3127 005c 002B     		cmp	r3, #0
 3128 005e 0FD0     		beq	.L157
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        Otherwise, set it to NULL */
1888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3129              		.loc 1 1888 9
 3130 0060 7B68     		ldr	r3, [r7, #4]
 3131 0062 1B68     		ldr	r3, [r3]
 3132 0064 9B68     		ldr	r3, [r3, #8]
 3133 0066 03F04003 		and	r3, r3, #64
 3134              		.loc 1 1888 8
 3135 006a 402B     		cmp	r3, #64
 3136 006c 04D1     		bne	.L158
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 3137              		.loc 1 1890 12
 3138 006e 7B68     		ldr	r3, [r7, #4]
 3139 0070 9B6F     		ldr	r3, [r3, #120]
 3140              		.loc 1 1890 40
 3141 0072 464A     		ldr	r2, .L166+4
 3142 0074 9A63     		str	r2, [r3, #56]
 3143 0076 03E0     		b	.L157
 3144              	.L158:
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3145              		.loc 1 1894 12
 3146 0078 7B68     		ldr	r3, [r7, #4]
 3147 007a 9B6F     		ldr	r3, [r3, #120]
 3148              		.loc 1 1894 40
 3149 007c 0022     		movs	r2, #0
 3150 007e 9A63     		str	r2, [r3, #56]
 3151              	.L157:
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3152              		.loc 1 1899 7
ARM GAS  /tmp/ccuwK2ly.s 			page 89


 3153 0080 7B68     		ldr	r3, [r7, #4]
 3154 0082 1B68     		ldr	r3, [r3]
 3155 0084 9B68     		ldr	r3, [r3, #8]
 3156 0086 03F08003 		and	r3, r3, #128
 3157              		.loc 1 1899 6
 3158 008a 802B     		cmp	r3, #128
 3159 008c 1AD1     		bne	.L159
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3160              		.loc 1 1902 5
 3161 008e 7B68     		ldr	r3, [r7, #4]
 3162 0090 1B68     		ldr	r3, [r3]
 3163 0092 9A68     		ldr	r2, [r3, #8]
 3164 0094 7B68     		ldr	r3, [r7, #4]
 3165 0096 1B68     		ldr	r3, [r3]
 3166 0098 22F08002 		bic	r2, r2, #128
 3167 009c 9A60     		str	r2, [r3, #8]
1903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3168              		.loc 1 1905 14
 3169 009e 7B68     		ldr	r3, [r7, #4]
 3170 00a0 5B6F     		ldr	r3, [r3, #116]
 3171              		.loc 1 1905 8
 3172 00a2 002B     		cmp	r3, #0
 3173 00a4 0ED0     		beq	.L159
1906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA TX */
1911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3174              		.loc 1 1911 11
 3175 00a6 7B68     		ldr	r3, [r7, #4]
 3176 00a8 5B6F     		ldr	r3, [r3, #116]
 3177 00aa 1846     		mov	r0, r3
 3178 00ac FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3179 00b0 0346     		mov	r3, r0
 3180              		.loc 1 1911 10
 3181 00b2 002B     		cmp	r3, #0
 3182 00b4 04D0     		beq	.L160
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3183              		.loc 1 1913 14
 3184 00b6 7B68     		ldr	r3, [r7, #4]
 3185 00b8 5B6F     		ldr	r3, [r3, #116]
 3186              		.loc 1 1913 42
 3187 00ba 0022     		movs	r2, #0
 3188 00bc 9A63     		str	r2, [r3, #56]
 3189 00be 01E0     		b	.L159
 3190              	.L160:
1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 0U;
 3191              		.loc 1 1917 19
ARM GAS  /tmp/ccuwK2ly.s 			page 90


 3192 00c0 0023     		movs	r3, #0
 3193 00c2 FB60     		str	r3, [r7, #12]
 3194              	.L159:
1918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3195              		.loc 1 1923 7
 3196 00c4 7B68     		ldr	r3, [r7, #4]
 3197 00c6 1B68     		ldr	r3, [r3]
 3198 00c8 9B68     		ldr	r3, [r3, #8]
 3199 00ca 03F04003 		and	r3, r3, #64
 3200              		.loc 1 1923 6
 3201 00ce 402B     		cmp	r3, #64
 3202 00d0 1CD1     		bne	.L161
1924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3203              		.loc 1 1925 5
 3204 00d2 7B68     		ldr	r3, [r7, #4]
 3205 00d4 1B68     		ldr	r3, [r3]
 3206 00d6 9A68     		ldr	r2, [r3, #8]
 3207 00d8 7B68     		ldr	r3, [r7, #4]
 3208 00da 1B68     		ldr	r3, [r3]
 3209 00dc 22F04002 		bic	r2, r2, #64
 3210 00e0 9A60     		str	r2, [r3, #8]
1926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3211              		.loc 1 1928 14
 3212 00e2 7B68     		ldr	r3, [r7, #4]
 3213 00e4 9B6F     		ldr	r3, [r3, #120]
 3214              		.loc 1 1928 8
 3215 00e6 002B     		cmp	r3, #0
 3216 00e8 10D0     		beq	.L161
1929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA RX */
1934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3217              		.loc 1 1934 11
 3218 00ea 7B68     		ldr	r3, [r7, #4]
 3219 00ec 9B6F     		ldr	r3, [r3, #120]
 3220 00ee 1846     		mov	r0, r3
 3221 00f0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3222 00f4 0346     		mov	r3, r0
 3223              		.loc 1 1934 10
 3224 00f6 002B     		cmp	r3, #0
 3225 00f8 06D0     		beq	.L162
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 3226              		.loc 1 1936 14
 3227 00fa 7B68     		ldr	r3, [r7, #4]
 3228 00fc 9B6F     		ldr	r3, [r3, #120]
 3229              		.loc 1 1936 42
ARM GAS  /tmp/ccuwK2ly.s 			page 91


 3230 00fe 0022     		movs	r2, #0
 3231 0100 9A63     		str	r2, [r3, #56]
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 1U;
 3232              		.loc 1 1937 19
 3233 0102 0123     		movs	r3, #1
 3234 0104 FB60     		str	r3, [r7, #12]
 3235 0106 01E0     		b	.L161
 3236              	.L162:
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 0U;
 3237              		.loc 1 1941 19
 3238 0108 0023     		movs	r3, #0
 3239 010a FB60     		str	r3, [r7, #12]
 3240              	.L161:
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (abortcplt == 1U)
 3241              		.loc 1 1947 6
 3242 010c FB68     		ldr	r3, [r7, #12]
 3243 010e 012B     		cmp	r3, #1
 3244 0110 35D1     		bne	.L163
1948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3245              		.loc 1 1950 24
 3246 0112 7B68     		ldr	r3, [r7, #4]
 3247 0114 0022     		movs	r2, #0
 3248 0116 A3F85620 		strh	r2, [r3, #86]	@ movhi
1951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3249              		.loc 1 1951 24
 3250 011a 7B68     		ldr	r3, [r7, #4]
 3251 011c 0022     		movs	r2, #0
 3252 011e A3F85E20 		strh	r2, [r3, #94]	@ movhi
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear ISR function pointers */
1954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR = NULL;
 3253              		.loc 1 1954 18
 3254 0122 7B68     		ldr	r3, [r7, #4]
 3255 0124 0022     		movs	r2, #0
 3256 0126 DA66     		str	r2, [r3, #108]
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
 3257              		.loc 1 1955 18
 3258 0128 7B68     		ldr	r3, [r7, #4]
 3259 012a 0022     		movs	r2, #0
 3260 012c 1A67     		str	r2, [r3, #112]
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset errorCode */
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3261              		.loc 1 1958 22
 3262 012e 7B68     		ldr	r3, [r7, #4]
 3263 0130 0022     		movs	r2, #0
 3264 0132 C3F88820 		str	r2, [r3, #136]
ARM GAS  /tmp/ccuwK2ly.s 			page 92


1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3265              		.loc 1 1961 5
 3266 0136 7B68     		ldr	r3, [r7, #4]
 3267 0138 1B68     		ldr	r3, [r3]
 3268 013a 0F22     		movs	r2, #15
 3269 013c 1A62     		str	r2, [r3, #32]
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 3270              		.loc 1 1964 14
 3271 013e 7B68     		ldr	r3, [r7, #4]
 3272 0140 5B6E     		ldr	r3, [r3, #100]
 3273              		.loc 1 1964 8
 3274 0142 B3F1005F 		cmp	r3, #536870912
 3275 0146 07D1     		bne	.L164
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 3276              		.loc 1 1966 7
 3277 0148 7B68     		ldr	r3, [r7, #4]
 3278 014a 1B68     		ldr	r3, [r3]
 3279 014c 9A69     		ldr	r2, [r3, #24]
 3280 014e 7B68     		ldr	r3, [r7, #4]
 3281 0150 1B68     		ldr	r3, [r3]
 3282 0152 42F01002 		orr	r2, r2, #16
 3283 0156 9A61     		str	r2, [r3, #24]
 3284              	.L164:
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Discard the received data */
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3285              		.loc 1 1970 5
 3286 0158 7B68     		ldr	r3, [r7, #4]
 3287 015a 1B68     		ldr	r3, [r3]
 3288 015c 9A69     		ldr	r2, [r3, #24]
 3289 015e 7B68     		ldr	r3, [r7, #4]
 3290 0160 1B68     		ldr	r3, [r3]
 3291 0162 42F00802 		orr	r2, r2, #8
 3292 0166 9A61     		str	r2, [r3, #24]
1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3293              		.loc 1 1973 20
 3294 0168 7B68     		ldr	r3, [r7, #4]
 3295 016a 2022     		movs	r2, #32
 3296 016c C3F88020 		str	r2, [r3, #128]
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3297              		.loc 1 1974 20
 3298 0170 7B68     		ldr	r3, [r7, #4]
 3299 0172 2022     		movs	r2, #32
 3300 0174 C3F88420 		str	r2, [r3, #132]
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
ARM GAS  /tmp/ccuwK2ly.s 			page 93


1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
1981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3301              		.loc 1 1982 5
 3302 0178 7868     		ldr	r0, [r7, #4]
 3303 017a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3304              	.L163:
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 3305              		.loc 1 1986 10
 3306 017e 0023     		movs	r3, #0
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 3307              		.loc 1 1987 1
 3308 0180 1846     		mov	r0, r3
 3309 0182 1037     		adds	r7, r7, #16
 3310              	.LCFI104:
 3311              		.cfi_def_cfa_offset 8
 3312 0184 BD46     		mov	sp, r7
 3313              	.LCFI105:
 3314              		.cfi_def_cfa_register 13
 3315              		@ sp needed
 3316 0186 80BD     		pop	{r7, pc}
 3317              	.L167:
 3318              		.align	2
 3319              	.L166:
 3320 0188 00000000 		.word	UART_DMATxAbortCallback
 3321 018c 00000000 		.word	UART_DMARxAbortCallback
 3322              		.cfi_endproc
 3323              	.LFE344:
 3325              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3326              		.align	1
 3327              		.global	HAL_UART_AbortTransmit_IT
 3328              		.syntax unified
 3329              		.thumb
 3330              		.thumb_func
 3331              		.fpu fpv4-sp-d16
 3333              	HAL_UART_AbortTransmit_IT:
 3334              	.LFB345:
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
ARM GAS  /tmp/ccuwK2ly.s 			page 94


 3335              		.loc 1 2004 1
 3336              		.cfi_startproc
 3337              		@ args = 0, pretend = 0, frame = 8
 3338              		@ frame_needed = 1, uses_anonymous_args = 0
 3339 0000 80B5     		push	{r7, lr}
 3340              	.LCFI106:
 3341              		.cfi_def_cfa_offset 8
 3342              		.cfi_offset 7, -8
 3343              		.cfi_offset 14, -4
 3344 0002 82B0     		sub	sp, sp, #8
 3345              	.LCFI107:
 3346              		.cfi_def_cfa_offset 16
 3347 0004 00AF     		add	r7, sp, #0
 3348              	.LCFI108:
 3349              		.cfi_def_cfa_register 7
 3350 0006 7860     		str	r0, [r7, #4]
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
 3351              		.loc 1 2006 3
 3352 0008 7B68     		ldr	r3, [r7, #4]
 3353 000a 1B68     		ldr	r3, [r3]
 3354 000c 1A68     		ldr	r2, [r3]
 3355 000e 7B68     		ldr	r3, [r7, #4]
 3356 0010 1B68     		ldr	r3, [r3]
 3357 0012 22F0C002 		bic	r2, r2, #192
 3358 0016 1A60     		str	r2, [r3]
2007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3359              		.loc 1 2007 3
 3360 0018 7B68     		ldr	r3, [r7, #4]
 3361 001a 1B68     		ldr	r3, [r3]
 3362 001c 9A68     		ldr	r2, [r3, #8]
 3363 001e 7B68     		ldr	r3, [r7, #4]
 3364 0020 1B68     		ldr	r3, [r3]
 3365 0022 22F40002 		bic	r2, r2, #8388608
 3366 0026 9A60     		str	r2, [r3, #8]
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3367              		.loc 1 2010 7
 3368 0028 7B68     		ldr	r3, [r7, #4]
 3369 002a 1B68     		ldr	r3, [r3]
 3370 002c 9B68     		ldr	r3, [r3, #8]
 3371 002e 03F08003 		and	r3, r3, #128
 3372              		.loc 1 2010 6
 3373 0032 802B     		cmp	r3, #128
 3374 0034 2ED1     		bne	.L169
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3375              		.loc 1 2012 5
 3376 0036 7B68     		ldr	r3, [r7, #4]
 3377 0038 1B68     		ldr	r3, [r3]
 3378 003a 9A68     		ldr	r2, [r3, #8]
 3379 003c 7B68     		ldr	r3, [r7, #4]
 3380 003e 1B68     		ldr	r3, [r3]
 3381 0040 22F08002 		bic	r2, r2, #128
 3382 0044 9A60     		str	r2, [r3, #8]
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 95


2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3383              		.loc 1 2015 14
 3384 0046 7B68     		ldr	r3, [r7, #4]
 3385 0048 5B6F     		ldr	r3, [r3, #116]
 3386              		.loc 1 2015 8
 3387 004a 002B     		cmp	r3, #0
 3388 004c 13D0     		beq	.L170
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3389              		.loc 1 2019 12
 3390 004e 7B68     		ldr	r3, [r7, #4]
 3391 0050 5B6F     		ldr	r3, [r3, #116]
 3392              		.loc 1 2019 40
 3393 0052 204A     		ldr	r2, .L176
 3394 0054 9A63     		str	r2, [r3, #56]
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA TX */
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3395              		.loc 1 2022 11
 3396 0056 7B68     		ldr	r3, [r7, #4]
 3397 0058 5B6F     		ldr	r3, [r3, #116]
 3398 005a 1846     		mov	r0, r3
 3399 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3400 0060 0346     		mov	r3, r0
 3401              		.loc 1 2022 10
 3402 0062 002B     		cmp	r3, #0
 3403 0064 31D0     		beq	.L173
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3404              		.loc 1 2025 14
 3405 0066 7B68     		ldr	r3, [r7, #4]
 3406 0068 5B6F     		ldr	r3, [r3, #116]
 3407              		.loc 1 2025 22
 3408 006a 9B6B     		ldr	r3, [r3, #56]
 3409              		.loc 1 2025 47
 3410 006c 7A68     		ldr	r2, [r7, #4]
 3411 006e 526F     		ldr	r2, [r2, #116]
 3412              		.loc 1 2025 9
 3413 0070 1046     		mov	r0, r2
 3414 0072 9847     		blx	r3
 3415              	.LVL0:
 3416 0074 29E0     		b	.L173
 3417              	.L170:
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount = 0U;
 3418              		.loc 1 2031 26
 3419 0076 7B68     		ldr	r3, [r7, #4]
 3420 0078 0022     		movs	r2, #0
 3421 007a A3F85620 		strh	r2, [r3, #86]	@ movhi
ARM GAS  /tmp/ccuwK2ly.s 			page 96


2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxISR = NULL;
 3422              		.loc 1 2034 20
 3423 007e 7B68     		ldr	r3, [r7, #4]
 3424 0080 0022     		movs	r2, #0
 3425 0082 1A67     		str	r2, [r3, #112]
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3426              		.loc 1 2037 21
 3427 0084 7B68     		ldr	r3, [r7, #4]
 3428 0086 2022     		movs	r2, #32
 3429 0088 C3F88020 		str	r2, [r3, #128]
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3430              		.loc 1 2045 7
 3431 008c 7868     		ldr	r0, [r7, #4]
 3432 008e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3433 0092 1AE0     		b	.L173
 3434              	.L169:
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3435              		.loc 1 2052 24
 3436 0094 7B68     		ldr	r3, [r7, #4]
 3437 0096 0022     		movs	r2, #0
 3438 0098 A3F85620 		strh	r2, [r3, #86]	@ movhi
2053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
 3439              		.loc 1 2055 18
 3440 009c 7B68     		ldr	r3, [r7, #4]
 3441 009e 0022     		movs	r2, #0
 3442 00a0 1A67     		str	r2, [r3, #112]
2056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 3443              		.loc 1 2058 14
 3444 00a2 7B68     		ldr	r3, [r7, #4]
 3445 00a4 5B6E     		ldr	r3, [r3, #100]
 3446              		.loc 1 2058 8
 3447 00a6 B3F1005F 		cmp	r3, #536870912
 3448 00aa 07D1     		bne	.L174
2059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 3449              		.loc 1 2060 7
ARM GAS  /tmp/ccuwK2ly.s 			page 97


 3450 00ac 7B68     		ldr	r3, [r7, #4]
 3451 00ae 1B68     		ldr	r3, [r3]
 3452 00b0 9A69     		ldr	r2, [r3, #24]
 3453 00b2 7B68     		ldr	r3, [r7, #4]
 3454 00b4 1B68     		ldr	r3, [r3]
 3455 00b6 42F01002 		orr	r2, r2, #16
 3456 00ba 9A61     		str	r2, [r3, #24]
 3457              	.L174:
2061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3458              		.loc 1 2064 19
 3459 00bc 7B68     		ldr	r3, [r7, #4]
 3460 00be 2022     		movs	r2, #32
 3461 00c0 C3F88020 		str	r2, [r3, #128]
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3462              		.loc 1 2072 5
 3463 00c4 7868     		ldr	r0, [r7, #4]
 3464 00c6 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3465              	.L173:
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 3466              		.loc 1 2076 10
 3467 00ca 0023     		movs	r3, #0
2077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 3468              		.loc 1 2077 1
 3469 00cc 1846     		mov	r0, r3
 3470 00ce 0837     		adds	r7, r7, #8
 3471              	.LCFI109:
 3472              		.cfi_def_cfa_offset 8
 3473 00d0 BD46     		mov	sp, r7
 3474              	.LCFI110:
 3475              		.cfi_def_cfa_register 13
 3476              		@ sp needed
 3477 00d2 80BD     		pop	{r7, pc}
 3478              	.L177:
 3479              		.align	2
 3480              	.L176:
 3481 00d4 00000000 		.word	UART_DMATxOnlyAbortCallback
 3482              		.cfi_endproc
 3483              	.LFE345:
 3485              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3486              		.align	1
 3487              		.global	HAL_UART_AbortReceive_IT
 3488              		.syntax unified
 3489              		.thumb
 3490              		.thumb_func
ARM GAS  /tmp/ccuwK2ly.s 			page 98


 3491              		.fpu fpv4-sp-d16
 3493              	HAL_UART_AbortReceive_IT:
 3494              	.LFB346:
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
2084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
2088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 3495              		.loc 1 2094 1
 3496              		.cfi_startproc
 3497              		@ args = 0, pretend = 0, frame = 8
 3498              		@ frame_needed = 1, uses_anonymous_args = 0
 3499 0000 80B5     		push	{r7, lr}
 3500              	.LCFI111:
 3501              		.cfi_def_cfa_offset 8
 3502              		.cfi_offset 7, -8
 3503              		.cfi_offset 14, -4
 3504 0002 82B0     		sub	sp, sp, #8
 3505              	.LCFI112:
 3506              		.cfi_def_cfa_offset 16
 3507 0004 00AF     		add	r7, sp, #0
 3508              	.LCFI113:
 3509              		.cfi_def_cfa_register 7
 3510 0006 7860     		str	r0, [r7, #4]
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
 3511              		.loc 1 2096 3
 3512 0008 7B68     		ldr	r3, [r7, #4]
 3513 000a 1B68     		ldr	r3, [r3]
 3514 000c 1A68     		ldr	r2, [r3]
 3515 000e 7B68     		ldr	r3, [r7, #4]
 3516 0010 1B68     		ldr	r3, [r3]
 3517 0012 22F49072 		bic	r2, r2, #288
 3518 0016 1A60     		str	r2, [r3]
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3519              		.loc 1 2097 3
 3520 0018 7B68     		ldr	r3, [r7, #4]
 3521 001a 1B68     		ldr	r3, [r3]
 3522 001c 9B68     		ldr	r3, [r3, #8]
 3523 001e 7A68     		ldr	r2, [r7, #4]
 3524 0020 1268     		ldr	r2, [r2]
 3525 0022 23F08053 		bic	r3, r3, #268435456
 3526 0026 23F00103 		bic	r3, r3, #1
 3527 002a 9360     		str	r3, [r2, #8]
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 99


2099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3528              		.loc 1 2100 7
 3529 002c 7B68     		ldr	r3, [r7, #4]
 3530 002e 1B68     		ldr	r3, [r3]
 3531 0030 9B68     		ldr	r3, [r3, #8]
 3532 0032 03F04003 		and	r3, r3, #64
 3533              		.loc 1 2100 6
 3534 0036 402B     		cmp	r3, #64
 3535 0038 3AD1     		bne	.L179
2101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3536              		.loc 1 2102 5
 3537 003a 7B68     		ldr	r3, [r7, #4]
 3538 003c 1B68     		ldr	r3, [r3]
 3539 003e 9A68     		ldr	r2, [r3, #8]
 3540 0040 7B68     		ldr	r3, [r7, #4]
 3541 0042 1B68     		ldr	r3, [r3]
 3542 0044 22F04002 		bic	r2, r2, #64
 3543 0048 9A60     		str	r2, [r3, #8]
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3544              		.loc 1 2105 14
 3545 004a 7B68     		ldr	r3, [r7, #4]
 3546 004c 9B6F     		ldr	r3, [r3, #120]
 3547              		.loc 1 2105 8
 3548 004e 002B     		cmp	r3, #0
 3549 0050 13D0     		beq	.L180
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3550              		.loc 1 2109 12
 3551 0052 7B68     		ldr	r3, [r7, #4]
 3552 0054 9B6F     		ldr	r3, [r3, #120]
 3553              		.loc 1 2109 40
 3554 0056 224A     		ldr	r2, .L185
 3555 0058 9A63     		str	r2, [r3, #56]
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA RX */
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3556              		.loc 1 2112 11
 3557 005a 7B68     		ldr	r3, [r7, #4]
 3558 005c 9B6F     		ldr	r3, [r3, #120]
 3559 005e 1846     		mov	r0, r3
 3560 0060 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3561 0064 0346     		mov	r3, r0
 3562              		.loc 1 2112 10
 3563 0066 002B     		cmp	r3, #0
 3564 0068 34D0     		beq	.L183
2113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3565              		.loc 1 2115 14
 3566 006a 7B68     		ldr	r3, [r7, #4]
 3567 006c 9B6F     		ldr	r3, [r3, #120]
ARM GAS  /tmp/ccuwK2ly.s 			page 100


 3568              		.loc 1 2115 22
 3569 006e 9B6B     		ldr	r3, [r3, #56]
 3570              		.loc 1 2115 47
 3571 0070 7A68     		ldr	r2, [r7, #4]
 3572 0072 926F     		ldr	r2, [r2, #120]
 3573              		.loc 1 2115 9
 3574 0074 1046     		mov	r0, r2
 3575 0076 9847     		blx	r3
 3576              	.LVL1:
 3577 0078 2CE0     		b	.L183
 3578              	.L180:
2116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount = 0U;
 3579              		.loc 1 2121 26
 3580 007a 7B68     		ldr	r3, [r7, #4]
 3581 007c 0022     		movs	r2, #0
 3582 007e A3F85E20 		strh	r2, [r3, #94]	@ movhi
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 3583              		.loc 1 2124 25
 3584 0082 7B68     		ldr	r3, [r7, #4]
 3585 0084 0022     		movs	r2, #0
 3586 0086 9A65     		str	r2, [r3, #88]
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 3587              		.loc 1 2127 7
 3588 0088 7B68     		ldr	r3, [r7, #4]
 3589 008a 1B68     		ldr	r3, [r3]
 3590 008c 0F22     		movs	r2, #15
 3591 008e 1A62     		str	r2, [r3, #32]
2128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Discard the received data */
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3592              		.loc 1 2130 7
 3593 0090 7B68     		ldr	r3, [r7, #4]
 3594 0092 1B68     		ldr	r3, [r3]
 3595 0094 9A69     		ldr	r2, [r3, #24]
 3596 0096 7B68     		ldr	r3, [r7, #4]
 3597 0098 1B68     		ldr	r3, [r3]
 3598 009a 42F00802 		orr	r2, r2, #8
 3599 009e 9A61     		str	r2, [r3, #24]
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3600              		.loc 1 2133 22
 3601 00a0 7B68     		ldr	r3, [r7, #4]
 3602 00a2 2022     		movs	r2, #32
 3603 00a4 C3F88420 		str	r2, [r3, #132]
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccuwK2ly.s 			page 101


2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3604              		.loc 1 2141 7
 3605 00a8 7868     		ldr	r0, [r7, #4]
 3606 00aa FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3607 00ae 11E0     		b	.L183
 3608              	.L179:
2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3609              		.loc 1 2148 24
 3610 00b0 7B68     		ldr	r3, [r7, #4]
 3611 00b2 0022     		movs	r2, #0
 3612 00b4 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 3613              		.loc 1 2151 23
 3614 00b8 7B68     		ldr	r3, [r7, #4]
 3615 00ba 0022     		movs	r2, #0
 3616 00bc 9A65     		str	r2, [r3, #88]
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3617              		.loc 1 2154 5
 3618 00be 7B68     		ldr	r3, [r7, #4]
 3619 00c0 1B68     		ldr	r3, [r3]
 3620 00c2 0F22     		movs	r2, #15
 3621 00c4 1A62     		str	r2, [r3, #32]
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3622              		.loc 1 2157 20
 3623 00c6 7B68     		ldr	r3, [r7, #4]
 3624 00c8 2022     		movs	r2, #32
 3625 00ca C3F88420 		str	r2, [r3, #132]
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3626              		.loc 1 2165 5
 3627 00ce 7868     		ldr	r0, [r7, #4]
 3628 00d0 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3629              	.L183:
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccuwK2ly.s 			page 102


2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 3630              		.loc 1 2169 10
 3631 00d4 0023     		movs	r3, #0
2170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 3632              		.loc 1 2170 1
 3633 00d6 1846     		mov	r0, r3
 3634 00d8 0837     		adds	r7, r7, #8
 3635              	.LCFI114:
 3636              		.cfi_def_cfa_offset 8
 3637 00da BD46     		mov	sp, r7
 3638              	.LCFI115:
 3639              		.cfi_def_cfa_register 13
 3640              		@ sp needed
 3641 00dc 80BD     		pop	{r7, pc}
 3642              	.L186:
 3643 00de 00BF     		.align	2
 3644              	.L185:
 3645 00e0 00000000 		.word	UART_DMARxOnlyAbortCallback
 3646              		.cfi_endproc
 3647              	.LFE346:
 3649              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3650              		.align	1
 3651              		.global	HAL_UART_IRQHandler
 3652              		.syntax unified
 3653              		.thumb
 3654              		.thumb_func
 3655              		.fpu fpv4-sp-d16
 3657              	HAL_UART_IRQHandler:
 3658              	.LFB347:
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 3659              		.loc 1 2178 1
 3660              		.cfi_startproc
 3661              		@ args = 0, pretend = 0, frame = 32
 3662              		@ frame_needed = 1, uses_anonymous_args = 0
 3663 0000 80B5     		push	{r7, lr}
 3664              	.LCFI116:
 3665              		.cfi_def_cfa_offset 8
 3666              		.cfi_offset 7, -8
 3667              		.cfi_offset 14, -4
 3668 0002 88B0     		sub	sp, sp, #32
 3669              	.LCFI117:
 3670              		.cfi_def_cfa_offset 40
 3671 0004 00AF     		add	r7, sp, #0
 3672              	.LCFI118:
 3673              		.cfi_def_cfa_register 7
 3674 0006 7860     		str	r0, [r7, #4]
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3675              		.loc 1 2179 25
 3676 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 103


 3677 000a 1B68     		ldr	r3, [r3]
 3678              		.loc 1 2179 12
 3679 000c DB69     		ldr	r3, [r3, #28]
 3680 000e FB61     		str	r3, [r7, #28]
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3681              		.loc 1 2180 25
 3682 0010 7B68     		ldr	r3, [r7, #4]
 3683 0012 1B68     		ldr	r3, [r3]
 3684              		.loc 1 2180 12
 3685 0014 1B68     		ldr	r3, [r3]
 3686 0016 BB61     		str	r3, [r7, #24]
2181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3687              		.loc 1 2181 25
 3688 0018 7B68     		ldr	r3, [r7, #4]
 3689 001a 1B68     		ldr	r3, [r3]
 3690              		.loc 1 2181 12
 3691 001c 9B68     		ldr	r3, [r3, #8]
 3692 001e 7B61     		str	r3, [r7, #20]
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t errorflags;
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t errorcode;
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If no error occurs */
2187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 3693              		.loc 1 2187 14
 3694 0020 FB69     		ldr	r3, [r7, #28]
 3695 0022 03F00F03 		and	r3, r3, #15
 3696 0026 3B61     		str	r3, [r7, #16]
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (errorflags == 0U)
 3697              		.loc 1 2188 6
 3698 0028 3B69     		ldr	r3, [r7, #16]
 3699 002a 002B     		cmp	r3, #0
 3700 002c 18D1     		bne	.L188
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 3701              		.loc 1 2191 20
 3702 002e FB69     		ldr	r3, [r7, #28]
 3703 0030 03F02003 		and	r3, r3, #32
 3704              		.loc 1 2191 8
 3705 0034 002B     		cmp	r3, #0
 3706 0036 13D0     		beq	.L188
2192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 3707              		.loc 1 2192 22
 3708 0038 BB69     		ldr	r3, [r7, #24]
 3709 003a 03F02003 		and	r3, r3, #32
 3710              		.loc 1 2192 9
 3711 003e 002B     		cmp	r3, #0
 3712 0040 04D1     		bne	.L189
2193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 3713              		.loc 1 2193 25
 3714 0042 7B69     		ldr	r3, [r7, #20]
 3715 0044 03F08053 		and	r3, r3, #268435456
 3716              		.loc 1 2193 13
 3717 0048 002B     		cmp	r3, #0
 3718 004a 09D0     		beq	.L188
 3719              	.L189:
ARM GAS  /tmp/ccuwK2ly.s 			page 104


2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxISR != NULL)
 3720              		.loc 1 2195 16
 3721 004c 7B68     		ldr	r3, [r7, #4]
 3722 004e DB6E     		ldr	r3, [r3, #108]
 3723              		.loc 1 2195 10
 3724 0050 002B     		cmp	r3, #0
 3725 0052 00F02E81 		beq	.L215
2196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR(huart);
 3726              		.loc 1 2197 14
 3727 0056 7B68     		ldr	r3, [r7, #4]
 3728 0058 DB6E     		ldr	r3, [r3, #108]
 3729              		.loc 1 2197 9
 3730 005a 7868     		ldr	r0, [r7, #4]
 3731 005c 9847     		blx	r3
 3732              	.LVL2:
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
 3733              		.loc 1 2199 7
 3734 005e 28E1     		b	.L215
 3735              	.L188:
2200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If some errors occur */
2204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((errorflags != 0U)
 3736              		.loc 1 2204 6
 3737 0060 3B69     		ldr	r3, [r7, #16]
 3738 0062 002B     		cmp	r3, #0
 3739 0064 00F0D180 		beq	.L192
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 3740              		.loc 1 2205 21
 3741 0068 7A69     		ldr	r2, [r7, #20]
 3742 006a 964B     		ldr	r3, .L219
 3743 006c 1340     		ands	r3, r3, r2
 3744              		.loc 1 2205 7
 3745 006e 002B     		cmp	r3, #0
 3746 0070 05D1     		bne	.L193
2206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != 0U))))
 3747              		.loc 1 2206 24
 3748 0072 BB69     		ldr	r3, [r7, #24]
 3749 0074 03F49073 		and	r3, r3, #288
 3750              		.loc 1 2206 12
 3751 0078 002B     		cmp	r3, #0
 3752 007a 00F0C680 		beq	.L192
 3753              	.L193:
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 3754              		.loc 1 2209 20
 3755 007e FB69     		ldr	r3, [r7, #28]
 3756 0080 03F00103 		and	r3, r3, #1
 3757              		.loc 1 2209 8
 3758 0084 002B     		cmp	r3, #0
 3759 0086 10D0     		beq	.L194
 3760              		.loc 1 2209 55 discriminator 1
ARM GAS  /tmp/ccuwK2ly.s 			page 105


 3761 0088 BB69     		ldr	r3, [r7, #24]
 3762 008a 03F48073 		and	r3, r3, #256
 3763              		.loc 1 2209 43 discriminator 1
 3764 008e 002B     		cmp	r3, #0
 3765 0090 0BD0     		beq	.L194
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 3766              		.loc 1 2211 7
 3767 0092 7B68     		ldr	r3, [r7, #4]
 3768 0094 1B68     		ldr	r3, [r3]
 3769 0096 0122     		movs	r2, #1
 3770 0098 1A62     		str	r2, [r3, #32]
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3771              		.loc 1 2213 24
 3772 009a 7B68     		ldr	r3, [r7, #4]
 3773 009c D3F88830 		ldr	r3, [r3, #136]
 3774 00a0 43F00102 		orr	r2, r3, #1
 3775 00a4 7B68     		ldr	r3, [r7, #4]
 3776 00a6 C3F88820 		str	r2, [r3, #136]
 3777              	.L194:
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3778              		.loc 1 2217 20
 3779 00aa FB69     		ldr	r3, [r7, #28]
 3780 00ac 03F00203 		and	r3, r3, #2
 3781              		.loc 1 2217 8
 3782 00b0 002B     		cmp	r3, #0
 3783 00b2 10D0     		beq	.L195
 3784              		.loc 1 2217 55 discriminator 1
 3785 00b4 7B69     		ldr	r3, [r7, #20]
 3786 00b6 03F00103 		and	r3, r3, #1
 3787              		.loc 1 2217 43 discriminator 1
 3788 00ba 002B     		cmp	r3, #0
 3789 00bc 0BD0     		beq	.L195
2218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 3790              		.loc 1 2219 7
 3791 00be 7B68     		ldr	r3, [r7, #4]
 3792 00c0 1B68     		ldr	r3, [r3]
 3793 00c2 0222     		movs	r2, #2
 3794 00c4 1A62     		str	r2, [r3, #32]
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3795              		.loc 1 2221 24
 3796 00c6 7B68     		ldr	r3, [r7, #4]
 3797 00c8 D3F88830 		ldr	r3, [r3, #136]
 3798 00cc 43F00402 		orr	r2, r3, #4
 3799 00d0 7B68     		ldr	r3, [r7, #4]
 3800 00d2 C3F88820 		str	r2, [r3, #136]
 3801              	.L195:
2222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
ARM GAS  /tmp/ccuwK2ly.s 			page 106


 3802              		.loc 1 2225 20
 3803 00d6 FB69     		ldr	r3, [r7, #28]
 3804 00d8 03F00403 		and	r3, r3, #4
 3805              		.loc 1 2225 8
 3806 00dc 002B     		cmp	r3, #0
 3807 00de 10D0     		beq	.L196
 3808              		.loc 1 2225 55 discriminator 1
 3809 00e0 7B69     		ldr	r3, [r7, #20]
 3810 00e2 03F00103 		and	r3, r3, #1
 3811              		.loc 1 2225 43 discriminator 1
 3812 00e6 002B     		cmp	r3, #0
 3813 00e8 0BD0     		beq	.L196
2226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 3814              		.loc 1 2227 7
 3815 00ea 7B68     		ldr	r3, [r7, #4]
 3816 00ec 1B68     		ldr	r3, [r3]
 3817 00ee 0422     		movs	r2, #4
 3818 00f0 1A62     		str	r2, [r3, #32]
2228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3819              		.loc 1 2229 24
 3820 00f2 7B68     		ldr	r3, [r7, #4]
 3821 00f4 D3F88830 		ldr	r3, [r3, #136]
 3822 00f8 43F00202 		orr	r2, r3, #2
 3823 00fc 7B68     		ldr	r3, [r7, #4]
 3824 00fe C3F88820 		str	r2, [r3, #136]
 3825              	.L196:
2230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 3826              		.loc 1 2233 20
 3827 0102 FB69     		ldr	r3, [r7, #28]
 3828 0104 03F00803 		and	r3, r3, #8
 3829              		.loc 1 2233 8
 3830 0108 002B     		cmp	r3, #0
 3831 010a 15D0     		beq	.L197
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 3832              		.loc 1 2234 22
 3833 010c BB69     		ldr	r3, [r7, #24]
 3834 010e 03F02003 		and	r3, r3, #32
 3835              		.loc 1 2234 9
 3836 0112 002B     		cmp	r3, #0
 3837 0114 04D1     		bne	.L198
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 3838              		.loc 1 2235 22 discriminator 1
 3839 0116 7A69     		ldr	r2, [r7, #20]
 3840 0118 6A4B     		ldr	r3, .L219
 3841 011a 1340     		ands	r3, r3, r2
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 3842              		.loc 1 2234 57 discriminator 1
 3843 011c 002B     		cmp	r3, #0
 3844 011e 0BD0     		beq	.L197
 3845              	.L198:
2236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
ARM GAS  /tmp/ccuwK2ly.s 			page 107


 3846              		.loc 1 2237 7
 3847 0120 7B68     		ldr	r3, [r7, #4]
 3848 0122 1B68     		ldr	r3, [r3]
 3849 0124 0822     		movs	r2, #8
 3850 0126 1A62     		str	r2, [r3, #32]
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3851              		.loc 1 2239 24
 3852 0128 7B68     		ldr	r3, [r7, #4]
 3853 012a D3F88830 		ldr	r3, [r3, #136]
 3854 012e 43F00802 		orr	r2, r3, #8
 3855 0132 7B68     		ldr	r3, [r7, #4]
 3856 0134 C3F88820 		str	r2, [r3, #136]
 3857              	.L197:
2240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3858              		.loc 1 2243 14
 3859 0138 7B68     		ldr	r3, [r7, #4]
 3860 013a D3F88830 		ldr	r3, [r3, #136]
 3861              		.loc 1 2243 8
 3862 013e 002B     		cmp	r3, #0
 3863 0140 00F0B980 		beq	.L216
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 3864              		.loc 1 2246 22
 3865 0144 FB69     		ldr	r3, [r7, #28]
 3866 0146 03F02003 		and	r3, r3, #32
 3867              		.loc 1 2246 10
 3868 014a 002B     		cmp	r3, #0
 3869 014c 11D0     		beq	.L200
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 3870              		.loc 1 2247 24
 3871 014e BB69     		ldr	r3, [r7, #24]
 3872 0150 03F02003 		and	r3, r3, #32
 3873              		.loc 1 2247 11
 3874 0154 002B     		cmp	r3, #0
 3875 0156 04D1     		bne	.L201
2248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 3876              		.loc 1 2248 27
 3877 0158 7B69     		ldr	r3, [r7, #20]
 3878 015a 03F08053 		and	r3, r3, #268435456
 3879              		.loc 1 2248 15
 3880 015e 002B     		cmp	r3, #0
 3881 0160 07D0     		beq	.L200
 3882              	.L201:
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (huart->RxISR != NULL)
 3883              		.loc 1 2250 18
 3884 0162 7B68     		ldr	r3, [r7, #4]
 3885 0164 DB6E     		ldr	r3, [r3, #108]
 3886              		.loc 1 2250 12
 3887 0166 002B     		cmp	r3, #0
 3888 0168 03D0     		beq	.L200
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
ARM GAS  /tmp/ccuwK2ly.s 			page 108


2252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxISR(huart);
 3889              		.loc 1 2252 16
 3890 016a 7B68     		ldr	r3, [r7, #4]
 3891 016c DB6E     		ldr	r3, [r3, #108]
 3892              		.loc 1 2252 11
 3893 016e 7868     		ldr	r0, [r7, #4]
 3894 0170 9847     		blx	r3
 3895              	.LVL3:
 3896              	.L200:
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          consider error as blocking */
2258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 3897              		.loc 1 2258 17
 3898 0172 7B68     		ldr	r3, [r7, #4]
 3899 0174 D3F88830 		ldr	r3, [r3, #136]
 3900 0178 FB60     		str	r3, [r7, #12]
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3901              		.loc 1 2259 12
 3902 017a 7B68     		ldr	r3, [r7, #4]
 3903 017c 1B68     		ldr	r3, [r3]
 3904 017e 9B68     		ldr	r3, [r3, #8]
 3905 0180 03F04003 		and	r3, r3, #64
 3906              		.loc 1 2259 10
 3907 0184 402B     		cmp	r3, #64
 3908 0186 04D0     		beq	.L202
2260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 3909              		.loc 1 2260 23 discriminator 1
 3910 0188 FB68     		ldr	r3, [r7, #12]
 3911 018a 03F00803 		and	r3, r3, #8
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3912              		.loc 1 2259 66 discriminator 1
 3913 018e 002B     		cmp	r3, #0
 3914 0190 31D0     		beq	.L203
 3915              	.L202:
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3916              		.loc 1 2265 9
 3917 0192 7868     		ldr	r0, [r7, #4]
 3918 0194 FFF7FEFF 		bl	UART_EndRxTransfer
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3919              		.loc 1 2268 13
 3920 0198 7B68     		ldr	r3, [r7, #4]
 3921 019a 1B68     		ldr	r3, [r3]
 3922 019c 9B68     		ldr	r3, [r3, #8]
 3923 019e 03F04003 		and	r3, r3, #64
 3924              		.loc 1 2268 12
 3925 01a2 402B     		cmp	r3, #64
 3926 01a4 23D1     		bne	.L204
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
ARM GAS  /tmp/ccuwK2ly.s 			page 109


2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3927              		.loc 1 2270 11
 3928 01a6 7B68     		ldr	r3, [r7, #4]
 3929 01a8 1B68     		ldr	r3, [r3]
 3930 01aa 9A68     		ldr	r2, [r3, #8]
 3931 01ac 7B68     		ldr	r3, [r7, #4]
 3932 01ae 1B68     		ldr	r3, [r3]
 3933 01b0 22F04002 		bic	r2, r2, #64
 3934 01b4 9A60     		str	r2, [r3, #8]
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3935              		.loc 1 2273 20
 3936 01b6 7B68     		ldr	r3, [r7, #4]
 3937 01b8 9B6F     		ldr	r3, [r3, #120]
 3938              		.loc 1 2273 14
 3939 01ba 002B     		cmp	r3, #0
 3940 01bc 13D0     		beq	.L205
2274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3941              		.loc 1 2277 18
 3942 01be 7B68     		ldr	r3, [r7, #4]
 3943 01c0 9B6F     		ldr	r3, [r3, #120]
 3944              		.loc 1 2277 46
 3945 01c2 414A     		ldr	r2, .L219+4
 3946 01c4 9A63     		str	r2, [r3, #56]
2278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Abort DMA RX */
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3947              		.loc 1 2280 17
 3948 01c6 7B68     		ldr	r3, [r7, #4]
 3949 01c8 9B6F     		ldr	r3, [r3, #120]
 3950 01ca 1846     		mov	r0, r3
 3951 01cc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3952 01d0 0346     		mov	r3, r0
 3953              		.loc 1 2280 16
 3954 01d2 002B     		cmp	r3, #0
 3955 01d4 17D0     		beq	.L217
2281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             {
2282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3956              		.loc 1 2283 20
 3957 01d6 7B68     		ldr	r3, [r7, #4]
 3958 01d8 9B6F     		ldr	r3, [r3, #120]
 3959              		.loc 1 2283 28
 3960 01da 9B6B     		ldr	r3, [r3, #56]
 3961              		.loc 1 2283 53
 3962 01dc 7A68     		ldr	r2, [r7, #4]
 3963 01de 926F     		ldr	r2, [r2, #120]
 3964              		.loc 1 2283 15
 3965 01e0 1046     		mov	r0, r2
 3966 01e2 9847     		blx	r3
 3967              	.LVL4:
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 3968              		.loc 1 2268 12
ARM GAS  /tmp/ccuwK2ly.s 			page 110


 3969 01e4 0FE0     		b	.L217
 3970              	.L205:
2284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             }
2285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           else
2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Call user error callback */
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /*Call registered error callback*/
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3971              		.loc 1 2294 13
 3972 01e6 7868     		ldr	r0, [r7, #4]
 3973 01e8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 3974              		.loc 1 2268 12
 3975 01ec 0BE0     		b	.L217
 3976              	.L204:
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Call user error callback */
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered error callback*/
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3977              		.loc 1 2307 11
 3978 01ee 7868     		ldr	r0, [r7, #4]
 3979 01f0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 3980              		.loc 1 2268 12
 3981 01f4 07E0     		b	.L217
 3982              	.L203:
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
2312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Error is notified to user through user error callback */
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered error callback*/
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3983              		.loc 1 2320 9
 3984 01f6 7868     		ldr	r0, [r7, #4]
 3985 01f8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccuwK2ly.s 			page 111


2322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3986              		.loc 1 2322 26
 3987 01fc 7B68     		ldr	r3, [r7, #4]
 3988 01fe 0022     		movs	r2, #0
 3989 0200 C3F88820 		str	r2, [r3, #136]
2323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
 3990              		.loc 1 2325 5
 3991 0204 57E0     		b	.L216
 3992              	.L217:
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 3993              		.loc 1 2268 12
 3994 0206 00BF     		nop
 3995              		.loc 1 2325 5
 3996 0208 55E0     		b	.L216
 3997              	.L192:
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   } /* End if some error occurs */
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 3998              		.loc 1 2330 18
 3999 020a FB69     		ldr	r3, [r7, #28]
 4000 020c 03F48013 		and	r3, r3, #1048576
 4001              		.loc 1 2330 6
 4002 0210 002B     		cmp	r3, #0
 4003 0212 0DD0     		beq	.L209
 4004              		.loc 1 2330 54 discriminator 1
 4005 0214 7B69     		ldr	r3, [r7, #20]
 4006 0216 03F48003 		and	r3, r3, #4194304
 4007              		.loc 1 2330 42 discriminator 1
 4008 021a 002B     		cmp	r3, #0
 4009 021c 08D0     		beq	.L209
2331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 4010              		.loc 1 2332 5
 4011 021e 7B68     		ldr	r3, [r7, #4]
 4012 0220 1B68     		ldr	r3, [r3]
 4013 0222 4FF48012 		mov	r2, #1048576
 4014 0226 1A62     		str	r2, [r3, #32]
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4015              		.loc 1 2342 5
 4016 0228 7868     		ldr	r0, [r7, #4]
 4017 022a FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
 4018              		.loc 1 2344 5
ARM GAS  /tmp/ccuwK2ly.s 			page 112


 4019 022e 45E0     		b	.L187
 4020              	.L209:
2345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 4021              		.loc 1 2348 18
 4022 0230 FB69     		ldr	r3, [r7, #28]
 4023 0232 03F08003 		and	r3, r3, #128
 4024              		.loc 1 2348 6
 4025 0236 002B     		cmp	r3, #0
 4026 0238 12D0     		beq	.L210
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 4027              		.loc 1 2349 20
 4028 023a BB69     		ldr	r3, [r7, #24]
 4029 023c 03F08003 		and	r3, r3, #128
 4030              		.loc 1 2349 7
 4031 0240 002B     		cmp	r3, #0
 4032 0242 04D1     		bne	.L211
2350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 4033              		.loc 1 2350 23
 4034 0244 7B69     		ldr	r3, [r7, #20]
 4035 0246 03F40003 		and	r3, r3, #8388608
 4036              		.loc 1 2350 11
 4037 024a 002B     		cmp	r3, #0
 4038 024c 08D0     		beq	.L210
 4039              	.L211:
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxISR != NULL)
 4040              		.loc 1 2352 14
 4041 024e 7B68     		ldr	r3, [r7, #4]
 4042 0250 1B6F     		ldr	r3, [r3, #112]
 4043              		.loc 1 2352 8
 4044 0252 002B     		cmp	r3, #0
 4045 0254 31D0     		beq	.L218
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxISR(huart);
 4046              		.loc 1 2354 12
 4047 0256 7B68     		ldr	r3, [r7, #4]
 4048 0258 1B6F     		ldr	r3, [r3, #112]
 4049              		.loc 1 2354 7
 4050 025a 7868     		ldr	r0, [r7, #4]
 4051 025c 9847     		blx	r3
 4052              	.LVL5:
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
 4053              		.loc 1 2356 5
 4054 025e 2CE0     		b	.L218
 4055              	.L210:
2357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 4056              		.loc 1 2360 18
 4057 0260 FB69     		ldr	r3, [r7, #28]
 4058 0262 03F04003 		and	r3, r3, #64
 4059              		.loc 1 2360 6
ARM GAS  /tmp/ccuwK2ly.s 			page 113


 4060 0266 002B     		cmp	r3, #0
 4061 0268 08D0     		beq	.L213
 4062              		.loc 1 2360 53 discriminator 1
 4063 026a BB69     		ldr	r3, [r7, #24]
 4064 026c 03F04003 		and	r3, r3, #64
 4065              		.loc 1 2360 41 discriminator 1
 4066 0270 002B     		cmp	r3, #0
 4067 0272 03D0     		beq	.L213
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 4068              		.loc 1 2362 5
 4069 0274 7868     		ldr	r0, [r7, #4]
 4070 0276 FFF7FEFF 		bl	UART_EndTransmit_IT
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
 4071              		.loc 1 2363 5
 4072 027a 1FE0     		b	.L187
 4073              	.L213:
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 4074              		.loc 1 2367 18
 4075 027c FB69     		ldr	r3, [r7, #28]
 4076 027e 03F40003 		and	r3, r3, #8388608
 4077              		.loc 1 2367 6
 4078 0282 002B     		cmp	r3, #0
 4079 0284 08D0     		beq	.L214
 4080              		.loc 1 2367 55 discriminator 1
 4081 0286 BB69     		ldr	r3, [r7, #24]
 4082 0288 03F08043 		and	r3, r3, #1073741824
 4083              		.loc 1 2367 43 discriminator 1
 4084 028c 002B     		cmp	r3, #0
 4085 028e 03D0     		beq	.L214
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
 4086              		.loc 1 2374 5
 4087 0290 7868     		ldr	r0, [r7, #4]
 4088 0292 FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
 4089              		.loc 1 2376 5
 4090 0296 11E0     		b	.L187
 4091              	.L214:
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 4092              		.loc 1 2380 18
 4093 0298 FB69     		ldr	r3, [r7, #28]
 4094 029a 03F08073 		and	r3, r3, #16777216
 4095              		.loc 1 2380 6
 4096 029e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccuwK2ly.s 			page 114


 4097 02a0 0CD0     		beq	.L187
 4098              		.loc 1 2380 75 discriminator 1
 4099 02a2 BB69     		ldr	r3, [r7, #24]
 4100              		.loc 1 2380 43 discriminator 1
 4101 02a4 002B     		cmp	r3, #0
 4102 02a6 09DA     		bge	.L187
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
 4103              		.loc 1 2387 5
 4104 02a8 7868     		ldr	r0, [r7, #4]
 4105 02aa FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
 4106              		.loc 1 2389 5
 4107 02ae 00BF     		nop
 4108 02b0 04E0     		b	.L187
 4109              	.L215:
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 4110              		.loc 1 2199 7
 4111 02b2 00BF     		nop
 4112 02b4 02E0     		b	.L187
 4113              	.L216:
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4114              		.loc 1 2325 5
 4115 02b6 00BF     		nop
 4116 02b8 00E0     		b	.L187
 4117              	.L218:
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4118              		.loc 1 2356 5
 4119 02ba 00BF     		nop
 4120              	.L187:
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4121              		.loc 1 2391 1
 4122 02bc 2037     		adds	r7, r7, #32
 4123              	.LCFI119:
 4124              		.cfi_def_cfa_offset 8
 4125 02be BD46     		mov	sp, r7
 4126              	.LCFI120:
 4127              		.cfi_def_cfa_register 13
 4128              		@ sp needed
 4129 02c0 80BD     		pop	{r7, pc}
 4130              	.L220:
 4131 02c2 00BF     		.align	2
 4132              	.L219:
 4133 02c4 01000010 		.word	268435457
 4134 02c8 00000000 		.word	UART_DMAAbortOnError
 4135              		.cfi_endproc
 4136              	.LFE347:
 4138              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 4139              		.align	1
 4140              		.weak	HAL_UART_TxCpltCallback
ARM GAS  /tmp/ccuwK2ly.s 			page 115


 4141              		.syntax unified
 4142              		.thumb
 4143              		.thumb_func
 4144              		.fpu fpv4-sp-d16
 4146              	HAL_UART_TxCpltCallback:
 4147              	.LFB348:
2392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4148              		.loc 1 2399 1
 4149              		.cfi_startproc
 4150              		@ args = 0, pretend = 0, frame = 8
 4151              		@ frame_needed = 1, uses_anonymous_args = 0
 4152              		@ link register save eliminated.
 4153 0000 80B4     		push	{r7}
 4154              	.LCFI121:
 4155              		.cfi_def_cfa_offset 4
 4156              		.cfi_offset 7, -4
 4157 0002 83B0     		sub	sp, sp, #12
 4158              	.LCFI122:
 4159              		.cfi_def_cfa_offset 16
 4160 0004 00AF     		add	r7, sp, #0
 4161              	.LCFI123:
 4162              		.cfi_def_cfa_register 7
 4163 0006 7860     		str	r0, [r7, #4]
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4164              		.loc 1 2406 1
 4165 0008 00BF     		nop
 4166 000a 0C37     		adds	r7, r7, #12
 4167              	.LCFI124:
 4168              		.cfi_def_cfa_offset 4
 4169 000c BD46     		mov	sp, r7
 4170              	.LCFI125:
 4171              		.cfi_def_cfa_register 13
 4172              		@ sp needed
 4173 000e 5DF8047B 		ldr	r7, [sp], #4
 4174              	.LCFI126:
 4175              		.cfi_restore 7
 4176              		.cfi_def_cfa_offset 0
 4177 0012 7047     		bx	lr
 4178              		.cfi_endproc
 4179              	.LFE348:
 4181              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 4182              		.align	1
 4183              		.weak	HAL_UART_TxHalfCpltCallback
 4184              		.syntax unified
ARM GAS  /tmp/ccuwK2ly.s 			page 116


 4185              		.thumb
 4186              		.thumb_func
 4187              		.fpu fpv4-sp-d16
 4189              	HAL_UART_TxHalfCpltCallback:
 4190              	.LFB349:
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4191              		.loc 1 2414 1
 4192              		.cfi_startproc
 4193              		@ args = 0, pretend = 0, frame = 8
 4194              		@ frame_needed = 1, uses_anonymous_args = 0
 4195              		@ link register save eliminated.
 4196 0000 80B4     		push	{r7}
 4197              	.LCFI127:
 4198              		.cfi_def_cfa_offset 4
 4199              		.cfi_offset 7, -4
 4200 0002 83B0     		sub	sp, sp, #12
 4201              	.LCFI128:
 4202              		.cfi_def_cfa_offset 16
 4203 0004 00AF     		add	r7, sp, #0
 4204              	.LCFI129:
 4205              		.cfi_def_cfa_register 7
 4206 0006 7860     		str	r0, [r7, #4]
2415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4207              		.loc 1 2421 1
 4208 0008 00BF     		nop
 4209 000a 0C37     		adds	r7, r7, #12
 4210              	.LCFI130:
 4211              		.cfi_def_cfa_offset 4
 4212 000c BD46     		mov	sp, r7
 4213              	.LCFI131:
 4214              		.cfi_def_cfa_register 13
 4215              		@ sp needed
 4216 000e 5DF8047B 		ldr	r7, [sp], #4
 4217              	.LCFI132:
 4218              		.cfi_restore 7
 4219              		.cfi_def_cfa_offset 0
 4220 0012 7047     		bx	lr
 4221              		.cfi_endproc
 4222              	.LFE349:
 4224              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 4225              		.align	1
 4226              		.weak	HAL_UART_RxCpltCallback
 4227              		.syntax unified
 4228              		.thumb
ARM GAS  /tmp/ccuwK2ly.s 			page 117


 4229              		.thumb_func
 4230              		.fpu fpv4-sp-d16
 4232              	HAL_UART_RxCpltCallback:
 4233              	.LFB350:
2422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4234              		.loc 1 2429 1
 4235              		.cfi_startproc
 4236              		@ args = 0, pretend = 0, frame = 8
 4237              		@ frame_needed = 1, uses_anonymous_args = 0
 4238              		@ link register save eliminated.
 4239 0000 80B4     		push	{r7}
 4240              	.LCFI133:
 4241              		.cfi_def_cfa_offset 4
 4242              		.cfi_offset 7, -4
 4243 0002 83B0     		sub	sp, sp, #12
 4244              	.LCFI134:
 4245              		.cfi_def_cfa_offset 16
 4246 0004 00AF     		add	r7, sp, #0
 4247              	.LCFI135:
 4248              		.cfi_def_cfa_register 7
 4249 0006 7860     		str	r0, [r7, #4]
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4250              		.loc 1 2436 1
 4251 0008 00BF     		nop
 4252 000a 0C37     		adds	r7, r7, #12
 4253              	.LCFI136:
 4254              		.cfi_def_cfa_offset 4
 4255 000c BD46     		mov	sp, r7
 4256              	.LCFI137:
 4257              		.cfi_def_cfa_register 13
 4258              		@ sp needed
 4259 000e 5DF8047B 		ldr	r7, [sp], #4
 4260              	.LCFI138:
 4261              		.cfi_restore 7
 4262              		.cfi_def_cfa_offset 0
 4263 0012 7047     		bx	lr
 4264              		.cfi_endproc
 4265              	.LFE350:
 4267              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 4268              		.align	1
 4269              		.weak	HAL_UART_RxHalfCpltCallback
 4270              		.syntax unified
 4271              		.thumb
 4272              		.thumb_func
ARM GAS  /tmp/ccuwK2ly.s 			page 118


 4273              		.fpu fpv4-sp-d16
 4275              	HAL_UART_RxHalfCpltCallback:
 4276              	.LFB351:
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4277              		.loc 1 2444 1
 4278              		.cfi_startproc
 4279              		@ args = 0, pretend = 0, frame = 8
 4280              		@ frame_needed = 1, uses_anonymous_args = 0
 4281              		@ link register save eliminated.
 4282 0000 80B4     		push	{r7}
 4283              	.LCFI139:
 4284              		.cfi_def_cfa_offset 4
 4285              		.cfi_offset 7, -4
 4286 0002 83B0     		sub	sp, sp, #12
 4287              	.LCFI140:
 4288              		.cfi_def_cfa_offset 16
 4289 0004 00AF     		add	r7, sp, #0
 4290              	.LCFI141:
 4291              		.cfi_def_cfa_register 7
 4292 0006 7860     		str	r0, [r7, #4]
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4293              		.loc 1 2451 1
 4294 0008 00BF     		nop
 4295 000a 0C37     		adds	r7, r7, #12
 4296              	.LCFI142:
 4297              		.cfi_def_cfa_offset 4
 4298 000c BD46     		mov	sp, r7
 4299              	.LCFI143:
 4300              		.cfi_def_cfa_register 13
 4301              		@ sp needed
 4302 000e 5DF8047B 		ldr	r7, [sp], #4
 4303              	.LCFI144:
 4304              		.cfi_restore 7
 4305              		.cfi_def_cfa_offset 0
 4306 0012 7047     		bx	lr
 4307              		.cfi_endproc
 4308              	.LFE351:
 4310              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 4311              		.align	1
 4312              		.weak	HAL_UART_ErrorCallback
 4313              		.syntax unified
 4314              		.thumb
 4315              		.thumb_func
 4316              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccuwK2ly.s 			page 119


 4318              	HAL_UART_ErrorCallback:
 4319              	.LFB352:
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART error callback.
2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4320              		.loc 1 2459 1
 4321              		.cfi_startproc
 4322              		@ args = 0, pretend = 0, frame = 8
 4323              		@ frame_needed = 1, uses_anonymous_args = 0
 4324              		@ link register save eliminated.
 4325 0000 80B4     		push	{r7}
 4326              	.LCFI145:
 4327              		.cfi_def_cfa_offset 4
 4328              		.cfi_offset 7, -4
 4329 0002 83B0     		sub	sp, sp, #12
 4330              	.LCFI146:
 4331              		.cfi_def_cfa_offset 16
 4332 0004 00AF     		add	r7, sp, #0
 4333              	.LCFI147:
 4334              		.cfi_def_cfa_register 7
 4335 0006 7860     		str	r0, [r7, #4]
2460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4336              		.loc 1 2466 1
 4337 0008 00BF     		nop
 4338 000a 0C37     		adds	r7, r7, #12
 4339              	.LCFI148:
 4340              		.cfi_def_cfa_offset 4
 4341 000c BD46     		mov	sp, r7
 4342              	.LCFI149:
 4343              		.cfi_def_cfa_register 13
 4344              		@ sp needed
 4345 000e 5DF8047B 		ldr	r7, [sp], #4
 4346              	.LCFI150:
 4347              		.cfi_restore 7
 4348              		.cfi_def_cfa_offset 0
 4349 0012 7047     		bx	lr
 4350              		.cfi_endproc
 4351              	.LFE352:
 4353              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4354              		.align	1
 4355              		.weak	HAL_UART_AbortCpltCallback
 4356              		.syntax unified
 4357              		.thumb
 4358              		.thumb_func
 4359              		.fpu fpv4-sp-d16
 4361              	HAL_UART_AbortCpltCallback:
ARM GAS  /tmp/ccuwK2ly.s 			page 120


 4362              	.LFB353:
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4363              		.loc 1 2474 1
 4364              		.cfi_startproc
 4365              		@ args = 0, pretend = 0, frame = 8
 4366              		@ frame_needed = 1, uses_anonymous_args = 0
 4367              		@ link register save eliminated.
 4368 0000 80B4     		push	{r7}
 4369              	.LCFI151:
 4370              		.cfi_def_cfa_offset 4
 4371              		.cfi_offset 7, -4
 4372 0002 83B0     		sub	sp, sp, #12
 4373              	.LCFI152:
 4374              		.cfi_def_cfa_offset 16
 4375 0004 00AF     		add	r7, sp, #0
 4376              	.LCFI153:
 4377              		.cfi_def_cfa_register 7
 4378 0006 7860     		str	r0, [r7, #4]
2475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4379              		.loc 1 2481 1
 4380 0008 00BF     		nop
 4381 000a 0C37     		adds	r7, r7, #12
 4382              	.LCFI154:
 4383              		.cfi_def_cfa_offset 4
 4384 000c BD46     		mov	sp, r7
 4385              	.LCFI155:
 4386              		.cfi_def_cfa_register 13
 4387              		@ sp needed
 4388 000e 5DF8047B 		ldr	r7, [sp], #4
 4389              	.LCFI156:
 4390              		.cfi_restore 7
 4391              		.cfi_def_cfa_offset 0
 4392 0012 7047     		bx	lr
 4393              		.cfi_endproc
 4394              	.LFE353:
 4396              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4397              		.align	1
 4398              		.weak	HAL_UART_AbortTransmitCpltCallback
 4399              		.syntax unified
 4400              		.thumb
 4401              		.thumb_func
 4402              		.fpu fpv4-sp-d16
 4404              	HAL_UART_AbortTransmitCpltCallback:
 4405              	.LFB354:
ARM GAS  /tmp/ccuwK2ly.s 			page 121


2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4406              		.loc 1 2489 1
 4407              		.cfi_startproc
 4408              		@ args = 0, pretend = 0, frame = 8
 4409              		@ frame_needed = 1, uses_anonymous_args = 0
 4410              		@ link register save eliminated.
 4411 0000 80B4     		push	{r7}
 4412              	.LCFI157:
 4413              		.cfi_def_cfa_offset 4
 4414              		.cfi_offset 7, -4
 4415 0002 83B0     		sub	sp, sp, #12
 4416              	.LCFI158:
 4417              		.cfi_def_cfa_offset 16
 4418 0004 00AF     		add	r7, sp, #0
 4419              	.LCFI159:
 4420              		.cfi_def_cfa_register 7
 4421 0006 7860     		str	r0, [r7, #4]
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4422              		.loc 1 2496 1
 4423 0008 00BF     		nop
 4424 000a 0C37     		adds	r7, r7, #12
 4425              	.LCFI160:
 4426              		.cfi_def_cfa_offset 4
 4427 000c BD46     		mov	sp, r7
 4428              	.LCFI161:
 4429              		.cfi_def_cfa_register 13
 4430              		@ sp needed
 4431 000e 5DF8047B 		ldr	r7, [sp], #4
 4432              	.LCFI162:
 4433              		.cfi_restore 7
 4434              		.cfi_def_cfa_offset 0
 4435 0012 7047     		bx	lr
 4436              		.cfi_endproc
 4437              	.LFE354:
 4439              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4440              		.align	1
 4441              		.weak	HAL_UART_AbortReceiveCpltCallback
 4442              		.syntax unified
 4443              		.thumb
 4444              		.thumb_func
 4445              		.fpu fpv4-sp-d16
 4447              	HAL_UART_AbortReceiveCpltCallback:
 4448              	.LFB355:
2497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 122


2498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4449              		.loc 1 2504 1
 4450              		.cfi_startproc
 4451              		@ args = 0, pretend = 0, frame = 8
 4452              		@ frame_needed = 1, uses_anonymous_args = 0
 4453              		@ link register save eliminated.
 4454 0000 80B4     		push	{r7}
 4455              	.LCFI163:
 4456              		.cfi_def_cfa_offset 4
 4457              		.cfi_offset 7, -4
 4458 0002 83B0     		sub	sp, sp, #12
 4459              	.LCFI164:
 4460              		.cfi_def_cfa_offset 16
 4461 0004 00AF     		add	r7, sp, #0
 4462              	.LCFI165:
 4463              		.cfi_def_cfa_register 7
 4464 0006 7860     		str	r0, [r7, #4]
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4465              		.loc 1 2511 1
 4466 0008 00BF     		nop
 4467 000a 0C37     		adds	r7, r7, #12
 4468              	.LCFI166:
 4469              		.cfi_def_cfa_offset 4
 4470 000c BD46     		mov	sp, r7
 4471              	.LCFI167:
 4472              		.cfi_def_cfa_register 13
 4473              		@ sp needed
 4474 000e 5DF8047B 		ldr	r7, [sp], #4
 4475              	.LCFI168:
 4476              		.cfi_restore 7
 4477              		.cfi_def_cfa_offset 0
 4478 0012 7047     		bx	lr
 4479              		.cfi_endproc
 4480              	.LFE355:
 4482              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4483              		.align	1
 4484              		.global	HAL_MultiProcessor_EnableMuteMode
 4485              		.syntax unified
 4486              		.thumb
 4487              		.thumb_func
 4488              		.fpu fpv4-sp-d16
 4490              	HAL_MultiProcessor_EnableMuteMode:
 4491              	.LFB356:
2512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccuwK2ly.s 			page 123


2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief   UART control functions
2519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
2520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
2524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
2536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4492              		.loc 1 2546 1
 4493              		.cfi_startproc
 4494              		@ args = 0, pretend = 0, frame = 8
 4495              		@ frame_needed = 1, uses_anonymous_args = 0
 4496 0000 80B5     		push	{r7, lr}
 4497              	.LCFI169:
 4498              		.cfi_def_cfa_offset 8
 4499              		.cfi_offset 7, -8
 4500              		.cfi_offset 14, -4
 4501 0002 82B0     		sub	sp, sp, #8
 4502              	.LCFI170:
 4503              		.cfi_def_cfa_offset 16
 4504 0004 00AF     		add	r7, sp, #0
 4505              	.LCFI171:
 4506              		.cfi_def_cfa_register 7
 4507 0006 7860     		str	r0, [r7, #4]
2547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4508              		.loc 1 2547 3
 4509 0008 7B68     		ldr	r3, [r7, #4]
 4510 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 4511 000e 012B     		cmp	r3, #1
 4512 0010 01D1     		bne	.L230
 4513              		.loc 1 2547 3 is_stmt 0 discriminator 1
 4514 0012 0223     		movs	r3, #2
ARM GAS  /tmp/ccuwK2ly.s 			page 124


 4515 0014 17E0     		b	.L231
 4516              	.L230:
 4517              		.loc 1 2547 3 discriminator 2
 4518 0016 7B68     		ldr	r3, [r7, #4]
 4519 0018 0122     		movs	r2, #1
 4520 001a 83F87C20 		strb	r2, [r3, #124]
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4521              		.loc 1 2549 17 is_stmt 1 discriminator 2
 4522 001e 7B68     		ldr	r3, [r7, #4]
 4523 0020 2422     		movs	r2, #36
 4524 0022 C3F88020 		str	r2, [r3, #128]
2550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 4525              		.loc 1 2552 3 discriminator 2
 4526 0026 7B68     		ldr	r3, [r7, #4]
 4527 0028 1B68     		ldr	r3, [r3]
 4528 002a 1A68     		ldr	r2, [r3]
 4529 002c 7B68     		ldr	r3, [r7, #4]
 4530 002e 1B68     		ldr	r3, [r3]
 4531 0030 42F40052 		orr	r2, r2, #8192
 4532 0034 1A60     		str	r2, [r3]
2553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4533              		.loc 1 2554 17 discriminator 2
 4534 0036 7B68     		ldr	r3, [r7, #4]
 4535 0038 2022     		movs	r2, #32
 4536 003a C3F88020 		str	r2, [r3, #128]
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4537              		.loc 1 2556 11 discriminator 2
 4538 003e 7868     		ldr	r0, [r7, #4]
 4539 0040 FFF7FEFF 		bl	UART_CheckIdleState
 4540 0044 0346     		mov	r3, r0
 4541              	.L231:
2557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4542              		.loc 1 2557 1
 4543 0046 1846     		mov	r0, r3
 4544 0048 0837     		adds	r7, r7, #8
 4545              	.LCFI172:
 4546              		.cfi_def_cfa_offset 8
 4547 004a BD46     		mov	sp, r7
 4548              	.LCFI173:
 4549              		.cfi_def_cfa_register 13
 4550              		@ sp needed
 4551 004c 80BD     		pop	{r7, pc}
 4552              		.cfi_endproc
 4553              	.LFE356:
 4555              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4556              		.align	1
 4557              		.global	HAL_MultiProcessor_DisableMuteMode
 4558              		.syntax unified
 4559              		.thumb
 4560              		.thumb_func
 4561              		.fpu fpv4-sp-d16
 4563              	HAL_MultiProcessor_DisableMuteMode:
ARM GAS  /tmp/ccuwK2ly.s 			page 125


 4564              	.LFB357:
2558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4565              		.loc 1 2566 1
 4566              		.cfi_startproc
 4567              		@ args = 0, pretend = 0, frame = 8
 4568              		@ frame_needed = 1, uses_anonymous_args = 0
 4569 0000 80B5     		push	{r7, lr}
 4570              	.LCFI174:
 4571              		.cfi_def_cfa_offset 8
 4572              		.cfi_offset 7, -8
 4573              		.cfi_offset 14, -4
 4574 0002 82B0     		sub	sp, sp, #8
 4575              	.LCFI175:
 4576              		.cfi_def_cfa_offset 16
 4577 0004 00AF     		add	r7, sp, #0
 4578              	.LCFI176:
 4579              		.cfi_def_cfa_register 7
 4580 0006 7860     		str	r0, [r7, #4]
2567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4581              		.loc 1 2567 3
 4582 0008 7B68     		ldr	r3, [r7, #4]
 4583 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 4584 000e 012B     		cmp	r3, #1
 4585 0010 01D1     		bne	.L233
 4586              		.loc 1 2567 3 is_stmt 0 discriminator 1
 4587 0012 0223     		movs	r3, #2
 4588 0014 17E0     		b	.L234
 4589              	.L233:
 4590              		.loc 1 2567 3 discriminator 2
 4591 0016 7B68     		ldr	r3, [r7, #4]
 4592 0018 0122     		movs	r2, #1
 4593 001a 83F87C20 		strb	r2, [r3, #124]
2568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4594              		.loc 1 2569 17 is_stmt 1 discriminator 2
 4595 001e 7B68     		ldr	r3, [r7, #4]
 4596 0020 2422     		movs	r2, #36
 4597 0022 C3F88020 		str	r2, [r3, #128]
2570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 4598              		.loc 1 2572 3 discriminator 2
 4599 0026 7B68     		ldr	r3, [r7, #4]
 4600 0028 1B68     		ldr	r3, [r3]
 4601 002a 1A68     		ldr	r2, [r3]
 4602 002c 7B68     		ldr	r3, [r7, #4]
 4603 002e 1B68     		ldr	r3, [r3]
 4604 0030 22F40052 		bic	r2, r2, #8192
 4605 0034 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccuwK2ly.s 			page 126


2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4606              		.loc 1 2574 17 discriminator 2
 4607 0036 7B68     		ldr	r3, [r7, #4]
 4608 0038 2022     		movs	r2, #32
 4609 003a C3F88020 		str	r2, [r3, #128]
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4610              		.loc 1 2576 11 discriminator 2
 4611 003e 7868     		ldr	r0, [r7, #4]
 4612 0040 FFF7FEFF 		bl	UART_CheckIdleState
 4613 0044 0346     		mov	r3, r0
 4614              	.L234:
2577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4615              		.loc 1 2577 1
 4616 0046 1846     		mov	r0, r3
 4617 0048 0837     		adds	r7, r7, #8
 4618              	.LCFI177:
 4619              		.cfi_def_cfa_offset 8
 4620 004a BD46     		mov	sp, r7
 4621              	.LCFI178:
 4622              		.cfi_def_cfa_register 13
 4623              		@ sp needed
 4624 004c 80BD     		pop	{r7, pc}
 4625              		.cfi_endproc
 4626              	.LFE357:
 4628              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4629              		.align	1
 4630              		.global	HAL_MultiProcessor_EnterMuteMode
 4631              		.syntax unified
 4632              		.thumb
 4633              		.thumb_func
 4634              		.fpu fpv4-sp-d16
 4636              	HAL_MultiProcessor_EnterMuteMode:
 4637              	.LFB358:
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4638              		.loc 1 2586 1
 4639              		.cfi_startproc
 4640              		@ args = 0, pretend = 0, frame = 8
 4641              		@ frame_needed = 1, uses_anonymous_args = 0
 4642              		@ link register save eliminated.
 4643 0000 80B4     		push	{r7}
 4644              	.LCFI179:
 4645              		.cfi_def_cfa_offset 4
 4646              		.cfi_offset 7, -4
 4647 0002 83B0     		sub	sp, sp, #12
 4648              	.LCFI180:
 4649              		.cfi_def_cfa_offset 16
 4650 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccuwK2ly.s 			page 127


 4651              	.LCFI181:
 4652              		.cfi_def_cfa_register 7
 4653 0006 7860     		str	r0, [r7, #4]
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4654              		.loc 1 2587 3
 4655 0008 7B68     		ldr	r3, [r7, #4]
 4656 000a 1B68     		ldr	r3, [r3]
 4657 000c 9A69     		ldr	r2, [r3, #24]
 4658 000e 7B68     		ldr	r3, [r7, #4]
 4659 0010 1B68     		ldr	r3, [r3]
 4660 0012 42F00402 		orr	r2, r2, #4
 4661 0016 9A61     		str	r2, [r3, #24]
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4662              		.loc 1 2588 1
 4663 0018 00BF     		nop
 4664 001a 0C37     		adds	r7, r7, #12
 4665              	.LCFI182:
 4666              		.cfi_def_cfa_offset 4
 4667 001c BD46     		mov	sp, r7
 4668              	.LCFI183:
 4669              		.cfi_def_cfa_register 13
 4670              		@ sp needed
 4671 001e 5DF8047B 		ldr	r7, [sp], #4
 4672              	.LCFI184:
 4673              		.cfi_restore 7
 4674              		.cfi_def_cfa_offset 0
 4675 0022 7047     		bx	lr
 4676              		.cfi_endproc
 4677              	.LFE358:
 4679              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4680              		.align	1
 4681              		.global	HAL_HalfDuplex_EnableTransmitter
 4682              		.syntax unified
 4683              		.thumb
 4684              		.thumb_func
 4685              		.fpu fpv4-sp-d16
 4687              	HAL_HalfDuplex_EnableTransmitter:
 4688              	.LFB359:
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4689              		.loc 1 2596 1
 4690              		.cfi_startproc
 4691              		@ args = 0, pretend = 0, frame = 8
 4692              		@ frame_needed = 1, uses_anonymous_args = 0
 4693              		@ link register save eliminated.
 4694 0000 80B4     		push	{r7}
 4695              	.LCFI185:
 4696              		.cfi_def_cfa_offset 4
 4697              		.cfi_offset 7, -4
 4698 0002 83B0     		sub	sp, sp, #12
 4699              	.LCFI186:
ARM GAS  /tmp/ccuwK2ly.s 			page 128


 4700              		.cfi_def_cfa_offset 16
 4701 0004 00AF     		add	r7, sp, #0
 4702              	.LCFI187:
 4703              		.cfi_def_cfa_register 7
 4704 0006 7860     		str	r0, [r7, #4]
2597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4705              		.loc 1 2597 3
 4706 0008 7B68     		ldr	r3, [r7, #4]
 4707 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 4708 000e 012B     		cmp	r3, #1
 4709 0010 01D1     		bne	.L237
 4710              		.loc 1 2597 3 is_stmt 0 discriminator 1
 4711 0012 0223     		movs	r3, #2
 4712 0014 20E0     		b	.L238
 4713              	.L237:
 4714              		.loc 1 2597 3 discriminator 2
 4715 0016 7B68     		ldr	r3, [r7, #4]
 4716 0018 0122     		movs	r2, #1
 4717 001a 83F87C20 		strb	r2, [r3, #124]
2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4718              		.loc 1 2598 17 is_stmt 1 discriminator 2
 4719 001e 7B68     		ldr	r3, [r7, #4]
 4720 0020 2422     		movs	r2, #36
 4721 0022 C3F88020 		str	r2, [r3, #128]
2599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear TE and RE bits */
2601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4722              		.loc 1 2601 3 discriminator 2
 4723 0026 7B68     		ldr	r3, [r7, #4]
 4724 0028 1B68     		ldr	r3, [r3]
 4725 002a 1A68     		ldr	r2, [r3]
 4726 002c 7B68     		ldr	r3, [r7, #4]
 4727 002e 1B68     		ldr	r3, [r3]
 4728 0030 22F00C02 		bic	r2, r2, #12
 4729 0034 1A60     		str	r2, [r3]
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 4730              		.loc 1 2604 3 discriminator 2
 4731 0036 7B68     		ldr	r3, [r7, #4]
 4732 0038 1B68     		ldr	r3, [r3]
 4733 003a 1A68     		ldr	r2, [r3]
 4734 003c 7B68     		ldr	r3, [r7, #4]
 4735 003e 1B68     		ldr	r3, [r3]
 4736 0040 42F00802 		orr	r2, r2, #8
 4737 0044 1A60     		str	r2, [r3]
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4738              		.loc 1 2606 17 discriminator 2
 4739 0046 7B68     		ldr	r3, [r7, #4]
 4740 0048 2022     		movs	r2, #32
 4741 004a C3F88020 		str	r2, [r3, #128]
2607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4742              		.loc 1 2608 3 discriminator 2
 4743 004e 7B68     		ldr	r3, [r7, #4]
 4744 0050 0022     		movs	r2, #0
ARM GAS  /tmp/ccuwK2ly.s 			page 129


 4745 0052 83F87C20 		strb	r2, [r3, #124]
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 4746              		.loc 1 2610 10 discriminator 2
 4747 0056 0023     		movs	r3, #0
 4748              	.L238:
2611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4749              		.loc 1 2611 1
 4750 0058 1846     		mov	r0, r3
 4751 005a 0C37     		adds	r7, r7, #12
 4752              	.LCFI188:
 4753              		.cfi_def_cfa_offset 4
 4754 005c BD46     		mov	sp, r7
 4755              	.LCFI189:
 4756              		.cfi_def_cfa_register 13
 4757              		@ sp needed
 4758 005e 5DF8047B 		ldr	r7, [sp], #4
 4759              	.LCFI190:
 4760              		.cfi_restore 7
 4761              		.cfi_def_cfa_offset 0
 4762 0062 7047     		bx	lr
 4763              		.cfi_endproc
 4764              	.LFE359:
 4766              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4767              		.align	1
 4768              		.global	HAL_HalfDuplex_EnableReceiver
 4769              		.syntax unified
 4770              		.thumb
 4771              		.thumb_func
 4772              		.fpu fpv4-sp-d16
 4774              	HAL_HalfDuplex_EnableReceiver:
 4775              	.LFB360:
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status.
2617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4776              		.loc 1 2619 1
 4777              		.cfi_startproc
 4778              		@ args = 0, pretend = 0, frame = 8
 4779              		@ frame_needed = 1, uses_anonymous_args = 0
 4780              		@ link register save eliminated.
 4781 0000 80B4     		push	{r7}
 4782              	.LCFI191:
 4783              		.cfi_def_cfa_offset 4
 4784              		.cfi_offset 7, -4
 4785 0002 83B0     		sub	sp, sp, #12
 4786              	.LCFI192:
 4787              		.cfi_def_cfa_offset 16
 4788 0004 00AF     		add	r7, sp, #0
 4789              	.LCFI193:
 4790              		.cfi_def_cfa_register 7
 4791 0006 7860     		str	r0, [r7, #4]
2620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /tmp/ccuwK2ly.s 			page 130


 4792              		.loc 1 2620 3
 4793 0008 7B68     		ldr	r3, [r7, #4]
 4794 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 4795 000e 012B     		cmp	r3, #1
 4796 0010 01D1     		bne	.L240
 4797              		.loc 1 2620 3 is_stmt 0 discriminator 1
 4798 0012 0223     		movs	r3, #2
 4799 0014 20E0     		b	.L241
 4800              	.L240:
 4801              		.loc 1 2620 3 discriminator 2
 4802 0016 7B68     		ldr	r3, [r7, #4]
 4803 0018 0122     		movs	r2, #1
 4804 001a 83F87C20 		strb	r2, [r3, #124]
2621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4805              		.loc 1 2621 17 is_stmt 1 discriminator 2
 4806 001e 7B68     		ldr	r3, [r7, #4]
 4807 0020 2422     		movs	r2, #36
 4808 0022 C3F88020 		str	r2, [r3, #128]
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear TE and RE bits */
2624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4809              		.loc 1 2624 3 discriminator 2
 4810 0026 7B68     		ldr	r3, [r7, #4]
 4811 0028 1B68     		ldr	r3, [r3]
 4812 002a 1A68     		ldr	r2, [r3]
 4813 002c 7B68     		ldr	r3, [r7, #4]
 4814 002e 1B68     		ldr	r3, [r3]
 4815 0030 22F00C02 		bic	r2, r2, #12
 4816 0034 1A60     		str	r2, [r3]
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4817              		.loc 1 2627 3 discriminator 2
 4818 0036 7B68     		ldr	r3, [r7, #4]
 4819 0038 1B68     		ldr	r3, [r3]
 4820 003a 1A68     		ldr	r2, [r3]
 4821 003c 7B68     		ldr	r3, [r7, #4]
 4822 003e 1B68     		ldr	r3, [r3]
 4823 0040 42F00402 		orr	r2, r2, #4
 4824 0044 1A60     		str	r2, [r3]
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4825              		.loc 1 2629 17 discriminator 2
 4826 0046 7B68     		ldr	r3, [r7, #4]
 4827 0048 2022     		movs	r2, #32
 4828 004a C3F88020 		str	r2, [r3, #128]
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4829              		.loc 1 2631 3 discriminator 2
 4830 004e 7B68     		ldr	r3, [r7, #4]
 4831 0050 0022     		movs	r2, #0
 4832 0052 83F87C20 		strb	r2, [r3, #124]
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 4833              		.loc 1 2633 10 discriminator 2
 4834 0056 0023     		movs	r3, #0
 4835              	.L241:
ARM GAS  /tmp/ccuwK2ly.s 			page 131


2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4836              		.loc 1 2634 1
 4837 0058 1846     		mov	r0, r3
 4838 005a 0C37     		adds	r7, r7, #12
 4839              	.LCFI194:
 4840              		.cfi_def_cfa_offset 4
 4841 005c BD46     		mov	sp, r7
 4842              	.LCFI195:
 4843              		.cfi_def_cfa_register 13
 4844              		@ sp needed
 4845 005e 5DF8047B 		ldr	r7, [sp], #4
 4846              	.LCFI196:
 4847              		.cfi_restore 7
 4848              		.cfi_def_cfa_offset 0
 4849 0062 7047     		bx	lr
 4850              		.cfi_endproc
 4851              	.LFE360:
 4853              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4854              		.align	1
 4855              		.global	HAL_LIN_SendBreak
 4856              		.syntax unified
 4857              		.thumb
 4858              		.thumb_func
 4859              		.fpu fpv4-sp-d16
 4861              	HAL_LIN_SendBreak:
 4862              	.LFB361:
2635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Transmit break characters.
2639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4863              		.loc 1 2643 1
 4864              		.cfi_startproc
 4865              		@ args = 0, pretend = 0, frame = 8
 4866              		@ frame_needed = 1, uses_anonymous_args = 0
 4867              		@ link register save eliminated.
 4868 0000 80B4     		push	{r7}
 4869              	.LCFI197:
 4870              		.cfi_def_cfa_offset 4
 4871              		.cfi_offset 7, -4
 4872 0002 83B0     		sub	sp, sp, #12
 4873              	.LCFI198:
 4874              		.cfi_def_cfa_offset 16
 4875 0004 00AF     		add	r7, sp, #0
 4876              	.LCFI199:
 4877              		.cfi_def_cfa_register 7
 4878 0006 7860     		str	r0, [r7, #4]
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
2645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4879              		.loc 1 2647 3
 4880 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 132


 4881 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 4882 000e 012B     		cmp	r3, #1
 4883 0010 01D1     		bne	.L243
 4884              		.loc 1 2647 3 is_stmt 0 discriminator 1
 4885 0012 0223     		movs	r3, #2
 4886 0014 18E0     		b	.L244
 4887              	.L243:
 4888              		.loc 1 2647 3 discriminator 2
 4889 0016 7B68     		ldr	r3, [r7, #4]
 4890 0018 0122     		movs	r2, #1
 4891 001a 83F87C20 		strb	r2, [r3, #124]
2648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4892              		.loc 1 2649 17 is_stmt 1 discriminator 2
 4893 001e 7B68     		ldr	r3, [r7, #4]
 4894 0020 2422     		movs	r2, #36
 4895 0022 C3F88020 		str	r2, [r3, #128]
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Send break characters */
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 4896              		.loc 1 2652 3 discriminator 2
 4897 0026 7B68     		ldr	r3, [r7, #4]
 4898 0028 1B68     		ldr	r3, [r3]
 4899 002a 9A69     		ldr	r2, [r3, #24]
 4900 002c 7B68     		ldr	r3, [r7, #4]
 4901 002e 1B68     		ldr	r3, [r3]
 4902 0030 42F00202 		orr	r2, r2, #2
 4903 0034 9A61     		str	r2, [r3, #24]
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4904              		.loc 1 2654 17 discriminator 2
 4905 0036 7B68     		ldr	r3, [r7, #4]
 4906 0038 2022     		movs	r2, #32
 4907 003a C3F88020 		str	r2, [r3, #128]
2655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4908              		.loc 1 2656 3 discriminator 2
 4909 003e 7B68     		ldr	r3, [r7, #4]
 4910 0040 0022     		movs	r2, #0
 4911 0042 83F87C20 		strb	r2, [r3, #124]
2657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 4912              		.loc 1 2658 10 discriminator 2
 4913 0046 0023     		movs	r3, #0
 4914              	.L244:
2659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4915              		.loc 1 2659 1
 4916 0048 1846     		mov	r0, r3
 4917 004a 0C37     		adds	r7, r7, #12
 4918              	.LCFI200:
 4919              		.cfi_def_cfa_offset 4
 4920 004c BD46     		mov	sp, r7
 4921              	.LCFI201:
 4922              		.cfi_def_cfa_register 13
 4923              		@ sp needed
 4924 004e 5DF8047B 		ldr	r7, [sp], #4
 4925              	.LCFI202:
ARM GAS  /tmp/ccuwK2ly.s 			page 133


 4926              		.cfi_restore 7
 4927              		.cfi_def_cfa_offset 0
 4928 0052 7047     		bx	lr
 4929              		.cfi_endproc
 4930              	.LFE361:
 4932              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4933              		.align	1
 4934              		.global	HAL_UART_GetState
 4935              		.syntax unified
 4936              		.thumb
 4937              		.thumb_func
 4938              		.fpu fpv4-sp-d16
 4940              	HAL_UART_GetState:
 4941              	.LFB362:
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
2668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ==============================================================================
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ==============================================================================
2672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides functions allowing to :
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) Return the UART handle state.
2675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) Return the UART handle error code
2676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
2678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Return the UART handle state.
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL state
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4942              		.loc 1 2688 1
 4943              		.cfi_startproc
 4944              		@ args = 0, pretend = 0, frame = 16
 4945              		@ frame_needed = 1, uses_anonymous_args = 0
 4946              		@ link register save eliminated.
 4947 0000 80B4     		push	{r7}
 4948              	.LCFI203:
 4949              		.cfi_def_cfa_offset 4
 4950              		.cfi_offset 7, -4
 4951 0002 85B0     		sub	sp, sp, #20
 4952              	.LCFI204:
 4953              		.cfi_def_cfa_offset 24
 4954 0004 00AF     		add	r7, sp, #0
 4955              	.LCFI205:
ARM GAS  /tmp/ccuwK2ly.s 			page 134


 4956              		.cfi_def_cfa_register 7
 4957 0006 7860     		str	r0, [r7, #4]
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp1;
2690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp2;
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp1 = huart->gState;
 4958              		.loc 1 2691 9
 4959 0008 7B68     		ldr	r3, [r7, #4]
 4960 000a D3F88030 		ldr	r3, [r3, #128]
 4961 000e FB60     		str	r3, [r7, #12]
2692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp2 = huart->RxState;
 4962              		.loc 1 2692 9
 4963 0010 7B68     		ldr	r3, [r7, #4]
 4964 0012 D3F88430 		ldr	r3, [r3, #132]
 4965 0016 BB60     		str	r3, [r7, #8]
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4966              		.loc 1 2694 10
 4967 0018 FA68     		ldr	r2, [r7, #12]
 4968 001a BB68     		ldr	r3, [r7, #8]
 4969 001c 1343     		orrs	r3, r3, r2
2695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4970              		.loc 1 2695 1
 4971 001e 1846     		mov	r0, r3
 4972 0020 1437     		adds	r7, r7, #20
 4973              	.LCFI206:
 4974              		.cfi_def_cfa_offset 4
 4975 0022 BD46     		mov	sp, r7
 4976              	.LCFI207:
 4977              		.cfi_def_cfa_register 13
 4978              		@ sp needed
 4979 0024 5DF8047B 		ldr	r7, [sp], #4
 4980              	.LCFI208:
 4981              		.cfi_restore 7
 4982              		.cfi_def_cfa_offset 0
 4983 0028 7047     		bx	lr
 4984              		.cfi_endproc
 4985              	.LFE362:
 4987              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4988              		.align	1
 4989              		.global	HAL_UART_GetError
 4990              		.syntax unified
 4991              		.thumb
 4992              		.thumb_func
 4993              		.fpu fpv4-sp-d16
 4995              	HAL_UART_GetError:
 4996              	.LFB363:
2696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval UART Error Code
2702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 4997              		.loc 1 2704 1
 4998              		.cfi_startproc
ARM GAS  /tmp/ccuwK2ly.s 			page 135


 4999              		@ args = 0, pretend = 0, frame = 8
 5000              		@ frame_needed = 1, uses_anonymous_args = 0
 5001              		@ link register save eliminated.
 5002 0000 80B4     		push	{r7}
 5003              	.LCFI209:
 5004              		.cfi_def_cfa_offset 4
 5005              		.cfi_offset 7, -4
 5006 0002 83B0     		sub	sp, sp, #12
 5007              	.LCFI210:
 5008              		.cfi_def_cfa_offset 16
 5009 0004 00AF     		add	r7, sp, #0
 5010              	.LCFI211:
 5011              		.cfi_def_cfa_register 7
 5012 0006 7860     		str	r0, [r7, #4]
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return huart->ErrorCode;
 5013              		.loc 1 2705 15
 5014 0008 7B68     		ldr	r3, [r7, #4]
 5015 000a D3F88830 		ldr	r3, [r3, #136]
2706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 5016              		.loc 1 2706 1
 5017 000e 1846     		mov	r0, r3
 5018 0010 0C37     		adds	r7, r7, #12
 5019              	.LCFI212:
 5020              		.cfi_def_cfa_offset 4
 5021 0012 BD46     		mov	sp, r7
 5022              	.LCFI213:
 5023              		.cfi_def_cfa_register 13
 5024              		@ sp needed
 5025 0014 5DF8047B 		ldr	r7, [sp], #4
 5026              	.LCFI214:
 5027              		.cfi_restore 7
 5028              		.cfi_def_cfa_offset 0
 5029 0018 7047     		bx	lr
 5030              		.cfi_endproc
 5031              	.LFE363:
 5033              		.global	__aeabi_uldivmod
 5034              		.section	.text.UART_SetConfig,"ax",%progbits
 5035              		.align	1
 5036              		.global	UART_SetConfig
 5037              		.syntax unified
 5038              		.thumb
 5039              		.thumb_func
 5040              		.fpu fpv4-sp-d16
 5042              	UART_SetConfig:
 5043              	.LFB364:
2707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 136


2719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval none
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Init the UART Callback settings */
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 5044              		.loc 1 2749 1
 5045              		.cfi_startproc
 5046              		@ args = 0, pretend = 0, frame = 48
 5047              		@ frame_needed = 1, uses_anonymous_args = 0
 5048 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5049              	.LCFI215:
 5050              		.cfi_def_cfa_offset 36
 5051              		.cfi_offset 4, -36
 5052              		.cfi_offset 5, -32
 5053              		.cfi_offset 6, -28
 5054              		.cfi_offset 7, -24
 5055              		.cfi_offset 8, -20
 5056              		.cfi_offset 9, -16
 5057              		.cfi_offset 10, -12
 5058              		.cfi_offset 11, -8
 5059              		.cfi_offset 14, -4
 5060 0004 8DB0     		sub	sp, sp, #52
 5061              	.LCFI216:
 5062              		.cfi_def_cfa_offset 88
 5063 0006 00AF     		add	r7, sp, #0
 5064              	.LCFI217:
 5065              		.cfi_def_cfa_register 7
 5066 0008 F860     		str	r0, [r7, #12]
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tmpreg;
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t brrtemp;
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
ARM GAS  /tmp/ccuwK2ly.s 			page 137


2753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
 5067              		.loc 1 2753 12
 5068 000a 0023     		movs	r3, #0
 5069 000c 7B62     		str	r3, [r7, #36]
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 5070              		.loc 1 2754 21
 5071 000e 0023     		movs	r3, #0
 5072 0010 87F82330 		strb	r3, [r7, #35]
2755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 5073              		.loc 1 2755 12
 5074 0014 0023     		movs	r3, #0
 5075 0016 FB61     		str	r3, [r7, #28]
2756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t pclk;
2757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 5076              		.loc 1 2784 33
 5077 0018 FB68     		ldr	r3, [r7, #12]
 5078 001a 9A68     		ldr	r2, [r3, #8]
 5079              		.loc 1 2784 58
 5080 001c FB68     		ldr	r3, [r7, #12]
 5081 001e 1B69     		ldr	r3, [r3, #16]
 5082              		.loc 1 2784 45
 5083 0020 1A43     		orrs	r2, r2, r3
 5084              		.loc 1 2784 79
 5085 0022 FB68     		ldr	r3, [r7, #12]
 5086 0024 5B69     		ldr	r3, [r3, #20]
 5087              		.loc 1 2784 66
 5088 0026 1A43     		orrs	r2, r2, r3
 5089              		.loc 1 2784 98
 5090 0028 FB68     		ldr	r3, [r7, #12]
 5091 002a DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccuwK2ly.s 			page 138


 5092              		.loc 1 2784 10
 5093 002c 1343     		orrs	r3, r3, r2
 5094 002e FB62     		str	r3, [r7, #44]
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
 5095              		.loc 1 2785 28
 5096 0030 FB68     		ldr	r3, [r7, #12]
 5097 0032 5B6E     		ldr	r3, [r3, #100]
 5098              		.loc 1 2785 10
 5099 0034 FA6A     		ldr	r2, [r7, #44]
 5100 0036 1343     		orrs	r3, r3, r2
 5101 0038 FB62     		str	r3, [r7, #44]
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 5102              		.loc 1 2786 3
 5103 003a FB68     		ldr	r3, [r7, #12]
 5104 003c 1B68     		ldr	r3, [r3]
 5105 003e 1A68     		ldr	r2, [r3]
 5106 0040 AA4B     		ldr	r3, .L773
 5107 0042 1340     		ands	r3, r3, r2
 5108 0044 FA68     		ldr	r2, [r7, #12]
 5109 0046 1268     		ldr	r2, [r2]
 5110 0048 F96A     		ldr	r1, [r7, #44]
 5111 004a 0B43     		orrs	r3, r3, r1
 5112 004c 1360     		str	r3, [r2]
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 5113              		.loc 1 2791 3
 5114 004e FB68     		ldr	r3, [r7, #12]
 5115 0050 1B68     		ldr	r3, [r3]
 5116 0052 5B68     		ldr	r3, [r3, #4]
 5117 0054 23F44051 		bic	r1, r3, #12288
 5118 0058 FB68     		ldr	r3, [r7, #12]
 5119 005a DA68     		ldr	r2, [r3, #12]
 5120 005c FB68     		ldr	r3, [r7, #12]
 5121 005e 1B68     		ldr	r3, [r3]
 5122 0060 0A43     		orrs	r2, r2, r1
 5123 0062 5A60     		str	r2, [r3, #4]
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure
2795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 5124              		.loc 1 2799 10
 5125 0064 FB68     		ldr	r3, [r7, #12]
 5126 0066 9B69     		ldr	r3, [r3, #24]
 5127 0068 FB62     		str	r3, [r7, #44]
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 5128              		.loc 1 2801 9
 5129 006a FB68     		ldr	r3, [r7, #12]
 5130 006c 1B68     		ldr	r3, [r3]
 5131              		.loc 1 2801 6
ARM GAS  /tmp/ccuwK2ly.s 			page 139


 5132 006e A04A     		ldr	r2, .L773+4
 5133 0070 9342     		cmp	r3, r2
 5134 0072 04D0     		beq	.L250
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 5135              		.loc 1 2803 26
 5136 0074 FB68     		ldr	r3, [r7, #12]
 5137 0076 1B6A     		ldr	r3, [r3, #32]
 5138              		.loc 1 2803 12
 5139 0078 FA6A     		ldr	r2, [r7, #44]
 5140 007a 1343     		orrs	r3, r3, r2
 5141 007c FB62     		str	r3, [r7, #44]
 5142              	.L250:
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 5143              		.loc 1 2805 3
 5144 007e FB68     		ldr	r3, [r7, #12]
 5145 0080 1B68     		ldr	r3, [r3]
 5146 0082 9B68     		ldr	r3, [r3, #8]
 5147 0084 23F06E43 		bic	r3, r3, #-301989888
 5148 0088 23F43063 		bic	r3, r3, #2816
 5149 008c FA68     		ldr	r2, [r7, #12]
 5150 008e 1268     		ldr	r2, [r2]
 5151 0090 F96A     		ldr	r1, [r7, #44]
 5152 0092 0B43     		orrs	r3, r3, r1
 5153 0094 9360     		str	r3, [r2, #8]
2806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 5154              		.loc 1 2810 3
 5155 0096 FB68     		ldr	r3, [r7, #12]
 5156 0098 1B68     		ldr	r3, [r3]
 5157 009a DB6A     		ldr	r3, [r3, #44]
 5158 009c 23F00F01 		bic	r1, r3, #15
 5159 00a0 FB68     		ldr	r3, [r7, #12]
 5160 00a2 5A6A     		ldr	r2, [r3, #36]
 5161 00a4 FB68     		ldr	r3, [r7, #12]
 5162 00a6 1B68     		ldr	r3, [r3]
 5163 00a8 0A43     		orrs	r2, r2, r1
 5164 00aa DA62     		str	r2, [r3, #44]
2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 5165              		.loc 1 2813 3
 5166 00ac FB68     		ldr	r3, [r7, #12]
 5167 00ae 1B68     		ldr	r3, [r3]
 5168 00b0 904A     		ldr	r2, .L773+8
 5169 00b2 9342     		cmp	r3, r2
 5170 00b4 27D1     		bne	.L251
 5171              		.loc 1 2813 3 is_stmt 0 discriminator 1
 5172 00b6 904B     		ldr	r3, .L773+12
 5173 00b8 D3F88830 		ldr	r3, [r3, #136]
 5174 00bc 03F00303 		and	r3, r3, #3
 5175 00c0 032B     		cmp	r3, #3
 5176 00c2 1BD8     		bhi	.L252
ARM GAS  /tmp/ccuwK2ly.s 			page 140


 5177 00c4 01A2     		adr	r2, .L254
 5178 00c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5179 00ca 00BF     		.p2align 2
 5180              	.L254:
 5181 00cc DD000000 		.word	.L257+1
 5182 00d0 ED000000 		.word	.L256+1
 5183 00d4 E5000000 		.word	.L255+1
 5184 00d8 F5000000 		.word	.L253+1
 5185              		.p2align 1
 5186              	.L257:
 5187              		.loc 1 2813 3 discriminator 4
 5188 00dc 0123     		movs	r3, #1
 5189 00de 87F82B30 		strb	r3, [r7, #43]
 5190 00e2 16E1     		b	.L259
 5191              	.L255:
 5192              		.loc 1 2813 3 discriminator 6
 5193 00e4 0223     		movs	r3, #2
 5194 00e6 87F82B30 		strb	r3, [r7, #43]
 5195 00ea 12E1     		b	.L259
 5196              	.L256:
 5197              		.loc 1 2813 3 discriminator 5
 5198 00ec 0423     		movs	r3, #4
 5199 00ee 87F82B30 		strb	r3, [r7, #43]
 5200 00f2 0EE1     		b	.L259
 5201              	.L253:
 5202              		.loc 1 2813 3 discriminator 7
 5203 00f4 0823     		movs	r3, #8
 5204 00f6 87F82B30 		strb	r3, [r7, #43]
 5205 00fa 0AE1     		b	.L259
 5206              	.L252:
 5207              		.loc 1 2813 3 discriminator 3
 5208 00fc 1023     		movs	r3, #16
 5209 00fe 87F82B30 		strb	r3, [r7, #43]
 5210 0102 00BF     		nop
 5211 0104 05E1     		b	.L259
 5212              	.L251:
 5213              		.loc 1 2813 3 discriminator 2
 5214 0106 FB68     		ldr	r3, [r7, #12]
 5215 0108 1B68     		ldr	r3, [r3]
 5216 010a 7C4A     		ldr	r2, .L773+16
 5217 010c 9342     		cmp	r3, r2
 5218 010e 38D1     		bne	.L260
 5219              		.loc 1 2813 3 discriminator 13
 5220 0110 794B     		ldr	r3, .L773+12
 5221 0112 D3F88830 		ldr	r3, [r3, #136]
 5222 0116 03F00C03 		and	r3, r3, #12
 5223 011a 0C2B     		cmp	r3, #12
 5224 011c 2CD8     		bhi	.L261
 5225 011e 01A2     		adr	r2, .L263
 5226 0120 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5227              		.p2align 2
 5228              	.L263:
 5229 0124 59010000 		.word	.L266+1
 5230 0128 79010000 		.word	.L261+1
 5231 012c 79010000 		.word	.L261+1
 5232 0130 79010000 		.word	.L261+1
 5233 0134 69010000 		.word	.L265+1
ARM GAS  /tmp/ccuwK2ly.s 			page 141


 5234 0138 79010000 		.word	.L261+1
 5235 013c 79010000 		.word	.L261+1
 5236 0140 79010000 		.word	.L261+1
 5237 0144 61010000 		.word	.L264+1
 5238 0148 79010000 		.word	.L261+1
 5239 014c 79010000 		.word	.L261+1
 5240 0150 79010000 		.word	.L261+1
 5241 0154 71010000 		.word	.L262+1
 5242              		.p2align 1
 5243              	.L266:
 5244              		.loc 1 2813 3 discriminator 16
 5245 0158 0023     		movs	r3, #0
 5246 015a 87F82B30 		strb	r3, [r7, #43]
 5247 015e D8E0     		b	.L259
 5248              	.L264:
 5249              		.loc 1 2813 3 discriminator 18
 5250 0160 0223     		movs	r3, #2
 5251 0162 87F82B30 		strb	r3, [r7, #43]
 5252 0166 D4E0     		b	.L259
 5253              	.L265:
 5254              		.loc 1 2813 3 discriminator 17
 5255 0168 0423     		movs	r3, #4
 5256 016a 87F82B30 		strb	r3, [r7, #43]
 5257 016e D0E0     		b	.L259
 5258              	.L262:
 5259              		.loc 1 2813 3 discriminator 19
 5260 0170 0823     		movs	r3, #8
 5261 0172 87F82B30 		strb	r3, [r7, #43]
 5262 0176 CCE0     		b	.L259
 5263              	.L261:
 5264              		.loc 1 2813 3 discriminator 15
 5265 0178 1023     		movs	r3, #16
 5266 017a 87F82B30 		strb	r3, [r7, #43]
 5267 017e 00BF     		nop
 5268 0180 C7E0     		b	.L259
 5269              	.L260:
 5270              		.loc 1 2813 3 discriminator 14
 5271 0182 FB68     		ldr	r3, [r7, #12]
 5272 0184 1B68     		ldr	r3, [r3]
 5273 0186 5E4A     		ldr	r2, .L773+20
 5274 0188 9342     		cmp	r3, r2
 5275 018a 25D1     		bne	.L268
 5276              		.loc 1 2813 3 discriminator 25
 5277 018c 5A4B     		ldr	r3, .L773+12
 5278 018e D3F88830 		ldr	r3, [r3, #136]
 5279 0192 03F03003 		and	r3, r3, #48
 5280 0196 102B     		cmp	r3, #16
 5281 0198 11D0     		beq	.L269
 5282              		.loc 1 2813 3
 5283 019a 102B     		cmp	r3, #16
 5284 019c 02D8     		bhi	.L270
 5285 019e 002B     		cmp	r3, #0
 5286 01a0 05D0     		beq	.L271
 5287 01a2 14E0     		b	.L272
 5288              	.L270:
 5289 01a4 202B     		cmp	r3, #32
 5290 01a6 06D0     		beq	.L273
ARM GAS  /tmp/ccuwK2ly.s 			page 142


 5291 01a8 302B     		cmp	r3, #48
 5292 01aa 0CD0     		beq	.L274
 5293 01ac 0FE0     		b	.L272
 5294              	.L271:
 5295              		.loc 1 2813 3 discriminator 28
 5296 01ae 0023     		movs	r3, #0
 5297 01b0 87F82B30 		strb	r3, [r7, #43]
 5298 01b4 ADE0     		b	.L259
 5299              	.L273:
 5300              		.loc 1 2813 3 discriminator 30
 5301 01b6 0223     		movs	r3, #2
 5302 01b8 87F82B30 		strb	r3, [r7, #43]
 5303 01bc A9E0     		b	.L259
 5304              	.L269:
 5305              		.loc 1 2813 3 discriminator 29
 5306 01be 0423     		movs	r3, #4
 5307 01c0 87F82B30 		strb	r3, [r7, #43]
 5308 01c4 A5E0     		b	.L259
 5309              	.L274:
 5310              		.loc 1 2813 3 discriminator 31
 5311 01c6 0823     		movs	r3, #8
 5312 01c8 87F82B30 		strb	r3, [r7, #43]
 5313 01cc A1E0     		b	.L259
 5314              	.L272:
 5315              		.loc 1 2813 3 discriminator 27
 5316 01ce 1023     		movs	r3, #16
 5317 01d0 87F82B30 		strb	r3, [r7, #43]
 5318 01d4 00BF     		nop
 5319 01d6 9CE0     		b	.L259
 5320              	.L268:
 5321              		.loc 1 2813 3 discriminator 26
 5322 01d8 FB68     		ldr	r3, [r7, #12]
 5323 01da 1B68     		ldr	r3, [r3]
 5324 01dc 494A     		ldr	r2, .L773+24
 5325 01de 9342     		cmp	r3, r2
 5326 01e0 25D1     		bne	.L276
 5327              		.loc 1 2813 3 discriminator 37
 5328 01e2 454B     		ldr	r3, .L773+12
 5329 01e4 D3F88830 		ldr	r3, [r3, #136]
 5330 01e8 03F0C003 		and	r3, r3, #192
 5331 01ec 402B     		cmp	r3, #64
 5332 01ee 11D0     		beq	.L277
 5333              		.loc 1 2813 3
 5334 01f0 402B     		cmp	r3, #64
 5335 01f2 02D8     		bhi	.L278
 5336 01f4 002B     		cmp	r3, #0
 5337 01f6 05D0     		beq	.L279
 5338 01f8 14E0     		b	.L280
 5339              	.L278:
 5340 01fa 802B     		cmp	r3, #128
 5341 01fc 06D0     		beq	.L281
 5342 01fe C02B     		cmp	r3, #192
 5343 0200 0CD0     		beq	.L282
 5344 0202 0FE0     		b	.L280
 5345              	.L279:
 5346              		.loc 1 2813 3 discriminator 40
 5347 0204 0023     		movs	r3, #0
ARM GAS  /tmp/ccuwK2ly.s 			page 143


 5348 0206 87F82B30 		strb	r3, [r7, #43]
 5349 020a 82E0     		b	.L259
 5350              	.L281:
 5351              		.loc 1 2813 3 discriminator 42
 5352 020c 0223     		movs	r3, #2
 5353 020e 87F82B30 		strb	r3, [r7, #43]
 5354 0212 7EE0     		b	.L259
 5355              	.L277:
 5356              		.loc 1 2813 3 discriminator 41
 5357 0214 0423     		movs	r3, #4
 5358 0216 87F82B30 		strb	r3, [r7, #43]
 5359 021a 7AE0     		b	.L259
 5360              	.L282:
 5361              		.loc 1 2813 3 discriminator 43
 5362 021c 0823     		movs	r3, #8
 5363 021e 87F82B30 		strb	r3, [r7, #43]
 5364 0222 76E0     		b	.L259
 5365              	.L280:
 5366              		.loc 1 2813 3 discriminator 39
 5367 0224 1023     		movs	r3, #16
 5368 0226 87F82B30 		strb	r3, [r7, #43]
 5369 022a 00BF     		nop
 5370 022c 71E0     		b	.L259
 5371              	.L276:
 5372              		.loc 1 2813 3 discriminator 38
 5373 022e FB68     		ldr	r3, [r7, #12]
 5374 0230 1B68     		ldr	r3, [r3]
 5375 0232 354A     		ldr	r2, .L773+28
 5376 0234 9342     		cmp	r3, r2
 5377 0236 29D1     		bne	.L284
 5378              		.loc 1 2813 3 discriminator 49
 5379 0238 2F4B     		ldr	r3, .L773+12
 5380 023a D3F88830 		ldr	r3, [r3, #136]
 5381 023e 03F44073 		and	r3, r3, #768
 5382 0242 B3F5807F 		cmp	r3, #256
 5383 0246 14D0     		beq	.L285
 5384              		.loc 1 2813 3
 5385 0248 B3F5807F 		cmp	r3, #256
 5386 024c 02D8     		bhi	.L286
 5387 024e 002B     		cmp	r3, #0
 5388 0250 07D0     		beq	.L287
 5389 0252 16E0     		b	.L288
 5390              	.L286:
 5391 0254 B3F5007F 		cmp	r3, #512
 5392 0258 07D0     		beq	.L289
 5393 025a B3F5407F 		cmp	r3, #768
 5394 025e 0CD0     		beq	.L290
 5395 0260 0FE0     		b	.L288
 5396              	.L287:
 5397              		.loc 1 2813 3 discriminator 52
 5398 0262 0023     		movs	r3, #0
 5399 0264 87F82B30 		strb	r3, [r7, #43]
 5400 0268 53E0     		b	.L259
 5401              	.L289:
 5402              		.loc 1 2813 3 discriminator 54
 5403 026a 0223     		movs	r3, #2
 5404 026c 87F82B30 		strb	r3, [r7, #43]
ARM GAS  /tmp/ccuwK2ly.s 			page 144


 5405 0270 4FE0     		b	.L259
 5406              	.L285:
 5407              		.loc 1 2813 3 discriminator 53
 5408 0272 0423     		movs	r3, #4
 5409 0274 87F82B30 		strb	r3, [r7, #43]
 5410 0278 4BE0     		b	.L259
 5411              	.L290:
 5412              		.loc 1 2813 3 discriminator 55
 5413 027a 0823     		movs	r3, #8
 5414 027c 87F82B30 		strb	r3, [r7, #43]
 5415 0280 47E0     		b	.L259
 5416              	.L288:
 5417              		.loc 1 2813 3 discriminator 51
 5418 0282 1023     		movs	r3, #16
 5419 0284 87F82B30 		strb	r3, [r7, #43]
 5420 0288 00BF     		nop
 5421 028a 42E0     		b	.L259
 5422              	.L284:
 5423              		.loc 1 2813 3 discriminator 50
 5424 028c FB68     		ldr	r3, [r7, #12]
 5425 028e 1B68     		ldr	r3, [r3]
 5426 0290 174A     		ldr	r2, .L773+4
 5427 0292 9342     		cmp	r3, r2
 5428 0294 3AD1     		bne	.L292
 5429              		.loc 1 2813 3 discriminator 61
 5430 0296 184B     		ldr	r3, .L773+12
 5431 0298 D3F88830 		ldr	r3, [r3, #136]
 5432 029c 03F44063 		and	r3, r3, #3072
 5433 02a0 B3F5806F 		cmp	r3, #1024
 5434 02a4 14D0     		beq	.L293
 5435              		.loc 1 2813 3
 5436 02a6 B3F5806F 		cmp	r3, #1024
 5437 02aa 02D8     		bhi	.L294
 5438 02ac 002B     		cmp	r3, #0
 5439 02ae 07D0     		beq	.L295
 5440 02b0 16E0     		b	.L296
 5441              	.L294:
 5442 02b2 B3F5006F 		cmp	r3, #2048
 5443 02b6 07D0     		beq	.L297
 5444 02b8 B3F5406F 		cmp	r3, #3072
 5445 02bc 0CD0     		beq	.L298
 5446 02be 0FE0     		b	.L296
 5447              	.L295:
 5448              		.loc 1 2813 3 discriminator 64
 5449 02c0 0023     		movs	r3, #0
 5450 02c2 87F82B30 		strb	r3, [r7, #43]
 5451 02c6 24E0     		b	.L259
 5452              	.L297:
 5453              		.loc 1 2813 3 discriminator 66
 5454 02c8 0223     		movs	r3, #2
 5455 02ca 87F82B30 		strb	r3, [r7, #43]
 5456 02ce 20E0     		b	.L259
 5457              	.L293:
 5458              		.loc 1 2813 3 discriminator 65
 5459 02d0 0423     		movs	r3, #4
 5460 02d2 87F82B30 		strb	r3, [r7, #43]
 5461 02d6 1CE0     		b	.L259
ARM GAS  /tmp/ccuwK2ly.s 			page 145


 5462              	.L298:
 5463              		.loc 1 2813 3 discriminator 67
 5464 02d8 0823     		movs	r3, #8
 5465 02da 87F82B30 		strb	r3, [r7, #43]
 5466 02de 18E0     		b	.L259
 5467              	.L296:
 5468              		.loc 1 2813 3 discriminator 63
 5469 02e0 1023     		movs	r3, #16
 5470 02e2 87F82B30 		strb	r3, [r7, #43]
 5471 02e6 00BF     		nop
 5472 02e8 13E0     		b	.L259
 5473              	.L774:
 5474 02ea 00BF     		.align	2
 5475              	.L773:
 5476 02ec F369FFCF 		.word	-805344781
 5477 02f0 00800040 		.word	1073774592
 5478 02f4 00380140 		.word	1073821696
 5479 02f8 00100240 		.word	1073876992
 5480 02fc 00440040 		.word	1073759232
 5481 0300 00480040 		.word	1073760256
 5482 0304 004C0040 		.word	1073761280
 5483 0308 00500040 		.word	1073762304
 5484              	.L292:
 5485              		.loc 1 2813 3 discriminator 62
 5486 030c 1023     		movs	r3, #16
 5487 030e 87F82B30 		strb	r3, [r7, #43]
 5488              	.L259:
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check LPUART instance */
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 5489              		.loc 1 2816 7 is_stmt 1
 5490 0312 FB68     		ldr	r3, [r7, #12]
 5491 0314 1B68     		ldr	r3, [r3]
 5492              		.loc 1 2816 6
 5493 0316 864A     		ldr	r2, .L775
 5494 0318 9342     		cmp	r3, r2
 5495 031a 40F02584 		bne	.L300
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Retrieve frequency clock */
2819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
 5496              		.loc 1 2819 5
 5497 031e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 5498 0322 082B     		cmp	r3, #8
 5499 0324 00F27381 		bhi	.L301
 5500 0328 01A2     		adr	r2, .L303
 5501 032a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5502 032e 00BF     		.p2align 2
 5503              	.L303:
 5504 0330 55030000 		.word	.L306+1
 5505 0334 0F060000 		.word	.L301+1
 5506 0338 F7030000 		.word	.L305+1
 5507 033c 0F060000 		.word	.L301+1
 5508 0340 8F040000 		.word	.L304+1
 5509 0344 0F060000 		.word	.L301+1
 5510 0348 0F060000 		.word	.L301+1
 5511 034c 0F060000 		.word	.L301+1
 5512 0350 61050000 		.word	.L302+1
ARM GAS  /tmp/ccuwK2ly.s 			page 146


 5513              		.p2align 1
 5514              	.L306:
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
 5515              		.loc 1 2822 31
 5516 0354 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5517 0358 0246     		mov	r2, r0
 5518              		.loc 1 2822 56
 5519 035a FB68     		ldr	r3, [r7, #12]
 5520 035c 5B6A     		ldr	r3, [r3, #36]
 5521 035e 002B     		cmp	r3, #0
 5522 0360 44D0     		beq	.L307
 5523              		.loc 1 2822 56 is_stmt 0 discriminator 1
 5524 0362 FB68     		ldr	r3, [r7, #12]
 5525 0364 5B6A     		ldr	r3, [r3, #36]
 5526 0366 012B     		cmp	r3, #1
 5527 0368 3ED0     		beq	.L308
 5528              		.loc 1 2822 56 discriminator 3
 5529 036a FB68     		ldr	r3, [r7, #12]
 5530 036c 5B6A     		ldr	r3, [r3, #36]
 5531 036e 022B     		cmp	r3, #2
 5532 0370 38D0     		beq	.L309
 5533              		.loc 1 2822 56 discriminator 5
 5534 0372 FB68     		ldr	r3, [r7, #12]
 5535 0374 5B6A     		ldr	r3, [r3, #36]
 5536 0376 032B     		cmp	r3, #3
 5537 0378 32D0     		beq	.L310
 5538              		.loc 1 2822 56 discriminator 7
 5539 037a FB68     		ldr	r3, [r7, #12]
 5540 037c 5B6A     		ldr	r3, [r3, #36]
 5541 037e 042B     		cmp	r3, #4
 5542 0380 2CD0     		beq	.L311
 5543              		.loc 1 2822 56 discriminator 9
 5544 0382 FB68     		ldr	r3, [r7, #12]
 5545 0384 5B6A     		ldr	r3, [r3, #36]
 5546 0386 052B     		cmp	r3, #5
 5547 0388 26D0     		beq	.L312
 5548              		.loc 1 2822 56 discriminator 11
 5549 038a FB68     		ldr	r3, [r7, #12]
 5550 038c 5B6A     		ldr	r3, [r3, #36]
 5551 038e 062B     		cmp	r3, #6
 5552 0390 20D0     		beq	.L313
 5553              		.loc 1 2822 56 discriminator 13
 5554 0392 FB68     		ldr	r3, [r7, #12]
 5555 0394 5B6A     		ldr	r3, [r3, #36]
 5556 0396 072B     		cmp	r3, #7
 5557 0398 1AD0     		beq	.L314
 5558              		.loc 1 2822 56 discriminator 15
 5559 039a FB68     		ldr	r3, [r7, #12]
 5560 039c 5B6A     		ldr	r3, [r3, #36]
 5561 039e 082B     		cmp	r3, #8
 5562 03a0 14D0     		beq	.L315
 5563              		.loc 1 2822 56 discriminator 17
 5564 03a2 FB68     		ldr	r3, [r7, #12]
 5565 03a4 5B6A     		ldr	r3, [r3, #36]
 5566 03a6 092B     		cmp	r3, #9
ARM GAS  /tmp/ccuwK2ly.s 			page 147


 5567 03a8 0ED0     		beq	.L316
 5568              		.loc 1 2822 56 discriminator 19
 5569 03aa FB68     		ldr	r3, [r7, #12]
 5570 03ac 5B6A     		ldr	r3, [r3, #36]
 5571 03ae 0A2B     		cmp	r3, #10
 5572 03b0 08D0     		beq	.L317
 5573              		.loc 1 2822 56 discriminator 21
 5574 03b2 FB68     		ldr	r3, [r7, #12]
 5575 03b4 5B6A     		ldr	r3, [r3, #36]
 5576 03b6 0B2B     		cmp	r3, #11
 5577 03b8 02D1     		bne	.L318
 5578              		.loc 1 2822 56 discriminator 23
 5579 03ba 4FF48073 		mov	r3, #256
 5580 03be 16E0     		b	.L330
 5581              	.L318:
 5582              		.loc 1 2822 56 discriminator 24
 5583 03c0 0123     		movs	r3, #1
 5584 03c2 14E0     		b	.L330
 5585              	.L317:
 5586              		.loc 1 2822 56 discriminator 22
 5587 03c4 8023     		movs	r3, #128
 5588 03c6 12E0     		b	.L330
 5589              	.L316:
 5590              		.loc 1 2822 56 discriminator 20
 5591 03c8 4023     		movs	r3, #64
 5592 03ca 10E0     		b	.L330
 5593              	.L315:
 5594              		.loc 1 2822 56 discriminator 18
 5595 03cc 2023     		movs	r3, #32
 5596 03ce 0EE0     		b	.L330
 5597              	.L314:
 5598              		.loc 1 2822 56 discriminator 16
 5599 03d0 1023     		movs	r3, #16
 5600 03d2 0CE0     		b	.L330
 5601              	.L313:
 5602              		.loc 1 2822 56 discriminator 14
 5603 03d4 0C23     		movs	r3, #12
 5604 03d6 0AE0     		b	.L330
 5605              	.L312:
 5606              		.loc 1 2822 56 discriminator 12
 5607 03d8 0A23     		movs	r3, #10
 5608 03da 08E0     		b	.L330
 5609              	.L311:
 5610              		.loc 1 2822 56 discriminator 10
 5611 03dc 0823     		movs	r3, #8
 5612 03de 06E0     		b	.L330
 5613              	.L310:
 5614              		.loc 1 2822 56 discriminator 8
 5615 03e0 0623     		movs	r3, #6
 5616 03e2 04E0     		b	.L330
 5617              	.L309:
 5618              		.loc 1 2822 56 discriminator 6
 5619 03e4 0423     		movs	r3, #4
 5620 03e6 02E0     		b	.L330
 5621              	.L308:
 5622              		.loc 1 2822 56 discriminator 4
 5623 03e8 0223     		movs	r3, #2
ARM GAS  /tmp/ccuwK2ly.s 			page 148


 5624 03ea 00E0     		b	.L330
 5625              	.L307:
 5626              		.loc 1 2822 56 discriminator 2
 5627 03ec 0123     		movs	r3, #1
 5628              	.L330:
 5629              		.loc 1 2822 28 is_stmt 1 discriminator 48
 5630 03ee B2FBF3F3 		udiv	r3, r2, r3
 5631 03f2 FB61     		str	r3, [r7, #28]
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 5632              		.loc 1 2823 9 discriminator 48
 5633 03f4 0FE1     		b	.L331
 5634              	.L305:
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
 5635              		.loc 1 2825 53
 5636 03f6 FB68     		ldr	r3, [r7, #12]
 5637 03f8 5B6A     		ldr	r3, [r3, #36]
 5638              		.loc 1 2825 51
 5639 03fa 002B     		cmp	r3, #0
 5640 03fc 44D0     		beq	.L332
 5641              		.loc 1 2825 53 discriminator 1
 5642 03fe FB68     		ldr	r3, [r7, #12]
 5643 0400 5B6A     		ldr	r3, [r3, #36]
 5644              		.loc 1 2825 51 discriminator 1
 5645 0402 012B     		cmp	r3, #1
 5646 0404 3ED0     		beq	.L333
 5647              		.loc 1 2825 53 discriminator 3
 5648 0406 FB68     		ldr	r3, [r7, #12]
 5649 0408 5B6A     		ldr	r3, [r3, #36]
 5650              		.loc 1 2825 51 discriminator 3
 5651 040a 022B     		cmp	r3, #2
 5652 040c 38D0     		beq	.L334
 5653              		.loc 1 2825 53 discriminator 5
 5654 040e FB68     		ldr	r3, [r7, #12]
 5655 0410 5B6A     		ldr	r3, [r3, #36]
 5656              		.loc 1 2825 51 discriminator 5
 5657 0412 032B     		cmp	r3, #3
 5658 0414 32D0     		beq	.L335
 5659              		.loc 1 2825 53 discriminator 7
 5660 0416 FB68     		ldr	r3, [r7, #12]
 5661 0418 5B6A     		ldr	r3, [r3, #36]
 5662              		.loc 1 2825 51 discriminator 7
 5663 041a 042B     		cmp	r3, #4
 5664 041c 2CD0     		beq	.L336
 5665              		.loc 1 2825 53 discriminator 9
 5666 041e FB68     		ldr	r3, [r7, #12]
 5667 0420 5B6A     		ldr	r3, [r3, #36]
 5668              		.loc 1 2825 51 discriminator 9
 5669 0422 052B     		cmp	r3, #5
 5670 0424 26D0     		beq	.L337
 5671              		.loc 1 2825 53 discriminator 11
 5672 0426 FB68     		ldr	r3, [r7, #12]
 5673 0428 5B6A     		ldr	r3, [r3, #36]
 5674              		.loc 1 2825 51 discriminator 11
 5675 042a 062B     		cmp	r3, #6
 5676 042c 20D0     		beq	.L338
 5677              		.loc 1 2825 53 discriminator 13
ARM GAS  /tmp/ccuwK2ly.s 			page 149


 5678 042e FB68     		ldr	r3, [r7, #12]
 5679 0430 5B6A     		ldr	r3, [r3, #36]
 5680              		.loc 1 2825 51 discriminator 13
 5681 0432 072B     		cmp	r3, #7
 5682 0434 1AD0     		beq	.L339
 5683              		.loc 1 2825 53 discriminator 15
 5684 0436 FB68     		ldr	r3, [r7, #12]
 5685 0438 5B6A     		ldr	r3, [r3, #36]
 5686              		.loc 1 2825 51 discriminator 15
 5687 043a 082B     		cmp	r3, #8
 5688 043c 14D0     		beq	.L340
 5689              		.loc 1 2825 53 discriminator 17
 5690 043e FB68     		ldr	r3, [r7, #12]
 5691 0440 5B6A     		ldr	r3, [r3, #36]
 5692              		.loc 1 2825 51 discriminator 17
 5693 0442 092B     		cmp	r3, #9
 5694 0444 0ED0     		beq	.L341
 5695              		.loc 1 2825 53 discriminator 19
 5696 0446 FB68     		ldr	r3, [r7, #12]
 5697 0448 5B6A     		ldr	r3, [r3, #36]
 5698              		.loc 1 2825 51 discriminator 19
 5699 044a 0A2B     		cmp	r3, #10
 5700 044c 08D0     		beq	.L342
 5701              		.loc 1 2825 53 discriminator 21
 5702 044e FB68     		ldr	r3, [r7, #12]
 5703 0450 5B6A     		ldr	r3, [r3, #36]
 5704              		.loc 1 2825 51 discriminator 21
 5705 0452 0B2B     		cmp	r3, #11
 5706 0454 02D1     		bne	.L343
 5707              		.loc 1 2825 51 is_stmt 0 discriminator 23
 5708 0456 4FF22443 		movw	r3, #62500
 5709 045a 16E0     		b	.L355
 5710              	.L343:
 5711              		.loc 1 2825 51 discriminator 24
 5712 045c 354B     		ldr	r3, .L775+4
 5713 045e 14E0     		b	.L355
 5714              	.L342:
 5715              		.loc 1 2825 51 discriminator 22
 5716 0460 354B     		ldr	r3, .L775+8
 5717 0462 12E0     		b	.L355
 5718              	.L341:
 5719              		.loc 1 2825 51 discriminator 20
 5720 0464 354B     		ldr	r3, .L775+12
 5721 0466 10E0     		b	.L355
 5722              	.L340:
 5723              		.loc 1 2825 51 discriminator 18
 5724 0468 354B     		ldr	r3, .L775+16
 5725 046a 0EE0     		b	.L355
 5726              	.L339:
 5727              		.loc 1 2825 51 discriminator 16
 5728 046c 354B     		ldr	r3, .L775+20
 5729 046e 0CE0     		b	.L355
 5730              	.L338:
 5731              		.loc 1 2825 51 discriminator 14
 5732 0470 354B     		ldr	r3, .L775+24
 5733 0472 0AE0     		b	.L355
 5734              	.L337:
ARM GAS  /tmp/ccuwK2ly.s 			page 150


 5735              		.loc 1 2825 51 discriminator 12
 5736 0474 354B     		ldr	r3, .L775+28
 5737 0476 08E0     		b	.L355
 5738              	.L336:
 5739              		.loc 1 2825 51 discriminator 10
 5740 0478 354B     		ldr	r3, .L775+32
 5741 047a 06E0     		b	.L355
 5742              	.L335:
 5743              		.loc 1 2825 51 discriminator 8
 5744 047c 354B     		ldr	r3, .L775+36
 5745 047e 04E0     		b	.L355
 5746              	.L334:
 5747              		.loc 1 2825 51 discriminator 6
 5748 0480 354B     		ldr	r3, .L775+40
 5749 0482 02E0     		b	.L355
 5750              	.L333:
 5751              		.loc 1 2825 51 discriminator 4
 5752 0484 354B     		ldr	r3, .L775+44
 5753 0486 00E0     		b	.L355
 5754              	.L332:
 5755              		.loc 1 2825 51 discriminator 2
 5756 0488 2A4B     		ldr	r3, .L775+4
 5757              	.L355:
 5758              		.loc 1 2825 28 is_stmt 1 discriminator 48
 5759 048a FB61     		str	r3, [r7, #28]
2826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 5760              		.loc 1 2826 9 discriminator 48
 5761 048c C3E0     		b	.L331
 5762              	.L304:
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPres
 5763              		.loc 1 2828 31
 5764 048e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5765 0492 0246     		mov	r2, r0
 5766              		.loc 1 2828 59
 5767 0494 FB68     		ldr	r3, [r7, #12]
 5768 0496 5B6A     		ldr	r3, [r3, #36]
 5769 0498 002B     		cmp	r3, #0
 5770 049a 44D0     		beq	.L356
 5771              		.loc 1 2828 59 is_stmt 0 discriminator 1
 5772 049c FB68     		ldr	r3, [r7, #12]
 5773 049e 5B6A     		ldr	r3, [r3, #36]
 5774 04a0 012B     		cmp	r3, #1
 5775 04a2 3ED0     		beq	.L357
 5776              		.loc 1 2828 59 discriminator 3
 5777 04a4 FB68     		ldr	r3, [r7, #12]
 5778 04a6 5B6A     		ldr	r3, [r3, #36]
 5779 04a8 022B     		cmp	r3, #2
 5780 04aa 38D0     		beq	.L358
 5781              		.loc 1 2828 59 discriminator 5
 5782 04ac FB68     		ldr	r3, [r7, #12]
 5783 04ae 5B6A     		ldr	r3, [r3, #36]
 5784 04b0 032B     		cmp	r3, #3
 5785 04b2 32D0     		beq	.L359
 5786              		.loc 1 2828 59 discriminator 7
 5787 04b4 FB68     		ldr	r3, [r7, #12]
 5788 04b6 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccuwK2ly.s 			page 151


 5789 04b8 042B     		cmp	r3, #4
 5790 04ba 2CD0     		beq	.L360
 5791              		.loc 1 2828 59 discriminator 9
 5792 04bc FB68     		ldr	r3, [r7, #12]
 5793 04be 5B6A     		ldr	r3, [r3, #36]
 5794 04c0 052B     		cmp	r3, #5
 5795 04c2 26D0     		beq	.L361
 5796              		.loc 1 2828 59 discriminator 11
 5797 04c4 FB68     		ldr	r3, [r7, #12]
 5798 04c6 5B6A     		ldr	r3, [r3, #36]
 5799 04c8 062B     		cmp	r3, #6
 5800 04ca 20D0     		beq	.L362
 5801              		.loc 1 2828 59 discriminator 13
 5802 04cc FB68     		ldr	r3, [r7, #12]
 5803 04ce 5B6A     		ldr	r3, [r3, #36]
 5804 04d0 072B     		cmp	r3, #7
 5805 04d2 1AD0     		beq	.L363
 5806              		.loc 1 2828 59 discriminator 15
 5807 04d4 FB68     		ldr	r3, [r7, #12]
 5808 04d6 5B6A     		ldr	r3, [r3, #36]
 5809 04d8 082B     		cmp	r3, #8
 5810 04da 14D0     		beq	.L364
 5811              		.loc 1 2828 59 discriminator 17
 5812 04dc FB68     		ldr	r3, [r7, #12]
 5813 04de 5B6A     		ldr	r3, [r3, #36]
 5814 04e0 092B     		cmp	r3, #9
 5815 04e2 0ED0     		beq	.L365
 5816              		.loc 1 2828 59 discriminator 19
 5817 04e4 FB68     		ldr	r3, [r7, #12]
 5818 04e6 5B6A     		ldr	r3, [r3, #36]
 5819 04e8 0A2B     		cmp	r3, #10
 5820 04ea 08D0     		beq	.L366
 5821              		.loc 1 2828 59 discriminator 21
 5822 04ec FB68     		ldr	r3, [r7, #12]
 5823 04ee 5B6A     		ldr	r3, [r3, #36]
 5824 04f0 0B2B     		cmp	r3, #11
 5825 04f2 02D1     		bne	.L367
 5826              		.loc 1 2828 59 discriminator 23
 5827 04f4 4FF48073 		mov	r3, #256
 5828 04f8 16E0     		b	.L379
 5829              	.L367:
 5830              		.loc 1 2828 59 discriminator 24
 5831 04fa 0123     		movs	r3, #1
 5832 04fc 14E0     		b	.L379
 5833              	.L366:
 5834              		.loc 1 2828 59 discriminator 22
 5835 04fe 8023     		movs	r3, #128
 5836 0500 12E0     		b	.L379
 5837              	.L365:
 5838              		.loc 1 2828 59 discriminator 20
 5839 0502 4023     		movs	r3, #64
 5840 0504 10E0     		b	.L379
 5841              	.L364:
 5842              		.loc 1 2828 59 discriminator 18
 5843 0506 2023     		movs	r3, #32
 5844 0508 0EE0     		b	.L379
 5845              	.L363:
ARM GAS  /tmp/ccuwK2ly.s 			page 152


 5846              		.loc 1 2828 59 discriminator 16
 5847 050a 1023     		movs	r3, #16
 5848 050c 0CE0     		b	.L379
 5849              	.L362:
 5850              		.loc 1 2828 59 discriminator 14
 5851 050e 0C23     		movs	r3, #12
 5852 0510 0AE0     		b	.L379
 5853              	.L361:
 5854              		.loc 1 2828 59 discriminator 12
 5855 0512 0A23     		movs	r3, #10
 5856 0514 08E0     		b	.L379
 5857              	.L360:
 5858              		.loc 1 2828 59 discriminator 10
 5859 0516 0823     		movs	r3, #8
 5860 0518 06E0     		b	.L379
 5861              	.L359:
 5862              		.loc 1 2828 59 discriminator 8
 5863 051a 0623     		movs	r3, #6
 5864 051c 04E0     		b	.L379
 5865              	.L358:
 5866              		.loc 1 2828 59 discriminator 6
 5867 051e 0423     		movs	r3, #4
 5868 0520 02E0     		b	.L379
 5869              	.L357:
 5870              		.loc 1 2828 59 discriminator 4
 5871 0522 0223     		movs	r3, #2
 5872 0524 00E0     		b	.L379
 5873              	.L356:
 5874              		.loc 1 2828 59 discriminator 2
 5875 0526 0123     		movs	r3, #1
 5876              	.L379:
 5877              		.loc 1 2828 28 is_stmt 1 discriminator 48
 5878 0528 B2FBF3F3 		udiv	r3, r2, r3
 5879 052c FB61     		str	r3, [r7, #28]
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 5880              		.loc 1 2829 9 discriminator 48
 5881 052e 72E0     		b	.L331
 5882              	.L776:
 5883              		.align	2
 5884              	.L775:
 5885 0530 00800040 		.word	1073774592
 5886 0534 0024F400 		.word	16000000
 5887 0538 48E80100 		.word	125000
 5888 053c 90D00300 		.word	250000
 5889 0540 20A10700 		.word	500000
 5890 0544 40420F00 		.word	1000000
 5891 0548 55581400 		.word	1333333
 5892 054c 006A1800 		.word	1600000
 5893 0550 80841E00 		.word	2000000
 5894 0554 AAB02800 		.word	2666666
 5895 0558 00093D00 		.word	4000000
 5896 055c 00127A00 		.word	8000000
 5897              	.L302:
2830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
 5898              		.loc 1 2831 53
 5899 0560 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccuwK2ly.s 			page 153


 5900 0562 5B6A     		ldr	r3, [r3, #36]
 5901              		.loc 1 2831 51
 5902 0564 002B     		cmp	r3, #0
 5903 0566 4ED0     		beq	.L380
 5904              		.loc 1 2831 53 discriminator 1
 5905 0568 FB68     		ldr	r3, [r7, #12]
 5906 056a 5B6A     		ldr	r3, [r3, #36]
 5907              		.loc 1 2831 51 discriminator 1
 5908 056c 012B     		cmp	r3, #1
 5909 056e 47D0     		beq	.L381
 5910              		.loc 1 2831 53 discriminator 3
 5911 0570 FB68     		ldr	r3, [r7, #12]
 5912 0572 5B6A     		ldr	r3, [r3, #36]
 5913              		.loc 1 2831 51 discriminator 3
 5914 0574 022B     		cmp	r3, #2
 5915 0576 40D0     		beq	.L382
 5916              		.loc 1 2831 53 discriminator 5
 5917 0578 FB68     		ldr	r3, [r7, #12]
 5918 057a 5B6A     		ldr	r3, [r3, #36]
 5919              		.loc 1 2831 51 discriminator 5
 5920 057c 032B     		cmp	r3, #3
 5921 057e 39D0     		beq	.L383
 5922              		.loc 1 2831 53 discriminator 7
 5923 0580 FB68     		ldr	r3, [r7, #12]
 5924 0582 5B6A     		ldr	r3, [r3, #36]
 5925              		.loc 1 2831 51 discriminator 7
 5926 0584 042B     		cmp	r3, #4
 5927 0586 32D0     		beq	.L384
 5928              		.loc 1 2831 53 discriminator 9
 5929 0588 FB68     		ldr	r3, [r7, #12]
 5930 058a 5B6A     		ldr	r3, [r3, #36]
 5931              		.loc 1 2831 51 discriminator 9
 5932 058c 052B     		cmp	r3, #5
 5933 058e 2BD0     		beq	.L385
 5934              		.loc 1 2831 53 discriminator 11
 5935 0590 FB68     		ldr	r3, [r7, #12]
 5936 0592 5B6A     		ldr	r3, [r3, #36]
 5937              		.loc 1 2831 51 discriminator 11
 5938 0594 062B     		cmp	r3, #6
 5939 0596 24D0     		beq	.L386
 5940              		.loc 1 2831 53 discriminator 13
 5941 0598 FB68     		ldr	r3, [r7, #12]
 5942 059a 5B6A     		ldr	r3, [r3, #36]
 5943              		.loc 1 2831 51 discriminator 13
 5944 059c 072B     		cmp	r3, #7
 5945 059e 1DD0     		beq	.L387
 5946              		.loc 1 2831 53 discriminator 15
 5947 05a0 FB68     		ldr	r3, [r7, #12]
 5948 05a2 5B6A     		ldr	r3, [r3, #36]
 5949              		.loc 1 2831 51 discriminator 15
 5950 05a4 082B     		cmp	r3, #8
 5951 05a6 16D0     		beq	.L388
 5952              		.loc 1 2831 53 discriminator 17
 5953 05a8 FB68     		ldr	r3, [r7, #12]
 5954 05aa 5B6A     		ldr	r3, [r3, #36]
 5955              		.loc 1 2831 51 discriminator 17
 5956 05ac 092B     		cmp	r3, #9
ARM GAS  /tmp/ccuwK2ly.s 			page 154


 5957 05ae 0FD0     		beq	.L389
 5958              		.loc 1 2831 53 discriminator 19
 5959 05b0 FB68     		ldr	r3, [r7, #12]
 5960 05b2 5B6A     		ldr	r3, [r3, #36]
 5961              		.loc 1 2831 51 discriminator 19
 5962 05b4 0A2B     		cmp	r3, #10
 5963 05b6 08D0     		beq	.L390
 5964              		.loc 1 2831 53 discriminator 21
 5965 05b8 FB68     		ldr	r3, [r7, #12]
 5966 05ba 5B6A     		ldr	r3, [r3, #36]
 5967              		.loc 1 2831 51 discriminator 21
 5968 05bc 0B2B     		cmp	r3, #11
 5969 05be 01D1     		bne	.L391
 5970              		.loc 1 2831 51 is_stmt 0 discriminator 23
 5971 05c0 8023     		movs	r3, #128
 5972 05c2 22E0     		b	.L403
 5973              	.L391:
 5974              		.loc 1 2831 51 discriminator 24
 5975 05c4 4FF40043 		mov	r3, #32768
 5976 05c8 1FE0     		b	.L403
 5977              	.L390:
 5978              		.loc 1 2831 51 discriminator 22
 5979 05ca 4FF48073 		mov	r3, #256
 5980 05ce 1CE0     		b	.L403
 5981              	.L389:
 5982              		.loc 1 2831 51 discriminator 20
 5983 05d0 4FF40073 		mov	r3, #512
 5984 05d4 19E0     		b	.L403
 5985              	.L388:
 5986              		.loc 1 2831 51 discriminator 18
 5987 05d6 4FF48063 		mov	r3, #1024
 5988 05da 16E0     		b	.L403
 5989              	.L387:
 5990              		.loc 1 2831 51 discriminator 16
 5991 05dc 4FF40063 		mov	r3, #2048
 5992 05e0 13E0     		b	.L403
 5993              	.L386:
 5994              		.loc 1 2831 51 discriminator 14
 5995 05e2 40F6AA23 		movw	r3, #2730
 5996 05e6 10E0     		b	.L403
 5997              	.L385:
 5998              		.loc 1 2831 51 discriminator 12
 5999 05e8 40F6CC43 		movw	r3, #3276
 6000 05ec 0DE0     		b	.L403
 6001              	.L384:
 6002              		.loc 1 2831 51 discriminator 10
 6003 05ee 4FF48053 		mov	r3, #4096
 6004 05f2 0AE0     		b	.L403
 6005              	.L383:
 6006              		.loc 1 2831 51 discriminator 8
 6007 05f4 41F25553 		movw	r3, #5461
 6008 05f8 07E0     		b	.L403
 6009              	.L382:
 6010              		.loc 1 2831 51 discriminator 6
 6011 05fa 4FF40053 		mov	r3, #8192
 6012 05fe 04E0     		b	.L403
 6013              	.L381:
ARM GAS  /tmp/ccuwK2ly.s 			page 155


 6014              		.loc 1 2831 51 discriminator 4
 6015 0600 4FF48043 		mov	r3, #16384
 6016 0604 01E0     		b	.L403
 6017              	.L380:
 6018              		.loc 1 2831 51 discriminator 2
 6019 0606 4FF40043 		mov	r3, #32768
 6020              	.L403:
 6021              		.loc 1 2831 28 is_stmt 1 discriminator 48
 6022 060a FB61     		str	r3, [r7, #28]
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 6023              		.loc 1 2832 9 discriminator 48
 6024 060c 03E0     		b	.L331
 6025              	.L301:
2833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
2834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
 6026              		.loc 1 2834 13
 6027 060e 0123     		movs	r3, #1
 6028 0610 87F82330 		strb	r3, [r7, #35]
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 6029              		.loc 1 2835 9
 6030 0614 00BF     		nop
 6031              	.L331:
2836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* if proper clock source reported */
2839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
 6032              		.loc 1 2839 8
 6033 0616 FB69     		ldr	r3, [r7, #28]
 6034 0618 002B     		cmp	r3, #0
 6035 061a 00F0BC86 		beq	.L511
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 6036              		.loc 1 2842 50
 6037 061e FB68     		ldr	r3, [r7, #12]
 6038 0620 5A68     		ldr	r2, [r3, #4]
 6039              		.loc 1 2842 37
 6040 0622 1346     		mov	r3, r2
 6041 0624 5B00     		lsls	r3, r3, #1
 6042 0626 1344     		add	r3, r3, r2
 6043              		.loc 1 2842 10
 6044 0628 FA69     		ldr	r2, [r7, #28]
 6045 062a 9A42     		cmp	r2, r3
 6046 062c 05D3     		bcc	.L405
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 6047              		.loc 1 2843 53 discriminator 1
 6048 062e FB68     		ldr	r3, [r7, #12]
 6049 0630 5B68     		ldr	r3, [r3, #4]
 6050              		.loc 1 2843 40 discriminator 1
 6051 0632 1B03     		lsls	r3, r3, #12
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 6052              		.loc 1 2842 62 discriminator 1
 6053 0634 FA69     		ldr	r2, [r7, #28]
 6054 0636 9A42     		cmp	r2, r3
 6055 0638 04D9     		bls	.L406
 6056              	.L405:
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccuwK2ly.s 			page 156


2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
 6057              		.loc 1 2845 13
 6058 063a 0123     		movs	r3, #1
 6059 063c 87F82330 		strb	r3, [r7, #35]
 6060 0640 00F0A9BE 		b	.L511
 6061              	.L406:
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
2848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         switch (clocksource)
 6062              		.loc 1 2849 9
 6063 0644 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 6064 0648 082B     		cmp	r3, #8
 6065 064a 00F27682 		bhi	.L407
 6066 064e 01A2     		adr	r2, .L409
 6067 0650 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6068              		.p2align 2
 6069              	.L409:
 6070 0654 79060000 		.word	.L412+1
 6071 0658 3B0B0000 		.word	.L407+1
 6072 065c B9070000 		.word	.L411+1
 6073 0660 3B0B0000 		.word	.L407+1
 6074 0664 AF080000 		.word	.L410+1
 6075 0668 3B0B0000 		.word	.L407+1
 6076 066c 3B0B0000 		.word	.L407+1
 6077 0670 3B0B0000 		.word	.L407+1
 6078 0674 ED090000 		.word	.L408+1
 6079              		.p2align 1
 6080              	.L412:
2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           case UART_CLOCKSOURCE_PCLK1:
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             pclk = HAL_RCC_GetPCLK1Freq();
 6081              		.loc 1 2852 20
 6082 0678 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6083 067c B861     		str	r0, [r7, #24]
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 6084              		.loc 1 2853 35
 6085 067e BB69     		ldr	r3, [r7, #24]
 6086 0680 1846     		mov	r0, r3
 6087 0682 4FF00001 		mov	r1, #0
 6088 0686 FB68     		ldr	r3, [r7, #12]
 6089 0688 5B6A     		ldr	r3, [r3, #36]
 6090 068a 002B     		cmp	r3, #0
 6091 068c 67D0     		beq	.L413
 6092              		.loc 1 2853 35 is_stmt 0 discriminator 1
 6093 068e FB68     		ldr	r3, [r7, #12]
 6094 0690 5B6A     		ldr	r3, [r3, #36]
 6095 0692 012B     		cmp	r3, #1
 6096 0694 5ED0     		beq	.L414
 6097              		.loc 1 2853 35 discriminator 3
 6098 0696 FB68     		ldr	r3, [r7, #12]
 6099 0698 5B6A     		ldr	r3, [r3, #36]
 6100 069a 022B     		cmp	r3, #2
 6101 069c 55D0     		beq	.L415
 6102              		.loc 1 2853 35 discriminator 5
 6103 069e FB68     		ldr	r3, [r7, #12]
 6104 06a0 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccuwK2ly.s 			page 157


 6105 06a2 032B     		cmp	r3, #3
 6106 06a4 4CD0     		beq	.L416
 6107              		.loc 1 2853 35 discriminator 7
 6108 06a6 FB68     		ldr	r3, [r7, #12]
 6109 06a8 5B6A     		ldr	r3, [r3, #36]
 6110 06aa 042B     		cmp	r3, #4
 6111 06ac 43D0     		beq	.L417
 6112              		.loc 1 2853 35 discriminator 9
 6113 06ae FB68     		ldr	r3, [r7, #12]
 6114 06b0 5B6A     		ldr	r3, [r3, #36]
 6115 06b2 052B     		cmp	r3, #5
 6116 06b4 3AD0     		beq	.L418
 6117              		.loc 1 2853 35 discriminator 11
 6118 06b6 FB68     		ldr	r3, [r7, #12]
 6119 06b8 5B6A     		ldr	r3, [r3, #36]
 6120 06ba 062B     		cmp	r3, #6
 6121 06bc 31D0     		beq	.L419
 6122              		.loc 1 2853 35 discriminator 13
 6123 06be FB68     		ldr	r3, [r7, #12]
 6124 06c0 5B6A     		ldr	r3, [r3, #36]
 6125 06c2 072B     		cmp	r3, #7
 6126 06c4 28D0     		beq	.L420
 6127              		.loc 1 2853 35 discriminator 15
 6128 06c6 FB68     		ldr	r3, [r7, #12]
 6129 06c8 5B6A     		ldr	r3, [r3, #36]
 6130 06ca 082B     		cmp	r3, #8
 6131 06cc 1FD0     		beq	.L421
 6132              		.loc 1 2853 35 discriminator 17
 6133 06ce FB68     		ldr	r3, [r7, #12]
 6134 06d0 5B6A     		ldr	r3, [r3, #36]
 6135 06d2 092B     		cmp	r3, #9
 6136 06d4 16D0     		beq	.L422
 6137              		.loc 1 2853 35 discriminator 19
 6138 06d6 FB68     		ldr	r3, [r7, #12]
 6139 06d8 5B6A     		ldr	r3, [r3, #36]
 6140 06da 0A2B     		cmp	r3, #10
 6141 06dc 0DD0     		beq	.L423
 6142              		.loc 1 2853 35 discriminator 21
 6143 06de FB68     		ldr	r3, [r7, #12]
 6144 06e0 5B6A     		ldr	r3, [r3, #36]
 6145 06e2 0B2B     		cmp	r3, #11
 6146 06e4 04D1     		bne	.L424
 6147              		.loc 1 2853 35 discriminator 23
 6148 06e6 4FF48073 		mov	r3, #256
 6149 06ea 4FF00004 		mov	r4, #0
 6150 06ee 3AE0     		b	.L436
 6151              	.L424:
 6152              		.loc 1 2853 35 discriminator 24
 6153 06f0 4FF00103 		mov	r3, #1
 6154 06f4 4FF00004 		mov	r4, #0
 6155 06f8 35E0     		b	.L436
 6156              	.L423:
 6157              		.loc 1 2853 35 discriminator 22
 6158 06fa 4FF08003 		mov	r3, #128
 6159 06fe 4FF00004 		mov	r4, #0
 6160 0702 30E0     		b	.L436
 6161              	.L422:
ARM GAS  /tmp/ccuwK2ly.s 			page 158


 6162              		.loc 1 2853 35 discriminator 20
 6163 0704 4FF04003 		mov	r3, #64
 6164 0708 4FF00004 		mov	r4, #0
 6165 070c 2BE0     		b	.L436
 6166              	.L421:
 6167              		.loc 1 2853 35 discriminator 18
 6168 070e 4FF02003 		mov	r3, #32
 6169 0712 4FF00004 		mov	r4, #0
 6170 0716 26E0     		b	.L436
 6171              	.L420:
 6172              		.loc 1 2853 35 discriminator 16
 6173 0718 4FF01003 		mov	r3, #16
 6174 071c 4FF00004 		mov	r4, #0
 6175 0720 21E0     		b	.L436
 6176              	.L419:
 6177              		.loc 1 2853 35 discriminator 14
 6178 0722 4FF00C03 		mov	r3, #12
 6179 0726 4FF00004 		mov	r4, #0
 6180 072a 1CE0     		b	.L436
 6181              	.L418:
 6182              		.loc 1 2853 35 discriminator 12
 6183 072c 4FF00A03 		mov	r3, #10
 6184 0730 4FF00004 		mov	r4, #0
 6185 0734 17E0     		b	.L436
 6186              	.L417:
 6187              		.loc 1 2853 35 discriminator 10
 6188 0736 4FF00803 		mov	r3, #8
 6189 073a 4FF00004 		mov	r4, #0
 6190 073e 12E0     		b	.L436
 6191              	.L416:
 6192              		.loc 1 2853 35 discriminator 8
 6193 0740 4FF00603 		mov	r3, #6
 6194 0744 4FF00004 		mov	r4, #0
 6195 0748 0DE0     		b	.L436
 6196              	.L415:
 6197              		.loc 1 2853 35 discriminator 6
 6198 074a 4FF00403 		mov	r3, #4
 6199 074e 4FF00004 		mov	r4, #0
 6200 0752 08E0     		b	.L436
 6201              	.L414:
 6202              		.loc 1 2853 35 discriminator 4
 6203 0754 4FF00203 		mov	r3, #2
 6204 0758 4FF00004 		mov	r4, #0
 6205 075c 03E0     		b	.L436
 6206              	.L413:
 6207              		.loc 1 2853 35 discriminator 2
 6208 075e 4FF00103 		mov	r3, #1
 6209 0762 4FF00004 		mov	r4, #0
 6210              	.L436:
 6211              		.loc 1 2853 35 discriminator 48
 6212 0766 1A46     		mov	r2, r3
 6213 0768 2346     		mov	r3, r4
 6214 076a FFF7FEFF 		bl	__aeabi_uldivmod
 6215              	.LVL6:
 6216 076e 0346     		mov	r3, r0
 6217 0770 0C46     		mov	r4, r1
 6218 0772 1946     		mov	r1, r3
ARM GAS  /tmp/ccuwK2ly.s 			page 159


 6219 0774 2246     		mov	r2, r4
 6220 0776 4FF00003 		mov	r3, #0
 6221 077a 4FF00004 		mov	r4, #0
 6222 077e 1402     		lsls	r4, r2, #8
 6223 0780 44EA1164 		orr	r4, r4, r1, lsr #24
 6224 0784 0B02     		lsls	r3, r1, #8
 6225 0786 FA68     		ldr	r2, [r7, #12]
 6226 0788 5268     		ldr	r2, [r2, #4]
 6227 078a 5208     		lsrs	r2, r2, #1
 6228 078c 1146     		mov	r1, r2
 6229 078e 4FF00002 		mov	r2, #0
 6230 0792 5818     		adds	r0, r3, r1
 6231 0794 3860     		str	r0, [r7]
 6232 0796 44EB0203 		adc	r3, r4, r2
 6233 079a 7B60     		str	r3, [r7, #4]
 6234 079c FB68     		ldr	r3, [r7, #12]
 6235 079e 5B68     		ldr	r3, [r3, #4]
 6236 07a0 4FF00004 		mov	r4, #0
 6237 07a4 1A46     		mov	r2, r3
 6238 07a6 2346     		mov	r3, r4
 6239 07a8 D7E90001 		ldrd	r0, [r7]
 6240 07ac FFF7FEFF 		bl	__aeabi_uldivmod
 6241              	.LVL7:
 6242 07b0 0346     		mov	r3, r0
 6243 07b2 0C46     		mov	r4, r1
 6244              		.loc 1 2853 22 is_stmt 1 discriminator 48
 6245 07b4 7B62     		str	r3, [r7, #36]
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             break;
 6246              		.loc 1 2854 13 discriminator 48
 6247 07b6 C4E1     		b	.L437
 6248              	.L411:
2855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
 6249              		.loc 1 2856 35
 6250 07b8 FB68     		ldr	r3, [r7, #12]
 6251 07ba 5B6A     		ldr	r3, [r3, #36]
 6252 07bc 002B     		cmp	r3, #0
 6253 07be 5BD0     		beq	.L438
 6254              		.loc 1 2856 35 is_stmt 0 discriminator 1
 6255 07c0 FB68     		ldr	r3, [r7, #12]
 6256 07c2 5B6A     		ldr	r3, [r3, #36]
 6257 07c4 012B     		cmp	r3, #1
 6258 07c6 53D0     		beq	.L439
 6259              		.loc 1 2856 35 discriminator 3
 6260 07c8 FB68     		ldr	r3, [r7, #12]
 6261 07ca 5B6A     		ldr	r3, [r3, #36]
 6262 07cc 022B     		cmp	r3, #2
 6263 07ce 4BD0     		beq	.L440
 6264              		.loc 1 2856 35 discriminator 5
 6265 07d0 FB68     		ldr	r3, [r7, #12]
 6266 07d2 5B6A     		ldr	r3, [r3, #36]
 6267 07d4 032B     		cmp	r3, #3
 6268 07d6 43D0     		beq	.L441
 6269              		.loc 1 2856 35 discriminator 7
 6270 07d8 FB68     		ldr	r3, [r7, #12]
 6271 07da 5B6A     		ldr	r3, [r3, #36]
 6272 07dc 042B     		cmp	r3, #4
ARM GAS  /tmp/ccuwK2ly.s 			page 160


 6273 07de 3BD0     		beq	.L442
 6274              		.loc 1 2856 35 discriminator 9
 6275 07e0 FB68     		ldr	r3, [r7, #12]
 6276 07e2 5B6A     		ldr	r3, [r3, #36]
 6277 07e4 052B     		cmp	r3, #5
 6278 07e6 33D0     		beq	.L443
 6279              		.loc 1 2856 35 discriminator 11
 6280 07e8 FB68     		ldr	r3, [r7, #12]
 6281 07ea 5B6A     		ldr	r3, [r3, #36]
 6282 07ec 062B     		cmp	r3, #6
 6283 07ee 2BD0     		beq	.L444
 6284              		.loc 1 2856 35 discriminator 13
 6285 07f0 FB68     		ldr	r3, [r7, #12]
 6286 07f2 5B6A     		ldr	r3, [r3, #36]
 6287 07f4 072B     		cmp	r3, #7
 6288 07f6 23D0     		beq	.L445
 6289              		.loc 1 2856 35 discriminator 15
 6290 07f8 FB68     		ldr	r3, [r7, #12]
 6291 07fa 5B6A     		ldr	r3, [r3, #36]
 6292 07fc 082B     		cmp	r3, #8
 6293 07fe 1BD0     		beq	.L446
 6294              		.loc 1 2856 35 discriminator 17
 6295 0800 FB68     		ldr	r3, [r7, #12]
 6296 0802 5B6A     		ldr	r3, [r3, #36]
 6297 0804 092B     		cmp	r3, #9
 6298 0806 13D0     		beq	.L447
 6299              		.loc 1 2856 35 discriminator 19
 6300 0808 FB68     		ldr	r3, [r7, #12]
 6301 080a 5B6A     		ldr	r3, [r3, #36]
 6302 080c 0A2B     		cmp	r3, #10
 6303 080e 0BD0     		beq	.L448
 6304              		.loc 1 2856 35 discriminator 21
 6305 0810 FB68     		ldr	r3, [r7, #12]
 6306 0812 5B6A     		ldr	r3, [r3, #36]
 6307 0814 0B2B     		cmp	r3, #11
 6308 0816 03D1     		bne	.L449
 6309              		.loc 1 2856 35 discriminator 23
 6310 0818 AD4B     		ldr	r3, .L777+16
 6311 081a 4FF00004 		mov	r4, #0
 6312 081e 2EE0     		b	.L461
 6313              	.L449:
 6314              		.loc 1 2856 35 discriminator 24
 6315 0820 AC4B     		ldr	r3, .L777+20
 6316 0822 4FF00004 		mov	r4, #0
 6317 0826 2AE0     		b	.L461
 6318              	.L448:
 6319              		.loc 1 2856 35 discriminator 22
 6320 0828 AB4B     		ldr	r3, .L777+24
 6321 082a 4FF00004 		mov	r4, #0
 6322 082e 26E0     		b	.L461
 6323              	.L447:
 6324              		.loc 1 2856 35 discriminator 20
 6325 0830 AA4B     		ldr	r3, .L777+28
 6326 0832 4FF00004 		mov	r4, #0
 6327 0836 22E0     		b	.L461
 6328              	.L446:
 6329              		.loc 1 2856 35 discriminator 18
ARM GAS  /tmp/ccuwK2ly.s 			page 161


 6330 0838 A94B     		ldr	r3, .L777+32
 6331 083a 4FF00004 		mov	r4, #0
 6332 083e 1EE0     		b	.L461
 6333              	.L445:
 6334              		.loc 1 2856 35 discriminator 16
 6335 0840 A84B     		ldr	r3, .L777+36
 6336 0842 4FF00004 		mov	r4, #0
 6337 0846 1AE0     		b	.L461
 6338              	.L444:
 6339              		.loc 1 2856 35 discriminator 14
 6340 0848 9DA4     		adr	r4, .L777
 6341 084a D4E90034 		ldrd	r3, [r4]
 6342 084e 16E0     		b	.L461
 6343              	.L443:
 6344              		.loc 1 2856 35 discriminator 12
 6345 0850 A54B     		ldr	r3, .L777+40
 6346 0852 4FF00004 		mov	r4, #0
 6347 0856 12E0     		b	.L461
 6348              	.L442:
 6349              		.loc 1 2856 35 discriminator 10
 6350 0858 A44B     		ldr	r3, .L777+44
 6351 085a 4FF00004 		mov	r4, #0
 6352 085e 0EE0     		b	.L461
 6353              	.L441:
 6354              		.loc 1 2856 35 discriminator 8
 6355 0860 99A4     		adr	r4, .L777+8
 6356 0862 D4E90034 		ldrd	r3, [r4]
 6357 0866 0AE0     		b	.L461
 6358              	.L440:
 6359              		.loc 1 2856 35 discriminator 6
 6360 0868 A14B     		ldr	r3, .L777+48
 6361 086a 4FF00004 		mov	r4, #0
 6362 086e 06E0     		b	.L461
 6363              	.L439:
 6364              		.loc 1 2856 35 discriminator 4
 6365 0870 A04B     		ldr	r3, .L777+52
 6366 0872 4FF00004 		mov	r4, #0
 6367 0876 02E0     		b	.L461
 6368              	.L438:
 6369              		.loc 1 2856 35 discriminator 2
 6370 0878 964B     		ldr	r3, .L777+20
 6371 087a 4FF00004 		mov	r4, #0
 6372              	.L461:
 6373              		.loc 1 2856 35 discriminator 48
 6374 087e FA68     		ldr	r2, [r7, #12]
 6375 0880 5268     		ldr	r2, [r2, #4]
 6376 0882 5208     		lsrs	r2, r2, #1
 6377 0884 1146     		mov	r1, r2
 6378 0886 4FF00002 		mov	r2, #0
 6379 088a 13EB010A 		adds	r10, r3, r1
 6380 088e 44EB020B 		adc	fp, r4, r2
 6381 0892 FB68     		ldr	r3, [r7, #12]
 6382 0894 5B68     		ldr	r3, [r3, #4]
 6383 0896 4FF00004 		mov	r4, #0
 6384 089a 1A46     		mov	r2, r3
 6385 089c 2346     		mov	r3, r4
 6386 089e 5046     		mov	r0, r10
ARM GAS  /tmp/ccuwK2ly.s 			page 162


 6387 08a0 5946     		mov	r1, fp
 6388 08a2 FFF7FEFF 		bl	__aeabi_uldivmod
 6389              	.LVL8:
 6390 08a6 0346     		mov	r3, r0
 6391 08a8 0C46     		mov	r4, r1
 6392              		.loc 1 2856 22 is_stmt 1 discriminator 48
 6393 08aa 7B62     		str	r3, [r7, #36]
2857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             break;
 6394              		.loc 1 2857 13 discriminator 48
 6395 08ac 49E1     		b	.L437
 6396              	.L410:
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             pclk = HAL_RCC_GetSysClockFreq();
 6397              		.loc 1 2859 20
 6398 08ae FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 6399 08b2 B861     		str	r0, [r7, #24]
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 6400              		.loc 1 2860 35
 6401 08b4 BB69     		ldr	r3, [r7, #24]
 6402 08b6 1846     		mov	r0, r3
 6403 08b8 4FF00001 		mov	r1, #0
 6404 08bc FB68     		ldr	r3, [r7, #12]
 6405 08be 5B6A     		ldr	r3, [r3, #36]
 6406 08c0 002B     		cmp	r3, #0
 6407 08c2 67D0     		beq	.L462
 6408              		.loc 1 2860 35 is_stmt 0 discriminator 1
 6409 08c4 FB68     		ldr	r3, [r7, #12]
 6410 08c6 5B6A     		ldr	r3, [r3, #36]
 6411 08c8 012B     		cmp	r3, #1
 6412 08ca 5ED0     		beq	.L463
 6413              		.loc 1 2860 35 discriminator 3
 6414 08cc FB68     		ldr	r3, [r7, #12]
 6415 08ce 5B6A     		ldr	r3, [r3, #36]
 6416 08d0 022B     		cmp	r3, #2
 6417 08d2 55D0     		beq	.L464
 6418              		.loc 1 2860 35 discriminator 5
 6419 08d4 FB68     		ldr	r3, [r7, #12]
 6420 08d6 5B6A     		ldr	r3, [r3, #36]
 6421 08d8 032B     		cmp	r3, #3
 6422 08da 4CD0     		beq	.L465
 6423              		.loc 1 2860 35 discriminator 7
 6424 08dc FB68     		ldr	r3, [r7, #12]
 6425 08de 5B6A     		ldr	r3, [r3, #36]
 6426 08e0 042B     		cmp	r3, #4
 6427 08e2 43D0     		beq	.L466
 6428              		.loc 1 2860 35 discriminator 9
 6429 08e4 FB68     		ldr	r3, [r7, #12]
 6430 08e6 5B6A     		ldr	r3, [r3, #36]
 6431 08e8 052B     		cmp	r3, #5
 6432 08ea 3AD0     		beq	.L467
 6433              		.loc 1 2860 35 discriminator 11
 6434 08ec FB68     		ldr	r3, [r7, #12]
 6435 08ee 5B6A     		ldr	r3, [r3, #36]
 6436 08f0 062B     		cmp	r3, #6
 6437 08f2 31D0     		beq	.L468
 6438              		.loc 1 2860 35 discriminator 13
 6439 08f4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccuwK2ly.s 			page 163


 6440 08f6 5B6A     		ldr	r3, [r3, #36]
 6441 08f8 072B     		cmp	r3, #7
 6442 08fa 28D0     		beq	.L469
 6443              		.loc 1 2860 35 discriminator 15
 6444 08fc FB68     		ldr	r3, [r7, #12]
 6445 08fe 5B6A     		ldr	r3, [r3, #36]
 6446 0900 082B     		cmp	r3, #8
 6447 0902 1FD0     		beq	.L470
 6448              		.loc 1 2860 35 discriminator 17
 6449 0904 FB68     		ldr	r3, [r7, #12]
 6450 0906 5B6A     		ldr	r3, [r3, #36]
 6451 0908 092B     		cmp	r3, #9
 6452 090a 16D0     		beq	.L471
 6453              		.loc 1 2860 35 discriminator 19
 6454 090c FB68     		ldr	r3, [r7, #12]
 6455 090e 5B6A     		ldr	r3, [r3, #36]
 6456 0910 0A2B     		cmp	r3, #10
 6457 0912 0DD0     		beq	.L472
 6458              		.loc 1 2860 35 discriminator 21
 6459 0914 FB68     		ldr	r3, [r7, #12]
 6460 0916 5B6A     		ldr	r3, [r3, #36]
 6461 0918 0B2B     		cmp	r3, #11
 6462 091a 04D1     		bne	.L473
 6463              		.loc 1 2860 35 discriminator 23
 6464 091c 4FF48073 		mov	r3, #256
 6465 0920 4FF00004 		mov	r4, #0
 6466 0924 3AE0     		b	.L485
 6467              	.L473:
 6468              		.loc 1 2860 35 discriminator 24
 6469 0926 4FF00103 		mov	r3, #1
 6470 092a 4FF00004 		mov	r4, #0
 6471 092e 35E0     		b	.L485
 6472              	.L472:
 6473              		.loc 1 2860 35 discriminator 22
 6474 0930 4FF08003 		mov	r3, #128
 6475 0934 4FF00004 		mov	r4, #0
 6476 0938 30E0     		b	.L485
 6477              	.L471:
 6478              		.loc 1 2860 35 discriminator 20
 6479 093a 4FF04003 		mov	r3, #64
 6480 093e 4FF00004 		mov	r4, #0
 6481 0942 2BE0     		b	.L485
 6482              	.L470:
 6483              		.loc 1 2860 35 discriminator 18
 6484 0944 4FF02003 		mov	r3, #32
 6485 0948 4FF00004 		mov	r4, #0
 6486 094c 26E0     		b	.L485
 6487              	.L469:
 6488              		.loc 1 2860 35 discriminator 16
 6489 094e 4FF01003 		mov	r3, #16
 6490 0952 4FF00004 		mov	r4, #0
 6491 0956 21E0     		b	.L485
 6492              	.L468:
 6493              		.loc 1 2860 35 discriminator 14
 6494 0958 4FF00C03 		mov	r3, #12
 6495 095c 4FF00004 		mov	r4, #0
 6496 0960 1CE0     		b	.L485
ARM GAS  /tmp/ccuwK2ly.s 			page 164


 6497              	.L467:
 6498              		.loc 1 2860 35 discriminator 12
 6499 0962 4FF00A03 		mov	r3, #10
 6500 0966 4FF00004 		mov	r4, #0
 6501 096a 17E0     		b	.L485
 6502              	.L466:
 6503              		.loc 1 2860 35 discriminator 10
 6504 096c 4FF00803 		mov	r3, #8
 6505 0970 4FF00004 		mov	r4, #0
 6506 0974 12E0     		b	.L485
 6507              	.L465:
 6508              		.loc 1 2860 35 discriminator 8
 6509 0976 4FF00603 		mov	r3, #6
 6510 097a 4FF00004 		mov	r4, #0
 6511 097e 0DE0     		b	.L485
 6512              	.L464:
 6513              		.loc 1 2860 35 discriminator 6
 6514 0980 4FF00403 		mov	r3, #4
 6515 0984 4FF00004 		mov	r4, #0
 6516 0988 08E0     		b	.L485
 6517              	.L463:
 6518              		.loc 1 2860 35 discriminator 4
 6519 098a 4FF00203 		mov	r3, #2
 6520 098e 4FF00004 		mov	r4, #0
 6521 0992 03E0     		b	.L485
 6522              	.L462:
 6523              		.loc 1 2860 35 discriminator 2
 6524 0994 4FF00103 		mov	r3, #1
 6525 0998 4FF00004 		mov	r4, #0
 6526              	.L485:
 6527              		.loc 1 2860 35 discriminator 48
 6528 099c 1A46     		mov	r2, r3
 6529 099e 2346     		mov	r3, r4
 6530 09a0 FFF7FEFF 		bl	__aeabi_uldivmod
 6531              	.LVL9:
 6532 09a4 0346     		mov	r3, r0
 6533 09a6 0C46     		mov	r4, r1
 6534 09a8 1946     		mov	r1, r3
 6535 09aa 2246     		mov	r2, r4
 6536 09ac 4FF00003 		mov	r3, #0
 6537 09b0 4FF00004 		mov	r4, #0
 6538 09b4 1402     		lsls	r4, r2, #8
 6539 09b6 44EA1164 		orr	r4, r4, r1, lsr #24
 6540 09ba 0B02     		lsls	r3, r1, #8
 6541 09bc FA68     		ldr	r2, [r7, #12]
 6542 09be 5268     		ldr	r2, [r2, #4]
 6543 09c0 5208     		lsrs	r2, r2, #1
 6544 09c2 1146     		mov	r1, r2
 6545 09c4 4FF00002 		mov	r2, #0
 6546 09c8 13EB0108 		adds	r8, r3, r1
 6547 09cc 44EB0209 		adc	r9, r4, r2
 6548 09d0 FB68     		ldr	r3, [r7, #12]
 6549 09d2 5B68     		ldr	r3, [r3, #4]
 6550 09d4 4FF00004 		mov	r4, #0
 6551 09d8 1A46     		mov	r2, r3
 6552 09da 2346     		mov	r3, r4
 6553 09dc 4046     		mov	r0, r8
ARM GAS  /tmp/ccuwK2ly.s 			page 165


 6554 09de 4946     		mov	r1, r9
 6555 09e0 FFF7FEFF 		bl	__aeabi_uldivmod
 6556              	.LVL10:
 6557 09e4 0346     		mov	r3, r0
 6558 09e6 0C46     		mov	r4, r1
 6559              		.loc 1 2860 22 is_stmt 1 discriminator 48
 6560 09e8 7B62     		str	r3, [r7, #36]
2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             break;
 6561              		.loc 1 2861 13 discriminator 48
 6562 09ea AAE0     		b	.L437
 6563              	.L408:
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
 6564              		.loc 1 2863 35
 6565 09ec FB68     		ldr	r3, [r7, #12]
 6566 09ee 5B6A     		ldr	r3, [r3, #36]
 6567 09f0 002B     		cmp	r3, #0
 6568 09f2 00F08780 		beq	.L486
 6569              		.loc 1 2863 35 is_stmt 0 discriminator 1
 6570 09f6 FB68     		ldr	r3, [r7, #12]
 6571 09f8 5B6A     		ldr	r3, [r3, #36]
 6572 09fa 012B     		cmp	r3, #1
 6573 09fc 5BD0     		beq	.L487
 6574              		.loc 1 2863 35 discriminator 3
 6575 09fe FB68     		ldr	r3, [r7, #12]
 6576 0a00 5B6A     		ldr	r3, [r3, #36]
 6577 0a02 022B     		cmp	r3, #2
 6578 0a04 52D0     		beq	.L488
 6579              		.loc 1 2863 35 discriminator 5
 6580 0a06 FB68     		ldr	r3, [r7, #12]
 6581 0a08 5B6A     		ldr	r3, [r3, #36]
 6582 0a0a 032B     		cmp	r3, #3
 6583 0a0c 4AD0     		beq	.L489
 6584              		.loc 1 2863 35 discriminator 7
 6585 0a0e FB68     		ldr	r3, [r7, #12]
 6586 0a10 5B6A     		ldr	r3, [r3, #36]
 6587 0a12 042B     		cmp	r3, #4
 6588 0a14 41D0     		beq	.L490
 6589              		.loc 1 2863 35 discriminator 9
 6590 0a16 FB68     		ldr	r3, [r7, #12]
 6591 0a18 5B6A     		ldr	r3, [r3, #36]
 6592 0a1a 052B     		cmp	r3, #5
 6593 0a1c 39D0     		beq	.L491
 6594              		.loc 1 2863 35 discriminator 11
 6595 0a1e FB68     		ldr	r3, [r7, #12]
 6596 0a20 5B6A     		ldr	r3, [r3, #36]
 6597 0a22 062B     		cmp	r3, #6
 6598 0a24 31D0     		beq	.L492
 6599              		.loc 1 2863 35 discriminator 13
 6600 0a26 FB68     		ldr	r3, [r7, #12]
 6601 0a28 5B6A     		ldr	r3, [r3, #36]
 6602 0a2a 072B     		cmp	r3, #7
 6603 0a2c 28D0     		beq	.L493
 6604              		.loc 1 2863 35 discriminator 15
 6605 0a2e FB68     		ldr	r3, [r7, #12]
 6606 0a30 5B6A     		ldr	r3, [r3, #36]
 6607 0a32 082B     		cmp	r3, #8
ARM GAS  /tmp/ccuwK2ly.s 			page 166


 6608 0a34 1FD0     		beq	.L494
 6609              		.loc 1 2863 35 discriminator 17
 6610 0a36 FB68     		ldr	r3, [r7, #12]
 6611 0a38 5B6A     		ldr	r3, [r3, #36]
 6612 0a3a 092B     		cmp	r3, #9
 6613 0a3c 16D0     		beq	.L495
 6614              		.loc 1 2863 35 discriminator 19
 6615 0a3e FB68     		ldr	r3, [r7, #12]
 6616 0a40 5B6A     		ldr	r3, [r3, #36]
 6617 0a42 0A2B     		cmp	r3, #10
 6618 0a44 0DD0     		beq	.L496
 6619              		.loc 1 2863 35 discriminator 21
 6620 0a46 FB68     		ldr	r3, [r7, #12]
 6621 0a48 5B6A     		ldr	r3, [r3, #36]
 6622 0a4a 0B2B     		cmp	r3, #11
 6623 0a4c 04D1     		bne	.L497
 6624              		.loc 1 2863 35 discriminator 23
 6625 0a4e 4FF40043 		mov	r3, #32768
 6626 0a52 4FF00004 		mov	r4, #0
 6627 0a56 59E0     		b	.L509
 6628              	.L497:
 6629              		.loc 1 2863 35 discriminator 24
 6630 0a58 4FF40003 		mov	r3, #8388608
 6631 0a5c 4FF00004 		mov	r4, #0
 6632 0a60 54E0     		b	.L509
 6633              	.L496:
 6634              		.loc 1 2863 35 discriminator 22
 6635 0a62 4FF48033 		mov	r3, #65536
 6636 0a66 4FF00004 		mov	r4, #0
 6637 0a6a 4FE0     		b	.L509
 6638              	.L495:
 6639              		.loc 1 2863 35 discriminator 20
 6640 0a6c 4FF40033 		mov	r3, #131072
 6641 0a70 4FF00004 		mov	r4, #0
 6642 0a74 4AE0     		b	.L509
 6643              	.L494:
 6644              		.loc 1 2863 35 discriminator 18
 6645 0a76 4FF48023 		mov	r3, #262144
 6646 0a7a 4FF00004 		mov	r4, #0
 6647 0a7e 45E0     		b	.L509
 6648              	.L493:
 6649              		.loc 1 2863 35 discriminator 16
 6650 0a80 4FF40023 		mov	r3, #524288
 6651 0a84 4FF00004 		mov	r4, #0
 6652 0a88 40E0     		b	.L509
 6653              	.L492:
 6654              		.loc 1 2863 35 discriminator 14
 6655 0a8a 1B4B     		ldr	r3, .L777+56
 6656 0a8c 4FF00004 		mov	r4, #0
 6657 0a90 3CE0     		b	.L509
 6658              	.L491:
 6659              		.loc 1 2863 35 discriminator 12
 6660 0a92 1A4B     		ldr	r3, .L777+60
 6661 0a94 4FF00004 		mov	r4, #0
 6662 0a98 38E0     		b	.L509
 6663              	.L490:
 6664              		.loc 1 2863 35 discriminator 10
ARM GAS  /tmp/ccuwK2ly.s 			page 167


 6665 0a9a 4FF48013 		mov	r3, #1048576
 6666 0a9e 4FF00004 		mov	r4, #0
 6667 0aa2 33E0     		b	.L509
 6668              	.L489:
 6669              		.loc 1 2863 35 discriminator 8
 6670 0aa4 164B     		ldr	r3, .L777+64
 6671 0aa6 4FF00004 		mov	r4, #0
 6672 0aaa 2FE0     		b	.L509
 6673              	.L488:
 6674              		.loc 1 2863 35 discriminator 6
 6675 0aac 4FF40013 		mov	r3, #2097152
 6676 0ab0 4FF00004 		mov	r4, #0
 6677 0ab4 2AE0     		b	.L509
 6678              	.L487:
 6679              		.loc 1 2863 35 discriminator 4
 6680 0ab6 4FF48003 		mov	r3, #4194304
 6681 0aba 4FF00004 		mov	r4, #0
 6682 0abe 25E0     		b	.L509
 6683              	.L778:
 6684              		.align	3
 6685              	.L777:
 6686 0ac0 00555814 		.word	341333248
 6687 0ac4 00000000 		.word	0
 6688 0ac8 00AAB028 		.word	682666496
 6689 0acc 00000000 		.word	0
 6690 0ad0 0024F400 		.word	16000000
 6691 0ad4 000024F4 		.word	-198967296
 6692 0ad8 0048E801 		.word	32000000
 6693 0adc 0090D003 		.word	64000000
 6694 0ae0 0020A107 		.word	128000000
 6695 0ae4 0040420F 		.word	256000000
 6696 0ae8 00006A18 		.word	409600000
 6697 0aec 0080841E 		.word	512000000
 6698 0af0 0000093D 		.word	1024000000
 6699 0af4 0000127A 		.word	2048000000
 6700 0af8 00AA0A00 		.word	698880
 6701 0afc 00CC0C00 		.word	838656
 6702 0b00 00551500 		.word	1398016
 6703              	.L486:
 6704              		.loc 1 2863 35 discriminator 2
 6705 0b04 4FF40003 		mov	r3, #8388608
 6706 0b08 4FF00004 		mov	r4, #0
 6707              	.L509:
 6708              		.loc 1 2863 35 discriminator 48
 6709 0b0c FA68     		ldr	r2, [r7, #12]
 6710 0b0e 5268     		ldr	r2, [r2, #4]
 6711 0b10 5208     		lsrs	r2, r2, #1
 6712 0b12 1146     		mov	r1, r2
 6713 0b14 4FF00002 		mov	r2, #0
 6714 0b18 5D18     		adds	r5, r3, r1
 6715 0b1a 44EB0206 		adc	r6, r4, r2
 6716 0b1e FB68     		ldr	r3, [r7, #12]
 6717 0b20 5B68     		ldr	r3, [r3, #4]
 6718 0b22 4FF00004 		mov	r4, #0
 6719 0b26 1A46     		mov	r2, r3
 6720 0b28 2346     		mov	r3, r4
 6721 0b2a 2846     		mov	r0, r5
ARM GAS  /tmp/ccuwK2ly.s 			page 168


 6722 0b2c 3146     		mov	r1, r6
 6723 0b2e FFF7FEFF 		bl	__aeabi_uldivmod
 6724              	.LVL11:
 6725 0b32 0346     		mov	r3, r0
 6726 0b34 0C46     		mov	r4, r1
 6727              		.loc 1 2863 22 is_stmt 1 discriminator 48
 6728 0b36 7B62     		str	r3, [r7, #36]
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             break;
 6729              		.loc 1 2864 13 discriminator 48
 6730 0b38 03E0     		b	.L437
 6731              	.L407:
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           default:
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ret = HAL_ERROR;
 6732              		.loc 1 2866 17
 6733 0b3a 0123     		movs	r3, #1
 6734 0b3c 87F82330 		strb	r3, [r7, #35]
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             break;
 6735              		.loc 1 2867 13
 6736 0b40 00BF     		nop
 6737              	.L437:
2868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
2871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 6738              		.loc 1 2871 12
 6739 0b42 7B6A     		ldr	r3, [r7, #36]
 6740 0b44 B3F5407F 		cmp	r3, #768
 6741 0b48 09D3     		bcc	.L510
 6742              		.loc 1 2871 42 discriminator 1
 6743 0b4a 7B6A     		ldr	r3, [r7, #36]
 6744 0b4c B3F5801F 		cmp	r3, #1048576
 6745 0b50 05D2     		bcs	.L510
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
 6746              		.loc 1 2873 16
 6747 0b52 FB68     		ldr	r3, [r7, #12]
 6748 0b54 1B68     		ldr	r3, [r3]
 6749              		.loc 1 2873 32
 6750 0b56 7A6A     		ldr	r2, [r7, #36]
 6751 0b58 DA60     		str	r2, [r3, #12]
 6752 0b5a 00F01CBC 		b	.L511
 6753              	.L510:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ret = HAL_ERROR;
 6754              		.loc 1 2877 15
 6755 0b5e 0123     		movs	r3, #1
 6756 0b60 87F82330 		strb	r3, [r7, #35]
 6757 0b64 00F017BC 		b	.L511
 6758              	.L300:
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     } /* if (lpuart_ker_ck_pres != 0) */
2881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
ARM GAS  /tmp/ccuwK2ly.s 			page 169


 6759              		.loc 1 2883 23
 6760 0b68 FB68     		ldr	r3, [r7, #12]
 6761 0b6a DB69     		ldr	r3, [r3, #28]
 6762              		.loc 1 2883 11
 6763 0b6c B3F5004F 		cmp	r3, #32768
 6764 0b70 40F00582 		bne	.L512
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
 6765              		.loc 1 2885 5
 6766 0b74 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 6767 0b78 082B     		cmp	r3, #8
 6768 0b7a 00F2DE81 		bhi	.L513
 6769 0b7e 01A2     		adr	r2, .L515
 6770 0b80 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6771              		.p2align 2
 6772              	.L515:
 6773 0b84 A90B0000 		.word	.L519+1
 6774 0b88 610C0000 		.word	.L518+1
 6775 0b8c 190D0000 		.word	.L517+1
 6776 0b90 3B0F0000 		.word	.L513+1
 6777 0b94 C10D0000 		.word	.L516+1
 6778 0b98 3B0F0000 		.word	.L513+1
 6779 0b9c 3B0F0000 		.word	.L513+1
 6780 0ba0 3B0F0000 		.word	.L513+1
 6781 0ba4 790E0000 		.word	.L514+1
 6782              		.p2align 1
 6783              	.L519:
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 6784              		.loc 1 2888 16
 6785 0ba8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6786 0bac B861     		str	r0, [r7, #24]
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
 6787              		.loc 1 2889 31
 6788 0bae FB68     		ldr	r3, [r7, #12]
 6789 0bb0 5B6A     		ldr	r3, [r3, #36]
 6790 0bb2 002B     		cmp	r3, #0
 6791 0bb4 44D0     		beq	.L520
 6792              		.loc 1 2889 31 is_stmt 0 discriminator 1
 6793 0bb6 FB68     		ldr	r3, [r7, #12]
 6794 0bb8 5B6A     		ldr	r3, [r3, #36]
 6795 0bba 012B     		cmp	r3, #1
 6796 0bbc 3ED0     		beq	.L521
 6797              		.loc 1 2889 31 discriminator 3
 6798 0bbe FB68     		ldr	r3, [r7, #12]
 6799 0bc0 5B6A     		ldr	r3, [r3, #36]
 6800 0bc2 022B     		cmp	r3, #2
 6801 0bc4 38D0     		beq	.L522
 6802              		.loc 1 2889 31 discriminator 5
 6803 0bc6 FB68     		ldr	r3, [r7, #12]
 6804 0bc8 5B6A     		ldr	r3, [r3, #36]
 6805 0bca 032B     		cmp	r3, #3
 6806 0bcc 32D0     		beq	.L523
 6807              		.loc 1 2889 31 discriminator 7
 6808 0bce FB68     		ldr	r3, [r7, #12]
 6809 0bd0 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccuwK2ly.s 			page 170


 6810 0bd2 042B     		cmp	r3, #4
 6811 0bd4 2CD0     		beq	.L524
 6812              		.loc 1 2889 31 discriminator 9
 6813 0bd6 FB68     		ldr	r3, [r7, #12]
 6814 0bd8 5B6A     		ldr	r3, [r3, #36]
 6815 0bda 052B     		cmp	r3, #5
 6816 0bdc 26D0     		beq	.L525
 6817              		.loc 1 2889 31 discriminator 11
 6818 0bde FB68     		ldr	r3, [r7, #12]
 6819 0be0 5B6A     		ldr	r3, [r3, #36]
 6820 0be2 062B     		cmp	r3, #6
 6821 0be4 20D0     		beq	.L526
 6822              		.loc 1 2889 31 discriminator 13
 6823 0be6 FB68     		ldr	r3, [r7, #12]
 6824 0be8 5B6A     		ldr	r3, [r3, #36]
 6825 0bea 072B     		cmp	r3, #7
 6826 0bec 1AD0     		beq	.L527
 6827              		.loc 1 2889 31 discriminator 15
 6828 0bee FB68     		ldr	r3, [r7, #12]
 6829 0bf0 5B6A     		ldr	r3, [r3, #36]
 6830 0bf2 082B     		cmp	r3, #8
 6831 0bf4 14D0     		beq	.L528
 6832              		.loc 1 2889 31 discriminator 17
 6833 0bf6 FB68     		ldr	r3, [r7, #12]
 6834 0bf8 5B6A     		ldr	r3, [r3, #36]
 6835 0bfa 092B     		cmp	r3, #9
 6836 0bfc 0ED0     		beq	.L529
 6837              		.loc 1 2889 31 discriminator 19
 6838 0bfe FB68     		ldr	r3, [r7, #12]
 6839 0c00 5B6A     		ldr	r3, [r3, #36]
 6840 0c02 0A2B     		cmp	r3, #10
 6841 0c04 08D0     		beq	.L530
 6842              		.loc 1 2889 31 discriminator 21
 6843 0c06 FB68     		ldr	r3, [r7, #12]
 6844 0c08 5B6A     		ldr	r3, [r3, #36]
 6845 0c0a 0B2B     		cmp	r3, #11
 6846 0c0c 02D1     		bne	.L531
 6847              		.loc 1 2889 31 discriminator 23
 6848 0c0e 4FF48073 		mov	r3, #256
 6849 0c12 16E0     		b	.L543
 6850              	.L531:
 6851              		.loc 1 2889 31 discriminator 24
 6852 0c14 0123     		movs	r3, #1
 6853 0c16 14E0     		b	.L543
 6854              	.L530:
 6855              		.loc 1 2889 31 discriminator 22
 6856 0c18 8023     		movs	r3, #128
 6857 0c1a 12E0     		b	.L543
 6858              	.L529:
 6859              		.loc 1 2889 31 discriminator 20
 6860 0c1c 4023     		movs	r3, #64
 6861 0c1e 10E0     		b	.L543
 6862              	.L528:
 6863              		.loc 1 2889 31 discriminator 18
 6864 0c20 2023     		movs	r3, #32
 6865 0c22 0EE0     		b	.L543
 6866              	.L527:
ARM GAS  /tmp/ccuwK2ly.s 			page 171


 6867              		.loc 1 2889 31 discriminator 16
 6868 0c24 1023     		movs	r3, #16
 6869 0c26 0CE0     		b	.L543
 6870              	.L526:
 6871              		.loc 1 2889 31 discriminator 14
 6872 0c28 0C23     		movs	r3, #12
 6873 0c2a 0AE0     		b	.L543
 6874              	.L525:
 6875              		.loc 1 2889 31 discriminator 12
 6876 0c2c 0A23     		movs	r3, #10
 6877 0c2e 08E0     		b	.L543
 6878              	.L524:
 6879              		.loc 1 2889 31 discriminator 10
 6880 0c30 0823     		movs	r3, #8
 6881 0c32 06E0     		b	.L543
 6882              	.L523:
 6883              		.loc 1 2889 31 discriminator 8
 6884 0c34 0623     		movs	r3, #6
 6885 0c36 04E0     		b	.L543
 6886              	.L522:
 6887              		.loc 1 2889 31 discriminator 6
 6888 0c38 0423     		movs	r3, #4
 6889 0c3a 02E0     		b	.L543
 6890              	.L521:
 6891              		.loc 1 2889 31 discriminator 4
 6892 0c3c 0223     		movs	r3, #2
 6893 0c3e 00E0     		b	.L543
 6894              	.L520:
 6895              		.loc 1 2889 31 discriminator 2
 6896 0c40 0123     		movs	r3, #1
 6897              	.L543:
 6898              		.loc 1 2889 31 discriminator 48
 6899 0c42 BA69     		ldr	r2, [r7, #24]
 6900 0c44 B2FBF3F3 		udiv	r3, r2, r3
 6901 0c48 5A00     		lsls	r2, r3, #1
 6902 0c4a FB68     		ldr	r3, [r7, #12]
 6903 0c4c 5B68     		ldr	r3, [r3, #4]
 6904 0c4e 5B08     		lsrs	r3, r3, #1
 6905 0c50 1A44     		add	r2, r2, r3
 6906 0c52 FB68     		ldr	r3, [r7, #12]
 6907 0c54 5B68     		ldr	r3, [r3, #4]
 6908 0c56 B2FBF3F3 		udiv	r3, r2, r3
 6909              		.loc 1 2889 20 is_stmt 1 discriminator 48
 6910 0c5a 9BB2     		uxth	r3, r3
 6911              		.loc 1 2889 18 discriminator 48
 6912 0c5c 7B62     		str	r3, [r7, #36]
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 6913              		.loc 1 2890 9 discriminator 48
 6914 0c5e 70E1     		b	.L544
 6915              	.L518:
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 6916              		.loc 1 2892 16
 6917 0c60 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6918 0c64 B861     		str	r0, [r7, #24]
2893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
 6919              		.loc 1 2893 31
ARM GAS  /tmp/ccuwK2ly.s 			page 172


 6920 0c66 FB68     		ldr	r3, [r7, #12]
 6921 0c68 5B6A     		ldr	r3, [r3, #36]
 6922 0c6a 002B     		cmp	r3, #0
 6923 0c6c 44D0     		beq	.L545
 6924              		.loc 1 2893 31 is_stmt 0 discriminator 1
 6925 0c6e FB68     		ldr	r3, [r7, #12]
 6926 0c70 5B6A     		ldr	r3, [r3, #36]
 6927 0c72 012B     		cmp	r3, #1
 6928 0c74 3ED0     		beq	.L546
 6929              		.loc 1 2893 31 discriminator 3
 6930 0c76 FB68     		ldr	r3, [r7, #12]
 6931 0c78 5B6A     		ldr	r3, [r3, #36]
 6932 0c7a 022B     		cmp	r3, #2
 6933 0c7c 38D0     		beq	.L547
 6934              		.loc 1 2893 31 discriminator 5
 6935 0c7e FB68     		ldr	r3, [r7, #12]
 6936 0c80 5B6A     		ldr	r3, [r3, #36]
 6937 0c82 032B     		cmp	r3, #3
 6938 0c84 32D0     		beq	.L548
 6939              		.loc 1 2893 31 discriminator 7
 6940 0c86 FB68     		ldr	r3, [r7, #12]
 6941 0c88 5B6A     		ldr	r3, [r3, #36]
 6942 0c8a 042B     		cmp	r3, #4
 6943 0c8c 2CD0     		beq	.L549
 6944              		.loc 1 2893 31 discriminator 9
 6945 0c8e FB68     		ldr	r3, [r7, #12]
 6946 0c90 5B6A     		ldr	r3, [r3, #36]
 6947 0c92 052B     		cmp	r3, #5
 6948 0c94 26D0     		beq	.L550
 6949              		.loc 1 2893 31 discriminator 11
 6950 0c96 FB68     		ldr	r3, [r7, #12]
 6951 0c98 5B6A     		ldr	r3, [r3, #36]
 6952 0c9a 062B     		cmp	r3, #6
 6953 0c9c 20D0     		beq	.L551
 6954              		.loc 1 2893 31 discriminator 13
 6955 0c9e FB68     		ldr	r3, [r7, #12]
 6956 0ca0 5B6A     		ldr	r3, [r3, #36]
 6957 0ca2 072B     		cmp	r3, #7
 6958 0ca4 1AD0     		beq	.L552
 6959              		.loc 1 2893 31 discriminator 15
 6960 0ca6 FB68     		ldr	r3, [r7, #12]
 6961 0ca8 5B6A     		ldr	r3, [r3, #36]
 6962 0caa 082B     		cmp	r3, #8
 6963 0cac 14D0     		beq	.L553
 6964              		.loc 1 2893 31 discriminator 17
 6965 0cae FB68     		ldr	r3, [r7, #12]
 6966 0cb0 5B6A     		ldr	r3, [r3, #36]
 6967 0cb2 092B     		cmp	r3, #9
 6968 0cb4 0ED0     		beq	.L554
 6969              		.loc 1 2893 31 discriminator 19
 6970 0cb6 FB68     		ldr	r3, [r7, #12]
 6971 0cb8 5B6A     		ldr	r3, [r3, #36]
 6972 0cba 0A2B     		cmp	r3, #10
 6973 0cbc 08D0     		beq	.L555
 6974              		.loc 1 2893 31 discriminator 21
 6975 0cbe FB68     		ldr	r3, [r7, #12]
 6976 0cc0 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccuwK2ly.s 			page 173


 6977 0cc2 0B2B     		cmp	r3, #11
 6978 0cc4 02D1     		bne	.L556
 6979              		.loc 1 2893 31 discriminator 23
 6980 0cc6 4FF48073 		mov	r3, #256
 6981 0cca 16E0     		b	.L568
 6982              	.L556:
 6983              		.loc 1 2893 31 discriminator 24
 6984 0ccc 0123     		movs	r3, #1
 6985 0cce 14E0     		b	.L568
 6986              	.L555:
 6987              		.loc 1 2893 31 discriminator 22
 6988 0cd0 8023     		movs	r3, #128
 6989 0cd2 12E0     		b	.L568
 6990              	.L554:
 6991              		.loc 1 2893 31 discriminator 20
 6992 0cd4 4023     		movs	r3, #64
 6993 0cd6 10E0     		b	.L568
 6994              	.L553:
 6995              		.loc 1 2893 31 discriminator 18
 6996 0cd8 2023     		movs	r3, #32
 6997 0cda 0EE0     		b	.L568
 6998              	.L552:
 6999              		.loc 1 2893 31 discriminator 16
 7000 0cdc 1023     		movs	r3, #16
 7001 0cde 0CE0     		b	.L568
 7002              	.L551:
 7003              		.loc 1 2893 31 discriminator 14
 7004 0ce0 0C23     		movs	r3, #12
 7005 0ce2 0AE0     		b	.L568
 7006              	.L550:
 7007              		.loc 1 2893 31 discriminator 12
 7008 0ce4 0A23     		movs	r3, #10
 7009 0ce6 08E0     		b	.L568
 7010              	.L549:
 7011              		.loc 1 2893 31 discriminator 10
 7012 0ce8 0823     		movs	r3, #8
 7013 0cea 06E0     		b	.L568
 7014              	.L548:
 7015              		.loc 1 2893 31 discriminator 8
 7016 0cec 0623     		movs	r3, #6
 7017 0cee 04E0     		b	.L568
 7018              	.L547:
 7019              		.loc 1 2893 31 discriminator 6
 7020 0cf0 0423     		movs	r3, #4
 7021 0cf2 02E0     		b	.L568
 7022              	.L546:
 7023              		.loc 1 2893 31 discriminator 4
 7024 0cf4 0223     		movs	r3, #2
 7025 0cf6 00E0     		b	.L568
 7026              	.L545:
 7027              		.loc 1 2893 31 discriminator 2
 7028 0cf8 0123     		movs	r3, #1
 7029              	.L568:
 7030              		.loc 1 2893 31 discriminator 48
 7031 0cfa BA69     		ldr	r2, [r7, #24]
 7032 0cfc B2FBF3F3 		udiv	r3, r2, r3
 7033 0d00 5A00     		lsls	r2, r3, #1
ARM GAS  /tmp/ccuwK2ly.s 			page 174


 7034 0d02 FB68     		ldr	r3, [r7, #12]
 7035 0d04 5B68     		ldr	r3, [r3, #4]
 7036 0d06 5B08     		lsrs	r3, r3, #1
 7037 0d08 1A44     		add	r2, r2, r3
 7038 0d0a FB68     		ldr	r3, [r7, #12]
 7039 0d0c 5B68     		ldr	r3, [r3, #4]
 7040 0d0e B2FBF3F3 		udiv	r3, r2, r3
 7041              		.loc 1 2893 20 is_stmt 1 discriminator 48
 7042 0d12 9BB2     		uxth	r3, r3
 7043              		.loc 1 2893 18 discriminator 48
 7044 0d14 7B62     		str	r3, [r7, #36]
2894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7045              		.loc 1 2894 9 discriminator 48
 7046 0d16 14E1     		b	.L544
 7047              	.L517:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
 7048              		.loc 1 2896 31
 7049 0d18 FB68     		ldr	r3, [r7, #12]
 7050 0d1a 5B6A     		ldr	r3, [r3, #36]
 7051 0d1c 002B     		cmp	r3, #0
 7052 0d1e 43D0     		beq	.L569
 7053              		.loc 1 2896 31 is_stmt 0 discriminator 1
 7054 0d20 FB68     		ldr	r3, [r7, #12]
 7055 0d22 5B6A     		ldr	r3, [r3, #36]
 7056 0d24 012B     		cmp	r3, #1
 7057 0d26 3DD0     		beq	.L570
 7058              		.loc 1 2896 31 discriminator 3
 7059 0d28 FB68     		ldr	r3, [r7, #12]
 7060 0d2a 5B6A     		ldr	r3, [r3, #36]
 7061 0d2c 022B     		cmp	r3, #2
 7062 0d2e 37D0     		beq	.L571
 7063              		.loc 1 2896 31 discriminator 5
 7064 0d30 FB68     		ldr	r3, [r7, #12]
 7065 0d32 5B6A     		ldr	r3, [r3, #36]
 7066 0d34 032B     		cmp	r3, #3
 7067 0d36 31D0     		beq	.L572
 7068              		.loc 1 2896 31 discriminator 7
 7069 0d38 FB68     		ldr	r3, [r7, #12]
 7070 0d3a 5B6A     		ldr	r3, [r3, #36]
 7071 0d3c 042B     		cmp	r3, #4
 7072 0d3e 2BD0     		beq	.L573
 7073              		.loc 1 2896 31 discriminator 9
 7074 0d40 FB68     		ldr	r3, [r7, #12]
 7075 0d42 5B6A     		ldr	r3, [r3, #36]
 7076 0d44 052B     		cmp	r3, #5
 7077 0d46 25D0     		beq	.L574
 7078              		.loc 1 2896 31 discriminator 11
 7079 0d48 FB68     		ldr	r3, [r7, #12]
 7080 0d4a 5B6A     		ldr	r3, [r3, #36]
 7081 0d4c 062B     		cmp	r3, #6
 7082 0d4e 1FD0     		beq	.L575
 7083              		.loc 1 2896 31 discriminator 13
 7084 0d50 FB68     		ldr	r3, [r7, #12]
 7085 0d52 5B6A     		ldr	r3, [r3, #36]
 7086 0d54 072B     		cmp	r3, #7
 7087 0d56 19D0     		beq	.L576
ARM GAS  /tmp/ccuwK2ly.s 			page 175


 7088              		.loc 1 2896 31 discriminator 15
 7089 0d58 FB68     		ldr	r3, [r7, #12]
 7090 0d5a 5B6A     		ldr	r3, [r3, #36]
 7091 0d5c 082B     		cmp	r3, #8
 7092 0d5e 13D0     		beq	.L577
 7093              		.loc 1 2896 31 discriminator 17
 7094 0d60 FB68     		ldr	r3, [r7, #12]
 7095 0d62 5B6A     		ldr	r3, [r3, #36]
 7096 0d64 092B     		cmp	r3, #9
 7097 0d66 0DD0     		beq	.L578
 7098              		.loc 1 2896 31 discriminator 19
 7099 0d68 FB68     		ldr	r3, [r7, #12]
 7100 0d6a 5B6A     		ldr	r3, [r3, #36]
 7101 0d6c 0A2B     		cmp	r3, #10
 7102 0d6e 07D0     		beq	.L579
 7103              		.loc 1 2896 31 discriminator 21
 7104 0d70 FB68     		ldr	r3, [r7, #12]
 7105 0d72 5B6A     		ldr	r3, [r3, #36]
 7106 0d74 0B2B     		cmp	r3, #11
 7107 0d76 01D1     		bne	.L580
 7108              		.loc 1 2896 31 discriminator 23
 7109 0d78 8E4B     		ldr	r3, .L779
 7110 0d7a 16E0     		b	.L592
 7111              	.L580:
 7112              		.loc 1 2896 31 discriminator 24
 7113 0d7c 8E4B     		ldr	r3, .L779+4
 7114 0d7e 14E0     		b	.L592
 7115              	.L579:
 7116              		.loc 1 2896 31 discriminator 22
 7117 0d80 8E4B     		ldr	r3, .L779+8
 7118 0d82 12E0     		b	.L592
 7119              	.L578:
 7120              		.loc 1 2896 31 discriminator 20
 7121 0d84 8E4B     		ldr	r3, .L779+12
 7122 0d86 10E0     		b	.L592
 7123              	.L577:
 7124              		.loc 1 2896 31 discriminator 18
 7125 0d88 8E4B     		ldr	r3, .L779+16
 7126 0d8a 0EE0     		b	.L592
 7127              	.L576:
 7128              		.loc 1 2896 31 discriminator 16
 7129 0d8c 8E4B     		ldr	r3, .L779+20
 7130 0d8e 0CE0     		b	.L592
 7131              	.L575:
 7132              		.loc 1 2896 31 discriminator 14
 7133 0d90 8E4B     		ldr	r3, .L779+24
 7134 0d92 0AE0     		b	.L592
 7135              	.L574:
 7136              		.loc 1 2896 31 discriminator 12
 7137 0d94 8E4B     		ldr	r3, .L779+28
 7138 0d96 08E0     		b	.L592
 7139              	.L573:
 7140              		.loc 1 2896 31 discriminator 10
 7141 0d98 8E4B     		ldr	r3, .L779+32
 7142 0d9a 06E0     		b	.L592
 7143              	.L572:
 7144              		.loc 1 2896 31 discriminator 8
ARM GAS  /tmp/ccuwK2ly.s 			page 176


 7145 0d9c 8E4B     		ldr	r3, .L779+36
 7146 0d9e 04E0     		b	.L592
 7147              	.L571:
 7148              		.loc 1 2896 31 discriminator 6
 7149 0da0 8E4B     		ldr	r3, .L779+40
 7150 0da2 02E0     		b	.L592
 7151              	.L570:
 7152              		.loc 1 2896 31 discriminator 4
 7153 0da4 8E4B     		ldr	r3, .L779+44
 7154 0da6 00E0     		b	.L592
 7155              	.L569:
 7156              		.loc 1 2896 31 discriminator 2
 7157 0da8 834B     		ldr	r3, .L779+4
 7158              	.L592:
 7159              		.loc 1 2896 31 discriminator 48
 7160 0daa FA68     		ldr	r2, [r7, #12]
 7161 0dac 5268     		ldr	r2, [r2, #4]
 7162 0dae 5208     		lsrs	r2, r2, #1
 7163 0db0 1A44     		add	r2, r2, r3
 7164 0db2 FB68     		ldr	r3, [r7, #12]
 7165 0db4 5B68     		ldr	r3, [r3, #4]
 7166 0db6 B2FBF3F3 		udiv	r3, r2, r3
 7167              		.loc 1 2896 20 is_stmt 1 discriminator 48
 7168 0dba 9BB2     		uxth	r3, r3
 7169              		.loc 1 2896 18 discriminator 48
 7170 0dbc 7B62     		str	r3, [r7, #36]
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7171              		.loc 1 2897 9 discriminator 48
 7172 0dbe C0E0     		b	.L544
 7173              	.L516:
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 7174              		.loc 1 2899 16
 7175 0dc0 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7176 0dc4 B861     		str	r0, [r7, #24]
2900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPresc
 7177              		.loc 1 2900 31
 7178 0dc6 FB68     		ldr	r3, [r7, #12]
 7179 0dc8 5B6A     		ldr	r3, [r3, #36]
 7180 0dca 002B     		cmp	r3, #0
 7181 0dcc 44D0     		beq	.L593
 7182              		.loc 1 2900 31 is_stmt 0 discriminator 1
 7183 0dce FB68     		ldr	r3, [r7, #12]
 7184 0dd0 5B6A     		ldr	r3, [r3, #36]
 7185 0dd2 012B     		cmp	r3, #1
 7186 0dd4 3ED0     		beq	.L594
 7187              		.loc 1 2900 31 discriminator 3
 7188 0dd6 FB68     		ldr	r3, [r7, #12]
 7189 0dd8 5B6A     		ldr	r3, [r3, #36]
 7190 0dda 022B     		cmp	r3, #2
 7191 0ddc 38D0     		beq	.L595
 7192              		.loc 1 2900 31 discriminator 5
 7193 0dde FB68     		ldr	r3, [r7, #12]
 7194 0de0 5B6A     		ldr	r3, [r3, #36]
 7195 0de2 032B     		cmp	r3, #3
 7196 0de4 32D0     		beq	.L596
 7197              		.loc 1 2900 31 discriminator 7
ARM GAS  /tmp/ccuwK2ly.s 			page 177


 7198 0de6 FB68     		ldr	r3, [r7, #12]
 7199 0de8 5B6A     		ldr	r3, [r3, #36]
 7200 0dea 042B     		cmp	r3, #4
 7201 0dec 2CD0     		beq	.L597
 7202              		.loc 1 2900 31 discriminator 9
 7203 0dee FB68     		ldr	r3, [r7, #12]
 7204 0df0 5B6A     		ldr	r3, [r3, #36]
 7205 0df2 052B     		cmp	r3, #5
 7206 0df4 26D0     		beq	.L598
 7207              		.loc 1 2900 31 discriminator 11
 7208 0df6 FB68     		ldr	r3, [r7, #12]
 7209 0df8 5B6A     		ldr	r3, [r3, #36]
 7210 0dfa 062B     		cmp	r3, #6
 7211 0dfc 20D0     		beq	.L599
 7212              		.loc 1 2900 31 discriminator 13
 7213 0dfe FB68     		ldr	r3, [r7, #12]
 7214 0e00 5B6A     		ldr	r3, [r3, #36]
 7215 0e02 072B     		cmp	r3, #7
 7216 0e04 1AD0     		beq	.L600
 7217              		.loc 1 2900 31 discriminator 15
 7218 0e06 FB68     		ldr	r3, [r7, #12]
 7219 0e08 5B6A     		ldr	r3, [r3, #36]
 7220 0e0a 082B     		cmp	r3, #8
 7221 0e0c 14D0     		beq	.L601
 7222              		.loc 1 2900 31 discriminator 17
 7223 0e0e FB68     		ldr	r3, [r7, #12]
 7224 0e10 5B6A     		ldr	r3, [r3, #36]
 7225 0e12 092B     		cmp	r3, #9
 7226 0e14 0ED0     		beq	.L602
 7227              		.loc 1 2900 31 discriminator 19
 7228 0e16 FB68     		ldr	r3, [r7, #12]
 7229 0e18 5B6A     		ldr	r3, [r3, #36]
 7230 0e1a 0A2B     		cmp	r3, #10
 7231 0e1c 08D0     		beq	.L603
 7232              		.loc 1 2900 31 discriminator 21
 7233 0e1e FB68     		ldr	r3, [r7, #12]
 7234 0e20 5B6A     		ldr	r3, [r3, #36]
 7235 0e22 0B2B     		cmp	r3, #11
 7236 0e24 02D1     		bne	.L604
 7237              		.loc 1 2900 31 discriminator 23
 7238 0e26 4FF48073 		mov	r3, #256
 7239 0e2a 16E0     		b	.L616
 7240              	.L604:
 7241              		.loc 1 2900 31 discriminator 24
 7242 0e2c 0123     		movs	r3, #1
 7243 0e2e 14E0     		b	.L616
 7244              	.L603:
 7245              		.loc 1 2900 31 discriminator 22
 7246 0e30 8023     		movs	r3, #128
 7247 0e32 12E0     		b	.L616
 7248              	.L602:
 7249              		.loc 1 2900 31 discriminator 20
 7250 0e34 4023     		movs	r3, #64
 7251 0e36 10E0     		b	.L616
 7252              	.L601:
 7253              		.loc 1 2900 31 discriminator 18
 7254 0e38 2023     		movs	r3, #32
ARM GAS  /tmp/ccuwK2ly.s 			page 178


 7255 0e3a 0EE0     		b	.L616
 7256              	.L600:
 7257              		.loc 1 2900 31 discriminator 16
 7258 0e3c 1023     		movs	r3, #16
 7259 0e3e 0CE0     		b	.L616
 7260              	.L599:
 7261              		.loc 1 2900 31 discriminator 14
 7262 0e40 0C23     		movs	r3, #12
 7263 0e42 0AE0     		b	.L616
 7264              	.L598:
 7265              		.loc 1 2900 31 discriminator 12
 7266 0e44 0A23     		movs	r3, #10
 7267 0e46 08E0     		b	.L616
 7268              	.L597:
 7269              		.loc 1 2900 31 discriminator 10
 7270 0e48 0823     		movs	r3, #8
 7271 0e4a 06E0     		b	.L616
 7272              	.L596:
 7273              		.loc 1 2900 31 discriminator 8
 7274 0e4c 0623     		movs	r3, #6
 7275 0e4e 04E0     		b	.L616
 7276              	.L595:
 7277              		.loc 1 2900 31 discriminator 6
 7278 0e50 0423     		movs	r3, #4
 7279 0e52 02E0     		b	.L616
 7280              	.L594:
 7281              		.loc 1 2900 31 discriminator 4
 7282 0e54 0223     		movs	r3, #2
 7283 0e56 00E0     		b	.L616
 7284              	.L593:
 7285              		.loc 1 2900 31 discriminator 2
 7286 0e58 0123     		movs	r3, #1
 7287              	.L616:
 7288              		.loc 1 2900 31 discriminator 48
 7289 0e5a BA69     		ldr	r2, [r7, #24]
 7290 0e5c B2FBF3F3 		udiv	r3, r2, r3
 7291 0e60 5A00     		lsls	r2, r3, #1
 7292 0e62 FB68     		ldr	r3, [r7, #12]
 7293 0e64 5B68     		ldr	r3, [r3, #4]
 7294 0e66 5B08     		lsrs	r3, r3, #1
 7295 0e68 1A44     		add	r2, r2, r3
 7296 0e6a FB68     		ldr	r3, [r7, #12]
 7297 0e6c 5B68     		ldr	r3, [r3, #4]
 7298 0e6e B2FBF3F3 		udiv	r3, r2, r3
 7299              		.loc 1 2900 20 is_stmt 1 discriminator 48
 7300 0e72 9BB2     		uxth	r3, r3
 7301              		.loc 1 2900 18 discriminator 48
 7302 0e74 7B62     		str	r3, [r7, #36]
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7303              		.loc 1 2901 9 discriminator 48
 7304 0e76 64E0     		b	.L544
 7305              	.L514:
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->
 7306              		.loc 1 2903 31
 7307 0e78 FB68     		ldr	r3, [r7, #12]
 7308 0e7a 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccuwK2ly.s 			page 179


 7309 0e7c 002B     		cmp	r3, #0
 7310 0e7e 4FD0     		beq	.L617
 7311              		.loc 1 2903 31 is_stmt 0 discriminator 1
 7312 0e80 FB68     		ldr	r3, [r7, #12]
 7313 0e82 5B6A     		ldr	r3, [r3, #36]
 7314 0e84 012B     		cmp	r3, #1
 7315 0e86 48D0     		beq	.L618
 7316              		.loc 1 2903 31 discriminator 3
 7317 0e88 FB68     		ldr	r3, [r7, #12]
 7318 0e8a 5B6A     		ldr	r3, [r3, #36]
 7319 0e8c 022B     		cmp	r3, #2
 7320 0e8e 41D0     		beq	.L619
 7321              		.loc 1 2903 31 discriminator 5
 7322 0e90 FB68     		ldr	r3, [r7, #12]
 7323 0e92 5B6A     		ldr	r3, [r3, #36]
 7324 0e94 032B     		cmp	r3, #3
 7325 0e96 3AD0     		beq	.L620
 7326              		.loc 1 2903 31 discriminator 7
 7327 0e98 FB68     		ldr	r3, [r7, #12]
 7328 0e9a 5B6A     		ldr	r3, [r3, #36]
 7329 0e9c 042B     		cmp	r3, #4
 7330 0e9e 33D0     		beq	.L621
 7331              		.loc 1 2903 31 discriminator 9
 7332 0ea0 FB68     		ldr	r3, [r7, #12]
 7333 0ea2 5B6A     		ldr	r3, [r3, #36]
 7334 0ea4 052B     		cmp	r3, #5
 7335 0ea6 2CD0     		beq	.L622
 7336              		.loc 1 2903 31 discriminator 11
 7337 0ea8 FB68     		ldr	r3, [r7, #12]
 7338 0eaa 5B6A     		ldr	r3, [r3, #36]
 7339 0eac 062B     		cmp	r3, #6
 7340 0eae 25D0     		beq	.L623
 7341              		.loc 1 2903 31 discriminator 13
 7342 0eb0 FB68     		ldr	r3, [r7, #12]
 7343 0eb2 5B6A     		ldr	r3, [r3, #36]
 7344 0eb4 072B     		cmp	r3, #7
 7345 0eb6 1ED0     		beq	.L624
 7346              		.loc 1 2903 31 discriminator 15
 7347 0eb8 FB68     		ldr	r3, [r7, #12]
 7348 0eba 5B6A     		ldr	r3, [r3, #36]
 7349 0ebc 082B     		cmp	r3, #8
 7350 0ebe 17D0     		beq	.L625
 7351              		.loc 1 2903 31 discriminator 17
 7352 0ec0 FB68     		ldr	r3, [r7, #12]
 7353 0ec2 5B6A     		ldr	r3, [r3, #36]
 7354 0ec4 092B     		cmp	r3, #9
 7355 0ec6 10D0     		beq	.L626
 7356              		.loc 1 2903 31 discriminator 19
 7357 0ec8 FB68     		ldr	r3, [r7, #12]
 7358 0eca 5B6A     		ldr	r3, [r3, #36]
 7359 0ecc 0A2B     		cmp	r3, #10
 7360 0ece 09D0     		beq	.L627
 7361              		.loc 1 2903 31 discriminator 21
 7362 0ed0 FB68     		ldr	r3, [r7, #12]
 7363 0ed2 5B6A     		ldr	r3, [r3, #36]
 7364 0ed4 0B2B     		cmp	r3, #11
 7365 0ed6 02D1     		bne	.L628
ARM GAS  /tmp/ccuwK2ly.s 			page 180


 7366              		.loc 1 2903 31 discriminator 23
 7367 0ed8 4FF48073 		mov	r3, #256
 7368 0edc 22E0     		b	.L640
 7369              	.L628:
 7370              		.loc 1 2903 31 discriminator 24
 7371 0ede 4FF48033 		mov	r3, #65536
 7372 0ee2 1FE0     		b	.L640
 7373              	.L627:
 7374              		.loc 1 2903 31 discriminator 22
 7375 0ee4 4FF40073 		mov	r3, #512
 7376 0ee8 1CE0     		b	.L640
 7377              	.L626:
 7378              		.loc 1 2903 31 discriminator 20
 7379 0eea 4FF48063 		mov	r3, #1024
 7380 0eee 19E0     		b	.L640
 7381              	.L625:
 7382              		.loc 1 2903 31 discriminator 18
 7383 0ef0 4FF40063 		mov	r3, #2048
 7384 0ef4 16E0     		b	.L640
 7385              	.L624:
 7386              		.loc 1 2903 31 discriminator 16
 7387 0ef6 4FF48053 		mov	r3, #4096
 7388 0efa 13E0     		b	.L640
 7389              	.L623:
 7390              		.loc 1 2903 31 discriminator 14
 7391 0efc 41F25453 		movw	r3, #5460
 7392 0f00 10E0     		b	.L640
 7393              	.L622:
 7394              		.loc 1 2903 31 discriminator 12
 7395 0f02 41F69813 		movw	r3, #6552
 7396 0f06 0DE0     		b	.L640
 7397              	.L621:
 7398              		.loc 1 2903 31 discriminator 10
 7399 0f08 4FF40053 		mov	r3, #8192
 7400 0f0c 0AE0     		b	.L640
 7401              	.L620:
 7402              		.loc 1 2903 31 discriminator 8
 7403 0f0e 42F6AA23 		movw	r3, #10922
 7404 0f12 07E0     		b	.L640
 7405              	.L619:
 7406              		.loc 1 2903 31 discriminator 6
 7407 0f14 4FF48043 		mov	r3, #16384
 7408 0f18 04E0     		b	.L640
 7409              	.L618:
 7410              		.loc 1 2903 31 discriminator 4
 7411 0f1a 4FF40043 		mov	r3, #32768
 7412 0f1e 01E0     		b	.L640
 7413              	.L617:
 7414              		.loc 1 2903 31 discriminator 2
 7415 0f20 4FF48033 		mov	r3, #65536
 7416              	.L640:
 7417              		.loc 1 2903 31 discriminator 48
 7418 0f24 FA68     		ldr	r2, [r7, #12]
 7419 0f26 5268     		ldr	r2, [r2, #4]
 7420 0f28 5208     		lsrs	r2, r2, #1
 7421 0f2a 1A44     		add	r2, r2, r3
 7422 0f2c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccuwK2ly.s 			page 181


 7423 0f2e 5B68     		ldr	r3, [r3, #4]
 7424 0f30 B2FBF3F3 		udiv	r3, r2, r3
 7425              		.loc 1 2903 20 is_stmt 1 discriminator 48
 7426 0f34 9BB2     		uxth	r3, r3
 7427              		.loc 1 2903 18 discriminator 48
 7428 0f36 7B62     		str	r3, [r7, #36]
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7429              		.loc 1 2904 9 discriminator 48
 7430 0f38 03E0     		b	.L544
 7431              	.L513:
2905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
 7432              		.loc 1 2906 13
 7433 0f3a 0123     		movs	r3, #1
 7434 0f3c 87F82330 		strb	r3, [r7, #35]
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7435              		.loc 1 2907 9
 7436 0f40 00BF     		nop
 7437              	.L544:
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 7438              		.loc 1 2911 8
 7439 0f42 7B6A     		ldr	r3, [r7, #36]
 7440 0f44 0F2B     		cmp	r3, #15
 7441 0f46 16D9     		bls	.L641
 7442              		.loc 1 2911 36 discriminator 1
 7443 0f48 7B6A     		ldr	r3, [r7, #36]
 7444 0f4a B3F5803F 		cmp	r3, #65536
 7445 0f4e 12D2     		bcs	.L641
2912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 7446              		.loc 1 2913 17
 7447 0f50 7B6A     		ldr	r3, [r7, #36]
 7448 0f52 9BB2     		uxth	r3, r3
 7449              		.loc 1 2913 15
 7450 0f54 23F00F03 		bic	r3, r3, #15
 7451 0f58 FB82     		strh	r3, [r7, #22]	@ movhi
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 7452              		.loc 1 2914 60
 7453 0f5a 7B6A     		ldr	r3, [r7, #36]
 7454 0f5c 5B08     		lsrs	r3, r3, #1
 7455              		.loc 1 2914 18
 7456 0f5e 9BB2     		uxth	r3, r3
 7457 0f60 03F00703 		and	r3, r3, #7
 7458 0f64 9AB2     		uxth	r2, r3
 7459              		.loc 1 2914 15
 7460 0f66 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 7461 0f68 1343     		orrs	r3, r3, r2
 7462 0f6a FB82     		strh	r3, [r7, #22]	@ movhi
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 7463              		.loc 1 2915 12
 7464 0f6c FB68     		ldr	r3, [r7, #12]
 7465 0f6e 1B68     		ldr	r3, [r3]
 7466              		.loc 1 2915 28
 7467 0f70 FA8A     		ldrh	r2, [r7, #22]
ARM GAS  /tmp/ccuwK2ly.s 			page 182


 7468 0f72 DA60     		str	r2, [r3, #12]
 7469 0f74 0FE2     		b	.L511
 7470              	.L641:
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ret = HAL_ERROR;
 7471              		.loc 1 2919 11
 7472 0f76 0123     		movs	r3, #1
 7473 0f78 87F82330 		strb	r3, [r7, #35]
 7474 0f7c 0BE2     		b	.L511
 7475              	.L512:
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
 7476              		.loc 1 2924 5
 7477 0f7e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 7478 0f82 082B     		cmp	r3, #8
 7479 0f84 00F2F481 		bhi	.L643
 7480 0f88 01A2     		adr	r2, .L645
 7481 0f8a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7482 0f8e 00BF     		.p2align 2
 7483              	.L645:
 7484 0f90 E50F0000 		.word	.L649+1
 7485 0f94 9B100000 		.word	.L648+1
 7486 0f98 51110000 		.word	.L647+1
 7487 0f9c 71130000 		.word	.L643+1
 7488 0fa0 FB110000 		.word	.L646+1
 7489 0fa4 71130000 		.word	.L643+1
 7490 0fa8 71130000 		.word	.L643+1
 7491 0fac 71130000 		.word	.L643+1
 7492 0fb0 B1120000 		.word	.L644+1
 7493              		.p2align 1
 7494              	.L780:
 7495              		.align	2
 7496              	.L779:
 7497 0fb4 48E80100 		.word	125000
 7498 0fb8 0048E801 		.word	32000000
 7499 0fbc 90D00300 		.word	250000
 7500 0fc0 20A10700 		.word	500000
 7501 0fc4 40420F00 		.word	1000000
 7502 0fc8 80841E00 		.word	2000000
 7503 0fcc AAB02800 		.word	2666666
 7504 0fd0 00D43000 		.word	3200000
 7505 0fd4 00093D00 		.word	4000000
 7506 0fd8 54615100 		.word	5333332
 7507 0fdc 00127A00 		.word	8000000
 7508 0fe0 0024F400 		.word	16000000
 7509              	.L649:
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 7510              		.loc 1 2927 16
 7511 0fe4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7512 0fe8 B861     		str	r0, [r7, #24]
ARM GAS  /tmp/ccuwK2ly.s 			page 183


2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 7513              		.loc 1 2928 31
 7514 0fea FB68     		ldr	r3, [r7, #12]
 7515 0fec 5B6A     		ldr	r3, [r3, #36]
 7516 0fee 002B     		cmp	r3, #0
 7517 0ff0 44D0     		beq	.L650
 7518              		.loc 1 2928 31 is_stmt 0 discriminator 1
 7519 0ff2 FB68     		ldr	r3, [r7, #12]
 7520 0ff4 5B6A     		ldr	r3, [r3, #36]
 7521 0ff6 012B     		cmp	r3, #1
 7522 0ff8 3ED0     		beq	.L651
 7523              		.loc 1 2928 31 discriminator 3
 7524 0ffa FB68     		ldr	r3, [r7, #12]
 7525 0ffc 5B6A     		ldr	r3, [r3, #36]
 7526 0ffe 022B     		cmp	r3, #2
 7527 1000 38D0     		beq	.L652
 7528              		.loc 1 2928 31 discriminator 5
 7529 1002 FB68     		ldr	r3, [r7, #12]
 7530 1004 5B6A     		ldr	r3, [r3, #36]
 7531 1006 032B     		cmp	r3, #3
 7532 1008 32D0     		beq	.L653
 7533              		.loc 1 2928 31 discriminator 7
 7534 100a FB68     		ldr	r3, [r7, #12]
 7535 100c 5B6A     		ldr	r3, [r3, #36]
 7536 100e 042B     		cmp	r3, #4
 7537 1010 2CD0     		beq	.L654
 7538              		.loc 1 2928 31 discriminator 9
 7539 1012 FB68     		ldr	r3, [r7, #12]
 7540 1014 5B6A     		ldr	r3, [r3, #36]
 7541 1016 052B     		cmp	r3, #5
 7542 1018 26D0     		beq	.L655
 7543              		.loc 1 2928 31 discriminator 11
 7544 101a FB68     		ldr	r3, [r7, #12]
 7545 101c 5B6A     		ldr	r3, [r3, #36]
 7546 101e 062B     		cmp	r3, #6
 7547 1020 20D0     		beq	.L656
 7548              		.loc 1 2928 31 discriminator 13
 7549 1022 FB68     		ldr	r3, [r7, #12]
 7550 1024 5B6A     		ldr	r3, [r3, #36]
 7551 1026 072B     		cmp	r3, #7
 7552 1028 1AD0     		beq	.L657
 7553              		.loc 1 2928 31 discriminator 15
 7554 102a FB68     		ldr	r3, [r7, #12]
 7555 102c 5B6A     		ldr	r3, [r3, #36]
 7556 102e 082B     		cmp	r3, #8
 7557 1030 14D0     		beq	.L658
 7558              		.loc 1 2928 31 discriminator 17
 7559 1032 FB68     		ldr	r3, [r7, #12]
 7560 1034 5B6A     		ldr	r3, [r3, #36]
 7561 1036 092B     		cmp	r3, #9
 7562 1038 0ED0     		beq	.L659
 7563              		.loc 1 2928 31 discriminator 19
 7564 103a FB68     		ldr	r3, [r7, #12]
 7565 103c 5B6A     		ldr	r3, [r3, #36]
 7566 103e 0A2B     		cmp	r3, #10
 7567 1040 08D0     		beq	.L660
 7568              		.loc 1 2928 31 discriminator 21
ARM GAS  /tmp/ccuwK2ly.s 			page 184


 7569 1042 FB68     		ldr	r3, [r7, #12]
 7570 1044 5B6A     		ldr	r3, [r3, #36]
 7571 1046 0B2B     		cmp	r3, #11
 7572 1048 02D1     		bne	.L661
 7573              		.loc 1 2928 31 discriminator 23
 7574 104a 4FF48073 		mov	r3, #256
 7575 104e 16E0     		b	.L673
 7576              	.L661:
 7577              		.loc 1 2928 31 discriminator 24
 7578 1050 0123     		movs	r3, #1
 7579 1052 14E0     		b	.L673
 7580              	.L660:
 7581              		.loc 1 2928 31 discriminator 22
 7582 1054 8023     		movs	r3, #128
 7583 1056 12E0     		b	.L673
 7584              	.L659:
 7585              		.loc 1 2928 31 discriminator 20
 7586 1058 4023     		movs	r3, #64
 7587 105a 10E0     		b	.L673
 7588              	.L658:
 7589              		.loc 1 2928 31 discriminator 18
 7590 105c 2023     		movs	r3, #32
 7591 105e 0EE0     		b	.L673
 7592              	.L657:
 7593              		.loc 1 2928 31 discriminator 16
 7594 1060 1023     		movs	r3, #16
 7595 1062 0CE0     		b	.L673
 7596              	.L656:
 7597              		.loc 1 2928 31 discriminator 14
 7598 1064 0C23     		movs	r3, #12
 7599 1066 0AE0     		b	.L673
 7600              	.L655:
 7601              		.loc 1 2928 31 discriminator 12
 7602 1068 0A23     		movs	r3, #10
 7603 106a 08E0     		b	.L673
 7604              	.L654:
 7605              		.loc 1 2928 31 discriminator 10
 7606 106c 0823     		movs	r3, #8
 7607 106e 06E0     		b	.L673
 7608              	.L653:
 7609              		.loc 1 2928 31 discriminator 8
 7610 1070 0623     		movs	r3, #6
 7611 1072 04E0     		b	.L673
 7612              	.L652:
 7613              		.loc 1 2928 31 discriminator 6
 7614 1074 0423     		movs	r3, #4
 7615 1076 02E0     		b	.L673
 7616              	.L651:
 7617              		.loc 1 2928 31 discriminator 4
 7618 1078 0223     		movs	r3, #2
 7619 107a 00E0     		b	.L673
 7620              	.L650:
 7621              		.loc 1 2928 31 discriminator 2
 7622 107c 0123     		movs	r3, #1
 7623              	.L673:
 7624              		.loc 1 2928 31 discriminator 48
 7625 107e BA69     		ldr	r2, [r7, #24]
ARM GAS  /tmp/ccuwK2ly.s 			page 185


 7626 1080 B2FBF3F2 		udiv	r2, r2, r3
 7627 1084 FB68     		ldr	r3, [r7, #12]
 7628 1086 5B68     		ldr	r3, [r3, #4]
 7629 1088 5B08     		lsrs	r3, r3, #1
 7630 108a 1A44     		add	r2, r2, r3
 7631 108c FB68     		ldr	r3, [r7, #12]
 7632 108e 5B68     		ldr	r3, [r3, #4]
 7633 1090 B2FBF3F3 		udiv	r3, r2, r3
 7634              		.loc 1 2928 20 is_stmt 1 discriminator 48
 7635 1094 9BB2     		uxth	r3, r3
 7636              		.loc 1 2928 18 discriminator 48
 7637 1096 7B62     		str	r3, [r7, #36]
2929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7638              		.loc 1 2929 9 discriminator 48
 7639 1098 6EE1     		b	.L674
 7640              	.L648:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 7641              		.loc 1 2931 16
 7642 109a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 7643 109e B861     		str	r0, [r7, #24]
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 7644              		.loc 1 2932 31
 7645 10a0 FB68     		ldr	r3, [r7, #12]
 7646 10a2 5B6A     		ldr	r3, [r3, #36]
 7647 10a4 002B     		cmp	r3, #0
 7648 10a6 44D0     		beq	.L675
 7649              		.loc 1 2932 31 is_stmt 0 discriminator 1
 7650 10a8 FB68     		ldr	r3, [r7, #12]
 7651 10aa 5B6A     		ldr	r3, [r3, #36]
 7652 10ac 012B     		cmp	r3, #1
 7653 10ae 3ED0     		beq	.L676
 7654              		.loc 1 2932 31 discriminator 3
 7655 10b0 FB68     		ldr	r3, [r7, #12]
 7656 10b2 5B6A     		ldr	r3, [r3, #36]
 7657 10b4 022B     		cmp	r3, #2
 7658 10b6 38D0     		beq	.L677
 7659              		.loc 1 2932 31 discriminator 5
 7660 10b8 FB68     		ldr	r3, [r7, #12]
 7661 10ba 5B6A     		ldr	r3, [r3, #36]
 7662 10bc 032B     		cmp	r3, #3
 7663 10be 32D0     		beq	.L678
 7664              		.loc 1 2932 31 discriminator 7
 7665 10c0 FB68     		ldr	r3, [r7, #12]
 7666 10c2 5B6A     		ldr	r3, [r3, #36]
 7667 10c4 042B     		cmp	r3, #4
 7668 10c6 2CD0     		beq	.L679
 7669              		.loc 1 2932 31 discriminator 9
 7670 10c8 FB68     		ldr	r3, [r7, #12]
 7671 10ca 5B6A     		ldr	r3, [r3, #36]
 7672 10cc 052B     		cmp	r3, #5
 7673 10ce 26D0     		beq	.L680
 7674              		.loc 1 2932 31 discriminator 11
 7675 10d0 FB68     		ldr	r3, [r7, #12]
 7676 10d2 5B6A     		ldr	r3, [r3, #36]
 7677 10d4 062B     		cmp	r3, #6
 7678 10d6 20D0     		beq	.L681
ARM GAS  /tmp/ccuwK2ly.s 			page 186


 7679              		.loc 1 2932 31 discriminator 13
 7680 10d8 FB68     		ldr	r3, [r7, #12]
 7681 10da 5B6A     		ldr	r3, [r3, #36]
 7682 10dc 072B     		cmp	r3, #7
 7683 10de 1AD0     		beq	.L682
 7684              		.loc 1 2932 31 discriminator 15
 7685 10e0 FB68     		ldr	r3, [r7, #12]
 7686 10e2 5B6A     		ldr	r3, [r3, #36]
 7687 10e4 082B     		cmp	r3, #8
 7688 10e6 14D0     		beq	.L683
 7689              		.loc 1 2932 31 discriminator 17
 7690 10e8 FB68     		ldr	r3, [r7, #12]
 7691 10ea 5B6A     		ldr	r3, [r3, #36]
 7692 10ec 092B     		cmp	r3, #9
 7693 10ee 0ED0     		beq	.L684
 7694              		.loc 1 2932 31 discriminator 19
 7695 10f0 FB68     		ldr	r3, [r7, #12]
 7696 10f2 5B6A     		ldr	r3, [r3, #36]
 7697 10f4 0A2B     		cmp	r3, #10
 7698 10f6 08D0     		beq	.L685
 7699              		.loc 1 2932 31 discriminator 21
 7700 10f8 FB68     		ldr	r3, [r7, #12]
 7701 10fa 5B6A     		ldr	r3, [r3, #36]
 7702 10fc 0B2B     		cmp	r3, #11
 7703 10fe 02D1     		bne	.L686
 7704              		.loc 1 2932 31 discriminator 23
 7705 1100 4FF48073 		mov	r3, #256
 7706 1104 16E0     		b	.L698
 7707              	.L686:
 7708              		.loc 1 2932 31 discriminator 24
 7709 1106 0123     		movs	r3, #1
 7710 1108 14E0     		b	.L698
 7711              	.L685:
 7712              		.loc 1 2932 31 discriminator 22
 7713 110a 8023     		movs	r3, #128
 7714 110c 12E0     		b	.L698
 7715              	.L684:
 7716              		.loc 1 2932 31 discriminator 20
 7717 110e 4023     		movs	r3, #64
 7718 1110 10E0     		b	.L698
 7719              	.L683:
 7720              		.loc 1 2932 31 discriminator 18
 7721 1112 2023     		movs	r3, #32
 7722 1114 0EE0     		b	.L698
 7723              	.L682:
 7724              		.loc 1 2932 31 discriminator 16
 7725 1116 1023     		movs	r3, #16
 7726 1118 0CE0     		b	.L698
 7727              	.L681:
 7728              		.loc 1 2932 31 discriminator 14
 7729 111a 0C23     		movs	r3, #12
 7730 111c 0AE0     		b	.L698
 7731              	.L680:
 7732              		.loc 1 2932 31 discriminator 12
 7733 111e 0A23     		movs	r3, #10
 7734 1120 08E0     		b	.L698
 7735              	.L679:
ARM GAS  /tmp/ccuwK2ly.s 			page 187


 7736              		.loc 1 2932 31 discriminator 10
 7737 1122 0823     		movs	r3, #8
 7738 1124 06E0     		b	.L698
 7739              	.L678:
 7740              		.loc 1 2932 31 discriminator 8
 7741 1126 0623     		movs	r3, #6
 7742 1128 04E0     		b	.L698
 7743              	.L677:
 7744              		.loc 1 2932 31 discriminator 6
 7745 112a 0423     		movs	r3, #4
 7746 112c 02E0     		b	.L698
 7747              	.L676:
 7748              		.loc 1 2932 31 discriminator 4
 7749 112e 0223     		movs	r3, #2
 7750 1130 00E0     		b	.L698
 7751              	.L675:
 7752              		.loc 1 2932 31 discriminator 2
 7753 1132 0123     		movs	r3, #1
 7754              	.L698:
 7755              		.loc 1 2932 31 discriminator 48
 7756 1134 BA69     		ldr	r2, [r7, #24]
 7757 1136 B2FBF3F2 		udiv	r2, r2, r3
 7758 113a FB68     		ldr	r3, [r7, #12]
 7759 113c 5B68     		ldr	r3, [r3, #4]
 7760 113e 5B08     		lsrs	r3, r3, #1
 7761 1140 1A44     		add	r2, r2, r3
 7762 1142 FB68     		ldr	r3, [r7, #12]
 7763 1144 5B68     		ldr	r3, [r3, #4]
 7764 1146 B2FBF3F3 		udiv	r3, r2, r3
 7765              		.loc 1 2932 20 is_stmt 1 discriminator 48
 7766 114a 9BB2     		uxth	r3, r3
 7767              		.loc 1 2932 18 discriminator 48
 7768 114c 7B62     		str	r3, [r7, #36]
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7769              		.loc 1 2933 9 discriminator 48
 7770 114e 13E1     		b	.L674
 7771              	.L647:
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
 7772              		.loc 1 2935 31
 7773 1150 FB68     		ldr	r3, [r7, #12]
 7774 1152 5B6A     		ldr	r3, [r3, #36]
 7775 1154 002B     		cmp	r3, #0
 7776 1156 44D0     		beq	.L699
 7777              		.loc 1 2935 31 is_stmt 0 discriminator 1
 7778 1158 FB68     		ldr	r3, [r7, #12]
 7779 115a 5B6A     		ldr	r3, [r3, #36]
 7780 115c 012B     		cmp	r3, #1
 7781 115e 3ED0     		beq	.L700
 7782              		.loc 1 2935 31 discriminator 3
 7783 1160 FB68     		ldr	r3, [r7, #12]
 7784 1162 5B6A     		ldr	r3, [r3, #36]
 7785 1164 022B     		cmp	r3, #2
 7786 1166 38D0     		beq	.L701
 7787              		.loc 1 2935 31 discriminator 5
 7788 1168 FB68     		ldr	r3, [r7, #12]
 7789 116a 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccuwK2ly.s 			page 188


 7790 116c 032B     		cmp	r3, #3
 7791 116e 32D0     		beq	.L702
 7792              		.loc 1 2935 31 discriminator 7
 7793 1170 FB68     		ldr	r3, [r7, #12]
 7794 1172 5B6A     		ldr	r3, [r3, #36]
 7795 1174 042B     		cmp	r3, #4
 7796 1176 2CD0     		beq	.L703
 7797              		.loc 1 2935 31 discriminator 9
 7798 1178 FB68     		ldr	r3, [r7, #12]
 7799 117a 5B6A     		ldr	r3, [r3, #36]
 7800 117c 052B     		cmp	r3, #5
 7801 117e 26D0     		beq	.L704
 7802              		.loc 1 2935 31 discriminator 11
 7803 1180 FB68     		ldr	r3, [r7, #12]
 7804 1182 5B6A     		ldr	r3, [r3, #36]
 7805 1184 062B     		cmp	r3, #6
 7806 1186 20D0     		beq	.L705
 7807              		.loc 1 2935 31 discriminator 13
 7808 1188 FB68     		ldr	r3, [r7, #12]
 7809 118a 5B6A     		ldr	r3, [r3, #36]
 7810 118c 072B     		cmp	r3, #7
 7811 118e 1AD0     		beq	.L706
 7812              		.loc 1 2935 31 discriminator 15
 7813 1190 FB68     		ldr	r3, [r7, #12]
 7814 1192 5B6A     		ldr	r3, [r3, #36]
 7815 1194 082B     		cmp	r3, #8
 7816 1196 14D0     		beq	.L707
 7817              		.loc 1 2935 31 discriminator 17
 7818 1198 FB68     		ldr	r3, [r7, #12]
 7819 119a 5B6A     		ldr	r3, [r3, #36]
 7820 119c 092B     		cmp	r3, #9
 7821 119e 0ED0     		beq	.L708
 7822              		.loc 1 2935 31 discriminator 19
 7823 11a0 FB68     		ldr	r3, [r7, #12]
 7824 11a2 5B6A     		ldr	r3, [r3, #36]
 7825 11a4 0A2B     		cmp	r3, #10
 7826 11a6 08D0     		beq	.L709
 7827              		.loc 1 2935 31 discriminator 21
 7828 11a8 FB68     		ldr	r3, [r7, #12]
 7829 11aa 5B6A     		ldr	r3, [r3, #36]
 7830 11ac 0B2B     		cmp	r3, #11
 7831 11ae 02D1     		bne	.L710
 7832              		.loc 1 2935 31 discriminator 23
 7833 11b0 4FF22443 		movw	r3, #62500
 7834 11b4 16E0     		b	.L722
 7835              	.L710:
 7836              		.loc 1 2935 31 discriminator 24
 7837 11b6 824B     		ldr	r3, .L781
 7838 11b8 14E0     		b	.L722
 7839              	.L709:
 7840              		.loc 1 2935 31 discriminator 22
 7841 11ba 824B     		ldr	r3, .L781+4
 7842 11bc 12E0     		b	.L722
 7843              	.L708:
 7844              		.loc 1 2935 31 discriminator 20
 7845 11be 824B     		ldr	r3, .L781+8
 7846 11c0 10E0     		b	.L722
ARM GAS  /tmp/ccuwK2ly.s 			page 189


 7847              	.L707:
 7848              		.loc 1 2935 31 discriminator 18
 7849 11c2 824B     		ldr	r3, .L781+12
 7850 11c4 0EE0     		b	.L722
 7851              	.L706:
 7852              		.loc 1 2935 31 discriminator 16
 7853 11c6 824B     		ldr	r3, .L781+16
 7854 11c8 0CE0     		b	.L722
 7855              	.L705:
 7856              		.loc 1 2935 31 discriminator 14
 7857 11ca 824B     		ldr	r3, .L781+20
 7858 11cc 0AE0     		b	.L722
 7859              	.L704:
 7860              		.loc 1 2935 31 discriminator 12
 7861 11ce 824B     		ldr	r3, .L781+24
 7862 11d0 08E0     		b	.L722
 7863              	.L703:
 7864              		.loc 1 2935 31 discriminator 10
 7865 11d2 824B     		ldr	r3, .L781+28
 7866 11d4 06E0     		b	.L722
 7867              	.L702:
 7868              		.loc 1 2935 31 discriminator 8
 7869 11d6 824B     		ldr	r3, .L781+32
 7870 11d8 04E0     		b	.L722
 7871              	.L701:
 7872              		.loc 1 2935 31 discriminator 6
 7873 11da 824B     		ldr	r3, .L781+36
 7874 11dc 02E0     		b	.L722
 7875              	.L700:
 7876              		.loc 1 2935 31 discriminator 4
 7877 11de 824B     		ldr	r3, .L781+40
 7878 11e0 00E0     		b	.L722
 7879              	.L699:
 7880              		.loc 1 2935 31 discriminator 2
 7881 11e2 774B     		ldr	r3, .L781
 7882              	.L722:
 7883              		.loc 1 2935 31 discriminator 48
 7884 11e4 FA68     		ldr	r2, [r7, #12]
 7885 11e6 5268     		ldr	r2, [r2, #4]
 7886 11e8 5208     		lsrs	r2, r2, #1
 7887 11ea 1A44     		add	r2, r2, r3
 7888 11ec FB68     		ldr	r3, [r7, #12]
 7889 11ee 5B68     		ldr	r3, [r3, #4]
 7890 11f0 B2FBF3F3 		udiv	r3, r2, r3
 7891              		.loc 1 2935 20 is_stmt 1 discriminator 48
 7892 11f4 9BB2     		uxth	r3, r3
 7893              		.loc 1 2935 18 discriminator 48
 7894 11f6 7B62     		str	r3, [r7, #36]
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 7895              		.loc 1 2936 9 discriminator 48
 7896 11f8 BEE0     		b	.L674
 7897              	.L646:
2937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 7898              		.loc 1 2938 16
 7899 11fa FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7900 11fe B861     		str	r0, [r7, #24]
ARM GAS  /tmp/ccuwK2ly.s 			page 190


2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPres
 7901              		.loc 1 2939 31
 7902 1200 FB68     		ldr	r3, [r7, #12]
 7903 1202 5B6A     		ldr	r3, [r3, #36]
 7904 1204 002B     		cmp	r3, #0
 7905 1206 44D0     		beq	.L723
 7906              		.loc 1 2939 31 is_stmt 0 discriminator 1
 7907 1208 FB68     		ldr	r3, [r7, #12]
 7908 120a 5B6A     		ldr	r3, [r3, #36]
 7909 120c 012B     		cmp	r3, #1
 7910 120e 3ED0     		beq	.L724
 7911              		.loc 1 2939 31 discriminator 3
 7912 1210 FB68     		ldr	r3, [r7, #12]
 7913 1212 5B6A     		ldr	r3, [r3, #36]
 7914 1214 022B     		cmp	r3, #2
 7915 1216 38D0     		beq	.L725
 7916              		.loc 1 2939 31 discriminator 5
 7917 1218 FB68     		ldr	r3, [r7, #12]
 7918 121a 5B6A     		ldr	r3, [r3, #36]
 7919 121c 032B     		cmp	r3, #3
 7920 121e 32D0     		beq	.L726
 7921              		.loc 1 2939 31 discriminator 7
 7922 1220 FB68     		ldr	r3, [r7, #12]
 7923 1222 5B6A     		ldr	r3, [r3, #36]
 7924 1224 042B     		cmp	r3, #4
 7925 1226 2CD0     		beq	.L727
 7926              		.loc 1 2939 31 discriminator 9
 7927 1228 FB68     		ldr	r3, [r7, #12]
 7928 122a 5B6A     		ldr	r3, [r3, #36]
 7929 122c 052B     		cmp	r3, #5
 7930 122e 26D0     		beq	.L728
 7931              		.loc 1 2939 31 discriminator 11
 7932 1230 FB68     		ldr	r3, [r7, #12]
 7933 1232 5B6A     		ldr	r3, [r3, #36]
 7934 1234 062B     		cmp	r3, #6
 7935 1236 20D0     		beq	.L729
 7936              		.loc 1 2939 31 discriminator 13
 7937 1238 FB68     		ldr	r3, [r7, #12]
 7938 123a 5B6A     		ldr	r3, [r3, #36]
 7939 123c 072B     		cmp	r3, #7
 7940 123e 1AD0     		beq	.L730
 7941              		.loc 1 2939 31 discriminator 15
 7942 1240 FB68     		ldr	r3, [r7, #12]
 7943 1242 5B6A     		ldr	r3, [r3, #36]
 7944 1244 082B     		cmp	r3, #8
 7945 1246 14D0     		beq	.L731
 7946              		.loc 1 2939 31 discriminator 17
 7947 1248 FB68     		ldr	r3, [r7, #12]
 7948 124a 5B6A     		ldr	r3, [r3, #36]
 7949 124c 092B     		cmp	r3, #9
 7950 124e 0ED0     		beq	.L732
 7951              		.loc 1 2939 31 discriminator 19
 7952 1250 FB68     		ldr	r3, [r7, #12]
 7953 1252 5B6A     		ldr	r3, [r3, #36]
 7954 1254 0A2B     		cmp	r3, #10
 7955 1256 08D0     		beq	.L733
 7956              		.loc 1 2939 31 discriminator 21
ARM GAS  /tmp/ccuwK2ly.s 			page 191


 7957 1258 FB68     		ldr	r3, [r7, #12]
 7958 125a 5B6A     		ldr	r3, [r3, #36]
 7959 125c 0B2B     		cmp	r3, #11
 7960 125e 02D1     		bne	.L734
 7961              		.loc 1 2939 31 discriminator 23
 7962 1260 4FF48073 		mov	r3, #256
 7963 1264 16E0     		b	.L746
 7964              	.L734:
 7965              		.loc 1 2939 31 discriminator 24
 7966 1266 0123     		movs	r3, #1
 7967 1268 14E0     		b	.L746
 7968              	.L733:
 7969              		.loc 1 2939 31 discriminator 22
 7970 126a 8023     		movs	r3, #128
 7971 126c 12E0     		b	.L746
 7972              	.L732:
 7973              		.loc 1 2939 31 discriminator 20
 7974 126e 4023     		movs	r3, #64
 7975 1270 10E0     		b	.L746
 7976              	.L731:
 7977              		.loc 1 2939 31 discriminator 18
 7978 1272 2023     		movs	r3, #32
 7979 1274 0EE0     		b	.L746
 7980              	.L730:
 7981              		.loc 1 2939 31 discriminator 16
 7982 1276 1023     		movs	r3, #16
 7983 1278 0CE0     		b	.L746
 7984              	.L729:
 7985              		.loc 1 2939 31 discriminator 14
 7986 127a 0C23     		movs	r3, #12
 7987 127c 0AE0     		b	.L746
 7988              	.L728:
 7989              		.loc 1 2939 31 discriminator 12
 7990 127e 0A23     		movs	r3, #10
 7991 1280 08E0     		b	.L746
 7992              	.L727:
 7993              		.loc 1 2939 31 discriminator 10
 7994 1282 0823     		movs	r3, #8
 7995 1284 06E0     		b	.L746
 7996              	.L726:
 7997              		.loc 1 2939 31 discriminator 8
 7998 1286 0623     		movs	r3, #6
 7999 1288 04E0     		b	.L746
 8000              	.L725:
 8001              		.loc 1 2939 31 discriminator 6
 8002 128a 0423     		movs	r3, #4
 8003 128c 02E0     		b	.L746
 8004              	.L724:
 8005              		.loc 1 2939 31 discriminator 4
 8006 128e 0223     		movs	r3, #2
 8007 1290 00E0     		b	.L746
 8008              	.L723:
 8009              		.loc 1 2939 31 discriminator 2
 8010 1292 0123     		movs	r3, #1
 8011              	.L746:
 8012              		.loc 1 2939 31 discriminator 48
 8013 1294 BA69     		ldr	r2, [r7, #24]
ARM GAS  /tmp/ccuwK2ly.s 			page 192


 8014 1296 B2FBF3F2 		udiv	r2, r2, r3
 8015 129a FB68     		ldr	r3, [r7, #12]
 8016 129c 5B68     		ldr	r3, [r3, #4]
 8017 129e 5B08     		lsrs	r3, r3, #1
 8018 12a0 1A44     		add	r2, r2, r3
 8019 12a2 FB68     		ldr	r3, [r7, #12]
 8020 12a4 5B68     		ldr	r3, [r3, #4]
 8021 12a6 B2FBF3F3 		udiv	r3, r2, r3
 8022              		.loc 1 2939 20 is_stmt 1 discriminator 48
 8023 12aa 9BB2     		uxth	r3, r3
 8024              		.loc 1 2939 18 discriminator 48
 8025 12ac 7B62     		str	r3, [r7, #36]
2940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 8026              		.loc 1 2940 9 discriminator 48
 8027 12ae 63E0     		b	.L674
 8028              	.L644:
2941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart-
 8029              		.loc 1 2942 31
 8030 12b0 FB68     		ldr	r3, [r7, #12]
 8031 12b2 5B6A     		ldr	r3, [r3, #36]
 8032 12b4 002B     		cmp	r3, #0
 8033 12b6 4ED0     		beq	.L747
 8034              		.loc 1 2942 31 is_stmt 0 discriminator 1
 8035 12b8 FB68     		ldr	r3, [r7, #12]
 8036 12ba 5B6A     		ldr	r3, [r3, #36]
 8037 12bc 012B     		cmp	r3, #1
 8038 12be 47D0     		beq	.L748
 8039              		.loc 1 2942 31 discriminator 3
 8040 12c0 FB68     		ldr	r3, [r7, #12]
 8041 12c2 5B6A     		ldr	r3, [r3, #36]
 8042 12c4 022B     		cmp	r3, #2
 8043 12c6 40D0     		beq	.L749
 8044              		.loc 1 2942 31 discriminator 5
 8045 12c8 FB68     		ldr	r3, [r7, #12]
 8046 12ca 5B6A     		ldr	r3, [r3, #36]
 8047 12cc 032B     		cmp	r3, #3
 8048 12ce 39D0     		beq	.L750
 8049              		.loc 1 2942 31 discriminator 7
 8050 12d0 FB68     		ldr	r3, [r7, #12]
 8051 12d2 5B6A     		ldr	r3, [r3, #36]
 8052 12d4 042B     		cmp	r3, #4
 8053 12d6 32D0     		beq	.L751
 8054              		.loc 1 2942 31 discriminator 9
 8055 12d8 FB68     		ldr	r3, [r7, #12]
 8056 12da 5B6A     		ldr	r3, [r3, #36]
 8057 12dc 052B     		cmp	r3, #5
 8058 12de 2BD0     		beq	.L752
 8059              		.loc 1 2942 31 discriminator 11
 8060 12e0 FB68     		ldr	r3, [r7, #12]
 8061 12e2 5B6A     		ldr	r3, [r3, #36]
 8062 12e4 062B     		cmp	r3, #6
 8063 12e6 24D0     		beq	.L753
 8064              		.loc 1 2942 31 discriminator 13
 8065 12e8 FB68     		ldr	r3, [r7, #12]
 8066 12ea 5B6A     		ldr	r3, [r3, #36]
 8067 12ec 072B     		cmp	r3, #7
ARM GAS  /tmp/ccuwK2ly.s 			page 193


 8068 12ee 1DD0     		beq	.L754
 8069              		.loc 1 2942 31 discriminator 15
 8070 12f0 FB68     		ldr	r3, [r7, #12]
 8071 12f2 5B6A     		ldr	r3, [r3, #36]
 8072 12f4 082B     		cmp	r3, #8
 8073 12f6 16D0     		beq	.L755
 8074              		.loc 1 2942 31 discriminator 17
 8075 12f8 FB68     		ldr	r3, [r7, #12]
 8076 12fa 5B6A     		ldr	r3, [r3, #36]
 8077 12fc 092B     		cmp	r3, #9
 8078 12fe 0FD0     		beq	.L756
 8079              		.loc 1 2942 31 discriminator 19
 8080 1300 FB68     		ldr	r3, [r7, #12]
 8081 1302 5B6A     		ldr	r3, [r3, #36]
 8082 1304 0A2B     		cmp	r3, #10
 8083 1306 08D0     		beq	.L757
 8084              		.loc 1 2942 31 discriminator 21
 8085 1308 FB68     		ldr	r3, [r7, #12]
 8086 130a 5B6A     		ldr	r3, [r3, #36]
 8087 130c 0B2B     		cmp	r3, #11
 8088 130e 01D1     		bne	.L758
 8089              		.loc 1 2942 31 discriminator 23
 8090 1310 8023     		movs	r3, #128
 8091 1312 22E0     		b	.L770
 8092              	.L758:
 8093              		.loc 1 2942 31 discriminator 24
 8094 1314 4FF40043 		mov	r3, #32768
 8095 1318 1FE0     		b	.L770
 8096              	.L757:
 8097              		.loc 1 2942 31 discriminator 22
 8098 131a 4FF48073 		mov	r3, #256
 8099 131e 1CE0     		b	.L770
 8100              	.L756:
 8101              		.loc 1 2942 31 discriminator 20
 8102 1320 4FF40073 		mov	r3, #512
 8103 1324 19E0     		b	.L770
 8104              	.L755:
 8105              		.loc 1 2942 31 discriminator 18
 8106 1326 4FF48063 		mov	r3, #1024
 8107 132a 16E0     		b	.L770
 8108              	.L754:
 8109              		.loc 1 2942 31 discriminator 16
 8110 132c 4FF40063 		mov	r3, #2048
 8111 1330 13E0     		b	.L770
 8112              	.L753:
 8113              		.loc 1 2942 31 discriminator 14
 8114 1332 40F6AA23 		movw	r3, #2730
 8115 1336 10E0     		b	.L770
 8116              	.L752:
 8117              		.loc 1 2942 31 discriminator 12
 8118 1338 40F6CC43 		movw	r3, #3276
 8119 133c 0DE0     		b	.L770
 8120              	.L751:
 8121              		.loc 1 2942 31 discriminator 10
 8122 133e 4FF48053 		mov	r3, #4096
 8123 1342 0AE0     		b	.L770
 8124              	.L750:
ARM GAS  /tmp/ccuwK2ly.s 			page 194


 8125              		.loc 1 2942 31 discriminator 8
 8126 1344 41F25553 		movw	r3, #5461
 8127 1348 07E0     		b	.L770
 8128              	.L749:
 8129              		.loc 1 2942 31 discriminator 6
 8130 134a 4FF40053 		mov	r3, #8192
 8131 134e 04E0     		b	.L770
 8132              	.L748:
 8133              		.loc 1 2942 31 discriminator 4
 8134 1350 4FF48043 		mov	r3, #16384
 8135 1354 01E0     		b	.L770
 8136              	.L747:
 8137              		.loc 1 2942 31 discriminator 2
 8138 1356 4FF40043 		mov	r3, #32768
 8139              	.L770:
 8140              		.loc 1 2942 31 discriminator 48
 8141 135a FA68     		ldr	r2, [r7, #12]
 8142 135c 5268     		ldr	r2, [r2, #4]
 8143 135e 5208     		lsrs	r2, r2, #1
 8144 1360 1A44     		add	r2, r2, r3
 8145 1362 FB68     		ldr	r3, [r7, #12]
 8146 1364 5B68     		ldr	r3, [r3, #4]
 8147 1366 B2FBF3F3 		udiv	r3, r2, r3
 8148              		.loc 1 2942 20 is_stmt 1 discriminator 48
 8149 136a 9BB2     		uxth	r3, r3
 8150              		.loc 1 2942 18 discriminator 48
 8151 136c 7B62     		str	r3, [r7, #36]
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 8152              		.loc 1 2943 9 discriminator 48
 8153 136e 03E0     		b	.L674
 8154              	.L643:
2944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
 8155              		.loc 1 2945 13
 8156 1370 0123     		movs	r3, #1
 8157 1372 87F82330 		strb	r3, [r7, #35]
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 8158              		.loc 1 2946 9
 8159 1376 00BF     		nop
 8160              	.L674:
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8161              		.loc 1 2950 8
 8162 1378 7B6A     		ldr	r3, [r7, #36]
 8163 137a 0F2B     		cmp	r3, #15
 8164 137c 08D9     		bls	.L771
 8165              		.loc 1 2950 36 discriminator 1
 8166 137e 7B6A     		ldr	r3, [r7, #36]
 8167 1380 B3F5803F 		cmp	r3, #65536
 8168 1384 04D2     		bcs	.L771
2951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
 8169              		.loc 1 2952 12
 8170 1386 FB68     		ldr	r3, [r7, #12]
 8171 1388 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccuwK2ly.s 			page 195


 8172              		.loc 1 2952 28
 8173 138a 7A6A     		ldr	r2, [r7, #36]
 8174 138c DA60     		str	r2, [r3, #12]
 8175 138e 02E0     		b	.L511
 8176              	.L771:
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       ret = HAL_ERROR;
 8177              		.loc 1 2956 11
 8178 1390 0123     		movs	r3, #1
 8179 1392 87F82330 		strb	r3, [r7, #35]
 8180              	.L511:
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
 8181              		.loc 1 2961 28
 8182 1396 FB68     		ldr	r3, [r7, #12]
 8183 1398 0122     		movs	r2, #1
 8184 139a A3F86A20 		strh	r2, [r3, #106]	@ movhi
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 8185              		.loc 1 2962 28
 8186 139e FB68     		ldr	r3, [r7, #12]
 8187 13a0 0122     		movs	r2, #1
 8188 13a2 A3F86820 		strh	r2, [r3, #104]	@ movhi
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear ISR function pointers */
2965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR = NULL;
 8189              		.loc 1 2965 16
 8190 13a6 FB68     		ldr	r3, [r7, #12]
 8191 13a8 0022     		movs	r2, #0
 8192 13aa DA66     		str	r2, [r3, #108]
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
 8193              		.loc 1 2966 16
 8194 13ac FB68     		ldr	r3, [r7, #12]
 8195 13ae 0022     		movs	r2, #0
 8196 13b0 1A67     		str	r2, [r3, #112]
2967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return ret;
 8197              		.loc 1 2968 10
 8198 13b2 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
2969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8199              		.loc 1 2969 1
 8200 13b6 1846     		mov	r0, r3
 8201 13b8 3437     		adds	r7, r7, #52
 8202              	.LCFI218:
 8203              		.cfi_def_cfa_offset 36
 8204 13ba BD46     		mov	sp, r7
 8205              	.LCFI219:
 8206              		.cfi_def_cfa_register 13
 8207              		@ sp needed
 8208 13bc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8209              	.L782:
 8210              		.align	2
 8211              	.L781:
ARM GAS  /tmp/ccuwK2ly.s 			page 196


 8212 13c0 0024F400 		.word	16000000
 8213 13c4 48E80100 		.word	125000
 8214 13c8 90D00300 		.word	250000
 8215 13cc 20A10700 		.word	500000
 8216 13d0 40420F00 		.word	1000000
 8217 13d4 55581400 		.word	1333333
 8218 13d8 006A1800 		.word	1600000
 8219 13dc 80841E00 		.word	2000000
 8220 13e0 AAB02800 		.word	2666666
 8221 13e4 00093D00 		.word	4000000
 8222 13e8 00127A00 		.word	8000000
 8223              		.cfi_endproc
 8224              	.LFE364:
 8226              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 8227              		.align	1
 8228              		.global	UART_AdvFeatureConfig
 8229              		.syntax unified
 8230              		.thumb
 8231              		.thumb_func
 8232              		.fpu fpv4-sp-d16
 8234              	UART_AdvFeatureConfig:
 8235              	.LFB365:
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 8236              		.loc 1 2977 1
 8237              		.cfi_startproc
 8238              		@ args = 0, pretend = 0, frame = 8
 8239              		@ frame_needed = 1, uses_anonymous_args = 0
 8240              		@ link register save eliminated.
 8241 0000 80B4     		push	{r7}
 8242              	.LCFI220:
 8243              		.cfi_def_cfa_offset 4
 8244              		.cfi_offset 7, -4
 8245 0002 83B0     		sub	sp, sp, #12
 8246              	.LCFI221:
 8247              		.cfi_def_cfa_offset 16
 8248 0004 00AF     		add	r7, sp, #0
 8249              	.LCFI222:
 8250              		.cfi_def_cfa_register 7
 8251 0006 7860     		str	r0, [r7, #4]
2978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8252              		.loc 1 2982 7
 8253 0008 7B68     		ldr	r3, [r7, #4]
 8254 000a 9B6A     		ldr	r3, [r3, #40]
 8255 000c 03F00103 		and	r3, r3, #1
 8256              		.loc 1 2982 6
 8257 0010 002B     		cmp	r3, #0
ARM GAS  /tmp/ccuwK2ly.s 			page 197


 8258 0012 0AD0     		beq	.L784
2983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8259              		.loc 1 2985 5
 8260 0014 7B68     		ldr	r3, [r7, #4]
 8261 0016 1B68     		ldr	r3, [r3]
 8262 0018 5B68     		ldr	r3, [r3, #4]
 8263 001a 23F40031 		bic	r1, r3, #131072
 8264 001e 7B68     		ldr	r3, [r7, #4]
 8265 0020 DA6A     		ldr	r2, [r3, #44]
 8266 0022 7B68     		ldr	r3, [r7, #4]
 8267 0024 1B68     		ldr	r3, [r3]
 8268 0026 0A43     		orrs	r2, r2, r1
 8269 0028 5A60     		str	r2, [r3, #4]
 8270              	.L784:
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8271              		.loc 1 2989 7
 8272 002a 7B68     		ldr	r3, [r7, #4]
 8273 002c 9B6A     		ldr	r3, [r3, #40]
 8274 002e 03F00203 		and	r3, r3, #2
 8275              		.loc 1 2989 6
 8276 0032 002B     		cmp	r3, #0
 8277 0034 0AD0     		beq	.L785
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8278              		.loc 1 2992 5
 8279 0036 7B68     		ldr	r3, [r7, #4]
 8280 0038 1B68     		ldr	r3, [r3]
 8281 003a 5B68     		ldr	r3, [r3, #4]
 8282 003c 23F48031 		bic	r1, r3, #65536
 8283 0040 7B68     		ldr	r3, [r7, #4]
 8284 0042 1A6B     		ldr	r2, [r3, #48]
 8285 0044 7B68     		ldr	r3, [r7, #4]
 8286 0046 1B68     		ldr	r3, [r3]
 8287 0048 0A43     		orrs	r2, r2, r1
 8288 004a 5A60     		str	r2, [r3, #4]
 8289              	.L785:
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure data inversion */
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8290              		.loc 1 2996 7
 8291 004c 7B68     		ldr	r3, [r7, #4]
 8292 004e 9B6A     		ldr	r3, [r3, #40]
 8293 0050 03F00403 		and	r3, r3, #4
 8294              		.loc 1 2996 6
 8295 0054 002B     		cmp	r3, #0
 8296 0056 0AD0     		beq	.L786
2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8297              		.loc 1 2999 5
ARM GAS  /tmp/ccuwK2ly.s 			page 198


 8298 0058 7B68     		ldr	r3, [r7, #4]
 8299 005a 1B68     		ldr	r3, [r3]
 8300 005c 5B68     		ldr	r3, [r3, #4]
 8301 005e 23F48021 		bic	r1, r3, #262144
 8302 0062 7B68     		ldr	r3, [r7, #4]
 8303 0064 5A6B     		ldr	r2, [r3, #52]
 8304 0066 7B68     		ldr	r3, [r7, #4]
 8305 0068 1B68     		ldr	r3, [r3]
 8306 006a 0A43     		orrs	r2, r2, r1
 8307 006c 5A60     		str	r2, [r3, #4]
 8308              	.L786:
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8309              		.loc 1 3003 7
 8310 006e 7B68     		ldr	r3, [r7, #4]
 8311 0070 9B6A     		ldr	r3, [r3, #40]
 8312 0072 03F00803 		and	r3, r3, #8
 8313              		.loc 1 3003 6
 8314 0076 002B     		cmp	r3, #0
 8315 0078 0AD0     		beq	.L787
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8316              		.loc 1 3006 5
 8317 007a 7B68     		ldr	r3, [r7, #4]
 8318 007c 1B68     		ldr	r3, [r3]
 8319 007e 5B68     		ldr	r3, [r3, #4]
 8320 0080 23F40041 		bic	r1, r3, #32768
 8321 0084 7B68     		ldr	r3, [r7, #4]
 8322 0086 9A6B     		ldr	r2, [r3, #56]
 8323 0088 7B68     		ldr	r3, [r7, #4]
 8324 008a 1B68     		ldr	r3, [r3]
 8325 008c 0A43     		orrs	r2, r2, r1
 8326 008e 5A60     		str	r2, [r3, #4]
 8327              	.L787:
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8328              		.loc 1 3010 7
 8329 0090 7B68     		ldr	r3, [r7, #4]
 8330 0092 9B6A     		ldr	r3, [r3, #40]
 8331 0094 03F01003 		and	r3, r3, #16
 8332              		.loc 1 3010 6
 8333 0098 002B     		cmp	r3, #0
 8334 009a 0AD0     		beq	.L788
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8335              		.loc 1 3013 5
 8336 009c 7B68     		ldr	r3, [r7, #4]
 8337 009e 1B68     		ldr	r3, [r3]
 8338 00a0 9B68     		ldr	r3, [r3, #8]
 8339 00a2 23F48051 		bic	r1, r3, #4096
 8340 00a6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 199


 8341 00a8 DA6B     		ldr	r2, [r3, #60]
 8342 00aa 7B68     		ldr	r3, [r7, #4]
 8343 00ac 1B68     		ldr	r3, [r3]
 8344 00ae 0A43     		orrs	r2, r2, r1
 8345 00b0 9A60     		str	r2, [r3, #8]
 8346              	.L788:
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8347              		.loc 1 3017 7
 8348 00b2 7B68     		ldr	r3, [r7, #4]
 8349 00b4 9B6A     		ldr	r3, [r3, #40]
 8350 00b6 03F02003 		and	r3, r3, #32
 8351              		.loc 1 3017 6
 8352 00ba 002B     		cmp	r3, #0
 8353 00bc 0AD0     		beq	.L789
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8354              		.loc 1 3020 5
 8355 00be 7B68     		ldr	r3, [r7, #4]
 8356 00c0 1B68     		ldr	r3, [r3]
 8357 00c2 9B68     		ldr	r3, [r3, #8]
 8358 00c4 23F40051 		bic	r1, r3, #8192
 8359 00c8 7B68     		ldr	r3, [r7, #4]
 8360 00ca 1A6C     		ldr	r2, [r3, #64]
 8361 00cc 7B68     		ldr	r3, [r7, #4]
 8362 00ce 1B68     		ldr	r3, [r3]
 8363 00d0 0A43     		orrs	r2, r2, r1
 8364 00d2 9A60     		str	r2, [r3, #8]
 8365              	.L789:
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8366              		.loc 1 3024 7
 8367 00d4 7B68     		ldr	r3, [r7, #4]
 8368 00d6 9B6A     		ldr	r3, [r3, #40]
 8369 00d8 03F04003 		and	r3, r3, #64
 8370              		.loc 1 3024 6
 8371 00dc 002B     		cmp	r3, #0
 8372 00de 1AD0     		beq	.L790
3025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8373              		.loc 1 3028 5
 8374 00e0 7B68     		ldr	r3, [r7, #4]
 8375 00e2 1B68     		ldr	r3, [r3]
 8376 00e4 5B68     		ldr	r3, [r3, #4]
 8377 00e6 23F48011 		bic	r1, r3, #1048576
 8378 00ea 7B68     		ldr	r3, [r7, #4]
 8379 00ec 5A6C     		ldr	r2, [r3, #68]
 8380 00ee 7B68     		ldr	r3, [r7, #4]
 8381 00f0 1B68     		ldr	r3, [r3]
 8382 00f2 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/ccuwK2ly.s 			page 200


 8383 00f4 5A60     		str	r2, [r3, #4]
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8384              		.loc 1 3030 28
 8385 00f6 7B68     		ldr	r3, [r7, #4]
 8386 00f8 5B6C     		ldr	r3, [r3, #68]
 8387              		.loc 1 3030 8
 8388 00fa B3F5801F 		cmp	r3, #1048576
 8389 00fe 0AD1     		bne	.L790
3031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8390              		.loc 1 3033 7
 8391 0100 7B68     		ldr	r3, [r7, #4]
 8392 0102 1B68     		ldr	r3, [r3]
 8393 0104 5B68     		ldr	r3, [r3, #4]
 8394 0106 23F4C001 		bic	r1, r3, #6291456
 8395 010a 7B68     		ldr	r3, [r7, #4]
 8396 010c 9A6C     		ldr	r2, [r3, #72]
 8397 010e 7B68     		ldr	r3, [r7, #4]
 8398 0110 1B68     		ldr	r3, [r3]
 8399 0112 0A43     		orrs	r2, r2, r1
 8400 0114 5A60     		str	r2, [r3, #4]
 8401              	.L790:
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8402              		.loc 1 3038 7
 8403 0116 7B68     		ldr	r3, [r7, #4]
 8404 0118 9B6A     		ldr	r3, [r3, #40]
 8405 011a 03F08003 		and	r3, r3, #128
 8406              		.loc 1 3038 6
 8407 011e 002B     		cmp	r3, #0
 8408 0120 0AD0     		beq	.L792
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8409              		.loc 1 3041 5
 8410 0122 7B68     		ldr	r3, [r7, #4]
 8411 0124 1B68     		ldr	r3, [r3]
 8412 0126 5B68     		ldr	r3, [r3, #4]
 8413 0128 23F40021 		bic	r1, r3, #524288
 8414 012c 7B68     		ldr	r3, [r7, #4]
 8415 012e DA6C     		ldr	r2, [r3, #76]
 8416 0130 7B68     		ldr	r3, [r7, #4]
 8417 0132 1B68     		ldr	r3, [r3]
 8418 0134 0A43     		orrs	r2, r2, r1
 8419 0136 5A60     		str	r2, [r3, #4]
 8420              	.L792:
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8421              		.loc 1 3043 1
 8422 0138 00BF     		nop
 8423 013a 0C37     		adds	r7, r7, #12
 8424              	.LCFI223:
ARM GAS  /tmp/ccuwK2ly.s 			page 201


 8425              		.cfi_def_cfa_offset 4
 8426 013c BD46     		mov	sp, r7
 8427              	.LCFI224:
 8428              		.cfi_def_cfa_register 13
 8429              		@ sp needed
 8430 013e 5DF8047B 		ldr	r7, [sp], #4
 8431              	.LCFI225:
 8432              		.cfi_restore 7
 8433              		.cfi_def_cfa_offset 0
 8434 0142 7047     		bx	lr
 8435              		.cfi_endproc
 8436              	.LFE365:
 8438              		.section	.text.UART_CheckIdleState,"ax",%progbits
 8439              		.align	1
 8440              		.global	UART_CheckIdleState
 8441              		.syntax unified
 8442              		.thumb
 8443              		.thumb_func
 8444              		.fpu fpv4-sp-d16
 8446              	UART_CheckIdleState:
 8447              	.LFB366:
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 8448              		.loc 1 3051 1
 8449              		.cfi_startproc
 8450              		@ args = 0, pretend = 0, frame = 16
 8451              		@ frame_needed = 1, uses_anonymous_args = 0
 8452 0000 80B5     		push	{r7, lr}
 8453              	.LCFI226:
 8454              		.cfi_def_cfa_offset 8
 8455              		.cfi_offset 7, -8
 8456              		.cfi_offset 14, -4
 8457 0002 86B0     		sub	sp, sp, #24
 8458              	.LCFI227:
 8459              		.cfi_def_cfa_offset 32
 8460 0004 02AF     		add	r7, sp, #8
 8461              	.LCFI228:
 8462              		.cfi_def_cfa 7, 24
 8463 0006 7860     		str	r0, [r7, #4]
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
3053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8464              		.loc 1 3055 20
 8465 0008 7B68     		ldr	r3, [r7, #4]
 8466 000a 0022     		movs	r2, #0
 8467 000c C3F88820 		str	r2, [r3, #136]
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tickstart = HAL_GetTick();
 8468              		.loc 1 3058 15
ARM GAS  /tmp/ccuwK2ly.s 			page 202


 8469 0010 FFF7FEFF 		bl	HAL_GetTick
 8470 0014 F860     		str	r0, [r7, #12]
3059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8471              		.loc 1 3061 13
 8472 0016 7B68     		ldr	r3, [r7, #4]
 8473 0018 1B68     		ldr	r3, [r3]
 8474              		.loc 1 3061 23
 8475 001a 1B68     		ldr	r3, [r3]
 8476              		.loc 1 3061 29
 8477 001c 03F00803 		and	r3, r3, #8
 8478              		.loc 1 3061 6
 8479 0020 082B     		cmp	r3, #8
 8480 0022 0ED1     		bne	.L794
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 8481              		.loc 1 3064 9
 8482 0024 6FF07E43 		mvn	r3, #-33554432
 8483 0028 0093     		str	r3, [sp]
 8484 002a FB68     		ldr	r3, [r7, #12]
 8485 002c 0022     		movs	r2, #0
 8486 002e 4FF40011 		mov	r1, #2097152
 8487 0032 7868     		ldr	r0, [r7, #4]
 8488 0034 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8489 0038 0346     		mov	r3, r0
 8490              		.loc 1 3064 8
 8491 003a 002B     		cmp	r3, #0
 8492 003c 01D0     		beq	.L794
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Timeout occurred */
3067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
 8493              		.loc 1 3067 14
 8494 003e 0323     		movs	r3, #3
 8495 0040 22E0     		b	.L795
 8496              	.L794:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8497              		.loc 1 3072 13
 8498 0042 7B68     		ldr	r3, [r7, #4]
 8499 0044 1B68     		ldr	r3, [r3]
 8500              		.loc 1 3072 23
 8501 0046 1B68     		ldr	r3, [r3]
 8502              		.loc 1 3072 29
 8503 0048 03F00403 		and	r3, r3, #4
 8504              		.loc 1 3072 6
 8505 004c 042B     		cmp	r3, #4
 8506 004e 0ED1     		bne	.L796
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 8507              		.loc 1 3075 9
 8508 0050 6FF07E43 		mvn	r3, #-33554432
ARM GAS  /tmp/ccuwK2ly.s 			page 203


 8509 0054 0093     		str	r3, [sp]
 8510 0056 FB68     		ldr	r3, [r7, #12]
 8511 0058 0022     		movs	r2, #0
 8512 005a 4FF48001 		mov	r1, #4194304
 8513 005e 7868     		ldr	r0, [r7, #4]
 8514 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8515 0064 0346     		mov	r3, r0
 8516              		.loc 1 3075 8
 8517 0066 002B     		cmp	r3, #0
 8518 0068 01D0     		beq	.L796
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Timeout occurred */
3078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
 8519              		.loc 1 3078 14
 8520 006a 0323     		movs	r3, #3
 8521 006c 0CE0     		b	.L795
 8522              	.L796:
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the UART State */
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8523              		.loc 1 3083 17
 8524 006e 7B68     		ldr	r3, [r7, #4]
 8525 0070 2022     		movs	r2, #32
 8526 0072 C3F88020 		str	r2, [r3, #128]
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8527              		.loc 1 3084 18
 8528 0076 7B68     		ldr	r3, [r7, #4]
 8529 0078 2022     		movs	r2, #32
 8530 007a C3F88420 		str	r2, [r3, #132]
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8531              		.loc 1 3086 3
 8532 007e 7B68     		ldr	r3, [r7, #4]
 8533 0080 0022     		movs	r2, #0
 8534 0082 83F87C20 		strb	r2, [r3, #124]
3087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 8535              		.loc 1 3088 10
 8536 0086 0023     		movs	r3, #0
 8537              	.L795:
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8538              		.loc 1 3089 1
 8539 0088 1846     		mov	r0, r3
 8540 008a 1037     		adds	r7, r7, #16
 8541              	.LCFI229:
 8542              		.cfi_def_cfa_offset 8
 8543 008c BD46     		mov	sp, r7
 8544              	.LCFI230:
 8545              		.cfi_def_cfa_register 13
 8546              		@ sp needed
 8547 008e 80BD     		pop	{r7, pc}
 8548              		.cfi_endproc
 8549              	.LFE366:
 8551              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 8552              		.align	1
ARM GAS  /tmp/ccuwK2ly.s 			page 204


 8553              		.global	UART_WaitOnFlagUntilTimeout
 8554              		.syntax unified
 8555              		.thumb
 8556              		.thumb_func
 8557              		.fpu fpv4-sp-d16
 8559              	UART_WaitOnFlagUntilTimeout:
 8560              	.LFB367:
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart     UART handle.
3094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Tickstart Tick start value
3097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 8561              		.loc 1 3102 1
 8562              		.cfi_startproc
 8563              		@ args = 4, pretend = 0, frame = 16
 8564              		@ frame_needed = 1, uses_anonymous_args = 0
 8565 0000 80B5     		push	{r7, lr}
 8566              	.LCFI231:
 8567              		.cfi_def_cfa_offset 8
 8568              		.cfi_offset 7, -8
 8569              		.cfi_offset 14, -4
 8570 0002 84B0     		sub	sp, sp, #16
 8571              	.LCFI232:
 8572              		.cfi_def_cfa_offset 24
 8573 0004 00AF     		add	r7, sp, #0
 8574              	.LCFI233:
 8575              		.cfi_def_cfa_register 7
 8576 0006 F860     		str	r0, [r7, #12]
 8577 0008 B960     		str	r1, [r7, #8]
 8578 000a 3B60     		str	r3, [r7]
 8579 000c 1346     		mov	r3, r2
 8580 000e FB71     		strb	r3, [r7, #7]
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Wait until flag is set */
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8581              		.loc 1 3104 9
 8582 0010 2CE0     		b	.L798
 8583              	.L801:
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check for the Timeout */
3107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 8584              		.loc 1 3107 8
 8585 0012 BB69     		ldr	r3, [r7, #24]
 8586 0014 B3F1FF3F 		cmp	r3, #-1
 8587 0018 28D0     		beq	.L798
3108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8588              		.loc 1 3109 13
 8589 001a FFF7FEFF 		bl	HAL_GetTick
 8590 001e 0246     		mov	r2, r0
ARM GAS  /tmp/ccuwK2ly.s 			page 205


 8591              		.loc 1 3109 27
 8592 0020 3B68     		ldr	r3, [r7]
 8593 0022 D31A     		subs	r3, r2, r3
 8594              		.loc 1 3109 10
 8595 0024 BA69     		ldr	r2, [r7, #24]
 8596 0026 9A42     		cmp	r2, r3
 8597 0028 02D3     		bcc	.L799
 8598              		.loc 1 3109 51 discriminator 1
 8599 002a BB69     		ldr	r3, [r7, #24]
 8600 002c 002B     		cmp	r3, #0
 8601 002e 1DD1     		bne	.L798
 8602              	.L799:
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
 8603              		.loc 1 3112 9
 8604 0030 FB68     		ldr	r3, [r7, #12]
 8605 0032 1B68     		ldr	r3, [r3]
 8606 0034 1A68     		ldr	r2, [r3]
 8607 0036 FB68     		ldr	r3, [r7, #12]
 8608 0038 1B68     		ldr	r3, [r3]
 8609 003a 22F4D072 		bic	r2, r2, #416
 8610 003e 1A60     		str	r2, [r3]
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8611              		.loc 1 3113 9
 8612 0040 FB68     		ldr	r3, [r7, #12]
 8613 0042 1B68     		ldr	r3, [r3]
 8614 0044 9A68     		ldr	r2, [r3, #8]
 8615 0046 FB68     		ldr	r3, [r7, #12]
 8616 0048 1B68     		ldr	r3, [r3]
 8617 004a 22F00102 		bic	r2, r2, #1
 8618 004e 9A60     		str	r2, [r3, #8]
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 8619              		.loc 1 3115 23
 8620 0050 FB68     		ldr	r3, [r7, #12]
 8621 0052 2022     		movs	r2, #32
 8622 0054 C3F88020 		str	r2, [r3, #128]
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 8623              		.loc 1 3116 24
 8624 0058 FB68     		ldr	r3, [r7, #12]
 8625 005a 2022     		movs	r2, #32
 8626 005c C3F88420 		str	r2, [r3, #132]
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 8627              		.loc 1 3118 9
 8628 0060 FB68     		ldr	r3, [r7, #12]
 8629 0062 0022     		movs	r2, #0
 8630 0064 83F87C20 		strb	r2, [r3, #124]
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
 8631              		.loc 1 3120 16
 8632 0068 0323     		movs	r3, #3
 8633 006a 0FE0     		b	.L800
 8634              	.L798:
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8635              		.loc 1 3104 11
ARM GAS  /tmp/ccuwK2ly.s 			page 206


 8636 006c FB68     		ldr	r3, [r7, #12]
 8637 006e 1B68     		ldr	r3, [r3]
 8638 0070 DA69     		ldr	r2, [r3, #28]
 8639 0072 BB68     		ldr	r3, [r7, #8]
 8640 0074 1340     		ands	r3, r3, r2
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8641              		.loc 1 3104 50
 8642 0076 BA68     		ldr	r2, [r7, #8]
 8643 0078 9A42     		cmp	r2, r3
 8644 007a 0CBF     		ite	eq
 8645 007c 0123     		moveq	r3, #1
 8646 007e 0023     		movne	r3, #0
 8647 0080 DBB2     		uxtb	r3, r3
 8648 0082 1A46     		mov	r2, r3
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8649              		.loc 1 3104 59
 8650 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 8651              		.loc 1 3104 9
 8652 0086 9A42     		cmp	r2, r3
 8653 0088 C3D0     		beq	.L801
3121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 8654              		.loc 1 3124 10
 8655 008a 0023     		movs	r3, #0
 8656              	.L800:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8657              		.loc 1 3125 1
 8658 008c 1846     		mov	r0, r3
 8659 008e 1037     		adds	r7, r7, #16
 8660              	.LCFI234:
 8661              		.cfi_def_cfa_offset 8
 8662 0090 BD46     		mov	sp, r7
 8663              	.LCFI235:
 8664              		.cfi_def_cfa_register 13
 8665              		@ sp needed
 8666 0092 80BD     		pop	{r7, pc}
 8667              		.cfi_endproc
 8668              	.LFE367:
 8670              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 8671              		.align	1
 8672              		.syntax unified
 8673              		.thumb
 8674              		.thumb_func
 8675              		.fpu fpv4-sp-d16
 8677              	UART_EndTxTransfer:
 8678              	.LFB368:
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccuwK2ly.s 			page 207


3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 8679              		.loc 1 3134 1
 8680              		.cfi_startproc
 8681              		@ args = 0, pretend = 0, frame = 8
 8682              		@ frame_needed = 1, uses_anonymous_args = 0
 8683              		@ link register save eliminated.
 8684 0000 80B4     		push	{r7}
 8685              	.LCFI236:
 8686              		.cfi_def_cfa_offset 4
 8687              		.cfi_offset 7, -4
 8688 0002 83B0     		sub	sp, sp, #12
 8689              	.LCFI237:
 8690              		.cfi_def_cfa_offset 16
 8691 0004 00AF     		add	r7, sp, #0
 8692              	.LCFI238:
 8693              		.cfi_def_cfa_register 7
 8694 0006 7860     		str	r0, [r7, #4]
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 8695              		.loc 1 3136 3
 8696 0008 7B68     		ldr	r3, [r7, #4]
 8697 000a 1B68     		ldr	r3, [r3]
 8698 000c 1A68     		ldr	r2, [r3]
 8699 000e 7B68     		ldr	r3, [r7, #4]
 8700 0010 1B68     		ldr	r3, [r3]
 8701 0012 22F0C002 		bic	r2, r2, #192
 8702 0016 1A60     		str	r2, [r3]
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
 8703              		.loc 1 3137 3
 8704 0018 7B68     		ldr	r3, [r7, #4]
 8705 001a 1B68     		ldr	r3, [r3]
 8706 001c 9A68     		ldr	r2, [r3, #8]
 8707 001e 7B68     		ldr	r3, [r7, #4]
 8708 0020 1B68     		ldr	r3, [r3]
 8709 0022 22F40002 		bic	r2, r2, #8388608
 8710 0026 9A60     		str	r2, [r3, #8]
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8711              		.loc 1 3140 17
 8712 0028 7B68     		ldr	r3, [r7, #4]
 8713 002a 2022     		movs	r2, #32
 8714 002c C3F88020 		str	r2, [r3, #128]
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8715              		.loc 1 3141 1
 8716 0030 00BF     		nop
 8717 0032 0C37     		adds	r7, r7, #12
 8718              	.LCFI239:
 8719              		.cfi_def_cfa_offset 4
 8720 0034 BD46     		mov	sp, r7
 8721              	.LCFI240:
 8722              		.cfi_def_cfa_register 13
 8723              		@ sp needed
 8724 0036 5DF8047B 		ldr	r7, [sp], #4
 8725              	.LCFI241:
 8726              		.cfi_restore 7
 8727              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccuwK2ly.s 			page 208


 8728 003a 7047     		bx	lr
 8729              		.cfi_endproc
 8730              	.LFE368:
 8732              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 8733              		.align	1
 8734              		.syntax unified
 8735              		.thumb
 8736              		.thumb_func
 8737              		.fpu fpv4-sp-d16
 8739              	UART_EndRxTransfer:
 8740              	.LFB369:
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 8741              		.loc 1 3150 1
 8742              		.cfi_startproc
 8743              		@ args = 0, pretend = 0, frame = 8
 8744              		@ frame_needed = 1, uses_anonymous_args = 0
 8745              		@ link register save eliminated.
 8746 0000 80B4     		push	{r7}
 8747              	.LCFI242:
 8748              		.cfi_def_cfa_offset 4
 8749              		.cfi_offset 7, -4
 8750 0002 83B0     		sub	sp, sp, #12
 8751              	.LCFI243:
 8752              		.cfi_def_cfa_offset 16
 8753 0004 00AF     		add	r7, sp, #0
 8754              	.LCFI244:
 8755              		.cfi_def_cfa_register 7
 8756 0006 7860     		str	r0, [r7, #4]
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8757              		.loc 1 3152 3
 8758 0008 7B68     		ldr	r3, [r7, #4]
 8759 000a 1B68     		ldr	r3, [r3]
 8760 000c 1A68     		ldr	r2, [r3]
 8761 000e 7B68     		ldr	r3, [r7, #4]
 8762 0010 1B68     		ldr	r3, [r3]
 8763 0012 22F49072 		bic	r2, r2, #288
 8764 0016 1A60     		str	r2, [r3]
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 8765              		.loc 1 3153 3
 8766 0018 7B68     		ldr	r3, [r7, #4]
 8767 001a 1B68     		ldr	r3, [r3]
 8768 001c 9B68     		ldr	r3, [r3, #8]
 8769 001e 7A68     		ldr	r2, [r7, #4]
 8770 0020 1268     		ldr	r2, [r2]
 8771 0022 23F08053 		bic	r3, r3, #268435456
 8772 0026 23F00103 		bic	r3, r3, #1
 8773 002a 9360     		str	r3, [r2, #8]
3154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccuwK2ly.s 			page 209


3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8774              		.loc 1 3156 18
 8775 002c 7B68     		ldr	r3, [r7, #4]
 8776 002e 2022     		movs	r2, #32
 8777 0030 C3F88420 		str	r2, [r3, #132]
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR = NULL;
 8778              		.loc 1 3159 16
 8779 0034 7B68     		ldr	r3, [r7, #4]
 8780 0036 0022     		movs	r2, #0
 8781 0038 DA66     		str	r2, [r3, #108]
3160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8782              		.loc 1 3160 1
 8783 003a 00BF     		nop
 8784 003c 0C37     		adds	r7, r7, #12
 8785              	.LCFI245:
 8786              		.cfi_def_cfa_offset 4
 8787 003e BD46     		mov	sp, r7
 8788              	.LCFI246:
 8789              		.cfi_def_cfa_register 13
 8790              		@ sp needed
 8791 0040 5DF8047B 		ldr	r7, [sp], #4
 8792              	.LCFI247:
 8793              		.cfi_restore 7
 8794              		.cfi_def_cfa_offset 0
 8795 0044 7047     		bx	lr
 8796              		.cfi_endproc
 8797              	.LFE369:
 8799              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 8800              		.align	1
 8801              		.syntax unified
 8802              		.thumb
 8803              		.thumb_func
 8804              		.fpu fpv4-sp-d16
 8806              	UART_DMATransmitCplt:
 8807              	.LFB370:
3161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 8808              		.loc 1 3169 1
 8809              		.cfi_startproc
 8810              		@ args = 0, pretend = 0, frame = 16
 8811              		@ frame_needed = 1, uses_anonymous_args = 0
 8812 0000 80B5     		push	{r7, lr}
 8813              	.LCFI248:
 8814              		.cfi_def_cfa_offset 8
 8815              		.cfi_offset 7, -8
 8816              		.cfi_offset 14, -4
 8817 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccuwK2ly.s 			page 210


 8818              	.LCFI249:
 8819              		.cfi_def_cfa_offset 24
 8820 0004 00AF     		add	r7, sp, #0
 8821              	.LCFI250:
 8822              		.cfi_def_cfa_register 7
 8823 0006 7860     		str	r0, [r7, #4]
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8824              		.loc 1 3170 23
 8825 0008 7B68     		ldr	r3, [r7, #4]
 8826 000a 9B6A     		ldr	r3, [r3, #40]
 8827 000c FB60     		str	r3, [r7, #12]
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Normal mode */
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 8828              		.loc 1 3173 7
 8829 000e 7B68     		ldr	r3, [r7, #4]
 8830 0010 1B68     		ldr	r3, [r3]
 8831 0012 1B68     		ldr	r3, [r3]
 8832 0014 03F02003 		and	r3, r3, #32
 8833              		.loc 1 3173 6
 8834 0018 002B     		cmp	r3, #0
 8835 001a 14D1     		bne	.L805
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 8836              		.loc 1 3175 24
 8837 001c FB68     		ldr	r3, [r7, #12]
 8838 001e 0022     		movs	r2, #0
 8839 0020 A3F85620 		strh	r2, [r3, #86]	@ movhi
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        in the UART CR3 register */
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 8840              		.loc 1 3179 5
 8841 0024 FB68     		ldr	r3, [r7, #12]
 8842 0026 1B68     		ldr	r3, [r3]
 8843 0028 9A68     		ldr	r2, [r3, #8]
 8844 002a FB68     		ldr	r3, [r7, #12]
 8845 002c 1B68     		ldr	r3, [r3]
 8846 002e 22F08002 		bic	r2, r2, #128
 8847 0032 9A60     		str	r2, [r3, #8]
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8848              		.loc 1 3182 5
 8849 0034 FB68     		ldr	r3, [r7, #12]
 8850 0036 1B68     		ldr	r3, [r3]
 8851 0038 1A68     		ldr	r2, [r3]
 8852 003a FB68     		ldr	r3, [r7, #12]
 8853 003c 1B68     		ldr	r3, [r3]
 8854 003e 42F04002 		orr	r2, r2, #64
 8855 0042 1A60     		str	r2, [r3]
3183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Circular mode */
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
ARM GAS  /tmp/ccuwK2ly.s 			page 211


3189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8856              		.loc 1 3195 1
 8857 0044 02E0     		b	.L807
 8858              	.L805:
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 8859              		.loc 1 3192 5
 8860 0046 F868     		ldr	r0, [r7, #12]
 8861 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 8862              	.L807:
 8863              		.loc 1 3195 1
 8864 004c 00BF     		nop
 8865 004e 1037     		adds	r7, r7, #16
 8866              	.LCFI251:
 8867              		.cfi_def_cfa_offset 8
 8868 0050 BD46     		mov	sp, r7
 8869              	.LCFI252:
 8870              		.cfi_def_cfa_register 13
 8871              		@ sp needed
 8872 0052 80BD     		pop	{r7, pc}
 8873              		.cfi_endproc
 8874              	.LFE370:
 8876              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 8877              		.align	1
 8878              		.syntax unified
 8879              		.thumb
 8880              		.thumb_func
 8881              		.fpu fpv4-sp-d16
 8883              	UART_DMATxHalfCplt:
 8884              	.LFB371:
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 8885              		.loc 1 3203 1
 8886              		.cfi_startproc
 8887              		@ args = 0, pretend = 0, frame = 16
 8888              		@ frame_needed = 1, uses_anonymous_args = 0
 8889 0000 80B5     		push	{r7, lr}
 8890              	.LCFI253:
 8891              		.cfi_def_cfa_offset 8
 8892              		.cfi_offset 7, -8
 8893              		.cfi_offset 14, -4
 8894 0002 84B0     		sub	sp, sp, #16
 8895              	.LCFI254:
 8896              		.cfi_def_cfa_offset 24
 8897 0004 00AF     		add	r7, sp, #0
 8898              	.LCFI255:
ARM GAS  /tmp/ccuwK2ly.s 			page 212


 8899              		.cfi_def_cfa_register 7
 8900 0006 7860     		str	r0, [r7, #4]
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8901              		.loc 1 3204 23
 8902 0008 7B68     		ldr	r3, [r7, #4]
 8903 000a 9B6A     		ldr	r3, [r3, #40]
 8904 000c FB60     		str	r3, [r7, #12]
3205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 8905              		.loc 1 3211 3
 8906 000e F868     		ldr	r0, [r7, #12]
 8907 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8908              		.loc 1 3213 1
 8909 0014 00BF     		nop
 8910 0016 1037     		adds	r7, r7, #16
 8911              	.LCFI256:
 8912              		.cfi_def_cfa_offset 8
 8913 0018 BD46     		mov	sp, r7
 8914              	.LCFI257:
 8915              		.cfi_def_cfa_register 13
 8916              		@ sp needed
 8917 001a 80BD     		pop	{r7, pc}
 8918              		.cfi_endproc
 8919              	.LFE371:
 8921              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 8922              		.align	1
 8923              		.syntax unified
 8924              		.thumb
 8925              		.thumb_func
 8926              		.fpu fpv4-sp-d16
 8928              	UART_DMAReceiveCplt:
 8929              	.LFB372:
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 8930              		.loc 1 3221 1
 8931              		.cfi_startproc
 8932              		@ args = 0, pretend = 0, frame = 16
 8933              		@ frame_needed = 1, uses_anonymous_args = 0
 8934 0000 80B5     		push	{r7, lr}
 8935              	.LCFI258:
 8936              		.cfi_def_cfa_offset 8
 8937              		.cfi_offset 7, -8
 8938              		.cfi_offset 14, -4
 8939 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccuwK2ly.s 			page 213


 8940              	.LCFI259:
 8941              		.cfi_def_cfa_offset 24
 8942 0004 00AF     		add	r7, sp, #0
 8943              	.LCFI260:
 8944              		.cfi_def_cfa_register 7
 8945 0006 7860     		str	r0, [r7, #4]
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8946              		.loc 1 3222 23
 8947 0008 7B68     		ldr	r3, [r7, #4]
 8948 000a 9B6A     		ldr	r3, [r3, #40]
 8949 000c FB60     		str	r3, [r7, #12]
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Normal mode */
3225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 8950              		.loc 1 3225 7
 8951 000e 7B68     		ldr	r3, [r7, #4]
 8952 0010 1B68     		ldr	r3, [r3]
 8953 0012 1B68     		ldr	r3, [r3]
 8954 0014 03F02003 		and	r3, r3, #32
 8955              		.loc 1 3225 6
 8956 0018 002B     		cmp	r3, #0
 8957 001a 1FD1     		bne	.L810
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 8958              		.loc 1 3227 24
 8959 001c FB68     		ldr	r3, [r7, #12]
 8960 001e 0022     		movs	r2, #0
 8961 0020 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8962              		.loc 1 3230 5
 8963 0024 FB68     		ldr	r3, [r7, #12]
 8964 0026 1B68     		ldr	r3, [r3]
 8965 0028 1A68     		ldr	r2, [r3]
 8966 002a FB68     		ldr	r3, [r7, #12]
 8967 002c 1B68     		ldr	r3, [r3]
 8968 002e 22F48072 		bic	r2, r2, #256
 8969 0032 1A60     		str	r2, [r3]
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8970              		.loc 1 3231 5
 8971 0034 FB68     		ldr	r3, [r7, #12]
 8972 0036 1B68     		ldr	r3, [r3]
 8973 0038 9A68     		ldr	r2, [r3, #8]
 8974 003a FB68     		ldr	r3, [r7, #12]
 8975 003c 1B68     		ldr	r3, [r3]
 8976 003e 22F00102 		bic	r2, r2, #1
 8977 0042 9A60     		str	r2, [r3, #8]
3232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        in the UART CR3 register */
3235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8978              		.loc 1 3235 5
 8979 0044 FB68     		ldr	r3, [r7, #12]
 8980 0046 1B68     		ldr	r3, [r3]
 8981 0048 9A68     		ldr	r2, [r3, #8]
 8982 004a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccuwK2ly.s 			page 214


 8983 004c 1B68     		ldr	r3, [r3]
 8984 004e 22F04002 		bic	r2, r2, #64
 8985 0052 9A60     		str	r2, [r3, #8]
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 8986              		.loc 1 3238 20
 8987 0054 FB68     		ldr	r3, [r7, #12]
 8988 0056 2022     		movs	r2, #32
 8989 0058 C3F88420 		str	r2, [r3, #132]
 8990              	.L810:
3239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 8991              		.loc 1 3246 3
 8992 005c F868     		ldr	r0, [r7, #12]
 8993 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 8994              		.loc 1 3248 1
 8995 0062 00BF     		nop
 8996 0064 1037     		adds	r7, r7, #16
 8997              	.LCFI261:
 8998              		.cfi_def_cfa_offset 8
 8999 0066 BD46     		mov	sp, r7
 9000              	.LCFI262:
 9001              		.cfi_def_cfa_register 13
 9002              		@ sp needed
 9003 0068 80BD     		pop	{r7, pc}
 9004              		.cfi_endproc
 9005              	.LFE372:
 9007              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 9008              		.align	1
 9009              		.syntax unified
 9010              		.thumb
 9011              		.thumb_func
 9012              		.fpu fpv4-sp-d16
 9014              	UART_DMARxHalfCplt:
 9015              	.LFB373:
3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9016              		.loc 1 3256 1
 9017              		.cfi_startproc
 9018              		@ args = 0, pretend = 0, frame = 16
 9019              		@ frame_needed = 1, uses_anonymous_args = 0
 9020 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccuwK2ly.s 			page 215


 9021              	.LCFI263:
 9022              		.cfi_def_cfa_offset 8
 9023              		.cfi_offset 7, -8
 9024              		.cfi_offset 14, -4
 9025 0002 84B0     		sub	sp, sp, #16
 9026              	.LCFI264:
 9027              		.cfi_def_cfa_offset 24
 9028 0004 00AF     		add	r7, sp, #0
 9029              	.LCFI265:
 9030              		.cfi_def_cfa_register 7
 9031 0006 7860     		str	r0, [r7, #4]
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9032              		.loc 1 3257 23
 9033 0008 7B68     		ldr	r3, [r7, #4]
 9034 000a 9B6A     		ldr	r3, [r3, #40]
 9035 000c FB60     		str	r3, [r7, #12]
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 9036              		.loc 1 3264 3
 9037 000e F868     		ldr	r0, [r7, #12]
 9038 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9039              		.loc 1 3266 1
 9040 0014 00BF     		nop
 9041 0016 1037     		adds	r7, r7, #16
 9042              	.LCFI266:
 9043              		.cfi_def_cfa_offset 8
 9044 0018 BD46     		mov	sp, r7
 9045              	.LCFI267:
 9046              		.cfi_def_cfa_register 13
 9047              		@ sp needed
 9048 001a 80BD     		pop	{r7, pc}
 9049              		.cfi_endproc
 9050              	.LFE373:
 9052              		.section	.text.UART_DMAError,"ax",%progbits
 9053              		.align	1
 9054              		.syntax unified
 9055              		.thumb
 9056              		.thumb_func
 9057              		.fpu fpv4-sp-d16
 9059              	UART_DMAError:
 9060              	.LFB374:
3267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9061              		.loc 1 3274 1
ARM GAS  /tmp/ccuwK2ly.s 			page 216


 9062              		.cfi_startproc
 9063              		@ args = 0, pretend = 0, frame = 24
 9064              		@ frame_needed = 1, uses_anonymous_args = 0
 9065 0000 80B5     		push	{r7, lr}
 9066              	.LCFI268:
 9067              		.cfi_def_cfa_offset 8
 9068              		.cfi_offset 7, -8
 9069              		.cfi_offset 14, -4
 9070 0002 86B0     		sub	sp, sp, #24
 9071              	.LCFI269:
 9072              		.cfi_def_cfa_offset 32
 9073 0004 00AF     		add	r7, sp, #0
 9074              	.LCFI270:
 9075              		.cfi_def_cfa_register 7
 9076 0006 7860     		str	r0, [r7, #4]
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9077              		.loc 1 3275 23
 9078 0008 7B68     		ldr	r3, [r7, #4]
 9079 000a 9B6A     		ldr	r3, [r3, #40]
 9080 000c 7B61     		str	r3, [r7, #20]
3276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 9081              		.loc 1 3277 31
 9082 000e 7B69     		ldr	r3, [r7, #20]
 9083 0010 D3F88030 		ldr	r3, [r3, #128]
 9084 0014 3B61     		str	r3, [r7, #16]
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 9085              		.loc 1 3278 31
 9086 0016 7B69     		ldr	r3, [r7, #20]
 9087 0018 D3F88430 		ldr	r3, [r3, #132]
 9088 001c FB60     		str	r3, [r7, #12]
3279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 9089              		.loc 1 3281 8
 9090 001e 7B69     		ldr	r3, [r7, #20]
 9091 0020 1B68     		ldr	r3, [r3]
 9092 0022 9B68     		ldr	r3, [r3, #8]
 9093 0024 03F08003 		and	r3, r3, #128
 9094              		.loc 1 3281 6
 9095 0028 802B     		cmp	r3, #128
 9096 002a 09D1     		bne	.L813
 9097              		.loc 1 3281 62 discriminator 1
 9098 002c 3B69     		ldr	r3, [r7, #16]
 9099 002e 212B     		cmp	r3, #33
 9100 0030 06D1     		bne	.L813
3282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 9101              		.loc 1 3284 24
 9102 0032 7B69     		ldr	r3, [r7, #20]
 9103 0034 0022     		movs	r2, #0
 9104 0036 A3F85620 		strh	r2, [r3, #86]	@ movhi
3285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 9105              		.loc 1 3285 5
 9106 003a 7869     		ldr	r0, [r7, #20]
 9107 003c FFF7FEFF 		bl	UART_EndTxTransfer
ARM GAS  /tmp/ccuwK2ly.s 			page 217


 9108              	.L813:
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 9109              		.loc 1 3289 8
 9110 0040 7B69     		ldr	r3, [r7, #20]
 9111 0042 1B68     		ldr	r3, [r3]
 9112 0044 9B68     		ldr	r3, [r3, #8]
 9113 0046 03F04003 		and	r3, r3, #64
 9114              		.loc 1 3289 6
 9115 004a 402B     		cmp	r3, #64
 9116 004c 09D1     		bne	.L814
 9117              		.loc 1 3289 62 discriminator 1
 9118 004e FB68     		ldr	r3, [r7, #12]
 9119 0050 222B     		cmp	r3, #34
 9120 0052 06D1     		bne	.L814
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 9121              		.loc 1 3292 24
 9122 0054 7B69     		ldr	r3, [r7, #20]
 9123 0056 0022     		movs	r2, #0
 9124 0058 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 9125              		.loc 1 3293 5
 9126 005c 7869     		ldr	r0, [r7, #20]
 9127 005e FFF7FEFF 		bl	UART_EndRxTransfer
 9128              	.L814:
3294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 9129              		.loc 1 3296 20
 9130 0062 7B69     		ldr	r3, [r7, #20]
 9131 0064 D3F88830 		ldr	r3, [r3, #136]
 9132 0068 43F01002 		orr	r2, r3, #16
 9133 006c 7B69     		ldr	r3, [r7, #20]
 9134 006e C3F88820 		str	r2, [r3, #136]
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered error callback*/
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 9135              		.loc 1 3303 3
 9136 0072 7869     		ldr	r0, [r7, #20]
 9137 0074 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9138              		.loc 1 3305 1
 9139 0078 00BF     		nop
 9140 007a 1837     		adds	r7, r7, #24
 9141              	.LCFI271:
 9142              		.cfi_def_cfa_offset 8
 9143 007c BD46     		mov	sp, r7
 9144              	.LCFI272:
ARM GAS  /tmp/ccuwK2ly.s 			page 218


 9145              		.cfi_def_cfa_register 13
 9146              		@ sp needed
 9147 007e 80BD     		pop	{r7, pc}
 9148              		.cfi_endproc
 9149              	.LFE374:
 9151              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 9152              		.align	1
 9153              		.syntax unified
 9154              		.thumb
 9155              		.thumb_func
 9156              		.fpu fpv4-sp-d16
 9158              	UART_DMAAbortOnError:
 9159              	.LFB375:
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9160              		.loc 1 3314 1
 9161              		.cfi_startproc
 9162              		@ args = 0, pretend = 0, frame = 16
 9163              		@ frame_needed = 1, uses_anonymous_args = 0
 9164 0000 80B5     		push	{r7, lr}
 9165              	.LCFI273:
 9166              		.cfi_def_cfa_offset 8
 9167              		.cfi_offset 7, -8
 9168              		.cfi_offset 14, -4
 9169 0002 84B0     		sub	sp, sp, #16
 9170              	.LCFI274:
 9171              		.cfi_def_cfa_offset 24
 9172 0004 00AF     		add	r7, sp, #0
 9173              	.LCFI275:
 9174              		.cfi_def_cfa_register 7
 9175 0006 7860     		str	r0, [r7, #4]
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9176              		.loc 1 3315 23
 9177 0008 7B68     		ldr	r3, [r7, #4]
 9178 000a 9B6A     		ldr	r3, [r3, #40]
 9179 000c FB60     		str	r3, [r7, #12]
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 9180              		.loc 1 3316 22
 9181 000e FB68     		ldr	r3, [r7, #12]
 9182 0010 0022     		movs	r2, #0
 9183 0012 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 9184              		.loc 1 3317 22
 9185 0016 FB68     		ldr	r3, [r7, #12]
 9186 0018 0022     		movs	r2, #0
 9187 001a A3F85620 		strh	r2, [r3, #86]	@ movhi
3318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered error callback*/
3321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback(huart);
ARM GAS  /tmp/ccuwK2ly.s 			page 219


3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 9188              		.loc 1 3324 3
 9189 001e F868     		ldr	r0, [r7, #12]
 9190 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9191              		.loc 1 3326 1
 9192 0024 00BF     		nop
 9193 0026 1037     		adds	r7, r7, #16
 9194              	.LCFI276:
 9195              		.cfi_def_cfa_offset 8
 9196 0028 BD46     		mov	sp, r7
 9197              	.LCFI277:
 9198              		.cfi_def_cfa_register 13
 9199              		@ sp needed
 9200 002a 80BD     		pop	{r7, pc}
 9201              		.cfi_endproc
 9202              	.LFE375:
 9204              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 9205              		.align	1
 9206              		.syntax unified
 9207              		.thumb
 9208              		.thumb_func
 9209              		.fpu fpv4-sp-d16
 9211              	UART_DMATxAbortCallback:
 9212              	.LFB376:
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9213              		.loc 1 3337 1
 9214              		.cfi_startproc
 9215              		@ args = 0, pretend = 0, frame = 16
 9216              		@ frame_needed = 1, uses_anonymous_args = 0
 9217 0000 80B5     		push	{r7, lr}
 9218              	.LCFI278:
 9219              		.cfi_def_cfa_offset 8
 9220              		.cfi_offset 7, -8
 9221              		.cfi_offset 14, -4
 9222 0002 84B0     		sub	sp, sp, #16
 9223              	.LCFI279:
 9224              		.cfi_def_cfa_offset 24
 9225 0004 00AF     		add	r7, sp, #0
 9226              	.LCFI280:
 9227              		.cfi_def_cfa_register 7
 9228 0006 7860     		str	r0, [r7, #4]
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9229              		.loc 1 3338 23
ARM GAS  /tmp/ccuwK2ly.s 			page 220


 9230 0008 7B68     		ldr	r3, [r7, #4]
 9231 000a 9B6A     		ldr	r3, [r3, #40]
 9232 000c FB60     		str	r3, [r7, #12]
3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 9233              		.loc 1 3340 8
 9234 000e FB68     		ldr	r3, [r7, #12]
 9235 0010 5B6F     		ldr	r3, [r3, #116]
 9236              		.loc 1 3340 36
 9237 0012 0022     		movs	r2, #0
 9238 0014 9A63     		str	r2, [r3, #56]
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 9239              		.loc 1 3343 12
 9240 0016 FB68     		ldr	r3, [r7, #12]
 9241 0018 9B6F     		ldr	r3, [r3, #120]
 9242              		.loc 1 3343 6
 9243 001a 002B     		cmp	r3, #0
 9244 001c 04D0     		beq	.L817
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 9245              		.loc 1 3345 14
 9246 001e FB68     		ldr	r3, [r7, #12]
 9247 0020 9B6F     		ldr	r3, [r3, #120]
 9248              		.loc 1 3345 22
 9249 0022 9B6B     		ldr	r3, [r3, #56]
 9250              		.loc 1 3345 8
 9251 0024 002B     		cmp	r3, #0
 9252 0026 28D1     		bne	.L820
 9253              	.L817:
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
3348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 9254              		.loc 1 3352 22
 9255 0028 FB68     		ldr	r3, [r7, #12]
 9256 002a 0022     		movs	r2, #0
 9257 002c A3F85620 		strh	r2, [r3, #86]	@ movhi
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 9258              		.loc 1 3353 22
 9259 0030 FB68     		ldr	r3, [r7, #12]
 9260 0032 0022     		movs	r2, #0
 9261 0034 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset errorCode */
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 9262              		.loc 1 3356 20
 9263 0038 FB68     		ldr	r3, [r7, #12]
 9264 003a 0022     		movs	r2, #0
 9265 003c C3F88820 		str	r2, [r3, #136]
3357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
ARM GAS  /tmp/ccuwK2ly.s 			page 221


 9266              		.loc 1 3359 3
 9267 0040 FB68     		ldr	r3, [r7, #12]
 9268 0042 1B68     		ldr	r3, [r3]
 9269 0044 0F22     		movs	r2, #15
 9270 0046 1A62     		str	r2, [r3, #32]
3360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 9271              		.loc 1 3362 12
 9272 0048 FB68     		ldr	r3, [r7, #12]
 9273 004a 5B6E     		ldr	r3, [r3, #100]
 9274              		.loc 1 3362 6
 9275 004c B3F1005F 		cmp	r3, #536870912
 9276 0050 07D1     		bne	.L819
3363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 9277              		.loc 1 3364 5
 9278 0052 FB68     		ldr	r3, [r7, #12]
 9279 0054 1B68     		ldr	r3, [r3]
 9280 0056 9A69     		ldr	r2, [r3, #24]
 9281 0058 FB68     		ldr	r3, [r7, #12]
 9282 005a 1B68     		ldr	r3, [r3]
 9283 005c 42F01002 		orr	r2, r2, #16
 9284 0060 9A61     		str	r2, [r3, #24]
 9285              	.L819:
3365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 9286              		.loc 1 3368 18
 9287 0062 FB68     		ldr	r3, [r7, #12]
 9288 0064 2022     		movs	r2, #32
 9289 0066 C3F88020 		str	r2, [r3, #128]
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9290              		.loc 1 3369 18
 9291 006a FB68     		ldr	r3, [r7, #12]
 9292 006c 2022     		movs	r2, #32
 9293 006e C3F88420 		str	r2, [r3, #132]
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 9294              		.loc 1 3377 3
 9295 0072 F868     		ldr	r0, [r7, #12]
 9296 0074 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 9297 0078 00E0     		b	.L816
 9298              	.L820:
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9299              		.loc 1 3347 7
 9300 007a 00BF     		nop
 9301              	.L816:
3378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  /tmp/ccuwK2ly.s 			page 222


 9302              		.loc 1 3379 1
 9303 007c 1037     		adds	r7, r7, #16
 9304              	.LCFI281:
 9305              		.cfi_def_cfa_offset 8
 9306 007e BD46     		mov	sp, r7
 9307              	.LCFI282:
 9308              		.cfi_def_cfa_register 13
 9309              		@ sp needed
 9310 0080 80BD     		pop	{r7, pc}
 9311              		.cfi_endproc
 9312              	.LFE376:
 9314              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 9315              		.align	1
 9316              		.syntax unified
 9317              		.thumb
 9318              		.thumb_func
 9319              		.fpu fpv4-sp-d16
 9321              	UART_DMARxAbortCallback:
 9322              	.LFB377:
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9323              		.loc 1 3391 1
 9324              		.cfi_startproc
 9325              		@ args = 0, pretend = 0, frame = 16
 9326              		@ frame_needed = 1, uses_anonymous_args = 0
 9327 0000 80B5     		push	{r7, lr}
 9328              	.LCFI283:
 9329              		.cfi_def_cfa_offset 8
 9330              		.cfi_offset 7, -8
 9331              		.cfi_offset 14, -4
 9332 0002 84B0     		sub	sp, sp, #16
 9333              	.LCFI284:
 9334              		.cfi_def_cfa_offset 24
 9335 0004 00AF     		add	r7, sp, #0
 9336              	.LCFI285:
 9337              		.cfi_def_cfa_register 7
 9338 0006 7860     		str	r0, [r7, #4]
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9339              		.loc 1 3392 23
 9340 0008 7B68     		ldr	r3, [r7, #4]
 9341 000a 9B6A     		ldr	r3, [r3, #40]
 9342 000c FB60     		str	r3, [r7, #12]
3393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 9343              		.loc 1 3394 8
 9344 000e FB68     		ldr	r3, [r7, #12]
 9345 0010 9B6F     		ldr	r3, [r3, #120]
ARM GAS  /tmp/ccuwK2ly.s 			page 223


 9346              		.loc 1 3394 36
 9347 0012 0022     		movs	r2, #0
 9348 0014 9A63     		str	r2, [r3, #56]
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 9349              		.loc 1 3397 12
 9350 0016 FB68     		ldr	r3, [r7, #12]
 9351 0018 5B6F     		ldr	r3, [r3, #116]
 9352              		.loc 1 3397 6
 9353 001a 002B     		cmp	r3, #0
 9354 001c 04D0     		beq	.L822
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 9355              		.loc 1 3399 14
 9356 001e FB68     		ldr	r3, [r7, #12]
 9357 0020 5B6F     		ldr	r3, [r3, #116]
 9358              		.loc 1 3399 22
 9359 0022 9B6B     		ldr	r3, [r3, #56]
 9360              		.loc 1 3399 8
 9361 0024 002B     		cmp	r3, #0
 9362 0026 23D1     		bne	.L824
 9363              	.L822:
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
3402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 9364              		.loc 1 3406 22
 9365 0028 FB68     		ldr	r3, [r7, #12]
 9366 002a 0022     		movs	r2, #0
 9367 002c A3F85620 		strh	r2, [r3, #86]	@ movhi
3407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 9368              		.loc 1 3407 22
 9369 0030 FB68     		ldr	r3, [r7, #12]
 9370 0032 0022     		movs	r2, #0
 9371 0034 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset errorCode */
3410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 9372              		.loc 1 3410 20
 9373 0038 FB68     		ldr	r3, [r7, #12]
 9374 003a 0022     		movs	r2, #0
 9375 003c C3F88820 		str	r2, [r3, #136]
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 9376              		.loc 1 3413 3
 9377 0040 FB68     		ldr	r3, [r7, #12]
 9378 0042 1B68     		ldr	r3, [r3]
 9379 0044 0F22     		movs	r2, #15
 9380 0046 1A62     		str	r2, [r3, #32]
3414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
ARM GAS  /tmp/ccuwK2ly.s 			page 224


 9381              		.loc 1 3416 3
 9382 0048 FB68     		ldr	r3, [r7, #12]
 9383 004a 1B68     		ldr	r3, [r3]
 9384 004c 9A69     		ldr	r2, [r3, #24]
 9385 004e FB68     		ldr	r3, [r7, #12]
 9386 0050 1B68     		ldr	r3, [r3]
 9387 0052 42F00802 		orr	r2, r2, #8
 9388 0056 9A61     		str	r2, [r3, #24]
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 9389              		.loc 1 3419 18
 9390 0058 FB68     		ldr	r3, [r7, #12]
 9391 005a 2022     		movs	r2, #32
 9392 005c C3F88020 		str	r2, [r3, #128]
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9393              		.loc 1 3420 18
 9394 0060 FB68     		ldr	r3, [r7, #12]
 9395 0062 2022     		movs	r2, #32
 9396 0064 C3F88420 		str	r2, [r3, #132]
3421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 9397              		.loc 1 3428 3
 9398 0068 F868     		ldr	r0, [r7, #12]
 9399 006a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 9400 006e 00E0     		b	.L821
 9401              	.L824:
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9402              		.loc 1 3401 7
 9403 0070 00BF     		nop
 9404              	.L821:
3429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9405              		.loc 1 3430 1
 9406 0072 1037     		adds	r7, r7, #16
 9407              	.LCFI286:
 9408              		.cfi_def_cfa_offset 8
 9409 0074 BD46     		mov	sp, r7
 9410              	.LCFI287:
 9411              		.cfi_def_cfa_register 13
 9412              		@ sp needed
 9413 0076 80BD     		pop	{r7, pc}
 9414              		.cfi_endproc
 9415              	.LFE377:
 9417              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 9418              		.align	1
 9419              		.syntax unified
 9420              		.thumb
 9421              		.thumb_func
 9422              		.fpu fpv4-sp-d16
 9424              	UART_DMATxOnlyAbortCallback:
ARM GAS  /tmp/ccuwK2ly.s 			page 225


 9425              	.LFB378:
3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9426              		.loc 1 3442 1
 9427              		.cfi_startproc
 9428              		@ args = 0, pretend = 0, frame = 16
 9429              		@ frame_needed = 1, uses_anonymous_args = 0
 9430 0000 80B5     		push	{r7, lr}
 9431              	.LCFI288:
 9432              		.cfi_def_cfa_offset 8
 9433              		.cfi_offset 7, -8
 9434              		.cfi_offset 14, -4
 9435 0002 84B0     		sub	sp, sp, #16
 9436              	.LCFI289:
 9437              		.cfi_def_cfa_offset 24
 9438 0004 00AF     		add	r7, sp, #0
 9439              	.LCFI290:
 9440              		.cfi_def_cfa_register 7
 9441 0006 7860     		str	r0, [r7, #4]
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9442              		.loc 1 3443 23
 9443 0008 7B68     		ldr	r3, [r7, #4]
 9444 000a 9B6A     		ldr	r3, [r3, #40]
 9445 000c FB60     		str	r3, [r7, #12]
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 9446              		.loc 1 3445 22
 9447 000e FB68     		ldr	r3, [r7, #12]
 9448 0010 0022     		movs	r2, #0
 9449 0012 A3F85620 		strh	r2, [r3, #86]	@ movhi
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 9450              		.loc 1 3448 12
 9451 0016 FB68     		ldr	r3, [r7, #12]
 9452 0018 5B6E     		ldr	r3, [r3, #100]
 9453              		.loc 1 3448 6
 9454 001a B3F1005F 		cmp	r3, #536870912
 9455 001e 07D1     		bne	.L826
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 9456              		.loc 1 3450 5
 9457 0020 FB68     		ldr	r3, [r7, #12]
 9458 0022 1B68     		ldr	r3, [r3]
 9459 0024 9A69     		ldr	r2, [r3, #24]
 9460 0026 FB68     		ldr	r3, [r7, #12]
 9461 0028 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccuwK2ly.s 			page 226


 9462 002a 42F01002 		orr	r2, r2, #16
 9463 002e 9A61     		str	r2, [r3, #24]
 9464              	.L826:
3451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9465              		.loc 1 3454 17
 9466 0030 FB68     		ldr	r3, [r7, #12]
 9467 0032 2022     		movs	r2, #32
 9468 0034 C3F88020 		str	r2, [r3, #128]
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 9469              		.loc 1 3462 3
 9470 0038 F868     		ldr	r0, [r7, #12]
 9471 003a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9472              		.loc 1 3464 1
 9473 003e 00BF     		nop
 9474 0040 1037     		adds	r7, r7, #16
 9475              	.LCFI291:
 9476              		.cfi_def_cfa_offset 8
 9477 0042 BD46     		mov	sp, r7
 9478              	.LCFI292:
 9479              		.cfi_def_cfa_register 13
 9480              		@ sp needed
 9481 0044 80BD     		pop	{r7, pc}
 9482              		.cfi_endproc
 9483              	.LFE378:
 9485              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 9486              		.align	1
 9487              		.syntax unified
 9488              		.thumb
 9489              		.thumb_func
 9490              		.fpu fpv4-sp-d16
 9492              	UART_DMARxOnlyAbortCallback:
 9493              	.LFB379:
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9494              		.loc 1 3475 1
 9495              		.cfi_startproc
ARM GAS  /tmp/ccuwK2ly.s 			page 227


 9496              		@ args = 0, pretend = 0, frame = 16
 9497              		@ frame_needed = 1, uses_anonymous_args = 0
 9498 0000 80B5     		push	{r7, lr}
 9499              	.LCFI293:
 9500              		.cfi_def_cfa_offset 8
 9501              		.cfi_offset 7, -8
 9502              		.cfi_offset 14, -4
 9503 0002 84B0     		sub	sp, sp, #16
 9504              	.LCFI294:
 9505              		.cfi_def_cfa_offset 24
 9506 0004 00AF     		add	r7, sp, #0
 9507              	.LCFI295:
 9508              		.cfi_def_cfa_register 7
 9509 0006 7860     		str	r0, [r7, #4]
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 9510              		.loc 1 3476 23
 9511 0008 7B68     		ldr	r3, [r7, #4]
 9512 000a 9B6A     		ldr	r3, [r3, #40]
 9513 000c FB60     		str	r3, [r7, #12]
3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 9514              		.loc 1 3478 22
 9515 000e FB68     		ldr	r3, [r7, #12]
 9516 0010 0022     		movs	r2, #0
 9517 0012 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 9518              		.loc 1 3481 3
 9519 0016 FB68     		ldr	r3, [r7, #12]
 9520 0018 1B68     		ldr	r3, [r3]
 9521 001a 0F22     		movs	r2, #15
 9522 001c 1A62     		str	r2, [r3, #32]
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 9523              		.loc 1 3484 3
 9524 001e FB68     		ldr	r3, [r7, #12]
 9525 0020 1B68     		ldr	r3, [r3]
 9526 0022 9A69     		ldr	r2, [r3, #24]
 9527 0024 FB68     		ldr	r3, [r7, #12]
 9528 0026 1B68     		ldr	r3, [r3]
 9529 0028 42F00802 		orr	r2, r2, #8
 9530 002c 9A61     		str	r2, [r3, #24]
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9531              		.loc 1 3487 18
 9532 002e FB68     		ldr	r3, [r7, #12]
 9533 0030 2022     		movs	r2, #32
 9534 0032 C3F88420 		str	r2, [r3, #132]
3488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccuwK2ly.s 			page 228


3494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 9535              		.loc 1 3495 3
 9536 0036 F868     		ldr	r0, [r7, #12]
 9537 0038 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9538              		.loc 1 3497 1
 9539 003c 00BF     		nop
 9540 003e 1037     		adds	r7, r7, #16
 9541              	.LCFI296:
 9542              		.cfi_def_cfa_offset 8
 9543 0040 BD46     		mov	sp, r7
 9544              	.LCFI297:
 9545              		.cfi_def_cfa_register 13
 9546              		@ sp needed
 9547 0042 80BD     		pop	{r7, pc}
 9548              		.cfi_endproc
 9549              	.LFE379:
 9551              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 9552              		.align	1
 9553              		.syntax unified
 9554              		.thumb
 9555              		.thumb_func
 9556              		.fpu fpv4-sp-d16
 9558              	UART_TxISR_8BIT:
 9559              	.LFB380:
3498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9560              		.loc 1 3507 1
 9561              		.cfi_startproc
 9562              		@ args = 0, pretend = 0, frame = 8
 9563              		@ frame_needed = 1, uses_anonymous_args = 0
 9564              		@ link register save eliminated.
 9565 0000 80B4     		push	{r7}
 9566              	.LCFI298:
 9567              		.cfi_def_cfa_offset 4
 9568              		.cfi_offset 7, -4
 9569 0002 83B0     		sub	sp, sp, #12
 9570              	.LCFI299:
 9571              		.cfi_def_cfa_offset 16
 9572 0004 00AF     		add	r7, sp, #0
 9573              	.LCFI300:
 9574              		.cfi_def_cfa_register 7
 9575 0006 7860     		str	r0, [r7, #4]
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 9576              		.loc 1 3509 12
 9577 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 229


 9578 000a D3F88030 		ldr	r3, [r3, #128]
 9579              		.loc 1 3509 6
 9580 000e 212B     		cmp	r3, #33
 9581 0010 2AD1     		bne	.L831
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 9582              		.loc 1 3511 14
 9583 0012 7B68     		ldr	r3, [r7, #4]
 9584 0014 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9585 0018 9BB2     		uxth	r3, r3
 9586              		.loc 1 3511 8
 9587 001a 002B     		cmp	r3, #0
 9588 001c 10D1     		bne	.L830
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 9589              		.loc 1 3514 7
 9590 001e 7B68     		ldr	r3, [r7, #4]
 9591 0020 1B68     		ldr	r3, [r3]
 9592 0022 1A68     		ldr	r2, [r3]
 9593 0024 7B68     		ldr	r3, [r7, #4]
 9594 0026 1B68     		ldr	r3, [r3]
 9595 0028 22F08002 		bic	r2, r2, #128
 9596 002c 1A60     		str	r2, [r3]
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9597              		.loc 1 3517 7
 9598 002e 7B68     		ldr	r3, [r7, #4]
 9599 0030 1B68     		ldr	r3, [r3]
 9600 0032 1A68     		ldr	r2, [r3]
 9601 0034 7B68     		ldr	r3, [r7, #4]
 9602 0036 1B68     		ldr	r3, [r3]
 9603 0038 42F04002 		orr	r2, r2, #64
 9604 003c 1A60     		str	r2, [r3]
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9605              		.loc 1 3526 1
 9606 003e 13E0     		b	.L831
 9607              	.L830:
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 9608              		.loc 1 3521 46
 9609 0040 7B68     		ldr	r3, [r7, #4]
 9610 0042 1B6D     		ldr	r3, [r3, #80]
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 9611              		.loc 1 3521 40
 9612 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 9613              		.loc 1 3521 12
 9614 0046 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 230


 9615 0048 1B68     		ldr	r3, [r3]
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 9616              		.loc 1 3521 28
 9617 004a 9A62     		str	r2, [r3, #40]
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 9618              		.loc 1 3522 12
 9619 004c 7B68     		ldr	r3, [r7, #4]
 9620 004e 1B6D     		ldr	r3, [r3, #80]
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 9621              		.loc 1 3522 24
 9622 0050 5A1C     		adds	r2, r3, #1
 9623 0052 7B68     		ldr	r3, [r7, #4]
 9624 0054 1A65     		str	r2, [r3, #80]
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9625              		.loc 1 3523 12
 9626 0056 7B68     		ldr	r3, [r7, #4]
 9627 0058 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9628 005c 9BB2     		uxth	r3, r3
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9629              		.loc 1 3523 25
 9630 005e 013B     		subs	r3, r3, #1
 9631 0060 9AB2     		uxth	r2, r3
 9632 0062 7B68     		ldr	r3, [r7, #4]
 9633 0064 A3F85620 		strh	r2, [r3, #86]	@ movhi
 9634              	.L831:
 9635              		.loc 1 3526 1
 9636 0068 00BF     		nop
 9637 006a 0C37     		adds	r7, r7, #12
 9638              	.LCFI301:
 9639              		.cfi_def_cfa_offset 4
 9640 006c BD46     		mov	sp, r7
 9641              	.LCFI302:
 9642              		.cfi_def_cfa_register 13
 9643              		@ sp needed
 9644 006e 5DF8047B 		ldr	r7, [sp], #4
 9645              	.LCFI303:
 9646              		.cfi_restore 7
 9647              		.cfi_def_cfa_offset 0
 9648 0072 7047     		bx	lr
 9649              		.cfi_endproc
 9650              	.LFE380:
 9652              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 9653              		.align	1
 9654              		.syntax unified
 9655              		.thumb
 9656              		.thumb_func
 9657              		.fpu fpv4-sp-d16
 9659              	UART_TxISR_16BIT:
 9660              	.LFB381:
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccuwK2ly.s 			page 231


3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9661              		.loc 1 3536 1
 9662              		.cfi_startproc
 9663              		@ args = 0, pretend = 0, frame = 16
 9664              		@ frame_needed = 1, uses_anonymous_args = 0
 9665              		@ link register save eliminated.
 9666 0000 80B4     		push	{r7}
 9667              	.LCFI304:
 9668              		.cfi_def_cfa_offset 4
 9669              		.cfi_offset 7, -4
 9670 0002 85B0     		sub	sp, sp, #20
 9671              	.LCFI305:
 9672              		.cfi_def_cfa_offset 24
 9673 0004 00AF     		add	r7, sp, #0
 9674              	.LCFI306:
 9675              		.cfi_def_cfa_register 7
 9676 0006 7860     		str	r0, [r7, #4]
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 9677              		.loc 1 3540 12
 9678 0008 7B68     		ldr	r3, [r7, #4]
 9679 000a D3F88030 		ldr	r3, [r3, #128]
 9680              		.loc 1 3540 6
 9681 000e 212B     		cmp	r3, #33
 9682 0010 2FD1     		bne	.L835
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 9683              		.loc 1 3542 14
 9684 0012 7B68     		ldr	r3, [r7, #4]
 9685 0014 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9686 0018 9BB2     		uxth	r3, r3
 9687              		.loc 1 3542 8
 9688 001a 002B     		cmp	r3, #0
 9689 001c 10D1     		bne	.L834
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 9690              		.loc 1 3545 7
 9691 001e 7B68     		ldr	r3, [r7, #4]
 9692 0020 1B68     		ldr	r3, [r3]
 9693 0022 1A68     		ldr	r2, [r3]
 9694 0024 7B68     		ldr	r3, [r7, #4]
 9695 0026 1B68     		ldr	r3, [r3]
 9696 0028 22F08002 		bic	r2, r2, #128
 9697 002c 1A60     		str	r2, [r3]
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9698              		.loc 1 3548 7
 9699 002e 7B68     		ldr	r3, [r7, #4]
 9700 0030 1B68     		ldr	r3, [r3]
 9701 0032 1A68     		ldr	r2, [r3]
 9702 0034 7B68     		ldr	r3, [r7, #4]
 9703 0036 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccuwK2ly.s 			page 232


 9704 0038 42F04002 		orr	r2, r2, #64
 9705 003c 1A60     		str	r2, [r3]
3549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9706              		.loc 1 3558 1
 9707 003e 18E0     		b	.L835
 9708              	.L834:
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 9709              		.loc 1 3552 11
 9710 0040 7B68     		ldr	r3, [r7, #4]
 9711 0042 1B6D     		ldr	r3, [r3, #80]
 9712 0044 FB60     		str	r3, [r7, #12]
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9713              		.loc 1 3553 43
 9714 0046 FB68     		ldr	r3, [r7, #12]
 9715 0048 1B88     		ldrh	r3, [r3]
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9716              		.loc 1 3553 50
 9717 004a 1A46     		mov	r2, r3
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9718              		.loc 1 3553 12
 9719 004c 7B68     		ldr	r3, [r7, #4]
 9720 004e 1B68     		ldr	r3, [r3]
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9721              		.loc 1 3553 50
 9722 0050 C2F30802 		ubfx	r2, r2, #0, #9
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9723              		.loc 1 3553 28
 9724 0054 9A62     		str	r2, [r3, #40]
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 9725              		.loc 1 3554 25
 9726 0056 7B68     		ldr	r3, [r7, #4]
 9727 0058 1B6D     		ldr	r3, [r3, #80]
 9728 005a 9A1C     		adds	r2, r3, #2
 9729 005c 7B68     		ldr	r3, [r7, #4]
 9730 005e 1A65     		str	r2, [r3, #80]
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9731              		.loc 1 3555 12
 9732 0060 7B68     		ldr	r3, [r7, #4]
 9733 0062 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9734 0066 9BB2     		uxth	r3, r3
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 9735              		.loc 1 3555 25
 9736 0068 013B     		subs	r3, r3, #1
 9737 006a 9AB2     		uxth	r2, r3
 9738 006c 7B68     		ldr	r3, [r7, #4]
 9739 006e A3F85620 		strh	r2, [r3, #86]	@ movhi
 9740              	.L835:
 9741              		.loc 1 3558 1
ARM GAS  /tmp/ccuwK2ly.s 			page 233


 9742 0072 00BF     		nop
 9743 0074 1437     		adds	r7, r7, #20
 9744              	.LCFI307:
 9745              		.cfi_def_cfa_offset 4
 9746 0076 BD46     		mov	sp, r7
 9747              	.LCFI308:
 9748              		.cfi_def_cfa_register 13
 9749              		@ sp needed
 9750 0078 5DF8047B 		ldr	r7, [sp], #4
 9751              	.LCFI309:
 9752              		.cfi_restore 7
 9753              		.cfi_def_cfa_offset 0
 9754 007c 7047     		bx	lr
 9755              		.cfi_endproc
 9756              	.LFE381:
 9758              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 9759              		.align	1
 9760              		.syntax unified
 9761              		.thumb
 9762              		.thumb_func
 9763              		.fpu fpv4-sp-d16
 9765              	UART_TxISR_8BIT_FIFOEN:
 9766              	.LFB382:
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9767              		.loc 1 3568 1
 9768              		.cfi_startproc
 9769              		@ args = 0, pretend = 0, frame = 16
 9770              		@ frame_needed = 1, uses_anonymous_args = 0
 9771              		@ link register save eliminated.
 9772 0000 80B4     		push	{r7}
 9773              	.LCFI310:
 9774              		.cfi_def_cfa_offset 4
 9775              		.cfi_offset 7, -4
 9776 0002 85B0     		sub	sp, sp, #20
 9777              	.LCFI311:
 9778              		.cfi_def_cfa_offset 24
 9779 0004 00AF     		add	r7, sp, #0
 9780              	.LCFI312:
 9781              		.cfi_def_cfa_register 7
 9782 0006 7860     		str	r0, [r7, #4]
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 9783              		.loc 1 3572 12
 9784 0008 7B68     		ldr	r3, [r7, #4]
 9785 000a D3F88030 		ldr	r3, [r3, #128]
 9786              		.loc 1 3572 6
ARM GAS  /tmp/ccuwK2ly.s 			page 234


 9787 000e 212B     		cmp	r3, #33
 9788 0010 3DD1     		bne	.L842
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 9789              		.loc 1 3574 21
 9790 0012 7B68     		ldr	r3, [r7, #4]
 9791 0014 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 9792 0018 FB81     		strh	r3, [r7, #14]	@ movhi
 9793              		.loc 1 3574 5
 9794 001a 35E0     		b	.L838
 9795              	.L841:
3575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 9796              		.loc 1 3576 16
 9797 001c 7B68     		ldr	r3, [r7, #4]
 9798 001e B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9799 0022 9BB2     		uxth	r3, r3
 9800              		.loc 1 3576 10
 9801 0024 002B     		cmp	r3, #0
 9802 0026 11D1     		bne	.L839
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 9803              		.loc 1 3579 9
 9804 0028 7B68     		ldr	r3, [r7, #4]
 9805 002a 1B68     		ldr	r3, [r3]
 9806 002c 9A68     		ldr	r2, [r3, #8]
 9807 002e 7B68     		ldr	r3, [r7, #4]
 9808 0030 1B68     		ldr	r3, [r3]
 9809 0032 22F40002 		bic	r2, r2, #8388608
 9810 0036 9A60     		str	r2, [r3, #8]
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9811              		.loc 1 3582 9
 9812 0038 7B68     		ldr	r3, [r7, #4]
 9813 003a 1B68     		ldr	r3, [r3]
 9814 003c 1A68     		ldr	r2, [r3]
 9815 003e 7B68     		ldr	r3, [r7, #4]
 9816 0040 1B68     		ldr	r3, [r3]
 9817 0042 42F04002 		orr	r2, r2, #64
 9818 0046 1A60     		str	r2, [r3]
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break; /* force exit loop */
 9819              		.loc 1 3584 9
 9820 0048 00BF     		nop
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
3591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Nothing to do */
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
ARM GAS  /tmp/ccuwK2ly.s 			page 235


3596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9821              		.loc 1 3598 1
 9822 004a 20E0     		b	.L842
 9823              	.L839:
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 9824              		.loc 1 3586 16
 9825 004c 7B68     		ldr	r3, [r7, #4]
 9826 004e 1B68     		ldr	r3, [r3]
 9827 0050 DB69     		ldr	r3, [r3, #28]
 9828 0052 03F08003 		and	r3, r3, #128
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 9829              		.loc 1 3586 15
 9830 0056 002B     		cmp	r3, #0
 9831 0058 13D0     		beq	.L840
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
 9832              		.loc 1 3588 48
 9833 005a 7B68     		ldr	r3, [r7, #4]
 9834 005c 1B6D     		ldr	r3, [r3, #80]
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
 9835              		.loc 1 3588 42
 9836 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
 9837              		.loc 1 3588 14
 9838 0060 7B68     		ldr	r3, [r7, #4]
 9839 0062 1B68     		ldr	r3, [r3]
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
 9840              		.loc 1 3588 30
 9841 0064 9A62     		str	r2, [r3, #40]
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 9842              		.loc 1 3589 14
 9843 0066 7B68     		ldr	r3, [r7, #4]
 9844 0068 1B6D     		ldr	r3, [r3, #80]
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 9845              		.loc 1 3589 26
 9846 006a 5A1C     		adds	r2, r3, #1
 9847 006c 7B68     		ldr	r3, [r7, #4]
 9848 006e 1A65     		str	r2, [r3, #80]
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 9849              		.loc 1 3590 14
 9850 0070 7B68     		ldr	r3, [r7, #4]
 9851 0072 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9852 0076 9BB2     		uxth	r3, r3
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 9853              		.loc 1 3590 27
 9854 0078 013B     		subs	r3, r3, #1
 9855 007a 9AB2     		uxth	r2, r3
 9856 007c 7B68     		ldr	r3, [r7, #4]
 9857 007e A3F85620 		strh	r2, [r3, #86]	@ movhi
 9858              	.L840:
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9859              		.loc 1 3574 78 discriminator 2
 9860 0082 FB89     		ldrh	r3, [r7, #14]
 9861 0084 013B     		subs	r3, r3, #1
 9862 0086 FB81     		strh	r3, [r7, #14]	@ movhi
 9863              	.L838:
ARM GAS  /tmp/ccuwK2ly.s 			page 236


3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9864              		.loc 1 3574 5 discriminator 1
 9865 0088 FB89     		ldrh	r3, [r7, #14]
 9866 008a 002B     		cmp	r3, #0
 9867 008c C6D1     		bne	.L841
 9868              	.L842:
 9869              		.loc 1 3598 1
 9870 008e 00BF     		nop
 9871 0090 1437     		adds	r7, r7, #20
 9872              	.LCFI313:
 9873              		.cfi_def_cfa_offset 4
 9874 0092 BD46     		mov	sp, r7
 9875              	.LCFI314:
 9876              		.cfi_def_cfa_register 13
 9877              		@ sp needed
 9878 0094 5DF8047B 		ldr	r7, [sp], #4
 9879              	.LCFI315:
 9880              		.cfi_restore 7
 9881              		.cfi_def_cfa_offset 0
 9882 0098 7047     		bx	lr
 9883              		.cfi_endproc
 9884              	.LFE382:
 9886              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 9887              		.align	1
 9888              		.syntax unified
 9889              		.thumb
 9890              		.thumb_func
 9891              		.fpu fpv4-sp-d16
 9893              	UART_TxISR_16BIT_FIFOEN:
 9894              	.LFB383:
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 9895              		.loc 1 3608 1
 9896              		.cfi_startproc
 9897              		@ args = 0, pretend = 0, frame = 16
 9898              		@ frame_needed = 1, uses_anonymous_args = 0
 9899              		@ link register save eliminated.
 9900 0000 80B4     		push	{r7}
 9901              	.LCFI316:
 9902              		.cfi_def_cfa_offset 4
 9903              		.cfi_offset 7, -4
 9904 0002 85B0     		sub	sp, sp, #20
 9905              	.LCFI317:
 9906              		.cfi_def_cfa_offset 24
 9907 0004 00AF     		add	r7, sp, #0
 9908              	.LCFI318:
 9909              		.cfi_def_cfa_register 7
 9910 0006 7860     		str	r0, [r7, #4]
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
ARM GAS  /tmp/ccuwK2ly.s 			page 237


3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 9911              		.loc 1 3613 12
 9912 0008 7B68     		ldr	r3, [r7, #4]
 9913 000a D3F88030 		ldr	r3, [r3, #128]
 9914              		.loc 1 3613 6
 9915 000e 212B     		cmp	r3, #33
 9916 0010 42D1     		bne	.L849
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 9917              		.loc 1 3615 21
 9918 0012 7B68     		ldr	r3, [r7, #4]
 9919 0014 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 9920 0018 FB81     		strh	r3, [r7, #14]	@ movhi
 9921              		.loc 1 3615 5
 9922 001a 3AE0     		b	.L845
 9923              	.L848:
3616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 9924              		.loc 1 3617 16
 9925 001c 7B68     		ldr	r3, [r7, #4]
 9926 001e B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9927 0022 9BB2     		uxth	r3, r3
 9928              		.loc 1 3617 10
 9929 0024 002B     		cmp	r3, #0
 9930 0026 11D1     		bne	.L846
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 9931              		.loc 1 3620 9
 9932 0028 7B68     		ldr	r3, [r7, #4]
 9933 002a 1B68     		ldr	r3, [r3]
 9934 002c 9A68     		ldr	r2, [r3, #8]
 9935 002e 7B68     		ldr	r3, [r7, #4]
 9936 0030 1B68     		ldr	r3, [r3]
 9937 0032 22F40002 		bic	r2, r2, #8388608
 9938 0036 9A60     		str	r2, [r3, #8]
3621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9939              		.loc 1 3623 9
 9940 0038 7B68     		ldr	r3, [r7, #4]
 9941 003a 1B68     		ldr	r3, [r3]
 9942 003c 1A68     		ldr	r2, [r3]
 9943 003e 7B68     		ldr	r3, [r7, #4]
 9944 0040 1B68     		ldr	r3, [r3]
 9945 0042 42F04002 		orr	r2, r2, #64
 9946 0046 1A60     		str	r2, [r3]
3624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break; /* force exit loop */
 9947              		.loc 1 3625 9
 9948 0048 00BF     		nop
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccuwK2ly.s 			page 238


3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
3633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Nothing to do */
3637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 9949              		.loc 1 3640 1
 9950 004a 25E0     		b	.L849
 9951              	.L846:
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 9952              		.loc 1 3627 16
 9953 004c 7B68     		ldr	r3, [r7, #4]
 9954 004e 1B68     		ldr	r3, [r3]
 9955 0050 DB69     		ldr	r3, [r3, #28]
 9956 0052 03F08003 		and	r3, r3, #128
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 9957              		.loc 1 3627 15
 9958 0056 002B     		cmp	r3, #0
 9959 0058 18D0     		beq	.L847
3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 9960              		.loc 1 3629 13
 9961 005a 7B68     		ldr	r3, [r7, #4]
 9962 005c 1B6D     		ldr	r3, [r3, #80]
 9963 005e BB60     		str	r3, [r7, #8]
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9964              		.loc 1 3630 45
 9965 0060 BB68     		ldr	r3, [r7, #8]
 9966 0062 1B88     		ldrh	r3, [r3]
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9967              		.loc 1 3630 52
 9968 0064 1A46     		mov	r2, r3
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9969              		.loc 1 3630 14
 9970 0066 7B68     		ldr	r3, [r7, #4]
 9971 0068 1B68     		ldr	r3, [r3]
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9972              		.loc 1 3630 52
 9973 006a C2F30802 		ubfx	r2, r2, #0, #9
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 9974              		.loc 1 3630 30
 9975 006e 9A62     		str	r2, [r3, #40]
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 9976              		.loc 1 3631 27
 9977 0070 7B68     		ldr	r3, [r7, #4]
 9978 0072 1B6D     		ldr	r3, [r3, #80]
 9979 0074 9A1C     		adds	r2, r3, #2
 9980 0076 7B68     		ldr	r3, [r7, #4]
 9981 0078 1A65     		str	r2, [r3, #80]
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 9982              		.loc 1 3632 14
 9983 007a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 239


 9984 007c B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 9985 0080 9BB2     		uxth	r3, r3
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 9986              		.loc 1 3632 27
 9987 0082 013B     		subs	r3, r3, #1
 9988 0084 9AB2     		uxth	r2, r3
 9989 0086 7B68     		ldr	r3, [r7, #4]
 9990 0088 A3F85620 		strh	r2, [r3, #86]	@ movhi
 9991              	.L847:
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9992              		.loc 1 3615 78 discriminator 2
 9993 008c FB89     		ldrh	r3, [r7, #14]
 9994 008e 013B     		subs	r3, r3, #1
 9995 0090 FB81     		strh	r3, [r7, #14]	@ movhi
 9996              	.L845:
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 9997              		.loc 1 3615 5 discriminator 1
 9998 0092 FB89     		ldrh	r3, [r7, #14]
 9999 0094 002B     		cmp	r3, #0
 10000 0096 C1D1     		bne	.L848
 10001              	.L849:
 10002              		.loc 1 3640 1
 10003 0098 00BF     		nop
 10004 009a 1437     		adds	r7, r7, #20
 10005              	.LCFI319:
 10006              		.cfi_def_cfa_offset 4
 10007 009c BD46     		mov	sp, r7
 10008              	.LCFI320:
 10009              		.cfi_def_cfa_register 13
 10010              		@ sp needed
 10011 009e 5DF8047B 		ldr	r7, [sp], #4
 10012              	.LCFI321:
 10013              		.cfi_restore 7
 10014              		.cfi_def_cfa_offset 0
 10015 00a2 7047     		bx	lr
 10016              		.cfi_endproc
 10017              	.LFE383:
 10019              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 10020              		.align	1
 10021              		.syntax unified
 10022              		.thumb
 10023              		.thumb_func
 10024              		.fpu fpv4-sp-d16
 10026              	UART_EndTransmit_IT:
 10027              	.LFB384:
3641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 10028              		.loc 1 3649 1
 10029              		.cfi_startproc
 10030              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccuwK2ly.s 			page 240


 10031              		@ frame_needed = 1, uses_anonymous_args = 0
 10032 0000 80B5     		push	{r7, lr}
 10033              	.LCFI322:
 10034              		.cfi_def_cfa_offset 8
 10035              		.cfi_offset 7, -8
 10036              		.cfi_offset 14, -4
 10037 0002 82B0     		sub	sp, sp, #8
 10038              	.LCFI323:
 10039              		.cfi_def_cfa_offset 16
 10040 0004 00AF     		add	r7, sp, #0
 10041              	.LCFI324:
 10042              		.cfi_def_cfa_register 7
 10043 0006 7860     		str	r0, [r7, #4]
3650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 10044              		.loc 1 3651 3
 10045 0008 7B68     		ldr	r3, [r7, #4]
 10046 000a 1B68     		ldr	r3, [r3]
 10047 000c 1A68     		ldr	r2, [r3]
 10048 000e 7B68     		ldr	r3, [r7, #4]
 10049 0010 1B68     		ldr	r3, [r3]
 10050 0012 22F04002 		bic	r2, r2, #64
 10051 0016 1A60     		str	r2, [r3]
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 10052              		.loc 1 3654 17
 10053 0018 7B68     		ldr	r3, [r7, #4]
 10054 001a 2022     		movs	r2, #32
 10055 001c C3F88020 		str	r2, [r3, #128]
3655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
 10056              		.loc 1 3657 16
 10057 0020 7B68     		ldr	r3, [r7, #4]
 10058 0022 0022     		movs	r2, #0
 10059 0024 1A67     		str	r2, [r3, #112]
3658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 10060              		.loc 1 3664 3
 10061 0026 7868     		ldr	r0, [r7, #4]
 10062 0028 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 10063              		.loc 1 3666 1
 10064 002c 00BF     		nop
 10065 002e 0837     		adds	r7, r7, #8
 10066              	.LCFI325:
 10067              		.cfi_def_cfa_offset 8
 10068 0030 BD46     		mov	sp, r7
 10069              	.LCFI326:
 10070              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccuwK2ly.s 			page 241


 10071              		@ sp needed
 10072 0032 80BD     		pop	{r7, pc}
 10073              		.cfi_endproc
 10074              	.LFE384:
 10076              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 10077              		.align	1
 10078              		.syntax unified
 10079              		.thumb
 10080              		.thumb_func
 10081              		.fpu fpv4-sp-d16
 10083              	UART_RxISR_8BIT:
 10084              	.LFB385:
3667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 10085              		.loc 1 3674 1
 10086              		.cfi_startproc
 10087              		@ args = 0, pretend = 0, frame = 16
 10088              		@ frame_needed = 1, uses_anonymous_args = 0
 10089 0000 80B5     		push	{r7, lr}
 10090              	.LCFI327:
 10091              		.cfi_def_cfa_offset 8
 10092              		.cfi_offset 7, -8
 10093              		.cfi_offset 14, -4
 10094 0002 84B0     		sub	sp, sp, #16
 10095              	.LCFI328:
 10096              		.cfi_def_cfa_offset 24
 10097 0004 00AF     		add	r7, sp, #0
 10098              	.LCFI329:
 10099              		.cfi_def_cfa_register 7
 10100 0006 7860     		str	r0, [r7, #4]
3675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 10101              		.loc 1 3675 12
 10102 0008 7B68     		ldr	r3, [r7, #4]
 10103 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 10104 000e FB81     		strh	r3, [r7, #14]	@ movhi
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 10105              		.loc 1 3679 12
 10106 0010 7B68     		ldr	r3, [r7, #4]
 10107 0012 D3F88430 		ldr	r3, [r3, #132]
 10108              		.loc 1 3679 6
 10109 0016 222B     		cmp	r3, #34
 10110 0018 3BD1     		bne	.L852
3680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 10111              		.loc 1 3681 25
 10112 001a 7B68     		ldr	r3, [r7, #4]
 10113 001c 1B68     		ldr	r3, [r3]
 10114 001e 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccuwK2ly.s 			page 242


 10115              		.loc 1 3681 12
 10116 0020 BB81     		strh	r3, [r7, #12]	@ movhi
3682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 10117              		.loc 1 3682 26
 10118 0022 BB89     		ldrh	r3, [r7, #12]	@ movhi
 10119 0024 D9B2     		uxtb	r1, r3
 10120              		.loc 1 3682 45
 10121 0026 FB89     		ldrh	r3, [r7, #14]	@ movhi
 10122 0028 DAB2     		uxtb	r2, r3
 10123              		.loc 1 3682 11
 10124 002a 7B68     		ldr	r3, [r7, #4]
 10125 002c 9B6D     		ldr	r3, [r3, #88]
 10126              		.loc 1 3682 26
 10127 002e 0A40     		ands	r2, r2, r1
 10128 0030 D2B2     		uxtb	r2, r2
 10129              		.loc 1 3682 24
 10130 0032 1A70     		strb	r2, [r3]
3683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 10131              		.loc 1 3683 10
 10132 0034 7B68     		ldr	r3, [r7, #4]
 10133 0036 9B6D     		ldr	r3, [r3, #88]
 10134              		.loc 1 3683 22
 10135 0038 5A1C     		adds	r2, r3, #1
 10136 003a 7B68     		ldr	r3, [r7, #4]
 10137 003c 9A65     		str	r2, [r3, #88]
3684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
 10138              		.loc 1 3684 10
 10139 003e 7B68     		ldr	r3, [r7, #4]
 10140 0040 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10141 0044 9BB2     		uxth	r3, r3
 10142              		.loc 1 3684 23
 10143 0046 013B     		subs	r3, r3, #1
 10144 0048 9AB2     		uxth	r2, r3
 10145 004a 7B68     		ldr	r3, [r7, #4]
 10146 004c A3F85E20 		strh	r2, [r3, #94]	@ movhi
3685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 10147              		.loc 1 3686 14
 10148 0050 7B68     		ldr	r3, [r7, #4]
 10149 0052 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10150 0056 9BB2     		uxth	r3, r3
 10151              		.loc 1 3686 8
 10152 0058 002B     		cmp	r3, #0
 10153 005a 22D1     		bne	.L855
3687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 10154              		.loc 1 3689 7
 10155 005c 7B68     		ldr	r3, [r7, #4]
 10156 005e 1B68     		ldr	r3, [r3]
 10157 0060 1A68     		ldr	r2, [r3]
 10158 0062 7B68     		ldr	r3, [r7, #4]
 10159 0064 1B68     		ldr	r3, [r3]
 10160 0066 22F49072 		bic	r2, r2, #288
 10161 006a 1A60     		str	r2, [r3]
3690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
ARM GAS  /tmp/ccuwK2ly.s 			page 243


3692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 10162              		.loc 1 3692 7
 10163 006c 7B68     		ldr	r3, [r7, #4]
 10164 006e 1B68     		ldr	r3, [r3]
 10165 0070 9A68     		ldr	r2, [r3, #8]
 10166 0072 7B68     		ldr	r3, [r7, #4]
 10167 0074 1B68     		ldr	r3, [r3]
 10168 0076 22F00102 		bic	r2, r2, #1
 10169 007a 9A60     		str	r2, [r3, #8]
3693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 10170              		.loc 1 3695 22
 10171 007c 7B68     		ldr	r3, [r7, #4]
 10172 007e 2022     		movs	r2, #32
 10173 0080 C3F88420 		str	r2, [r3, #132]
3696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = NULL;
 10174              		.loc 1 3698 20
 10175 0084 7B68     		ldr	r3, [r7, #4]
 10176 0086 0022     		movs	r2, #0
 10177 0088 DA66     		str	r2, [r3, #108]
3699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 10178              		.loc 1 3705 7
 10179 008a 7868     		ldr	r0, [r7, #4]
 10180 008c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 10181              		.loc 1 3714 1
 10182 0090 07E0     		b	.L855
 10183              	.L852:
3712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 10184              		.loc 1 3712 5
 10185 0092 7B68     		ldr	r3, [r7, #4]
 10186 0094 1B68     		ldr	r3, [r3]
 10187 0096 9A69     		ldr	r2, [r3, #24]
 10188 0098 7B68     		ldr	r3, [r7, #4]
 10189 009a 1B68     		ldr	r3, [r3]
 10190 009c 42F00802 		orr	r2, r2, #8
 10191 00a0 9A61     		str	r2, [r3, #24]
 10192              	.L855:
 10193              		.loc 1 3714 1
 10194 00a2 00BF     		nop
ARM GAS  /tmp/ccuwK2ly.s 			page 244


 10195 00a4 1037     		adds	r7, r7, #16
 10196              	.LCFI330:
 10197              		.cfi_def_cfa_offset 8
 10198 00a6 BD46     		mov	sp, r7
 10199              	.LCFI331:
 10200              		.cfi_def_cfa_register 13
 10201              		@ sp needed
 10202 00a8 80BD     		pop	{r7, pc}
 10203              		.cfi_endproc
 10204              	.LFE385:
 10206              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 10207              		.align	1
 10208              		.syntax unified
 10209              		.thumb
 10210              		.thumb_func
 10211              		.fpu fpv4-sp-d16
 10213              	UART_RxISR_16BIT:
 10214              	.LFB386:
3715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 10215              		.loc 1 3724 1
 10216              		.cfi_startproc
 10217              		@ args = 0, pretend = 0, frame = 16
 10218              		@ frame_needed = 1, uses_anonymous_args = 0
 10219 0000 80B5     		push	{r7, lr}
 10220              	.LCFI332:
 10221              		.cfi_def_cfa_offset 8
 10222              		.cfi_offset 7, -8
 10223              		.cfi_offset 14, -4
 10224 0002 84B0     		sub	sp, sp, #16
 10225              	.LCFI333:
 10226              		.cfi_def_cfa_offset 24
 10227 0004 00AF     		add	r7, sp, #0
 10228              	.LCFI334:
 10229              		.cfi_def_cfa_register 7
 10230 0006 7860     		str	r0, [r7, #4]
3725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 10231              		.loc 1 3726 12
 10232 0008 7B68     		ldr	r3, [r7, #4]
 10233 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 10234 000e FB81     		strh	r3, [r7, #14]	@ movhi
3727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 10235              		.loc 1 3730 12
 10236 0010 7B68     		ldr	r3, [r7, #4]
 10237 0012 D3F88430 		ldr	r3, [r3, #132]
ARM GAS  /tmp/ccuwK2ly.s 			page 245


 10238              		.loc 1 3730 6
 10239 0016 222B     		cmp	r3, #34
 10240 0018 3BD1     		bne	.L857
3731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 10241              		.loc 1 3732 25
 10242 001a 7B68     		ldr	r3, [r7, #4]
 10243 001c 1B68     		ldr	r3, [r3]
 10244 001e 5B6A     		ldr	r3, [r3, #36]
 10245              		.loc 1 3732 12
 10246 0020 BB81     		strh	r3, [r7, #12]	@ movhi
3733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 10247              		.loc 1 3733 9
 10248 0022 7B68     		ldr	r3, [r7, #4]
 10249 0024 9B6D     		ldr	r3, [r3, #88]
 10250 0026 BB60     		str	r3, [r7, #8]
3734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 10251              		.loc 1 3734 12
 10252 0028 BA89     		ldrh	r2, [r7, #12]	@ movhi
 10253 002a FB89     		ldrh	r3, [r7, #14]	@ movhi
 10254 002c 1340     		ands	r3, r3, r2
 10255 002e 9AB2     		uxth	r2, r3
 10256              		.loc 1 3734 10
 10257 0030 BB68     		ldr	r3, [r7, #8]
 10258 0032 1A80     		strh	r2, [r3]	@ movhi
3735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 10259              		.loc 1 3735 23
 10260 0034 7B68     		ldr	r3, [r7, #4]
 10261 0036 9B6D     		ldr	r3, [r3, #88]
 10262 0038 9A1C     		adds	r2, r3, #2
 10263 003a 7B68     		ldr	r3, [r7, #4]
 10264 003c 9A65     		str	r2, [r3, #88]
3736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
 10265              		.loc 1 3736 10
 10266 003e 7B68     		ldr	r3, [r7, #4]
 10267 0040 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10268 0044 9BB2     		uxth	r3, r3
 10269              		.loc 1 3736 23
 10270 0046 013B     		subs	r3, r3, #1
 10271 0048 9AB2     		uxth	r2, r3
 10272 004a 7B68     		ldr	r3, [r7, #4]
 10273 004c A3F85E20 		strh	r2, [r3, #94]	@ movhi
3737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 10274              		.loc 1 3738 14
 10275 0050 7B68     		ldr	r3, [r7, #4]
 10276 0052 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10277 0056 9BB2     		uxth	r3, r3
 10278              		.loc 1 3738 8
 10279 0058 002B     		cmp	r3, #0
 10280 005a 22D1     		bne	.L860
3739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 10281              		.loc 1 3741 7
 10282 005c 7B68     		ldr	r3, [r7, #4]
 10283 005e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccuwK2ly.s 			page 246


 10284 0060 1A68     		ldr	r2, [r3]
 10285 0062 7B68     		ldr	r3, [r7, #4]
 10286 0064 1B68     		ldr	r3, [r3]
 10287 0066 22F49072 		bic	r2, r2, #288
 10288 006a 1A60     		str	r2, [r3]
3742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 10289              		.loc 1 3744 7
 10290 006c 7B68     		ldr	r3, [r7, #4]
 10291 006e 1B68     		ldr	r3, [r3]
 10292 0070 9A68     		ldr	r2, [r3, #8]
 10293 0072 7B68     		ldr	r3, [r7, #4]
 10294 0074 1B68     		ldr	r3, [r3]
 10295 0076 22F00102 		bic	r2, r2, #1
 10296 007a 9A60     		str	r2, [r3, #8]
3745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 10297              		.loc 1 3747 22
 10298 007c 7B68     		ldr	r3, [r7, #4]
 10299 007e 2022     		movs	r2, #32
 10300 0080 C3F88420 		str	r2, [r3, #132]
3748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = NULL;
 10301              		.loc 1 3750 20
 10302 0084 7B68     		ldr	r3, [r7, #4]
 10303 0086 0022     		movs	r2, #0
 10304 0088 DA66     		str	r2, [r3, #108]
3751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 10305              		.loc 1 3757 7
 10306 008a 7868     		ldr	r0, [r7, #4]
 10307 008c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 10308              		.loc 1 3766 1
 10309 0090 07E0     		b	.L860
 10310              	.L857:
3764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 10311              		.loc 1 3764 5
 10312 0092 7B68     		ldr	r3, [r7, #4]
 10313 0094 1B68     		ldr	r3, [r3]
 10314 0096 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccuwK2ly.s 			page 247


 10315 0098 7B68     		ldr	r3, [r7, #4]
 10316 009a 1B68     		ldr	r3, [r3]
 10317 009c 42F00802 		orr	r2, r2, #8
 10318 00a0 9A61     		str	r2, [r3, #24]
 10319              	.L860:
 10320              		.loc 1 3766 1
 10321 00a2 00BF     		nop
 10322 00a4 1037     		adds	r7, r7, #16
 10323              	.LCFI335:
 10324              		.cfi_def_cfa_offset 8
 10325 00a6 BD46     		mov	sp, r7
 10326              	.LCFI336:
 10327              		.cfi_def_cfa_register 13
 10328              		@ sp needed
 10329 00a8 80BD     		pop	{r7, pc}
 10330              		.cfi_endproc
 10331              	.LFE386:
 10333              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 10334              		.align	1
 10335              		.syntax unified
 10336              		.thumb
 10337              		.thumb_func
 10338              		.fpu fpv4-sp-d16
 10340              	UART_RxISR_8BIT_FIFOEN:
 10341              	.LFB387:
3767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
3770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 10342              		.loc 1 3776 1
 10343              		.cfi_startproc
 10344              		@ args = 0, pretend = 0, frame = 16
 10345              		@ frame_needed = 1, uses_anonymous_args = 0
 10346 0000 80B5     		push	{r7, lr}
 10347              	.LCFI337:
 10348              		.cfi_def_cfa_offset 8
 10349              		.cfi_offset 7, -8
 10350              		.cfi_offset 14, -4
 10351 0002 84B0     		sub	sp, sp, #16
 10352              	.LCFI338:
 10353              		.cfi_def_cfa_offset 24
 10354 0004 00AF     		add	r7, sp, #0
 10355              	.LCFI339:
 10356              		.cfi_def_cfa_register 7
 10357 0006 7860     		str	r0, [r7, #4]
3777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 10358              		.loc 1 3777 13
 10359 0008 7B68     		ldr	r3, [r7, #4]
 10360 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 10361 000e BB81     		strh	r3, [r7, #12]	@ movhi
3778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
ARM GAS  /tmp/ccuwK2ly.s 			page 248


3779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t   nb_rx_data;
3780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  rxdatacount;
3781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 10362              		.loc 1 3783 12
 10363 0010 7B68     		ldr	r3, [r7, #4]
 10364 0012 D3F88430 		ldr	r3, [r3, #132]
 10365              		.loc 1 3783 6
 10366 0016 222B     		cmp	r3, #34
 10367 0018 68D1     		bne	.L862
3784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
 10368              		.loc 1 3785 21
 10369 001a 7B68     		ldr	r3, [r7, #4]
 10370 001c B3F86830 		ldrh	r3, [r3, #104]	@ movhi
 10371 0020 FB81     		strh	r3, [r7, #14]	@ movhi
 10372              		.loc 1 3785 5
 10373 0022 3FE0     		b	.L863
 10374              	.L865:
3786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 10375              		.loc 1 3787 27
 10376 0024 7B68     		ldr	r3, [r7, #4]
 10377 0026 1B68     		ldr	r3, [r3]
 10378 0028 5B6A     		ldr	r3, [r3, #36]
 10379              		.loc 1 3787 14
 10380 002a 7B81     		strh	r3, [r7, #10]	@ movhi
3788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 10381              		.loc 1 3788 28
 10382 002c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 10383 002e D9B2     		uxtb	r1, r3
 10384              		.loc 1 3788 47
 10385 0030 BB89     		ldrh	r3, [r7, #12]	@ movhi
 10386 0032 DAB2     		uxtb	r2, r3
 10387              		.loc 1 3788 13
 10388 0034 7B68     		ldr	r3, [r7, #4]
 10389 0036 9B6D     		ldr	r3, [r3, #88]
 10390              		.loc 1 3788 28
 10391 0038 0A40     		ands	r2, r2, r1
 10392 003a D2B2     		uxtb	r2, r2
 10393              		.loc 1 3788 26
 10394 003c 1A70     		strb	r2, [r3]
3789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr++;
 10395              		.loc 1 3789 12
 10396 003e 7B68     		ldr	r3, [r7, #4]
 10397 0040 9B6D     		ldr	r3, [r3, #88]
 10398              		.loc 1 3789 24
 10399 0042 5A1C     		adds	r2, r3, #1
 10400 0044 7B68     		ldr	r3, [r7, #4]
 10401 0046 9A65     		str	r2, [r3, #88]
3790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 10402              		.loc 1 3790 12
 10403 0048 7B68     		ldr	r3, [r7, #4]
 10404 004a B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10405 004e 9BB2     		uxth	r3, r3
 10406              		.loc 1 3790 25
ARM GAS  /tmp/ccuwK2ly.s 			page 249


 10407 0050 013B     		subs	r3, r3, #1
 10408 0052 9AB2     		uxth	r2, r3
 10409 0054 7B68     		ldr	r3, [r7, #4]
 10410 0056 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 10411              		.loc 1 3792 16
 10412 005a 7B68     		ldr	r3, [r7, #4]
 10413 005c B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10414 0060 9BB2     		uxth	r3, r3
 10415              		.loc 1 3792 10
 10416 0062 002B     		cmp	r3, #0
 10417 0064 1BD1     		bne	.L864
3793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
3795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 10418              		.loc 1 3795 9
 10419 0066 7B68     		ldr	r3, [r7, #4]
 10420 0068 1B68     		ldr	r3, [r3]
 10421 006a 1A68     		ldr	r2, [r3]
 10422 006c 7B68     		ldr	r3, [r7, #4]
 10423 006e 1B68     		ldr	r3, [r3]
 10424 0070 22F48072 		bic	r2, r2, #256
 10425 0074 1A60     		str	r2, [r3]
3796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
3798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 10426              		.loc 1 3798 9
 10427 0076 7B68     		ldr	r3, [r7, #4]
 10428 0078 1B68     		ldr	r3, [r3]
 10429 007a 9B68     		ldr	r3, [r3, #8]
 10430 007c 7A68     		ldr	r2, [r7, #4]
 10431 007e 1268     		ldr	r2, [r2]
 10432 0080 23F08053 		bic	r3, r3, #268435456
 10433 0084 23F00103 		bic	r3, r3, #1
 10434 0088 9360     		str	r3, [r2, #8]
3799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
3801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 10435              		.loc 1 3801 24
 10436 008a 7B68     		ldr	r3, [r7, #4]
 10437 008c 2022     		movs	r2, #32
 10438 008e C3F88420 		str	r2, [r3, #132]
3802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
3804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
 10439              		.loc 1 3804 22
 10440 0092 7B68     		ldr	r3, [r7, #4]
 10441 0094 0022     		movs	r2, #0
 10442 0096 DA66     		str	r2, [r3, #108]
3805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
ARM GAS  /tmp/ccuwK2ly.s 			page 250


 10443              		.loc 1 3811 9
 10444 0098 7868     		ldr	r0, [r7, #4]
 10445 009a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 10446              	.L864:
3785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 10447              		.loc 1 3785 78 discriminator 2
 10448 009e FB89     		ldrh	r3, [r7, #14]
 10449 00a0 013B     		subs	r3, r3, #1
 10450 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 10451              	.L863:
3785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 10452              		.loc 1 3785 5 discriminator 1
 10453 00a4 FB89     		ldrh	r3, [r7, #14]
 10454 00a6 002B     		cmp	r3, #0
 10455 00a8 BCD1     		bne	.L865
3812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
3819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     */
3820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 10456              		.loc 1 3820 17
 10457 00aa 7B68     		ldr	r3, [r7, #4]
 10458 00ac B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10459 00b0 3B81     		strh	r3, [r7, #8]	@ movhi
3821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 10460              		.loc 1 3821 8
 10461 00b2 3B89     		ldrh	r3, [r7, #8]
 10462 00b4 002B     		cmp	r3, #0
 10463 00b6 21D0     		beq	.L868
 10464              		.loc 1 3821 52 discriminator 1
 10465 00b8 7B68     		ldr	r3, [r7, #4]
 10466 00ba B3F86830 		ldrh	r3, [r3, #104]
 10467              		.loc 1 3821 29 discriminator 1
 10468 00be 3A89     		ldrh	r2, [r7, #8]
 10469 00c0 9A42     		cmp	r2, r3
 10470 00c2 1BD2     		bcs	.L868
3822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
3824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 10471              		.loc 1 3824 7
 10472 00c4 7B68     		ldr	r3, [r7, #4]
 10473 00c6 1B68     		ldr	r3, [r3]
 10474 00c8 9A68     		ldr	r2, [r3, #8]
 10475 00ca 7B68     		ldr	r3, [r7, #4]
 10476 00cc 1B68     		ldr	r3, [r3]
 10477 00ce 22F08052 		bic	r2, r2, #268435456
 10478 00d2 9A60     		str	r2, [r3, #8]
3825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Update the RxISR function pointer */
3827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 10479              		.loc 1 3827 20
 10480 00d4 7B68     		ldr	r3, [r7, #4]
 10481 00d6 0B4A     		ldr	r2, .L869
ARM GAS  /tmp/ccuwK2ly.s 			page 251


 10482 00d8 DA66     		str	r2, [r3, #108]
3828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
3830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 10483              		.loc 1 3830 7
 10484 00da 7B68     		ldr	r3, [r7, #4]
 10485 00dc 1B68     		ldr	r3, [r3]
 10486 00de 1A68     		ldr	r2, [r3]
 10487 00e0 7B68     		ldr	r3, [r7, #4]
 10488 00e2 1B68     		ldr	r3, [r3]
 10489 00e4 42F02002 		orr	r2, r2, #32
 10490 00e8 1A60     		str	r2, [r3]
3831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 10491              		.loc 1 3838 1
 10492 00ea 07E0     		b	.L868
 10493              	.L862:
3836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 10494              		.loc 1 3836 5
 10495 00ec 7B68     		ldr	r3, [r7, #4]
 10496 00ee 1B68     		ldr	r3, [r3]
 10497 00f0 9A69     		ldr	r2, [r3, #24]
 10498 00f2 7B68     		ldr	r3, [r7, #4]
 10499 00f4 1B68     		ldr	r3, [r3]
 10500 00f6 42F00802 		orr	r2, r2, #8
 10501 00fa 9A61     		str	r2, [r3, #24]
 10502              	.L868:
 10503              		.loc 1 3838 1
 10504 00fc 00BF     		nop
 10505 00fe 1037     		adds	r7, r7, #16
 10506              	.LCFI340:
 10507              		.cfi_def_cfa_offset 8
 10508 0100 BD46     		mov	sp, r7
 10509              	.LCFI341:
 10510              		.cfi_def_cfa_register 13
 10511              		@ sp needed
 10512 0102 80BD     		pop	{r7, pc}
 10513              	.L870:
 10514              		.align	2
 10515              	.L869:
 10516 0104 00000000 		.word	UART_RxISR_8BIT
 10517              		.cfi_endproc
 10518              	.LFE387:
 10520              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 10521              		.align	1
 10522              		.syntax unified
 10523              		.thumb
 10524              		.thumb_func
 10525              		.fpu fpv4-sp-d16
 10527              	UART_RxISR_16BIT_FIFOEN:
 10528              	.LFB388:
ARM GAS  /tmp/ccuwK2ly.s 			page 252


3839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 10529              		.loc 1 3848 1
 10530              		.cfi_startproc
 10531              		@ args = 0, pretend = 0, frame = 24
 10532              		@ frame_needed = 1, uses_anonymous_args = 0
 10533 0000 80B5     		push	{r7, lr}
 10534              	.LCFI342:
 10535              		.cfi_def_cfa_offset 8
 10536              		.cfi_offset 7, -8
 10537              		.cfi_offset 14, -4
 10538 0002 86B0     		sub	sp, sp, #24
 10539              	.LCFI343:
 10540              		.cfi_def_cfa_offset 32
 10541 0004 00AF     		add	r7, sp, #0
 10542              	.LCFI344:
 10543              		.cfi_def_cfa_register 7
 10544 0006 7860     		str	r0, [r7, #4]
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 10545              		.loc 1 3850 13
 10546 0008 7B68     		ldr	r3, [r7, #4]
 10547 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 10548 000e BB82     		strh	r3, [r7, #20]	@ movhi
3851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t   nb_rx_data;
3853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  rxdatacount;
3854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 10549              		.loc 1 3856 12
 10550 0010 7B68     		ldr	r3, [r7, #4]
 10551 0012 D3F88430 		ldr	r3, [r3, #132]
 10552              		.loc 1 3856 6
 10553 0016 222B     		cmp	r3, #34
 10554 0018 68D1     		bne	.L872
3857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
 10555              		.loc 1 3858 21
 10556 001a 7B68     		ldr	r3, [r7, #4]
 10557 001c B3F86830 		ldrh	r3, [r3, #104]	@ movhi
 10558 0020 FB82     		strh	r3, [r7, #22]	@ movhi
 10559              		.loc 1 3858 5
 10560 0022 3FE0     		b	.L873
 10561              	.L875:
3859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 10562              		.loc 1 3860 27
 10563 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 253


 10564 0026 1B68     		ldr	r3, [r3]
 10565 0028 5B6A     		ldr	r3, [r3, #36]
 10566              		.loc 1 3860 14
 10567 002a 7B82     		strh	r3, [r7, #18]	@ movhi
3861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 10568              		.loc 1 3861 11
 10569 002c 7B68     		ldr	r3, [r7, #4]
 10570 002e 9B6D     		ldr	r3, [r3, #88]
 10571 0030 FB60     		str	r3, [r7, #12]
3862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 10572              		.loc 1 3862 14
 10573 0032 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 10574 0034 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 10575 0036 1340     		ands	r3, r3, r2
 10576 0038 9AB2     		uxth	r2, r3
 10577              		.loc 1 3862 12
 10578 003a FB68     		ldr	r3, [r7, #12]
 10579 003c 1A80     		strh	r2, [r3]	@ movhi
3863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 10580              		.loc 1 3863 25
 10581 003e 7B68     		ldr	r3, [r7, #4]
 10582 0040 9B6D     		ldr	r3, [r3, #88]
 10583 0042 9A1C     		adds	r2, r3, #2
 10584 0044 7B68     		ldr	r3, [r7, #4]
 10585 0046 9A65     		str	r2, [r3, #88]
3864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 10586              		.loc 1 3864 12
 10587 0048 7B68     		ldr	r3, [r7, #4]
 10588 004a B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10589 004e 9BB2     		uxth	r3, r3
 10590              		.loc 1 3864 25
 10591 0050 013B     		subs	r3, r3, #1
 10592 0052 9AB2     		uxth	r2, r3
 10593 0054 7B68     		ldr	r3, [r7, #4]
 10594 0056 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 10595              		.loc 1 3866 16
 10596 005a 7B68     		ldr	r3, [r7, #4]
 10597 005c B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10598 0060 9BB2     		uxth	r3, r3
 10599              		.loc 1 3866 10
 10600 0062 002B     		cmp	r3, #0
 10601 0064 1BD1     		bne	.L874
3867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
3869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 10602              		.loc 1 3869 9
 10603 0066 7B68     		ldr	r3, [r7, #4]
 10604 0068 1B68     		ldr	r3, [r3]
 10605 006a 1A68     		ldr	r2, [r3]
 10606 006c 7B68     		ldr	r3, [r7, #4]
 10607 006e 1B68     		ldr	r3, [r3]
 10608 0070 22F48072 		bic	r2, r2, #256
 10609 0074 1A60     		str	r2, [r3]
3870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
ARM GAS  /tmp/ccuwK2ly.s 			page 254


3872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 10610              		.loc 1 3872 9
 10611 0076 7B68     		ldr	r3, [r7, #4]
 10612 0078 1B68     		ldr	r3, [r3]
 10613 007a 9B68     		ldr	r3, [r3, #8]
 10614 007c 7A68     		ldr	r2, [r7, #4]
 10615 007e 1268     		ldr	r2, [r2]
 10616 0080 23F08053 		bic	r3, r3, #268435456
 10617 0084 23F00103 		bic	r3, r3, #1
 10618 0088 9360     		str	r3, [r2, #8]
3873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
3875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 10619              		.loc 1 3875 24
 10620 008a 7B68     		ldr	r3, [r7, #4]
 10621 008c 2022     		movs	r2, #32
 10622 008e C3F88420 		str	r2, [r3, #132]
3876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
3878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
 10623              		.loc 1 3878 22
 10624 0092 7B68     		ldr	r3, [r7, #4]
 10625 0094 0022     		movs	r2, #0
 10626 0096 DA66     		str	r2, [r3, #108]
3879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 10627              		.loc 1 3885 9
 10628 0098 7868     		ldr	r0, [r7, #4]
 10629 009a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 10630              	.L874:
3858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 10631              		.loc 1 3858 78 discriminator 2
 10632 009e FB8A     		ldrh	r3, [r7, #22]
 10633 00a0 013B     		subs	r3, r3, #1
 10634 00a2 FB82     		strh	r3, [r7, #22]	@ movhi
 10635              	.L873:
3858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 10636              		.loc 1 3858 5 discriminator 1
 10637 00a4 FB8A     		ldrh	r3, [r7, #22]
 10638 00a6 002B     		cmp	r3, #0
 10639 00a8 BCD1     		bne	.L875
3886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
3893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     */
3894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 10640              		.loc 1 3894 17
 10641 00aa 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 255


 10642 00ac B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 10643 00b0 7B81     		strh	r3, [r7, #10]	@ movhi
3895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 10644              		.loc 1 3895 8
 10645 00b2 7B89     		ldrh	r3, [r7, #10]
 10646 00b4 002B     		cmp	r3, #0
 10647 00b6 21D0     		beq	.L878
 10648              		.loc 1 3895 52 discriminator 1
 10649 00b8 7B68     		ldr	r3, [r7, #4]
 10650 00ba B3F86830 		ldrh	r3, [r3, #104]
 10651              		.loc 1 3895 29 discriminator 1
 10652 00be 7A89     		ldrh	r2, [r7, #10]
 10653 00c0 9A42     		cmp	r2, r3
 10654 00c2 1BD2     		bcs	.L878
3896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
3898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 10655              		.loc 1 3898 7
 10656 00c4 7B68     		ldr	r3, [r7, #4]
 10657 00c6 1B68     		ldr	r3, [r3]
 10658 00c8 9A68     		ldr	r2, [r3, #8]
 10659 00ca 7B68     		ldr	r3, [r7, #4]
 10660 00cc 1B68     		ldr	r3, [r3]
 10661 00ce 22F08052 		bic	r2, r2, #268435456
 10662 00d2 9A60     		str	r2, [r3, #8]
3899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Update the RxISR function pointer */
3901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 10663              		.loc 1 3901 20
 10664 00d4 7B68     		ldr	r3, [r7, #4]
 10665 00d6 0B4A     		ldr	r2, .L879
 10666 00d8 DA66     		str	r2, [r3, #108]
3902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
3904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 10667              		.loc 1 3904 7
 10668 00da 7B68     		ldr	r3, [r7, #4]
 10669 00dc 1B68     		ldr	r3, [r3]
 10670 00de 1A68     		ldr	r2, [r3]
 10671 00e0 7B68     		ldr	r3, [r7, #4]
 10672 00e2 1B68     		ldr	r3, [r3]
 10673 00e4 42F02002 		orr	r2, r2, #32
 10674 00e8 1A60     		str	r2, [r3]
3905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 10675              		.loc 1 3912 1
 10676 00ea 07E0     		b	.L878
 10677              	.L872:
3910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 10678              		.loc 1 3910 5
 10679 00ec 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccuwK2ly.s 			page 256


 10680 00ee 1B68     		ldr	r3, [r3]
 10681 00f0 9A69     		ldr	r2, [r3, #24]
 10682 00f2 7B68     		ldr	r3, [r7, #4]
 10683 00f4 1B68     		ldr	r3, [r3]
 10684 00f6 42F00802 		orr	r2, r2, #8
 10685 00fa 9A61     		str	r2, [r3, #24]
 10686              	.L878:
 10687              		.loc 1 3912 1
 10688 00fc 00BF     		nop
 10689 00fe 1837     		adds	r7, r7, #24
 10690              	.LCFI345:
 10691              		.cfi_def_cfa_offset 8
 10692 0100 BD46     		mov	sp, r7
 10693              	.LCFI346:
 10694              		.cfi_def_cfa_register 13
 10695              		@ sp needed
 10696 0102 80BD     		pop	{r7, pc}
 10697              	.L880:
 10698              		.align	2
 10699              	.L879:
 10700 0104 00000000 		.word	UART_RxISR_16BIT
 10701              		.cfi_endproc
 10702              	.LFE388:
 10704              		.text
 10705              	.Letext0:
 10706              		.file 2 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_types.h"
 10707              		.file 3 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 10708              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 10709              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 10710              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 10711              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 10712              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 10713              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 10714              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 10715              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 10716              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccuwK2ly.s 			page 257


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_uart.c
     /tmp/ccuwK2ly.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccuwK2ly.s:26     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccuwK2ly.s:694    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccuwK2ly.s:5042   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccuwK2ly.s:8234   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccuwK2ly.s:8446   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccuwK2ly.s:143    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccuwK2ly.s:150    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccuwK2ly.s:274    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccuwK2ly.s:281    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccuwK2ly.s:436    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccuwK2ly.s:443    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccuwK2ly.s:588    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccuwK2ly.s:595    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccuwK2ly.s:737    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccuwK2ly.s:687    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccuwK2ly.s:730    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccuwK2ly.s:773    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccuwK2ly.s:780    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccuwK2ly.s:8559   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccuwK2ly.s:996    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccuwK2ly.s:1003   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccuwK2ly.s:1287   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccuwK2ly.s:1294   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccuwK2ly.s:1474   .text.HAL_UART_Transmit_IT:00000000000000f8 $d
     /tmp/ccuwK2ly.s:9893   .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 UART_TxISR_16BIT_FIFOEN
     /tmp/ccuwK2ly.s:9765   .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 UART_TxISR_8BIT_FIFOEN
     /tmp/ccuwK2ly.s:9659   .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccuwK2ly.s:9558   .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccuwK2ly.s:1482   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccuwK2ly.s:1489   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccuwK2ly.s:1763   .text.HAL_UART_Receive_IT:00000000000001a0 $d
     /tmp/ccuwK2ly.s:10527  .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 UART_RxISR_16BIT_FIFOEN
     /tmp/ccuwK2ly.s:10340  .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 UART_RxISR_8BIT_FIFOEN
     /tmp/ccuwK2ly.s:10213  .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccuwK2ly.s:10083  .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccuwK2ly.s:1771   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccuwK2ly.s:1778   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccuwK2ly.s:1955   .text.HAL_UART_Transmit_DMA:00000000000000f4 $d
     /tmp/ccuwK2ly.s:8806   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccuwK2ly.s:8883   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccuwK2ly.s:9059   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccuwK2ly.s:1962   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccuwK2ly.s:1969   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccuwK2ly.s:2153   .text.HAL_UART_Receive_DMA:0000000000000104 $d
     /tmp/ccuwK2ly.s:8928   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccuwK2ly.s:9014   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccuwK2ly.s:2160   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccuwK2ly.s:2167   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccuwK2ly.s:2289   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccuwK2ly.s:2296   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccuwK2ly.s:2403   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccuwK2ly.s:2410   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccuwK2ly.s:8677   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccuwK2ly.s:8739   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
ARM GAS  /tmp/ccuwK2ly.s 			page 258


     /tmp/ccuwK2ly.s:2565   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccuwK2ly.s:2572   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccuwK2ly.s:2780   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccuwK2ly.s:2787   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccuwK2ly.s:2915   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccuwK2ly.s:2922   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccuwK2ly.s:3049   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccuwK2ly.s:3056   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccuwK2ly.s:4361   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccuwK2ly.s:3320   .text.HAL_UART_Abort_IT:0000000000000188 $d
     /tmp/ccuwK2ly.s:9211   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccuwK2ly.s:9321   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccuwK2ly.s:3326   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccuwK2ly.s:3333   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccuwK2ly.s:4404   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccuwK2ly.s:3481   .text.HAL_UART_AbortTransmit_IT:00000000000000d4 $d
     /tmp/ccuwK2ly.s:9424   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccuwK2ly.s:3486   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccuwK2ly.s:3493   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccuwK2ly.s:4447   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccuwK2ly.s:3645   .text.HAL_UART_AbortReceive_IT:00000000000000e0 $d
     /tmp/ccuwK2ly.s:9492   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccuwK2ly.s:3650   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccuwK2ly.s:3657   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccuwK2ly.s:4318   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccuwK2ly.s:10026  .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccuwK2ly.s:4133   .text.HAL_UART_IRQHandler:00000000000002c4 $d
     /tmp/ccuwK2ly.s:9158   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccuwK2ly.s:4139   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:4146   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccuwK2ly.s:4182   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:4189   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccuwK2ly.s:4225   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:4232   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccuwK2ly.s:4268   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:4275   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccuwK2ly.s:4311   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:4354   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:4397   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:4440   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:4483   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccuwK2ly.s:4490   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccuwK2ly.s:4556   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccuwK2ly.s:4563   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccuwK2ly.s:4629   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccuwK2ly.s:4636   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccuwK2ly.s:4680   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccuwK2ly.s:4687   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccuwK2ly.s:4767   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccuwK2ly.s:4774   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccuwK2ly.s:4854   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccuwK2ly.s:4861   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccuwK2ly.s:4933   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccuwK2ly.s:4940   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccuwK2ly.s:4988   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccuwK2ly.s:4995   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccuwK2ly.s:5035   .text.UART_SetConfig:0000000000000000 $t
ARM GAS  /tmp/ccuwK2ly.s 			page 259


     /tmp/ccuwK2ly.s:5181   .text.UART_SetConfig:00000000000000cc $d
     /tmp/ccuwK2ly.s:5185   .text.UART_SetConfig:00000000000000dc $t
     /tmp/ccuwK2ly.s:5229   .text.UART_SetConfig:0000000000000124 $d
     /tmp/ccuwK2ly.s:5242   .text.UART_SetConfig:0000000000000158 $t
     /tmp/ccuwK2ly.s:5476   .text.UART_SetConfig:00000000000002ec $d
     /tmp/ccuwK2ly.s:5486   .text.UART_SetConfig:000000000000030c $t
     /tmp/ccuwK2ly.s:5504   .text.UART_SetConfig:0000000000000330 $d
     /tmp/ccuwK2ly.s:5513   .text.UART_SetConfig:0000000000000354 $t
     /tmp/ccuwK2ly.s:5885   .text.UART_SetConfig:0000000000000530 $d
     /tmp/ccuwK2ly.s:5899   .text.UART_SetConfig:0000000000000560 $t
     /tmp/ccuwK2ly.s:6070   .text.UART_SetConfig:0000000000000654 $d
     /tmp/ccuwK2ly.s:6079   .text.UART_SetConfig:0000000000000678 $t
     /tmp/ccuwK2ly.s:6686   .text.UART_SetConfig:0000000000000ac0 $d
     /tmp/ccuwK2ly.s:6705   .text.UART_SetConfig:0000000000000b04 $t
     /tmp/ccuwK2ly.s:6773   .text.UART_SetConfig:0000000000000b84 $d
     /tmp/ccuwK2ly.s:6782   .text.UART_SetConfig:0000000000000ba8 $t
     /tmp/ccuwK2ly.s:7484   .text.UART_SetConfig:0000000000000f90 $d
     /tmp/ccuwK2ly.s:7497   .text.UART_SetConfig:0000000000000fb4 $d
     /tmp/ccuwK2ly.s:7511   .text.UART_SetConfig:0000000000000fe4 $t
     /tmp/ccuwK2ly.s:8212   .text.UART_SetConfig:00000000000013c0 $d
     /tmp/ccuwK2ly.s:8227   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccuwK2ly.s:8439   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccuwK2ly.s:8552   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccuwK2ly.s:8671   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccuwK2ly.s:8733   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccuwK2ly.s:8800   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccuwK2ly.s:8877   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccuwK2ly.s:8922   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccuwK2ly.s:9008   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccuwK2ly.s:9053   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccuwK2ly.s:9152   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccuwK2ly.s:9205   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:9315   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:9418   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:9486   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccuwK2ly.s:9552   .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccuwK2ly.s:9653   .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccuwK2ly.s:9759   .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccuwK2ly.s:9887   .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccuwK2ly.s:10020  .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccuwK2ly.s:10077  .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccuwK2ly.s:10207  .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccuwK2ly.s:10334  .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccuwK2ly.s:10516  .text.UART_RxISR_8BIT_FIFOEN:0000000000000104 $d
     /tmp/ccuwK2ly.s:10521  .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccuwK2ly.s:10700  .text.UART_RxISR_16BIT_FIFOEN:0000000000000104 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_TxFifoEmptyCallback
HAL_UARTEx_RxFifoFullCallback
__aeabi_uldivmod
ARM GAS  /tmp/ccuwK2ly.s 			page 260


HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
