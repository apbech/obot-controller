ARM GAS  /tmp/ccVD1nGz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_uart_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RS485Ex_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RS485Ex_Init:
  27              	.LFB325:
  28              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @file    stm32g4xx_hal_uart_ex.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief   Extended UART HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          This file provides firmware functions to manage the following extended
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *           + Peripheral Control functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   @verbatim
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   ==============================================================================
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****                ##### UART peripheral extended features  #####
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   ==============================================================================
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     (#) For the UART RS485 Driver Enable mode, initialize the UART registers
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         by calling the HAL_RS485Ex_Init() API.
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     (#) FIFO mode enabling/disabling and RX/TX FIFO threshold programming.
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         -@- When UART operates in FIFO mode, FIFO mode must be enabled prior
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****             starting RX/TX transfers. Also RX/TX FIFO thresholds must be
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****             configured prior starting RX/TX transfers.
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   @endverbatim
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   ******************************************************************************
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @attention
ARM GAS  /tmp/ccVD1nGz.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * All rights reserved.</center></h2>
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * the "License"; You may not use this file except in compliance with the
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * License. You may obtain a copy of the License at:
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   ******************************************************************************
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** #include "stm32g4xx_hal.h"
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @addtogroup STM32G4xx_HAL_Driver
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @defgroup UARTEx UARTEx
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief UART Extended HAL module driver
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** #ifdef HAL_UART_MODULE_ENABLED
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* Private typedef -----------------------------------------------------------*/
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* Private define ------------------------------------------------------------*/
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @defgroup UARTEX_Private_Constants UARTEx Private Constants
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* UART RX FIFO depth */
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** #define RX_FIFO_DEPTH 8U
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* UART TX FIFO depth */
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** #define TX_FIFO_DEPTH 8U
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @}
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* Private macros ------------------------------------------------------------*/
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* Private variables ---------------------------------------------------------*/
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* Private function prototypes -----------------------------------------------*/
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @defgroup UARTEx_Private_Functions UARTEx Private Functions
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart);
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @}
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /* Exported functions --------------------------------------------------------*/
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions  UARTEx Exported Functions
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
ARM GAS  /tmp/ccVD1nGz.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group1 Initialization and de-initialization functions
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief    Extended Initialization and Configuration Functions
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** @verbatim
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** ===============================================================================
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****             ##### Initialization and Configuration functions #####
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****  ===============================================================================
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     [..]
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     in asynchronous mode.
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****       (+) For the asynchronous mode the parameters below can be configured:
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) Baud Rate
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) Word Length
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) Stop Bit
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****              in the data register is transmitted but is changed by the parity bit.
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) Hardware flow control
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) Receiver/transmitter modes
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) Over Sampling Method
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) One-Bit Sampling Method
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) TX and/or RX pin level inversion
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) data logical level inversion
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) RX and TX pins swap
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) RX overrun detection disabling
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) DMA disabling on RX error
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) MSB first on communication line
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (++) auto Baud rate detection
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     [..]
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     The HAL_RS485Ex_Init() API follows the UART RS485 mode configuration
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      procedures (details for the procedures are available in reference manual).
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** @endverbatim
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   following table.
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     Table 1. UART frame format.
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
ARM GAS  /tmp/ccVD1nGz.s 			page 4


 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart            UART handle.
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param Polarity         Select the driver enable polarity.
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param AssertionTime    Driver Enable assertion time:
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       5-bit value defining the time between the activation of the DE (Driver Enable)
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       signal and the beginning of the start bit. It is expressed in sample time
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       units (1/8 or 1/16 bit time, depending on the oversampling rate)
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param DeassertionTime  Driver Enable deassertion time:
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       5-bit value defining the time between the end of the last stop bit, in a
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       transmitted message, and the de-activation of the DE (Driver Enable) signal.
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       It is expressed in sample time units (1/8 or 1/16 bit time, depending on the
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       oversampling rate).
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****                                    uint32_t DeassertionTime)
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
  29              		.loc 1 168 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 F860     		str	r0, [r7, #12]
  45 0008 B960     		str	r1, [r7, #8]
  46 000a 7A60     		str	r2, [r7, #4]
  47 000c 3B60     		str	r3, [r7]
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint32_t temp;
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   if (huart == NULL)
  48              		.loc 1 172 6
  49 000e FB68     		ldr	r3, [r7, #12]
  50 0010 002B     		cmp	r3, #0
  51 0012 01D1     		bne	.L2
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     return HAL_ERROR;
  52              		.loc 1 174 12
  53 0014 0123     		movs	r3, #1
  54 0016 58E0     		b	.L3
  55              	.L2:
ARM GAS  /tmp/ccVD1nGz.s 			page 5


 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check the Driver Enable UART instance */
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check the Driver Enable polarity */
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check the Driver Enable assertion time */
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check the Driver Enable deassertion time */
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  56              		.loc 1 188 12
  57 0018 FB68     		ldr	r3, [r7, #12]
  58 001a D3F88030 		ldr	r3, [r3, #128]
  59              		.loc 1 188 6
  60 001e 002B     		cmp	r3, #0
  61 0020 06D1     		bne	.L4
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     /* Allocate lock resource and initialize it */
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->Lock = HAL_UNLOCKED;
  62              		.loc 1 191 17
  63 0022 FB68     		ldr	r3, [r7, #12]
  64 0024 0022     		movs	r2, #0
  65 0026 83F87C20 		strb	r2, [r3, #124]
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     UART_InitCallbacksToDefault(huart);
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     if (huart->MspInitCallback == NULL)
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     {
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     }
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     /* Init the low level hardware */
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->MspInitCallback(huart);
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** #else
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     HAL_UART_MspInit(huart);
  66              		.loc 1 205 5
  67 002a F868     		ldr	r0, [r7, #12]
  68 002c FFF7FEFF 		bl	HAL_UART_MspInit
  69              	.L4:
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
  70              		.loc 1 209 17
  71 0030 FB68     		ldr	r3, [r7, #12]
  72 0032 2422     		movs	r2, #36
  73 0034 C3F88020 		str	r2, [r3, #128]
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
  74              		.loc 1 212 3
ARM GAS  /tmp/ccVD1nGz.s 			page 6


  75 0038 FB68     		ldr	r3, [r7, #12]
  76 003a 1B68     		ldr	r3, [r3]
  77 003c 1A68     		ldr	r2, [r3]
  78 003e FB68     		ldr	r3, [r7, #12]
  79 0040 1B68     		ldr	r3, [r3]
  80 0042 22F00102 		bic	r2, r2, #1
  81 0046 1A60     		str	r2, [r3]
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Set the UART Communication parameters */
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  82              		.loc 1 215 7
  83 0048 F868     		ldr	r0, [r7, #12]
  84 004a FFF7FEFF 		bl	UART_SetConfig
  85 004e 0346     		mov	r3, r0
  86              		.loc 1 215 6
  87 0050 012B     		cmp	r3, #1
  88 0052 01D1     		bne	.L5
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     return HAL_ERROR;
  89              		.loc 1 217 12
  90 0054 0123     		movs	r3, #1
  91 0056 38E0     		b	.L3
  92              	.L5:
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  93              		.loc 1 220 26
  94 0058 FB68     		ldr	r3, [r7, #12]
  95 005a 9B6A     		ldr	r3, [r3, #40]
  96              		.loc 1 220 6
  97 005c 002B     		cmp	r3, #0
  98 005e 02D0     		beq	.L6
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     UART_AdvFeatureConfig(huart);
  99              		.loc 1 222 5
 100 0060 F868     		ldr	r0, [r7, #12]
 101 0062 FFF7FEFF 		bl	UART_AdvFeatureConfig
 102              	.L6:
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 103              		.loc 1 226 3
 104 0066 FB68     		ldr	r3, [r7, #12]
 105 0068 1B68     		ldr	r3, [r3]
 106 006a 9A68     		ldr	r2, [r3, #8]
 107 006c FB68     		ldr	r3, [r7, #12]
 108 006e 1B68     		ldr	r3, [r3]
 109 0070 42F48042 		orr	r2, r2, #16384
 110 0074 9A60     		str	r2, [r3, #8]
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Set the Driver Enable polarity */
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 111              		.loc 1 229 3
 112 0076 FB68     		ldr	r3, [r7, #12]
 113 0078 1B68     		ldr	r3, [r3]
 114 007a 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccVD1nGz.s 			page 7


 115 007c 23F40041 		bic	r1, r3, #32768
 116 0080 FB68     		ldr	r3, [r7, #12]
 117 0082 1B68     		ldr	r3, [r3]
 118 0084 BA68     		ldr	r2, [r7, #8]
 119 0086 0A43     		orrs	r2, r2, r1
 120 0088 9A60     		str	r2, [r3, #8]
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Set the Driver Enable assertion and deassertion times */
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 121              		.loc 1 232 8
 122 008a 7B68     		ldr	r3, [r7, #4]
 123 008c 5B05     		lsls	r3, r3, #21
 124 008e 7B61     		str	r3, [r7, #20]
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 125              		.loc 1 233 28
 126 0090 3B68     		ldr	r3, [r7]
 127 0092 1B04     		lsls	r3, r3, #16
 128              		.loc 1 233 8
 129 0094 7A69     		ldr	r2, [r7, #20]
 130 0096 1343     		orrs	r3, r3, r2
 131 0098 7B61     		str	r3, [r7, #20]
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 132              		.loc 1 234 3
 133 009a FB68     		ldr	r3, [r7, #12]
 134 009c 1B68     		ldr	r3, [r3]
 135 009e 1B68     		ldr	r3, [r3]
 136 00a0 23F07F73 		bic	r3, r3, #66846720
 137 00a4 23F44033 		bic	r3, r3, #196608
 138 00a8 FA68     		ldr	r2, [r7, #12]
 139 00aa 1268     		ldr	r2, [r2]
 140 00ac 7969     		ldr	r1, [r7, #20]
 141 00ae 0B43     		orrs	r3, r3, r1
 142 00b0 1360     		str	r3, [r2]
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 143              		.loc 1 237 3
 144 00b2 FB68     		ldr	r3, [r7, #12]
 145 00b4 1B68     		ldr	r3, [r3]
 146 00b6 1A68     		ldr	r2, [r3]
 147 00b8 FB68     		ldr	r3, [r7, #12]
 148 00ba 1B68     		ldr	r3, [r3]
 149 00bc 42F00102 		orr	r2, r2, #1
 150 00c0 1A60     		str	r2, [r3]
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 151              		.loc 1 240 11
 152 00c2 F868     		ldr	r0, [r7, #12]
 153 00c4 FFF7FEFF 		bl	UART_CheckIdleState
 154 00c8 0346     		mov	r3, r0
 155              	.L3:
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 156              		.loc 1 241 1
 157 00ca 1846     		mov	r0, r3
 158 00cc 1837     		adds	r7, r7, #24
 159              	.LCFI3:
ARM GAS  /tmp/ccVD1nGz.s 			page 8


 160              		.cfi_def_cfa_offset 8
 161 00ce BD46     		mov	sp, r7
 162              	.LCFI4:
 163              		.cfi_def_cfa_register 13
 164              		@ sp needed
 165 00d0 80BD     		pop	{r7, pc}
 166              		.cfi_endproc
 167              	.LFE325:
 169              		.section	.text.HAL_UARTEx_WakeupCallback,"ax",%progbits
 170              		.align	1
 171              		.weak	HAL_UARTEx_WakeupCallback
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	HAL_UARTEx_WakeupCallback:
 178              	.LFB326:
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @}
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group2 IO operation functions
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *  @brief Extended functions
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** @verbatim
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****  ===============================================================================
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****                       ##### IO operation functions #####
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****  ===============================================================================
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     This subsection provides a set of Wakeup and FIFO mode related callback functions.
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     (#) Wakeup from Stop mode Callback:
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (+) HAL_UARTEx_WakeupCallback()
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     (#) TX/RX Fifos Callbacks:
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (+) HAL_UARTEx_RxFifoFullCallback()
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****         (+) HAL_UARTEx_TxFifoEmptyCallback()
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** @endverbatim
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief UART wakeup from Stop mode callback.
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart UART handle.
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval None
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** __weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 179              		.loc 1 273 1
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 80B4     		push	{r7}
 185              	.LCFI5:
 186              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccVD1nGz.s 			page 9


 187              		.cfi_offset 7, -4
 188 0002 83B0     		sub	sp, sp, #12
 189              	.LCFI6:
 190              		.cfi_def_cfa_offset 16
 191 0004 00AF     		add	r7, sp, #0
 192              	.LCFI7:
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   UNUSED(huart);
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****             the HAL_UARTEx_WakeupCallback can be implemented in the user file.
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****    */
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 195              		.loc 1 280 1
 196 0008 00BF     		nop
 197 000a 0C37     		adds	r7, r7, #12
 198              	.LCFI8:
 199              		.cfi_def_cfa_offset 4
 200 000c BD46     		mov	sp, r7
 201              	.LCFI9:
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 000e 5DF8047B 		ldr	r7, [sp], #4
 205              	.LCFI10:
 206              		.cfi_restore 7
 207              		.cfi_def_cfa_offset 0
 208 0012 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE326:
 212              		.section	.text.HAL_UARTEx_RxFifoFullCallback,"ax",%progbits
 213              		.align	1
 214              		.weak	HAL_UARTEx_RxFifoFullCallback
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv4-sp-d16
 220              	HAL_UARTEx_RxFifoFullCallback:
 221              	.LFB327:
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief  UART RX Fifo full callback.
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param  huart UART handle.
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval None
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** __weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 222              		.loc 1 288 1
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              	.LCFI11:
 229              		.cfi_def_cfa_offset 4
 230              		.cfi_offset 7, -4
ARM GAS  /tmp/ccVD1nGz.s 			page 10


 231 0002 83B0     		sub	sp, sp, #12
 232              	.LCFI12:
 233              		.cfi_def_cfa_offset 16
 234 0004 00AF     		add	r7, sp, #0
 235              	.LCFI13:
 236              		.cfi_def_cfa_register 7
 237 0006 7860     		str	r0, [r7, #4]
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   UNUSED(huart);
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****             the HAL_UARTEx_RxFifoFullCallback can be implemented in the user file.
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****    */
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 238              		.loc 1 295 1
 239 0008 00BF     		nop
 240 000a 0C37     		adds	r7, r7, #12
 241              	.LCFI14:
 242              		.cfi_def_cfa_offset 4
 243 000c BD46     		mov	sp, r7
 244              	.LCFI15:
 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 000e 5DF8047B 		ldr	r7, [sp], #4
 248              	.LCFI16:
 249              		.cfi_restore 7
 250              		.cfi_def_cfa_offset 0
 251 0012 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE327:
 255              		.section	.text.HAL_UARTEx_TxFifoEmptyCallback,"ax",%progbits
 256              		.align	1
 257              		.weak	HAL_UARTEx_TxFifoEmptyCallback
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv4-sp-d16
 263              	HAL_UARTEx_TxFifoEmptyCallback:
 264              	.LFB328:
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief  UART TX Fifo empty callback.
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param  huart UART handle.
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval None
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** __weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 265              		.loc 1 303 1
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 8
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 0000 80B4     		push	{r7}
 271              	.LCFI17:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccVD1nGz.s 			page 11


 275              	.LCFI18:
 276              		.cfi_def_cfa_offset 16
 277 0004 00AF     		add	r7, sp, #0
 278              	.LCFI19:
 279              		.cfi_def_cfa_register 7
 280 0006 7860     		str	r0, [r7, #4]
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   UNUSED(huart);
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****             the HAL_UARTEx_TxFifoEmptyCallback can be implemented in the user file.
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****    */
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 281              		.loc 1 310 1
 282 0008 00BF     		nop
 283 000a 0C37     		adds	r7, r7, #12
 284              	.LCFI20:
 285              		.cfi_def_cfa_offset 4
 286 000c BD46     		mov	sp, r7
 287              	.LCFI21:
 288              		.cfi_def_cfa_register 13
 289              		@ sp needed
 290 000e 5DF8047B 		ldr	r7, [sp], #4
 291              	.LCFI22:
 292              		.cfi_restore 7
 293              		.cfi_def_cfa_offset 0
 294 0012 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE328:
 298              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 299              		.align	1
 300              		.global	HAL_MultiProcessorEx_AddressLength_Set
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	HAL_MultiProcessorEx_AddressLength_Set:
 307              	.LFB329:
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @}
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group3 Peripheral Control functions
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief    Extended Peripheral Control functions
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** @verbatim
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****  ===============================================================================
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****                       ##### Peripheral Control functions #####
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****  ===============================================================================
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     [..] This section provides the following functions:
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      (+) HAL_UARTEx_StopModeWakeUpSourceConfig() API defines the wake-up from stop mode
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****          trigger: address match, Start Bit detection or RXNE bit status.
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableStopMode() API enables the UART to wake up the MCU from stop mode
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableStopMode() API disables the above functionality
ARM GAS  /tmp/ccVD1nGz.s 			page 12


 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableFifoMode() API enables the FIFO mode
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableFifoMode() API disables the FIFO mode
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetTxFifoThreshold() API sets the TX FIFO threshold
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetRxFifoThreshold() API sets the RX FIFO threshold
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** @endverbatim
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *        long).
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart         UART handle.
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param AddressLength This parameter can be one of the following values:
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 308              		.loc 1 356 1
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              	.LCFI23:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 82B0     		sub	sp, sp, #8
 318              	.LCFI24:
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              	.LCFI25:
 322              		.cfi_def_cfa_register 7
 323 0006 7860     		str	r0, [r7, #4]
 324 0008 3960     		str	r1, [r7]
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   if (huart == NULL)
 325              		.loc 1 358 6
 326 000a 7B68     		ldr	r3, [r7, #4]
 327 000c 002B     		cmp	r3, #0
 328 000e 01D1     		bne	.L11
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     return HAL_ERROR;
 329              		.loc 1 360 12
 330 0010 0123     		movs	r3, #1
 331 0012 21E0     		b	.L12
 332              	.L11:
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
ARM GAS  /tmp/ccVD1nGz.s 			page 13


 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check the address length parameter */
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 333              		.loc 1 366 17
 334 0014 7B68     		ldr	r3, [r7, #4]
 335 0016 2422     		movs	r2, #36
 336 0018 C3F88020 		str	r2, [r3, #128]
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 337              		.loc 1 369 3
 338 001c 7B68     		ldr	r3, [r7, #4]
 339 001e 1B68     		ldr	r3, [r3]
 340 0020 1A68     		ldr	r2, [r3]
 341 0022 7B68     		ldr	r3, [r7, #4]
 342 0024 1B68     		ldr	r3, [r3]
 343 0026 22F00102 		bic	r2, r2, #1
 344 002a 1A60     		str	r2, [r3]
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Set the address length */
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 345              		.loc 1 372 3
 346 002c 7B68     		ldr	r3, [r7, #4]
 347 002e 1B68     		ldr	r3, [r3]
 348 0030 5B68     		ldr	r3, [r3, #4]
 349 0032 23F01001 		bic	r1, r3, #16
 350 0036 7B68     		ldr	r3, [r7, #4]
 351 0038 1B68     		ldr	r3, [r3]
 352 003a 3A68     		ldr	r2, [r7]
 353 003c 0A43     		orrs	r2, r2, r1
 354 003e 5A60     		str	r2, [r3, #4]
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 355              		.loc 1 375 3
 356 0040 7B68     		ldr	r3, [r7, #4]
 357 0042 1B68     		ldr	r3, [r3]
 358 0044 1A68     		ldr	r2, [r3]
 359 0046 7B68     		ldr	r3, [r7, #4]
 360 0048 1B68     		ldr	r3, [r3]
 361 004a 42F00102 		orr	r2, r2, #1
 362 004e 1A60     		str	r2, [r3]
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 363              		.loc 1 378 11
 364 0050 7868     		ldr	r0, [r7, #4]
 365 0052 FFF7FEFF 		bl	UART_CheckIdleState
 366 0056 0346     		mov	r3, r0
 367              	.L12:
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 368              		.loc 1 379 1
 369 0058 1846     		mov	r0, r3
 370 005a 0837     		adds	r7, r7, #8
 371              	.LCFI26:
ARM GAS  /tmp/ccVD1nGz.s 			page 14


 372              		.cfi_def_cfa_offset 8
 373 005c BD46     		mov	sp, r7
 374              	.LCFI27:
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 005e 80BD     		pop	{r7, pc}
 378              		.cfi_endproc
 379              	.LFE329:
 381              		.section	.text.HAL_UARTEx_StopModeWakeUpSourceConfig,"ax",%progbits
 382              		.align	1
 383              		.global	HAL_UARTEx_StopModeWakeUpSourceConfig
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	HAL_UARTEx_StopModeWakeUpSourceConfig:
 390              	.LFB330:
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief Set Wakeup from Stop mode interrupt flag selection.
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @note It is the application responsibility to enable the interrupt used as
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       usart_wkup interrupt source before entering low-power mode.
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart           UART handle.
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param WakeUpSelection Address match, Start Bit detection or RXNE/RXFNE bit status.
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_ADDRESS
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_STARTBIT
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_READDATA_NONEMPTY
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_StopModeWakeUpSourceConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeD
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 391              		.loc 1 394 1
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 24
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395 0000 80B5     		push	{r7, lr}
 396              	.LCFI28:
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 7, -8
 399              		.cfi_offset 14, -4
 400 0002 88B0     		sub	sp, sp, #32
 401              	.LCFI29:
 402              		.cfi_def_cfa_offset 40
 403 0004 02AF     		add	r7, sp, #8
 404              	.LCFI30:
 405              		.cfi_def_cfa 7, 32
 406 0006 F860     		str	r0, [r7, #12]
 407 0008 3B1D     		adds	r3, r7, #4
 408 000a 83E80600 		stm	r3, {r1, r2}
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 409              		.loc 1 395 21
 410 000e 0023     		movs	r3, #0
 411 0010 FB75     		strb	r3, [r7, #23]
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint32_t tickstart;
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* check the wake-up from stop mode UART instance */
ARM GAS  /tmp/ccVD1nGz.s 			page 15


 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance));
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_SELECTION(WakeUpSelection.WakeUpEvent));
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Locked */
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 412              		.loc 1 404 3
 413 0012 FB68     		ldr	r3, [r7, #12]
 414 0014 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 415 0018 012B     		cmp	r3, #1
 416 001a 01D1     		bne	.L14
 417              		.loc 1 404 3 is_stmt 0 discriminator 1
 418 001c 0223     		movs	r3, #2
 419 001e 46E0     		b	.L15
 420              	.L14:
 421              		.loc 1 404 3 discriminator 2
 422 0020 FB68     		ldr	r3, [r7, #12]
 423 0022 0122     		movs	r2, #1
 424 0024 83F87C20 		strb	r2, [r3, #124]
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 425              		.loc 1 406 17 is_stmt 1 discriminator 2
 426 0028 FB68     		ldr	r3, [r7, #12]
 427 002a 2422     		movs	r2, #36
 428 002c C3F88020 		str	r2, [r3, #128]
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 429              		.loc 1 409 3 discriminator 2
 430 0030 FB68     		ldr	r3, [r7, #12]
 431 0032 1B68     		ldr	r3, [r3]
 432 0034 1A68     		ldr	r2, [r3]
 433 0036 FB68     		ldr	r3, [r7, #12]
 434 0038 1B68     		ldr	r3, [r3]
 435 003a 22F00102 		bic	r2, r2, #1
 436 003e 1A60     		str	r2, [r3]
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Set the wake-up selection scheme */
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_WUS, WakeUpSelection.WakeUpEvent);
 437              		.loc 1 412 3 discriminator 2
 438 0040 FB68     		ldr	r3, [r7, #12]
 439 0042 1B68     		ldr	r3, [r3]
 440 0044 9B68     		ldr	r3, [r3, #8]
 441 0046 23F44011 		bic	r1, r3, #3145728
 442 004a 7A68     		ldr	r2, [r7, #4]
 443 004c FB68     		ldr	r3, [r7, #12]
 444 004e 1B68     		ldr	r3, [r3]
 445 0050 0A43     		orrs	r2, r2, r1
 446 0052 9A60     		str	r2, [r3, #8]
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   if (WakeUpSelection.WakeUpEvent == UART_WAKEUP_ON_ADDRESS)
 447              		.loc 1 414 22 discriminator 2
 448 0054 7B68     		ldr	r3, [r7, #4]
 449              		.loc 1 414 6 discriminator 2
 450 0056 002B     		cmp	r3, #0
 451 0058 05D1     		bne	.L16
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
ARM GAS  /tmp/ccVD1nGz.s 			page 16


 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     UARTEx_Wakeup_AddressConfig(huart, WakeUpSelection);
 452              		.loc 1 416 5
 453 005a 3B1D     		adds	r3, r7, #4
 454 005c 93E80600 		ldm	r3, {r1, r2}
 455 0060 F868     		ldr	r0, [r7, #12]
 456 0062 FFF7FEFF 		bl	UARTEx_Wakeup_AddressConfig
 457              	.L16:
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 458              		.loc 1 420 3
 459 0066 FB68     		ldr	r3, [r7, #12]
 460 0068 1B68     		ldr	r3, [r3]
 461 006a 1A68     		ldr	r2, [r3]
 462 006c FB68     		ldr	r3, [r7, #12]
 463 006e 1B68     		ldr	r3, [r3]
 464 0070 42F00102 		orr	r2, r2, #1
 465 0074 1A60     		str	r2, [r3]
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Init tickstart for timeout managment*/
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   tickstart = HAL_GetTick();
 466              		.loc 1 423 15
 467 0076 FFF7FEFF 		bl	HAL_GetTick
 468 007a 3861     		str	r0, [r7, #16]
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Wait until REACK flag is set */
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE)
 469              		.loc 1 426 7
 470 007c 6FF07E43 		mvn	r3, #-33554432
 471 0080 0093     		str	r3, [sp]
 472 0082 3B69     		ldr	r3, [r7, #16]
 473 0084 0022     		movs	r2, #0
 474 0086 4FF48001 		mov	r1, #4194304
 475 008a F868     		ldr	r0, [r7, #12]
 476 008c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 477 0090 0346     		mov	r3, r0
 478              		.loc 1 426 6
 479 0092 002B     		cmp	r3, #0
 480 0094 02D0     		beq	.L17
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     status = HAL_TIMEOUT;
 481              		.loc 1 428 12
 482 0096 0323     		movs	r3, #3
 483 0098 FB75     		strb	r3, [r7, #23]
 484 009a 03E0     		b	.L18
 485              	.L17:
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   else
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     /* Initialize the UART State */
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->gState = HAL_UART_STATE_READY;
 486              		.loc 1 433 19
 487 009c FB68     		ldr	r3, [r7, #12]
 488 009e 2022     		movs	r2, #32
 489 00a0 C3F88020 		str	r2, [r3, #128]
 490              	.L18:
ARM GAS  /tmp/ccVD1nGz.s 			page 17


 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Unlocked */
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 491              		.loc 1 437 3
 492 00a4 FB68     		ldr	r3, [r7, #12]
 493 00a6 0022     		movs	r2, #0
 494 00a8 83F87C20 		strb	r2, [r3, #124]
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return status;
 495              		.loc 1 439 10
 496 00ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 497              	.L15:
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 498              		.loc 1 440 1
 499 00ae 1846     		mov	r0, r3
 500 00b0 1837     		adds	r7, r7, #24
 501              	.LCFI31:
 502              		.cfi_def_cfa_offset 8
 503 00b2 BD46     		mov	sp, r7
 504              	.LCFI32:
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 00b4 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE330:
 511              		.section	.text.HAL_UARTEx_EnableStopMode,"ax",%progbits
 512              		.align	1
 513              		.global	HAL_UARTEx_EnableStopMode
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv4-sp-d16
 519              	HAL_UARTEx_EnableStopMode:
 520              	.LFB331:
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief Enable UART Stop Mode.
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @note The UART is able to wake up the MCU from Stop 1 mode as long as UART clock is HSI or LSE.
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart UART handle.
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableStopMode(UART_HandleTypeDef *huart)
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 521              		.loc 1 449 1
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 8
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 0000 80B4     		push	{r7}
 527              	.LCFI33:
 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 7, -4
 530 0002 83B0     		sub	sp, sp, #12
 531              	.LCFI34:
 532              		.cfi_def_cfa_offset 16
 533 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccVD1nGz.s 			page 18


 534              	.LCFI35:
 535              		.cfi_def_cfa_register 7
 536 0006 7860     		str	r0, [r7, #4]
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Locked */
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 537              		.loc 1 451 3
 538 0008 7B68     		ldr	r3, [r7, #4]
 539 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 540 000e 012B     		cmp	r3, #1
 541 0010 01D1     		bne	.L20
 542              		.loc 1 451 3 is_stmt 0 discriminator 1
 543 0012 0223     		movs	r3, #2
 544 0014 10E0     		b	.L21
 545              	.L20:
 546              		.loc 1 451 3 discriminator 2
 547 0016 7B68     		ldr	r3, [r7, #4]
 548 0018 0122     		movs	r2, #1
 549 001a 83F87C20 		strb	r2, [r3, #124]
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Set UESM bit */
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_UESM);
 550              		.loc 1 454 3 is_stmt 1 discriminator 2
 551 001e 7B68     		ldr	r3, [r7, #4]
 552 0020 1B68     		ldr	r3, [r3]
 553 0022 1A68     		ldr	r2, [r3]
 554 0024 7B68     		ldr	r3, [r7, #4]
 555 0026 1B68     		ldr	r3, [r3]
 556 0028 42F00202 		orr	r2, r2, #2
 557 002c 1A60     		str	r2, [r3]
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Unlocked */
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 558              		.loc 1 457 3 discriminator 2
 559 002e 7B68     		ldr	r3, [r7, #4]
 560 0030 0022     		movs	r2, #0
 561 0032 83F87C20 		strb	r2, [r3, #124]
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return HAL_OK;
 562              		.loc 1 459 10 discriminator 2
 563 0036 0023     		movs	r3, #0
 564              	.L21:
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 565              		.loc 1 460 1
 566 0038 1846     		mov	r0, r3
 567 003a 0C37     		adds	r7, r7, #12
 568              	.LCFI36:
 569              		.cfi_def_cfa_offset 4
 570 003c BD46     		mov	sp, r7
 571              	.LCFI37:
 572              		.cfi_def_cfa_register 13
 573              		@ sp needed
 574 003e 5DF8047B 		ldr	r7, [sp], #4
 575              	.LCFI38:
 576              		.cfi_restore 7
 577              		.cfi_def_cfa_offset 0
 578 0042 7047     		bx	lr
 579              		.cfi_endproc
ARM GAS  /tmp/ccVD1nGz.s 			page 19


 580              	.LFE331:
 582              		.section	.text.HAL_UARTEx_DisableStopMode,"ax",%progbits
 583              		.align	1
 584              		.global	HAL_UARTEx_DisableStopMode
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	HAL_UARTEx_DisableStopMode:
 591              	.LFB332:
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief Disable UART Stop Mode.
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart UART handle.
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableStopMode(UART_HandleTypeDef *huart)
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 592              		.loc 1 468 1
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 8
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597 0000 80B4     		push	{r7}
 598              	.LCFI39:
 599              		.cfi_def_cfa_offset 4
 600              		.cfi_offset 7, -4
 601 0002 83B0     		sub	sp, sp, #12
 602              	.LCFI40:
 603              		.cfi_def_cfa_offset 16
 604 0004 00AF     		add	r7, sp, #0
 605              	.LCFI41:
 606              		.cfi_def_cfa_register 7
 607 0006 7860     		str	r0, [r7, #4]
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Locked */
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 608              		.loc 1 470 3
 609 0008 7B68     		ldr	r3, [r7, #4]
 610 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 611 000e 012B     		cmp	r3, #1
 612 0010 01D1     		bne	.L23
 613              		.loc 1 470 3 is_stmt 0 discriminator 1
 614 0012 0223     		movs	r3, #2
 615 0014 10E0     		b	.L24
 616              	.L23:
 617              		.loc 1 470 3 discriminator 2
 618 0016 7B68     		ldr	r3, [r7, #4]
 619 0018 0122     		movs	r2, #1
 620 001a 83F87C20 		strb	r2, [r3, #124]
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Clear UESM bit */
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_UESM);
 621              		.loc 1 473 3 is_stmt 1 discriminator 2
 622 001e 7B68     		ldr	r3, [r7, #4]
 623 0020 1B68     		ldr	r3, [r3]
 624 0022 1A68     		ldr	r2, [r3]
 625 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVD1nGz.s 			page 20


 626 0026 1B68     		ldr	r3, [r3]
 627 0028 22F00202 		bic	r2, r2, #2
 628 002c 1A60     		str	r2, [r3]
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Unlocked */
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 629              		.loc 1 476 3 discriminator 2
 630 002e 7B68     		ldr	r3, [r7, #4]
 631 0030 0022     		movs	r2, #0
 632 0032 83F87C20 		strb	r2, [r3, #124]
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return HAL_OK;
 633              		.loc 1 478 10 discriminator 2
 634 0036 0023     		movs	r3, #0
 635              	.L24:
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 636              		.loc 1 479 1
 637 0038 1846     		mov	r0, r3
 638 003a 0C37     		adds	r7, r7, #12
 639              	.LCFI42:
 640              		.cfi_def_cfa_offset 4
 641 003c BD46     		mov	sp, r7
 642              	.LCFI43:
 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 003e 5DF8047B 		ldr	r7, [sp], #4
 646              	.LCFI44:
 647              		.cfi_restore 7
 648              		.cfi_def_cfa_offset 0
 649 0042 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE332:
 653              		.section	.text.HAL_UARTEx_EnableFifoMode,"ax",%progbits
 654              		.align	1
 655              		.global	HAL_UARTEx_EnableFifoMode
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv4-sp-d16
 661              	HAL_UARTEx_EnableFifoMode:
 662              	.LFB333:
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief  Enable the FIFO mode.
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart      UART handle.
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableFifoMode(UART_HandleTypeDef *huart)
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 663              		.loc 1 487 1
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 16
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667 0000 80B5     		push	{r7, lr}
 668              	.LCFI45:
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 7, -8
ARM GAS  /tmp/ccVD1nGz.s 			page 21


 671              		.cfi_offset 14, -4
 672 0002 84B0     		sub	sp, sp, #16
 673              	.LCFI46:
 674              		.cfi_def_cfa_offset 24
 675 0004 00AF     		add	r7, sp, #0
 676              	.LCFI47:
 677              		.cfi_def_cfa_register 7
 678 0006 7860     		str	r0, [r7, #4]
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check parameters */
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Locked */
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 679              		.loc 1 494 3
 680 0008 7B68     		ldr	r3, [r7, #4]
 681 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 682 000e 012B     		cmp	r3, #1
 683 0010 01D1     		bne	.L26
 684              		.loc 1 494 3 is_stmt 0 discriminator 1
 685 0012 0223     		movs	r3, #2
 686 0014 2BE0     		b	.L27
 687              	.L26:
 688              		.loc 1 494 3 discriminator 2
 689 0016 7B68     		ldr	r3, [r7, #4]
 690 0018 0122     		movs	r2, #1
 691 001a 83F87C20 		strb	r2, [r3, #124]
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 692              		.loc 1 496 17 is_stmt 1 discriminator 2
 693 001e 7B68     		ldr	r3, [r7, #4]
 694 0020 2422     		movs	r2, #36
 695 0022 C3F88020 		str	r2, [r3, #128]
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 696              		.loc 1 499 12 discriminator 2
 697 0026 7B68     		ldr	r3, [r7, #4]
 698 0028 1B68     		ldr	r3, [r3]
 699              		.loc 1 499 10 discriminator 2
 700 002a 1B68     		ldr	r3, [r3]
 701 002c FB60     		str	r3, [r7, #12]
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Disable UART */
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 702              		.loc 1 502 3 discriminator 2
 703 002e 7B68     		ldr	r3, [r7, #4]
 704 0030 1B68     		ldr	r3, [r3]
 705 0032 1A68     		ldr	r2, [r3]
 706 0034 7B68     		ldr	r3, [r7, #4]
 707 0036 1B68     		ldr	r3, [r3]
 708 0038 22F00102 		bic	r2, r2, #1
 709 003c 1A60     		str	r2, [r3]
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Enable FIFO mode */
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   SET_BIT(tmpcr1, USART_CR1_FIFOEN);
ARM GAS  /tmp/ccVD1nGz.s 			page 22


 710              		.loc 1 505 3 discriminator 2
 711 003e FB68     		ldr	r3, [r7, #12]
 712 0040 43F00053 		orr	r3, r3, #536870912
 713 0044 FB60     		str	r3, [r7, #12]
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_ENABLE;
 714              		.loc 1 506 19 discriminator 2
 715 0046 7B68     		ldr	r3, [r7, #4]
 716 0048 4FF00052 		mov	r2, #536870912
 717 004c 5A66     		str	r2, [r3, #100]
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Restore UART configuration */
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 718              		.loc 1 509 3 discriminator 2
 719 004e 7B68     		ldr	r3, [r7, #4]
 720 0050 1B68     		ldr	r3, [r3]
 721 0052 FA68     		ldr	r2, [r7, #12]
 722 0054 1A60     		str	r2, [r3]
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 723              		.loc 1 512 3 discriminator 2
 724 0056 7868     		ldr	r0, [r7, #4]
 725 0058 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 726              		.loc 1 514 17 discriminator 2
 727 005c 7B68     		ldr	r3, [r7, #4]
 728 005e 2022     		movs	r2, #32
 729 0060 C3F88020 		str	r2, [r3, #128]
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Unlocked */
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 730              		.loc 1 517 3 discriminator 2
 731 0064 7B68     		ldr	r3, [r7, #4]
 732 0066 0022     		movs	r2, #0
 733 0068 83F87C20 		strb	r2, [r3, #124]
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return HAL_OK;
 734              		.loc 1 519 10 discriminator 2
 735 006c 0023     		movs	r3, #0
 736              	.L27:
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 737              		.loc 1 520 1
 738 006e 1846     		mov	r0, r3
 739 0070 1037     		adds	r7, r7, #16
 740              	.LCFI48:
 741              		.cfi_def_cfa_offset 8
 742 0072 BD46     		mov	sp, r7
 743              	.LCFI49:
 744              		.cfi_def_cfa_register 13
 745              		@ sp needed
 746 0074 80BD     		pop	{r7, pc}
 747              		.cfi_endproc
 748              	.LFE333:
 750              		.section	.text.HAL_UARTEx_DisableFifoMode,"ax",%progbits
 751              		.align	1
 752              		.global	HAL_UARTEx_DisableFifoMode
ARM GAS  /tmp/ccVD1nGz.s 			page 23


 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 756              		.fpu fpv4-sp-d16
 758              	HAL_UARTEx_DisableFifoMode:
 759              	.LFB334:
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief  Disable the FIFO mode.
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart      UART handle.
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 760              		.loc 1 528 1
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 16
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765 0000 80B4     		push	{r7}
 766              	.LCFI50:
 767              		.cfi_def_cfa_offset 4
 768              		.cfi_offset 7, -4
 769 0002 85B0     		sub	sp, sp, #20
 770              	.LCFI51:
 771              		.cfi_def_cfa_offset 24
 772 0004 00AF     		add	r7, sp, #0
 773              	.LCFI52:
 774              		.cfi_def_cfa_register 7
 775 0006 7860     		str	r0, [r7, #4]
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check parameters */
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Locked */
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 776              		.loc 1 535 3
 777 0008 7B68     		ldr	r3, [r7, #4]
 778 000a 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 779 000e 012B     		cmp	r3, #1
 780 0010 01D1     		bne	.L29
 781              		.loc 1 535 3 is_stmt 0 discriminator 1
 782 0012 0223     		movs	r3, #2
 783 0014 27E0     		b	.L30
 784              	.L29:
 785              		.loc 1 535 3 discriminator 2
 786 0016 7B68     		ldr	r3, [r7, #4]
 787 0018 0122     		movs	r2, #1
 788 001a 83F87C20 		strb	r2, [r3, #124]
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 789              		.loc 1 537 17 is_stmt 1 discriminator 2
 790 001e 7B68     		ldr	r3, [r7, #4]
 791 0020 2422     		movs	r2, #36
 792 0022 C3F88020 		str	r2, [r3, #128]
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
ARM GAS  /tmp/ccVD1nGz.s 			page 24


 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 793              		.loc 1 540 12 discriminator 2
 794 0026 7B68     		ldr	r3, [r7, #4]
 795 0028 1B68     		ldr	r3, [r3]
 796              		.loc 1 540 10 discriminator 2
 797 002a 1B68     		ldr	r3, [r3]
 798 002c FB60     		str	r3, [r7, #12]
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Disable UART */
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 799              		.loc 1 543 3 discriminator 2
 800 002e 7B68     		ldr	r3, [r7, #4]
 801 0030 1B68     		ldr	r3, [r3]
 802 0032 1A68     		ldr	r2, [r3]
 803 0034 7B68     		ldr	r3, [r7, #4]
 804 0036 1B68     		ldr	r3, [r3]
 805 0038 22F00102 		bic	r2, r2, #1
 806 003c 1A60     		str	r2, [r3]
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Enable FIFO mode */
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 807              		.loc 1 546 3 discriminator 2
 808 003e FB68     		ldr	r3, [r7, #12]
 809 0040 23F00053 		bic	r3, r3, #536870912
 810 0044 FB60     		str	r3, [r7, #12]
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_DISABLE;
 811              		.loc 1 547 19 discriminator 2
 812 0046 7B68     		ldr	r3, [r7, #4]
 813 0048 0022     		movs	r2, #0
 814 004a 5A66     		str	r2, [r3, #100]
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Restore UART configuration */
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 815              		.loc 1 550 3 discriminator 2
 816 004c 7B68     		ldr	r3, [r7, #4]
 817 004e 1B68     		ldr	r3, [r3]
 818 0050 FA68     		ldr	r2, [r7, #12]
 819 0052 1A60     		str	r2, [r3]
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 820              		.loc 1 552 17 discriminator 2
 821 0054 7B68     		ldr	r3, [r7, #4]
 822 0056 2022     		movs	r2, #32
 823 0058 C3F88020 		str	r2, [r3, #128]
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Unlocked */
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 824              		.loc 1 555 3 discriminator 2
 825 005c 7B68     		ldr	r3, [r7, #4]
 826 005e 0022     		movs	r2, #0
 827 0060 83F87C20 		strb	r2, [r3, #124]
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return HAL_OK;
 828              		.loc 1 557 10 discriminator 2
 829 0064 0023     		movs	r3, #0
 830              	.L30:
ARM GAS  /tmp/ccVD1nGz.s 			page 25


 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 831              		.loc 1 558 1
 832 0066 1846     		mov	r0, r3
 833 0068 1437     		adds	r7, r7, #20
 834              	.LCFI53:
 835              		.cfi_def_cfa_offset 4
 836 006a BD46     		mov	sp, r7
 837              	.LCFI54:
 838              		.cfi_def_cfa_register 13
 839              		@ sp needed
 840 006c 5DF8047B 		ldr	r7, [sp], #4
 841              	.LCFI55:
 842              		.cfi_restore 7
 843              		.cfi_def_cfa_offset 0
 844 0070 7047     		bx	lr
 845              		.cfi_endproc
 846              	.LFE334:
 848              		.section	.text.HAL_UARTEx_SetTxFifoThreshold,"ax",%progbits
 849              		.align	1
 850              		.global	HAL_UARTEx_SetTxFifoThreshold
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv4-sp-d16
 856              	HAL_UARTEx_SetTxFifoThreshold:
 857              	.LFB335:
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief  Set the TXFIFO threshold.
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart      UART handle.
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param Threshold  TX FIFO threshold value
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_8
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_4
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_2
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_3_4
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 858              		.loc 1 574 1
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 16
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              	.LCFI56:
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 7, -8
 866              		.cfi_offset 14, -4
 867 0002 84B0     		sub	sp, sp, #16
 868              	.LCFI57:
 869              		.cfi_def_cfa_offset 24
 870 0004 00AF     		add	r7, sp, #0
 871              	.LCFI58:
 872              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccVD1nGz.s 			page 26


 873 0006 7860     		str	r0, [r7, #4]
 874 0008 3960     		str	r1, [r7]
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check parameters */
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Locked */
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 875              		.loc 1 582 3
 876 000a 7B68     		ldr	r3, [r7, #4]
 877 000c 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 878 0010 012B     		cmp	r3, #1
 879 0012 01D1     		bne	.L32
 880              		.loc 1 582 3 is_stmt 0 discriminator 1
 881 0014 0223     		movs	r3, #2
 882 0016 2DE0     		b	.L33
 883              	.L32:
 884              		.loc 1 582 3 discriminator 2
 885 0018 7B68     		ldr	r3, [r7, #4]
 886 001a 0122     		movs	r2, #1
 887 001c 83F87C20 		strb	r2, [r3, #124]
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 888              		.loc 1 584 17 is_stmt 1 discriminator 2
 889 0020 7B68     		ldr	r3, [r7, #4]
 890 0022 2422     		movs	r2, #36
 891 0024 C3F88020 		str	r2, [r3, #128]
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 892              		.loc 1 587 12 discriminator 2
 893 0028 7B68     		ldr	r3, [r7, #4]
 894 002a 1B68     		ldr	r3, [r3]
 895              		.loc 1 587 10 discriminator 2
 896 002c 1B68     		ldr	r3, [r3]
 897 002e FB60     		str	r3, [r7, #12]
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Disable UART */
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 898              		.loc 1 590 3 discriminator 2
 899 0030 7B68     		ldr	r3, [r7, #4]
 900 0032 1B68     		ldr	r3, [r3]
 901 0034 1A68     		ldr	r2, [r3]
 902 0036 7B68     		ldr	r3, [r7, #4]
 903 0038 1B68     		ldr	r3, [r3]
 904 003a 22F00102 		bic	r2, r2, #1
 905 003e 1A60     		str	r2, [r3]
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Update TX threshold configuration */
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 906              		.loc 1 593 3 discriminator 2
 907 0040 7B68     		ldr	r3, [r7, #4]
 908 0042 1B68     		ldr	r3, [r3]
 909 0044 9B68     		ldr	r3, [r3, #8]
 910 0046 23F06041 		bic	r1, r3, #-536870912
ARM GAS  /tmp/ccVD1nGz.s 			page 27


 911 004a 7B68     		ldr	r3, [r7, #4]
 912 004c 1B68     		ldr	r3, [r3]
 913 004e 3A68     		ldr	r2, [r7]
 914 0050 0A43     		orrs	r2, r2, r1
 915 0052 9A60     		str	r2, [r3, #8]
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 916              		.loc 1 596 3 discriminator 2
 917 0054 7868     		ldr	r0, [r7, #4]
 918 0056 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Restore UART configuration */
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 919              		.loc 1 599 3 discriminator 2
 920 005a 7B68     		ldr	r3, [r7, #4]
 921 005c 1B68     		ldr	r3, [r3]
 922 005e FA68     		ldr	r2, [r7, #12]
 923 0060 1A60     		str	r2, [r3]
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 924              		.loc 1 601 17 discriminator 2
 925 0062 7B68     		ldr	r3, [r7, #4]
 926 0064 2022     		movs	r2, #32
 927 0066 C3F88020 		str	r2, [r3, #128]
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Unlocked */
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 928              		.loc 1 604 3 discriminator 2
 929 006a 7B68     		ldr	r3, [r7, #4]
 930 006c 0022     		movs	r2, #0
 931 006e 83F87C20 		strb	r2, [r3, #124]
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return HAL_OK;
 932              		.loc 1 606 10 discriminator 2
 933 0072 0023     		movs	r3, #0
 934              	.L33:
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 935              		.loc 1 607 1
 936 0074 1846     		mov	r0, r3
 937 0076 1037     		adds	r7, r7, #16
 938              	.LCFI59:
 939              		.cfi_def_cfa_offset 8
 940 0078 BD46     		mov	sp, r7
 941              	.LCFI60:
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 007a 80BD     		pop	{r7, pc}
 945              		.cfi_endproc
 946              	.LFE335:
 948              		.section	.text.HAL_UARTEx_SetRxFifoThreshold,"ax",%progbits
 949              		.align	1
 950              		.global	HAL_UARTEx_SetRxFifoThreshold
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccVD1nGz.s 			page 28


 956              	HAL_UARTEx_SetRxFifoThreshold:
 957              	.LFB336:
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief  Set the RXFIFO threshold.
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart      UART handle.
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param Threshold  RX FIFO threshold value
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_8
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_4
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_2
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_3_4
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval HAL status
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 958              		.loc 1 623 1
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 16
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962 0000 80B5     		push	{r7, lr}
 963              	.LCFI61:
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 84B0     		sub	sp, sp, #16
 968              	.LCFI62:
 969              		.cfi_def_cfa_offset 24
 970 0004 00AF     		add	r7, sp, #0
 971              	.LCFI63:
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 974 0008 3960     		str	r1, [r7]
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Check the parameters */
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Locked */
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 975              		.loc 1 631 3
 976 000a 7B68     		ldr	r3, [r7, #4]
 977 000c 93F87C30 		ldrb	r3, [r3, #124]	@ zero_extendqisi2
 978 0010 012B     		cmp	r3, #1
 979 0012 01D1     		bne	.L35
 980              		.loc 1 631 3 is_stmt 0 discriminator 1
 981 0014 0223     		movs	r3, #2
 982 0016 2DE0     		b	.L36
 983              	.L35:
 984              		.loc 1 631 3 discriminator 2
 985 0018 7B68     		ldr	r3, [r7, #4]
 986 001a 0122     		movs	r2, #1
 987 001c 83F87C20 		strb	r2, [r3, #124]
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
ARM GAS  /tmp/ccVD1nGz.s 			page 29


 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 988              		.loc 1 633 17 is_stmt 1 discriminator 2
 989 0020 7B68     		ldr	r3, [r7, #4]
 990 0022 2422     		movs	r2, #36
 991 0024 C3F88020 		str	r2, [r3, #128]
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 992              		.loc 1 636 12 discriminator 2
 993 0028 7B68     		ldr	r3, [r7, #4]
 994 002a 1B68     		ldr	r3, [r3]
 995              		.loc 1 636 10 discriminator 2
 996 002c 1B68     		ldr	r3, [r3]
 997 002e FB60     		str	r3, [r7, #12]
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Disable UART */
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 998              		.loc 1 639 3 discriminator 2
 999 0030 7B68     		ldr	r3, [r7, #4]
 1000 0032 1B68     		ldr	r3, [r3]
 1001 0034 1A68     		ldr	r2, [r3]
 1002 0036 7B68     		ldr	r3, [r7, #4]
 1003 0038 1B68     		ldr	r3, [r3]
 1004 003a 22F00102 		bic	r2, r2, #1
 1005 003e 1A60     		str	r2, [r3]
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Update RX threshold configuration */
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 1006              		.loc 1 642 3 discriminator 2
 1007 0040 7B68     		ldr	r3, [r7, #4]
 1008 0042 1B68     		ldr	r3, [r3]
 1009 0044 9B68     		ldr	r3, [r3, #8]
 1010 0046 23F06061 		bic	r1, r3, #234881024
 1011 004a 7B68     		ldr	r3, [r7, #4]
 1012 004c 1B68     		ldr	r3, [r3]
 1013 004e 3A68     		ldr	r2, [r7]
 1014 0050 0A43     		orrs	r2, r2, r1
 1015 0052 9A60     		str	r2, [r3, #8]
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 1016              		.loc 1 645 3 discriminator 2
 1017 0054 7868     		ldr	r0, [r7, #4]
 1018 0056 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Restore UART configuration */
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 1019              		.loc 1 648 3 discriminator 2
 1020 005a 7B68     		ldr	r3, [r7, #4]
 1021 005c 1B68     		ldr	r3, [r3]
 1022 005e FA68     		ldr	r2, [r7, #12]
 1023 0060 1A60     		str	r2, [r3]
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 1024              		.loc 1 650 17 discriminator 2
 1025 0062 7B68     		ldr	r3, [r7, #4]
 1026 0064 2022     		movs	r2, #32
ARM GAS  /tmp/ccVD1nGz.s 			page 30


 1027 0066 C3F88020 		str	r2, [r3, #128]
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Process Unlocked */
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 1028              		.loc 1 653 3 discriminator 2
 1029 006a 7B68     		ldr	r3, [r7, #4]
 1030 006c 0022     		movs	r2, #0
 1031 006e 83F87C20 		strb	r2, [r3, #124]
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   return HAL_OK;
 1032              		.loc 1 655 10 discriminator 2
 1033 0072 0023     		movs	r3, #0
 1034              	.L36:
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 1035              		.loc 1 656 1
 1036 0074 1846     		mov	r0, r3
 1037 0076 1037     		adds	r7, r7, #16
 1038              	.LCFI64:
 1039              		.cfi_def_cfa_offset 8
 1040 0078 BD46     		mov	sp, r7
 1041              	.LCFI65:
 1042              		.cfi_def_cfa_register 13
 1043              		@ sp needed
 1044 007a 80BD     		pop	{r7, pc}
 1045              		.cfi_endproc
 1046              	.LFE336:
 1048              		.section	.text.UARTEx_Wakeup_AddressConfig,"ax",%progbits
 1049              		.align	1
 1050              		.syntax unified
 1051              		.thumb
 1052              		.thumb_func
 1053              		.fpu fpv4-sp-d16
 1055              	UARTEx_Wakeup_AddressConfig:
 1056              	.LFB337:
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @}
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @}
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /** @addtogroup UARTEx_Private_Functions
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @{
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart           UART handle.
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval None
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 1057              		.loc 1 677 1
 1058              		.cfi_startproc
ARM GAS  /tmp/ccVD1nGz.s 			page 31


 1059              		@ args = 0, pretend = 0, frame = 16
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062 0000 80B4     		push	{r7}
 1063              	.LCFI66:
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 7, -4
 1066 0002 85B0     		sub	sp, sp, #20
 1067              	.LCFI67:
 1068              		.cfi_def_cfa_offset 24
 1069 0004 00AF     		add	r7, sp, #0
 1070              	.LCFI68:
 1071              		.cfi_def_cfa_register 7
 1072 0006 F860     		str	r0, [r7, #12]
 1073 0008 3B1D     		adds	r3, r7, #4
 1074 000a 83E80600 		stm	r3, {r1, r2}
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Set the USART address length */
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 1075              		.loc 1 681 3
 1076 000e FB68     		ldr	r3, [r7, #12]
 1077 0010 1B68     		ldr	r3, [r3]
 1078 0012 5B68     		ldr	r3, [r3, #4]
 1079 0014 23F01002 		bic	r2, r3, #16
 1080 0018 3B89     		ldrh	r3, [r7, #8]
 1081 001a 1946     		mov	r1, r3
 1082 001c FB68     		ldr	r3, [r7, #12]
 1083 001e 1B68     		ldr	r3, [r3]
 1084 0020 0A43     		orrs	r2, r2, r1
 1085 0022 5A60     		str	r2, [r3, #4]
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   /* Set the USART address node */
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 1086              		.loc 1 684 3
 1087 0024 FB68     		ldr	r3, [r7, #12]
 1088 0026 1B68     		ldr	r3, [r3]
 1089 0028 5B68     		ldr	r3, [r3, #4]
 1090 002a 23F07F41 		bic	r1, r3, #-16777216
 1091 002e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1092 0030 1A06     		lsls	r2, r3, #24
 1093 0032 FB68     		ldr	r3, [r7, #12]
 1094 0034 1B68     		ldr	r3, [r3]
 1095 0036 0A43     		orrs	r2, r2, r1
 1096 0038 5A60     		str	r2, [r3, #4]
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 1097              		.loc 1 685 1
 1098 003a 00BF     		nop
 1099 003c 1437     		adds	r7, r7, #20
 1100              	.LCFI69:
 1101              		.cfi_def_cfa_offset 4
 1102 003e BD46     		mov	sp, r7
 1103              	.LCFI70:
 1104              		.cfi_def_cfa_register 13
 1105              		@ sp needed
 1106 0040 5DF8047B 		ldr	r7, [sp], #4
 1107              	.LCFI71:
ARM GAS  /tmp/ccVD1nGz.s 			page 32


 1108              		.cfi_restore 7
 1109              		.cfi_def_cfa_offset 0
 1110 0044 7047     		bx	lr
 1111              		.cfi_endproc
 1112              	.LFE337:
 1114              		.section	.rodata
 1115              		.align	2
 1116              	.LC0:
 1117 0000 01       		.byte	1
 1118 0001 01       		.byte	1
 1119 0002 01       		.byte	1
 1120 0003 03       		.byte	3
 1121 0004 07       		.byte	7
 1122 0005 01       		.byte	1
 1123 0006 00       		.byte	0
 1124 0007 00       		.byte	0
 1125              		.align	2
 1126              	.LC1:
 1127 0008 08       		.byte	8
 1128 0009 04       		.byte	4
 1129 000a 02       		.byte	2
 1130 000b 04       		.byte	4
 1131 000c 08       		.byte	8
 1132 000d 01       		.byte	1
 1133 000e 01       		.byte	1
 1134 000f 01       		.byte	1
 1135              		.section	.text.UARTEx_SetNbDataToProcess,"ax",%progbits
 1136              		.align	1
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1140              		.fpu fpv4-sp-d16
 1142              	UARTEx_SetNbDataToProcess:
 1143              	.LFB338:
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** /**
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @brief Calculate the number of data to process in RX/TX ISR.
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @note The RX FIFO depth and the TX FIFO depth is extracted from
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   *       the UART configuration registers.
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @param huart UART handle.
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   * @retval None
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   */
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** {
 1144              		.loc 1 695 1
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 32
 1147              		@ frame_needed = 1, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 1149 0000 80B4     		push	{r7}
 1150              	.LCFI72:
 1151              		.cfi_def_cfa_offset 4
 1152              		.cfi_offset 7, -4
 1153 0002 89B0     		sub	sp, sp, #36
 1154              	.LCFI73:
 1155              		.cfi_def_cfa_offset 40
 1156 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccVD1nGz.s 			page 33


 1157              	.LCFI74:
 1158              		.cfi_def_cfa_register 7
 1159 0006 7860     		str	r0, [r7, #4]
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint8_t rx_fifo_depth;
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint8_t tx_fifo_depth;
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint8_t rx_fifo_threshold;
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint8_t tx_fifo_threshold;
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
 1160              		.loc 1 700 11
 1161 0008 2F4A     		ldr	r2, .L42
 1162 000a 07F11403 		add	r3, r7, #20
 1163 000e 92E80300 		ldm	r2, {r0, r1}
 1164 0012 83E80300 		stm	r3, {r0, r1}
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
 1165              		.loc 1 701 11
 1166 0016 2D4A     		ldr	r2, .L42+4
 1167 0018 07F10C03 		add	r3, r7, #12
 1168 001c 92E80300 		ldm	r2, {r0, r1}
 1169 0020 83E80300 		stm	r3, {r0, r1}
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** 
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 1170              		.loc 1 703 12
 1171 0024 7B68     		ldr	r3, [r7, #4]
 1172 0026 5B6E     		ldr	r3, [r3, #100]
 1173              		.loc 1 703 6
 1174 0028 002B     		cmp	r3, #0
 1175 002a 08D1     		bne	.L39
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = 1U;
 1176              		.loc 1 705 30
 1177 002c 7B68     		ldr	r3, [r7, #4]
 1178 002e 0122     		movs	r2, #1
 1179 0030 A3F86A20 		strh	r2, [r3, #106]	@ movhi
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = 1U;
 1180              		.loc 1 706 30
 1181 0034 7B68     		ldr	r3, [r7, #4]
 1182 0036 0122     		movs	r2, #1
 1183 0038 A3F86820 		strh	r2, [r3, #104]	@ movhi
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   else
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   {
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     rx_fifo_depth = RX_FIFO_DEPTH;
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     tx_fifo_depth = TX_FIFO_DEPTH;
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RX
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c **** }
 1184              		.loc 1 717 1
 1185 003c 3DE0     		b	.L41
 1186              	.L39:
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     tx_fifo_depth = TX_FIFO_DEPTH;
 1187              		.loc 1 710 19
 1188 003e 0823     		movs	r3, #8
 1189 0040 FB77     		strb	r3, [r7, #31]
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RX
ARM GAS  /tmp/ccVD1nGz.s 			page 34


 1190              		.loc 1 711 19
 1191 0042 0823     		movs	r3, #8
 1192 0044 BB77     		strb	r3, [r7, #30]
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 1193              		.loc 1 712 35
 1194 0046 7B68     		ldr	r3, [r7, #4]
 1195 0048 1B68     		ldr	r3, [r3]
 1196 004a 9B68     		ldr	r3, [r3, #8]
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 1197              		.loc 1 712 85
 1198 004c 5B0E     		lsrs	r3, r3, #25
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 1199              		.loc 1 712 25
 1200 004e DBB2     		uxtb	r3, r3
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 1201              		.loc 1 712 23
 1202 0050 03F00703 		and	r3, r3, #7
 1203 0054 7B77     		strb	r3, [r7, #29]
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t
 1204              		.loc 1 713 35
 1205 0056 7B68     		ldr	r3, [r7, #4]
 1206 0058 1B68     		ldr	r3, [r3]
 1207 005a 9B68     		ldr	r3, [r3, #8]
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t
 1208              		.loc 1 713 85
 1209 005c 5B0F     		lsrs	r3, r3, #29
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t
 1210              		.loc 1 713 25
 1211 005e DBB2     		uxtb	r3, r3
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t
 1212              		.loc 1 713 23
 1213 0060 03F00703 		and	r3, r3, #7
 1214 0064 3B77     		strb	r3, [r7, #28]
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t
 1215              		.loc 1 714 33
 1216 0066 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t
 1217              		.loc 1 714 68
 1218 0068 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1219 006a 07F12001 		add	r1, r7, #32
 1220 006e 0A44     		add	r2, r2, r1
 1221 0070 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t
 1222              		.loc 1 714 57
 1223 0074 02FB03F3 		mul	r3, r2, r3
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t
 1224              		.loc 1 714 112
 1225 0078 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1226 007a 07F12001 		add	r1, r7, #32
 1227 007e 0A44     		add	r2, r2, r1
 1228 0080 12F8142C 		ldrb	r2, [r2, #-20]	@ zero_extendqisi2
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t
 1229              		.loc 1 714 89
 1230 0084 93FBF2F3 		sdiv	r3, r3, r2
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t
 1231              		.loc 1 714 30
 1232 0088 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccVD1nGz.s 			page 35


 1233 008a 7B68     		ldr	r3, [r7, #4]
 1234 008c A3F86A20 		strh	r2, [r3, #106]	@ movhi
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 1235              		.loc 1 715 33
 1236 0090 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 1237              		.loc 1 715 68
 1238 0092 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 1239 0094 07F12001 		add	r1, r7, #32
 1240 0098 0A44     		add	r2, r2, r1
 1241 009a 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 1242              		.loc 1 715 57
 1243 009e 02FB03F3 		mul	r3, r2, r3
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 1244              		.loc 1 715 112
 1245 00a2 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 1246 00a4 07F12001 		add	r1, r7, #32
 1247 00a8 0A44     		add	r2, r2, r1
 1248 00aa 12F8142C 		ldrb	r2, [r2, #-20]	@ zero_extendqisi2
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 1249              		.loc 1 715 89
 1250 00ae 93FBF2F3 		sdiv	r3, r3, r2
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart_ex.c ****   }
 1251              		.loc 1 715 30
 1252 00b2 9AB2     		uxth	r2, r3
 1253 00b4 7B68     		ldr	r3, [r7, #4]
 1254 00b6 A3F86820 		strh	r2, [r3, #104]	@ movhi
 1255              	.L41:
 1256              		.loc 1 717 1
 1257 00ba 00BF     		nop
 1258 00bc 2437     		adds	r7, r7, #36
 1259              	.LCFI75:
 1260              		.cfi_def_cfa_offset 4
 1261 00be BD46     		mov	sp, r7
 1262              	.LCFI76:
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 00c0 5DF8047B 		ldr	r7, [sp], #4
 1266              	.LCFI77:
 1267              		.cfi_restore 7
 1268              		.cfi_def_cfa_offset 0
 1269 00c4 7047     		bx	lr
 1270              	.L43:
 1271 00c6 00BF     		.align	2
 1272              	.L42:
 1273 00c8 00000000 		.word	.LC0
 1274 00cc 08000000 		.word	.LC1
 1275              		.cfi_endproc
 1276              	.LFE338:
 1278              		.text
 1279              	.Letext0:
 1280              		.file 2 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_types.h"
 1281              		.file 3 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 1282              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1283              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 1284              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
ARM GAS  /tmp/ccVD1nGz.s 			page 36


 1285              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1286              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1287              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1288              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 1289              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 1290              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
 1291              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccVD1nGz.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_uart_ex.c
     /tmp/ccVD1nGz.s:18     .text.HAL_RS485Ex_Init:0000000000000000 $t
     /tmp/ccVD1nGz.s:26     .text.HAL_RS485Ex_Init:0000000000000000 HAL_RS485Ex_Init
     /tmp/ccVD1nGz.s:170    .text.HAL_UARTEx_WakeupCallback:0000000000000000 $t
     /tmp/ccVD1nGz.s:177    .text.HAL_UARTEx_WakeupCallback:0000000000000000 HAL_UARTEx_WakeupCallback
     /tmp/ccVD1nGz.s:213    .text.HAL_UARTEx_RxFifoFullCallback:0000000000000000 $t
     /tmp/ccVD1nGz.s:220    .text.HAL_UARTEx_RxFifoFullCallback:0000000000000000 HAL_UARTEx_RxFifoFullCallback
     /tmp/ccVD1nGz.s:256    .text.HAL_UARTEx_TxFifoEmptyCallback:0000000000000000 $t
     /tmp/ccVD1nGz.s:263    .text.HAL_UARTEx_TxFifoEmptyCallback:0000000000000000 HAL_UARTEx_TxFifoEmptyCallback
     /tmp/ccVD1nGz.s:299    .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 $t
     /tmp/ccVD1nGz.s:306    .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 HAL_MultiProcessorEx_AddressLength_Set
     /tmp/ccVD1nGz.s:382    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:0000000000000000 $t
     /tmp/ccVD1nGz.s:389    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:0000000000000000 HAL_UARTEx_StopModeWakeUpSourceConfig
     /tmp/ccVD1nGz.s:1055   .text.UARTEx_Wakeup_AddressConfig:0000000000000000 UARTEx_Wakeup_AddressConfig
     /tmp/ccVD1nGz.s:512    .text.HAL_UARTEx_EnableStopMode:0000000000000000 $t
     /tmp/ccVD1nGz.s:519    .text.HAL_UARTEx_EnableStopMode:0000000000000000 HAL_UARTEx_EnableStopMode
     /tmp/ccVD1nGz.s:583    .text.HAL_UARTEx_DisableStopMode:0000000000000000 $t
     /tmp/ccVD1nGz.s:590    .text.HAL_UARTEx_DisableStopMode:0000000000000000 HAL_UARTEx_DisableStopMode
     /tmp/ccVD1nGz.s:654    .text.HAL_UARTEx_EnableFifoMode:0000000000000000 $t
     /tmp/ccVD1nGz.s:661    .text.HAL_UARTEx_EnableFifoMode:0000000000000000 HAL_UARTEx_EnableFifoMode
     /tmp/ccVD1nGz.s:1142   .text.UARTEx_SetNbDataToProcess:0000000000000000 UARTEx_SetNbDataToProcess
     /tmp/ccVD1nGz.s:751    .text.HAL_UARTEx_DisableFifoMode:0000000000000000 $t
     /tmp/ccVD1nGz.s:758    .text.HAL_UARTEx_DisableFifoMode:0000000000000000 HAL_UARTEx_DisableFifoMode
     /tmp/ccVD1nGz.s:849    .text.HAL_UARTEx_SetTxFifoThreshold:0000000000000000 $t
     /tmp/ccVD1nGz.s:856    .text.HAL_UARTEx_SetTxFifoThreshold:0000000000000000 HAL_UARTEx_SetTxFifoThreshold
     /tmp/ccVD1nGz.s:949    .text.HAL_UARTEx_SetRxFifoThreshold:0000000000000000 $t
     /tmp/ccVD1nGz.s:956    .text.HAL_UARTEx_SetRxFifoThreshold:0000000000000000 HAL_UARTEx_SetRxFifoThreshold
     /tmp/ccVD1nGz.s:1049   .text.UARTEx_Wakeup_AddressConfig:0000000000000000 $t
     /tmp/ccVD1nGz.s:1115   .rodata:0000000000000000 $d
     /tmp/ccVD1nGz.s:1136   .text.UARTEx_SetNbDataToProcess:0000000000000000 $t
     /tmp/ccVD1nGz.s:1273   .text.UARTEx_SetNbDataToProcess:00000000000000c8 $d

UNDEFINED SYMBOLS
HAL_UART_MspInit
UART_SetConfig
UART_AdvFeatureConfig
UART_CheckIdleState
HAL_GetTick
UART_WaitOnFlagUntilTimeout
