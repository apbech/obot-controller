ARM GAS  /tmp/ccsCBbpd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_desc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	CDC_Desc
  18              		.section	.data.CDC_Desc,"aw"
  19              		.align	2
  22              	CDC_Desc:
  23 0000 00000000 		.word	USBD_CDC_DeviceDescriptor
  24 0004 00000000 		.word	USBD_CDC_LangIDStrDescriptor
  25 0008 00000000 		.word	USBD_CDC_ManufacturerStrDescriptor
  26 000c 00000000 		.word	USBD_CDC_ProductStrDescriptor
  27 0010 00000000 		.word	USBD_CDC_SerialStrDescriptor
  28 0014 00000000 		.word	USBD_CDC_ConfigStrDescriptor
  29 0018 00000000 		.word	USBD_CDC_InterfaceStrDescriptor
  30              		.global	USBD_CDC_DeviceDesc
  31              		.section	.data.USBD_CDC_DeviceDesc,"aw"
  32              		.align	2
  35              	USBD_CDC_DeviceDesc:
  36 0000 12       		.byte	18
  37 0001 01       		.byte	1
  38 0002 02       		.byte	2
  39 0003 00       		.byte	0
  40 0004 00       		.byte	0
  41 0005 00       		.byte	0
  42 0006 00       		.byte	0
  43 0007 40       		.byte	64
  44 0008 83       		.byte	-125
  45 0009 04       		.byte	4
  46 000a 40       		.byte	64
  47 000b 57       		.byte	87
  48 000c 00       		.byte	0
  49 000d 02       		.byte	2
  50 000e 01       		.byte	1
  51 000f 02       		.byte	2
  52 0010 03       		.byte	3
  53 0011 01       		.byte	1
  54              		.global	USBD_LangIDDesc
  55              		.section	.data.USBD_LangIDDesc,"aw"
  56              		.align	2
  59              	USBD_LangIDDesc:
  60 0000 04       		.byte	4
  61 0001 03       		.byte	3
  62 0002 09       		.byte	9
  63 0003 04       		.byte	4
ARM GAS  /tmp/ccsCBbpd.s 			page 2


  64              		.comm	USBD_StrDesc,512,4
  65              		.global	USBD_StringSerial
  66              		.section	.data.USBD_StringSerial,"aw"
  67              		.align	2
  70              	USBD_StringSerial:
  71 0000 1A       		.byte	26
  72 0001 03       		.byte	3
  73 0002 00000000 		.space	24
  73      00000000 
  73      00000000 
  73      00000000 
  73      00000000 
  74              		.section	.text.USBD_CDC_DeviceDescriptor,"ax",%progbits
  75              		.align	1
  76              		.global	USBD_CDC_DeviceDescriptor
  77              		.arch armv7e-m
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv4-sp-d16
  83              	USBD_CDC_DeviceDescriptor:
  84              	.LFB328:
  85              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v3.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_desc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_desc.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_desc.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_desc.c ****   *
  18:Src/usbd_desc.c ****   ******************************************************************************
  19:Src/usbd_desc.c ****   */
  20:Src/usbd_desc.c **** /* USER CODE END Header */
  21:Src/usbd_desc.c **** 
  22:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_desc.c **** #include "usbd_core.h"
  24:Src/usbd_desc.c **** #include "usbd_desc.h"
  25:Src/usbd_desc.c **** #include "usbd_conf.h"
  26:Src/usbd_desc.c **** 
  27:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  28:Src/usbd_desc.c **** 
  29:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  30:Src/usbd_desc.c **** 
  31:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  32:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  33:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  34:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccsCBbpd.s 			page 3


  35:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  36:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  37:Src/usbd_desc.c **** 
  38:Src/usbd_desc.c **** /* USER CODE END PV */
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
  44:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  45:Src/usbd_desc.c ****   * @{
  46:Src/usbd_desc.c ****   */
  47:Src/usbd_desc.c **** 
  48:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  49:Src/usbd_desc.c ****   * @brief Private types.
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */
  52:Src/usbd_desc.c **** 
  53:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****   * @}
  59:Src/usbd_desc.c ****   */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  62:Src/usbd_desc.c ****   * @brief Private defines.
  63:Src/usbd_desc.c ****   * @{
  64:Src/usbd_desc.c ****   */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** #define USBD_VID     1155
  67:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  68:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "Lee"
  69:Src/usbd_desc.c **** #define USBD_PID     22336
  70:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING     "Lee's Product"
  71:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING     "CDC Config"
  72:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING     "CDC Interface"
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /**
  79:Src/usbd_desc.c ****   * @}
  80:Src/usbd_desc.c ****   */
  81:Src/usbd_desc.c **** 
  82:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  83:Src/usbd_desc.c **** 
  84:Src/usbd_desc.c **** /* USER CODE END 0 */
  85:Src/usbd_desc.c **** 
  86:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  87:Src/usbd_desc.c ****   * @brief Private macros.
  88:Src/usbd_desc.c ****   * @{
  89:Src/usbd_desc.c ****   */
  90:Src/usbd_desc.c **** 
  91:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
ARM GAS  /tmp/ccsCBbpd.s 			page 4


  92:Src/usbd_desc.c **** 
  93:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  94:Src/usbd_desc.c **** 
  95:Src/usbd_desc.c **** /**
  96:Src/usbd_desc.c ****   * @}
  97:Src/usbd_desc.c ****   */
  98:Src/usbd_desc.c ****   
  99:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 100:Src/usbd_desc.c ****   * @brief Private functions declaration.
 101:Src/usbd_desc.c ****   * @{
 102:Src/usbd_desc.c ****   */
 103:Src/usbd_desc.c ****   
 104:Src/usbd_desc.c **** static void Get_SerialNum(void);
 105:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 106:Src/usbd_desc.c ****   
 107:Src/usbd_desc.c **** /**
 108:Src/usbd_desc.c ****   * @}
 109:Src/usbd_desc.c ****   */  
 110:Src/usbd_desc.c ****   
 111:Src/usbd_desc.c **** 
 112:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 113:Src/usbd_desc.c ****   * @brief Private functions declaration.
 114:Src/usbd_desc.c ****   * @{
 115:Src/usbd_desc.c ****   */
 116:Src/usbd_desc.c **** 
 117:Src/usbd_desc.c **** uint8_t * USBD_CDC_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 118:Src/usbd_desc.c **** uint8_t * USBD_CDC_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 119:Src/usbd_desc.c **** uint8_t * USBD_CDC_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_CDC_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_CDC_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** uint8_t * USBD_CDC_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 123:Src/usbd_desc.c **** uint8_t * USBD_CDC_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 124:Src/usbd_desc.c **** 
 125:Src/usbd_desc.c **** /**
 126:Src/usbd_desc.c ****   * @}
 127:Src/usbd_desc.c ****   */
 128:Src/usbd_desc.c **** 
 129:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 130:Src/usbd_desc.c ****   * @brief Private variables.
 131:Src/usbd_desc.c ****   * @{
 132:Src/usbd_desc.c ****   */
 133:Src/usbd_desc.c **** 
 134:Src/usbd_desc.c **** USBD_DescriptorsTypeDef CDC_Desc =
 135:Src/usbd_desc.c **** {
 136:Src/usbd_desc.c ****   USBD_CDC_DeviceDescriptor, 
 137:Src/usbd_desc.c ****   USBD_CDC_LangIDStrDescriptor, 
 138:Src/usbd_desc.c ****   USBD_CDC_ManufacturerStrDescriptor, 
 139:Src/usbd_desc.c ****   USBD_CDC_ProductStrDescriptor, 
 140:Src/usbd_desc.c ****   USBD_CDC_SerialStrDescriptor, 
 141:Src/usbd_desc.c ****   USBD_CDC_ConfigStrDescriptor, 
 142:Src/usbd_desc.c ****   USBD_CDC_InterfaceStrDescriptor
 143:Src/usbd_desc.c **** };
 144:Src/usbd_desc.c **** 
 145:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 146:Src/usbd_desc.c ****   #pragma data_alignment=4
 147:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 148:Src/usbd_desc.c **** /** USB standard device descriptor. */
ARM GAS  /tmp/ccsCBbpd.s 			page 5


 149:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_CDC_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 150:Src/usbd_desc.c **** {
 151:Src/usbd_desc.c ****   0x12,                       /*bLength */
 152:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 153:Src/usbd_desc.c ****   0x02,
 154:Src/usbd_desc.c ****   0x00,
 155:Src/usbd_desc.c ****   0x00,                       /*bDeviceClass*/
 156:Src/usbd_desc.c ****   0x00,                       /*bDeviceSubClass*/
 157:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 158:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 159:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 160:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 161:Src/usbd_desc.c ****   LOBYTE(USBD_PID),           /*idProduct*/
 162:Src/usbd_desc.c ****   HIBYTE(USBD_PID),           /*idProduct*/
 163:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 164:Src/usbd_desc.c ****   0x02,
 165:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 166:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 167:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 168:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 169:Src/usbd_desc.c **** };
 170:Src/usbd_desc.c **** 
 171:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 172:Src/usbd_desc.c **** 
 173:Src/usbd_desc.c **** /**
 174:Src/usbd_desc.c ****   * @}
 175:Src/usbd_desc.c ****   */
 176:Src/usbd_desc.c **** 
 177:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 178:Src/usbd_desc.c ****   * @brief Private variables.
 179:Src/usbd_desc.c ****   * @{
 180:Src/usbd_desc.c ****   */
 181:Src/usbd_desc.c **** 
 182:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 183:Src/usbd_desc.c ****   #pragma data_alignment=4
 184:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 185:Src/usbd_desc.c **** 
 186:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 187:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 188:Src/usbd_desc.c **** {
 189:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 190:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 191:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 192:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 193:Src/usbd_desc.c **** };
 194:Src/usbd_desc.c **** 
 195:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 196:Src/usbd_desc.c ****   #pragma data_alignment=4
 197:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 198:Src/usbd_desc.c **** /* Internal string descriptor. */
 199:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 200:Src/usbd_desc.c **** 
 201:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 202:Src/usbd_desc.c ****   #pragma data_alignment=4   
 203:Src/usbd_desc.c **** #endif
 204:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 205:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
ARM GAS  /tmp/ccsCBbpd.s 			page 6


 206:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 207:Src/usbd_desc.c **** };
 208:Src/usbd_desc.c **** 
 209:Src/usbd_desc.c **** /**
 210:Src/usbd_desc.c ****   * @}
 211:Src/usbd_desc.c ****   */
 212:Src/usbd_desc.c **** 
 213:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 214:Src/usbd_desc.c ****   * @brief Private functions.
 215:Src/usbd_desc.c ****   * @{
 216:Src/usbd_desc.c ****   */
 217:Src/usbd_desc.c **** 
 218:Src/usbd_desc.c **** /**
 219:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 220:Src/usbd_desc.c ****   * @param  speed : Current device speed
 221:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 222:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 223:Src/usbd_desc.c ****   */
 224:Src/usbd_desc.c **** uint8_t * USBD_CDC_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 225:Src/usbd_desc.c **** {
  86              		.loc 1 225 1
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 80B4     		push	{r7}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 7, -4
  95 0002 83B0     		sub	sp, sp, #12
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 16
  98 0004 00AF     		add	r7, sp, #0
  99              	.LCFI2:
 100              		.cfi_def_cfa_register 7
 101 0006 0346     		mov	r3, r0
 102 0008 3960     		str	r1, [r7]
 103 000a FB71     		strb	r3, [r7, #7]
 226:Src/usbd_desc.c ****   UNUSED(speed);
 227:Src/usbd_desc.c ****   *length = sizeof(USBD_CDC_DeviceDesc);
 104              		.loc 1 227 11
 105 000c 3B68     		ldr	r3, [r7]
 106 000e 1222     		movs	r2, #18
 107 0010 1A80     		strh	r2, [r3]	@ movhi
 228:Src/usbd_desc.c ****   return USBD_CDC_DeviceDesc;
 108              		.loc 1 228 10
 109 0012 034B     		ldr	r3, .L3
 229:Src/usbd_desc.c **** }
 110              		.loc 1 229 1
 111 0014 1846     		mov	r0, r3
 112 0016 0C37     		adds	r7, r7, #12
 113              	.LCFI3:
 114              		.cfi_def_cfa_offset 4
 115 0018 BD46     		mov	sp, r7
 116              	.LCFI4:
 117              		.cfi_def_cfa_register 13
 118              		@ sp needed
ARM GAS  /tmp/ccsCBbpd.s 			page 7


 119 001a 5DF8047B 		ldr	r7, [sp], #4
 120              	.LCFI5:
 121              		.cfi_restore 7
 122              		.cfi_def_cfa_offset 0
 123 001e 7047     		bx	lr
 124              	.L4:
 125              		.align	2
 126              	.L3:
 127 0020 00000000 		.word	USBD_CDC_DeviceDesc
 128              		.cfi_endproc
 129              	.LFE328:
 131              		.section	.text.USBD_CDC_LangIDStrDescriptor,"ax",%progbits
 132              		.align	1
 133              		.global	USBD_CDC_LangIDStrDescriptor
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	USBD_CDC_LangIDStrDescriptor:
 140              	.LFB329:
 230:Src/usbd_desc.c **** 
 231:Src/usbd_desc.c **** /**
 232:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 233:Src/usbd_desc.c ****   * @param  speed : Current device speed
 234:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 235:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 236:Src/usbd_desc.c ****   */
 237:Src/usbd_desc.c **** uint8_t * USBD_CDC_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 238:Src/usbd_desc.c **** {
 141              		.loc 1 238 1
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI6:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 83B0     		sub	sp, sp, #12
 151              	.LCFI7:
 152              		.cfi_def_cfa_offset 16
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI8:
 155              		.cfi_def_cfa_register 7
 156 0006 0346     		mov	r3, r0
 157 0008 3960     		str	r1, [r7]
 158 000a FB71     		strb	r3, [r7, #7]
 239:Src/usbd_desc.c ****   UNUSED(speed);
 240:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
 159              		.loc 1 240 11
 160 000c 3B68     		ldr	r3, [r7]
 161 000e 0422     		movs	r2, #4
 162 0010 1A80     		strh	r2, [r3]	@ movhi
 241:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 163              		.loc 1 241 10
 164 0012 034B     		ldr	r3, .L7
 242:Src/usbd_desc.c **** }
ARM GAS  /tmp/ccsCBbpd.s 			page 8


 165              		.loc 1 242 1
 166 0014 1846     		mov	r0, r3
 167 0016 0C37     		adds	r7, r7, #12
 168              	.LCFI9:
 169              		.cfi_def_cfa_offset 4
 170 0018 BD46     		mov	sp, r7
 171              	.LCFI10:
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 001a 5DF8047B 		ldr	r7, [sp], #4
 175              	.LCFI11:
 176              		.cfi_restore 7
 177              		.cfi_def_cfa_offset 0
 178 001e 7047     		bx	lr
 179              	.L8:
 180              		.align	2
 181              	.L7:
 182 0020 00000000 		.word	USBD_LangIDDesc
 183              		.cfi_endproc
 184              	.LFE329:
 186              		.section	.rodata
 187              		.align	2
 188              	.LC0:
 189 0000 4C656527 		.ascii	"Lee's Product\000"
 189      73205072 
 189      6F647563 
 189      7400
 190              		.section	.text.USBD_CDC_ProductStrDescriptor,"ax",%progbits
 191              		.align	1
 192              		.global	USBD_CDC_ProductStrDescriptor
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv4-sp-d16
 198              	USBD_CDC_ProductStrDescriptor:
 199              	.LFB330:
 243:Src/usbd_desc.c **** 
 244:Src/usbd_desc.c **** /**
 245:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 246:Src/usbd_desc.c ****   * @param  speed : Current device speed
 247:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 248:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 249:Src/usbd_desc.c ****   */
 250:Src/usbd_desc.c **** uint8_t * USBD_CDC_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 251:Src/usbd_desc.c **** {
 200              		.loc 1 251 1
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              	.LCFI12:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 82B0     		sub	sp, sp, #8
 210              	.LCFI13:
 211              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccsCBbpd.s 			page 9


 212 0004 00AF     		add	r7, sp, #0
 213              	.LCFI14:
 214              		.cfi_def_cfa_register 7
 215 0006 0346     		mov	r3, r0
 216 0008 3960     		str	r1, [r7]
 217 000a FB71     		strb	r3, [r7, #7]
 252:Src/usbd_desc.c ****   if(speed == 0)
 218              		.loc 1 252 5
 219 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 220 000e 002B     		cmp	r3, #0
 221 0010 05D1     		bne	.L10
 253:Src/usbd_desc.c ****   {
 254:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING, USBD_StrDesc, length);
 222              		.loc 1 254 5
 223 0012 3A68     		ldr	r2, [r7]
 224 0014 0749     		ldr	r1, .L13
 225 0016 0848     		ldr	r0, .L13+4
 226 0018 FFF7FEFF 		bl	USBD_GetString
 227 001c 04E0     		b	.L11
 228              	.L10:
 255:Src/usbd_desc.c ****   }
 256:Src/usbd_desc.c ****   else
 257:Src/usbd_desc.c ****   {
 258:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING, USBD_StrDesc, length);
 229              		.loc 1 258 5
 230 001e 3A68     		ldr	r2, [r7]
 231 0020 0449     		ldr	r1, .L13
 232 0022 0548     		ldr	r0, .L13+4
 233 0024 FFF7FEFF 		bl	USBD_GetString
 234              	.L11:
 259:Src/usbd_desc.c ****   }
 260:Src/usbd_desc.c ****   return USBD_StrDesc;
 235              		.loc 1 260 10
 236 0028 024B     		ldr	r3, .L13
 261:Src/usbd_desc.c **** }
 237              		.loc 1 261 1
 238 002a 1846     		mov	r0, r3
 239 002c 0837     		adds	r7, r7, #8
 240              	.LCFI15:
 241              		.cfi_def_cfa_offset 8
 242 002e BD46     		mov	sp, r7
 243              	.LCFI16:
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 0030 80BD     		pop	{r7, pc}
 247              	.L14:
 248 0032 00BF     		.align	2
 249              	.L13:
 250 0034 00000000 		.word	USBD_StrDesc
 251 0038 00000000 		.word	.LC0
 252              		.cfi_endproc
 253              	.LFE330:
 255              		.section	.rodata
 256 000e 0000     		.align	2
 257              	.LC1:
 258 0010 4C656500 		.ascii	"Lee\000"
 259              		.section	.text.USBD_CDC_ManufacturerStrDescriptor,"ax",%progbits
ARM GAS  /tmp/ccsCBbpd.s 			page 10


 260              		.align	1
 261              		.global	USBD_CDC_ManufacturerStrDescriptor
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	USBD_CDC_ManufacturerStrDescriptor:
 268              	.LFB331:
 262:Src/usbd_desc.c **** 
 263:Src/usbd_desc.c **** /**
 264:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 265:Src/usbd_desc.c ****   * @param  speed : Current device speed
 266:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 267:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 268:Src/usbd_desc.c ****   */
 269:Src/usbd_desc.c **** uint8_t * USBD_CDC_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 270:Src/usbd_desc.c **** {
 269              		.loc 1 270 1
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              	.LCFI17:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              	.LCFI18:
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI19:
 283              		.cfi_def_cfa_register 7
 284 0006 0346     		mov	r3, r0
 285 0008 3960     		str	r1, [r7]
 286 000a FB71     		strb	r3, [r7, #7]
 271:Src/usbd_desc.c ****   UNUSED(speed);
 272:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 287              		.loc 1 272 3
 288 000c 3A68     		ldr	r2, [r7]
 289 000e 0449     		ldr	r1, .L17
 290 0010 0448     		ldr	r0, .L17+4
 291 0012 FFF7FEFF 		bl	USBD_GetString
 273:Src/usbd_desc.c ****   return USBD_StrDesc;
 292              		.loc 1 273 10
 293 0016 024B     		ldr	r3, .L17
 274:Src/usbd_desc.c **** }
 294              		.loc 1 274 1
 295 0018 1846     		mov	r0, r3
 296 001a 0837     		adds	r7, r7, #8
 297              	.LCFI20:
 298              		.cfi_def_cfa_offset 8
 299 001c BD46     		mov	sp, r7
 300              	.LCFI21:
 301              		.cfi_def_cfa_register 13
 302              		@ sp needed
 303 001e 80BD     		pop	{r7, pc}
 304              	.L18:
ARM GAS  /tmp/ccsCBbpd.s 			page 11


 305              		.align	2
 306              	.L17:
 307 0020 00000000 		.word	USBD_StrDesc
 308 0024 10000000 		.word	.LC1
 309              		.cfi_endproc
 310              	.LFE331:
 312              		.section	.text.USBD_CDC_SerialStrDescriptor,"ax",%progbits
 313              		.align	1
 314              		.global	USBD_CDC_SerialStrDescriptor
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	USBD_CDC_SerialStrDescriptor:
 321              	.LFB332:
 275:Src/usbd_desc.c **** 
 276:Src/usbd_desc.c **** /**
 277:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 278:Src/usbd_desc.c ****   * @param  speed : Current device speed
 279:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 280:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 281:Src/usbd_desc.c ****   */
 282:Src/usbd_desc.c **** uint8_t * USBD_CDC_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 283:Src/usbd_desc.c **** {
 322              		.loc 1 283 1
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 1, uses_anonymous_args = 0
 326 0000 80B5     		push	{r7, lr}
 327              	.LCFI22:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 7, -8
 330              		.cfi_offset 14, -4
 331 0002 82B0     		sub	sp, sp, #8
 332              	.LCFI23:
 333              		.cfi_def_cfa_offset 16
 334 0004 00AF     		add	r7, sp, #0
 335              	.LCFI24:
 336              		.cfi_def_cfa_register 7
 337 0006 0346     		mov	r3, r0
 338 0008 3960     		str	r1, [r7]
 339 000a FB71     		strb	r3, [r7, #7]
 284:Src/usbd_desc.c ****   UNUSED(speed);
 285:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 340              		.loc 1 285 11
 341 000c 3B68     		ldr	r3, [r7]
 342 000e 1A22     		movs	r2, #26
 343 0010 1A80     		strh	r2, [r3]	@ movhi
 286:Src/usbd_desc.c **** 
 287:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 288:Src/usbd_desc.c ****    * ID */
 289:Src/usbd_desc.c ****   Get_SerialNum();
 344              		.loc 1 289 3
 345 0012 FFF7FEFF 		bl	Get_SerialNum
 290:Src/usbd_desc.c ****   
 291:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_CDC_SerialStrDescriptor */
 292:Src/usbd_desc.c ****   
ARM GAS  /tmp/ccsCBbpd.s 			page 12


 293:Src/usbd_desc.c ****   /* USER CODE END USBD_CDC_SerialStrDescriptor */
 294:Src/usbd_desc.c **** 
 295:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 346              		.loc 1 295 10
 347 0016 024B     		ldr	r3, .L21
 296:Src/usbd_desc.c **** }
 348              		.loc 1 296 1
 349 0018 1846     		mov	r0, r3
 350 001a 0837     		adds	r7, r7, #8
 351              	.LCFI25:
 352              		.cfi_def_cfa_offset 8
 353 001c BD46     		mov	sp, r7
 354              	.LCFI26:
 355              		.cfi_def_cfa_register 13
 356              		@ sp needed
 357 001e 80BD     		pop	{r7, pc}
 358              	.L22:
 359              		.align	2
 360              	.L21:
 361 0020 00000000 		.word	USBD_StringSerial
 362              		.cfi_endproc
 363              	.LFE332:
 365              		.section	.rodata
 366              		.align	2
 367              	.LC2:
 368 0014 43444320 		.ascii	"CDC Config\000"
 368      436F6E66 
 368      696700
 369              		.section	.text.USBD_CDC_ConfigStrDescriptor,"ax",%progbits
 370              		.align	1
 371              		.global	USBD_CDC_ConfigStrDescriptor
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	USBD_CDC_ConfigStrDescriptor:
 378              	.LFB333:
 297:Src/usbd_desc.c **** 
 298:Src/usbd_desc.c **** /**
 299:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 300:Src/usbd_desc.c ****   * @param  speed : Current device speed
 301:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 302:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 303:Src/usbd_desc.c ****   */
 304:Src/usbd_desc.c **** uint8_t * USBD_CDC_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 305:Src/usbd_desc.c **** {
 379              		.loc 1 305 1
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 8
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 80B5     		push	{r7, lr}
 384              	.LCFI27:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 82B0     		sub	sp, sp, #8
 389              	.LCFI28:
ARM GAS  /tmp/ccsCBbpd.s 			page 13


 390              		.cfi_def_cfa_offset 16
 391 0004 00AF     		add	r7, sp, #0
 392              	.LCFI29:
 393              		.cfi_def_cfa_register 7
 394 0006 0346     		mov	r3, r0
 395 0008 3960     		str	r1, [r7]
 396 000a FB71     		strb	r3, [r7, #7]
 306:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 397              		.loc 1 306 5
 398 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 399 000e 002B     		cmp	r3, #0
 400 0010 05D1     		bne	.L24
 307:Src/usbd_desc.c ****   {
 308:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING, USBD_StrDesc, length);
 401              		.loc 1 308 5
 402 0012 3A68     		ldr	r2, [r7]
 403 0014 0749     		ldr	r1, .L27
 404 0016 0848     		ldr	r0, .L27+4
 405 0018 FFF7FEFF 		bl	USBD_GetString
 406 001c 04E0     		b	.L25
 407              	.L24:
 309:Src/usbd_desc.c ****   }
 310:Src/usbd_desc.c ****   else
 311:Src/usbd_desc.c ****   {
 312:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING, USBD_StrDesc, length);
 408              		.loc 1 312 5
 409 001e 3A68     		ldr	r2, [r7]
 410 0020 0449     		ldr	r1, .L27
 411 0022 0548     		ldr	r0, .L27+4
 412 0024 FFF7FEFF 		bl	USBD_GetString
 413              	.L25:
 313:Src/usbd_desc.c ****   }
 314:Src/usbd_desc.c ****   return USBD_StrDesc;
 414              		.loc 1 314 10
 415 0028 024B     		ldr	r3, .L27
 315:Src/usbd_desc.c **** }
 416              		.loc 1 315 1
 417 002a 1846     		mov	r0, r3
 418 002c 0837     		adds	r7, r7, #8
 419              	.LCFI30:
 420              		.cfi_def_cfa_offset 8
 421 002e BD46     		mov	sp, r7
 422              	.LCFI31:
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 0030 80BD     		pop	{r7, pc}
 426              	.L28:
 427 0032 00BF     		.align	2
 428              	.L27:
 429 0034 00000000 		.word	USBD_StrDesc
 430 0038 14000000 		.word	.LC2
 431              		.cfi_endproc
 432              	.LFE333:
 434              		.section	.rodata
 435 001f 00       		.align	2
 436              	.LC3:
 437 0020 43444320 		.ascii	"CDC Interface\000"
ARM GAS  /tmp/ccsCBbpd.s 			page 14


 437      496E7465 
 437      72666163 
 437      6500
 438              		.section	.text.USBD_CDC_InterfaceStrDescriptor,"ax",%progbits
 439              		.align	1
 440              		.global	USBD_CDC_InterfaceStrDescriptor
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	USBD_CDC_InterfaceStrDescriptor:
 447              	.LFB334:
 316:Src/usbd_desc.c **** 
 317:Src/usbd_desc.c **** /**
 318:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 319:Src/usbd_desc.c ****   * @param  speed : Current device speed
 320:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 321:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 322:Src/usbd_desc.c ****   */
 323:Src/usbd_desc.c **** uint8_t * USBD_CDC_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 324:Src/usbd_desc.c **** {
 448              		.loc 1 324 1
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 80B5     		push	{r7, lr}
 453              	.LCFI32:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0002 82B0     		sub	sp, sp, #8
 458              	.LCFI33:
 459              		.cfi_def_cfa_offset 16
 460 0004 00AF     		add	r7, sp, #0
 461              	.LCFI34:
 462              		.cfi_def_cfa_register 7
 463 0006 0346     		mov	r3, r0
 464 0008 3960     		str	r1, [r7]
 465 000a FB71     		strb	r3, [r7, #7]
 325:Src/usbd_desc.c ****   if(speed == 0)
 466              		.loc 1 325 5
 467 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 468 000e 002B     		cmp	r3, #0
 469 0010 05D1     		bne	.L30
 326:Src/usbd_desc.c ****   {
 327:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING, USBD_StrDesc, length);
 470              		.loc 1 327 5
 471 0012 3A68     		ldr	r2, [r7]
 472 0014 0749     		ldr	r1, .L33
 473 0016 0848     		ldr	r0, .L33+4
 474 0018 FFF7FEFF 		bl	USBD_GetString
 475 001c 04E0     		b	.L31
 476              	.L30:
 328:Src/usbd_desc.c ****   }
 329:Src/usbd_desc.c ****   else
 330:Src/usbd_desc.c ****   {
 331:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING, USBD_StrDesc, length);
ARM GAS  /tmp/ccsCBbpd.s 			page 15


 477              		.loc 1 331 5
 478 001e 3A68     		ldr	r2, [r7]
 479 0020 0449     		ldr	r1, .L33
 480 0022 0548     		ldr	r0, .L33+4
 481 0024 FFF7FEFF 		bl	USBD_GetString
 482              	.L31:
 332:Src/usbd_desc.c ****   }
 333:Src/usbd_desc.c ****   return USBD_StrDesc;
 483              		.loc 1 333 10
 484 0028 024B     		ldr	r3, .L33
 334:Src/usbd_desc.c **** }
 485              		.loc 1 334 1
 486 002a 1846     		mov	r0, r3
 487 002c 0837     		adds	r7, r7, #8
 488              	.LCFI35:
 489              		.cfi_def_cfa_offset 8
 490 002e BD46     		mov	sp, r7
 491              	.LCFI36:
 492              		.cfi_def_cfa_register 13
 493              		@ sp needed
 494 0030 80BD     		pop	{r7, pc}
 495              	.L34:
 496 0032 00BF     		.align	2
 497              	.L33:
 498 0034 00000000 		.word	USBD_StrDesc
 499 0038 20000000 		.word	.LC3
 500              		.cfi_endproc
 501              	.LFE334:
 503              		.section	.text.Get_SerialNum,"ax",%progbits
 504              		.align	1
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 508              		.fpu fpv4-sp-d16
 510              	Get_SerialNum:
 511              	.LFB335:
 335:Src/usbd_desc.c **** 
 336:Src/usbd_desc.c **** /**
 337:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor 
 338:Src/usbd_desc.c ****   * @param  None 
 339:Src/usbd_desc.c ****   * @retval None
 340:Src/usbd_desc.c ****   */
 341:Src/usbd_desc.c **** static void Get_SerialNum(void)
 342:Src/usbd_desc.c **** {
 512              		.loc 1 342 1
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 16
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516 0000 80B5     		push	{r7, lr}
 517              	.LCFI37:
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 84B0     		sub	sp, sp, #16
 522              	.LCFI38:
 523              		.cfi_def_cfa_offset 24
 524 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccsCBbpd.s 			page 16


 525              	.LCFI39:
 526              		.cfi_def_cfa_register 7
 343:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 344:Src/usbd_desc.c **** 
 345:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 527              		.loc 1 345 19
 528 0006 0F4B     		ldr	r3, .L38
 529              		.loc 1 345 17
 530 0008 1B68     		ldr	r3, [r3]
 531 000a FB60     		str	r3, [r7, #12]
 346:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 532              		.loc 1 346 19
 533 000c 0E4B     		ldr	r3, .L38+4
 534              		.loc 1 346 17
 535 000e 1B68     		ldr	r3, [r3]
 536 0010 BB60     		str	r3, [r7, #8]
 347:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 537              		.loc 1 347 19
 538 0012 0E4B     		ldr	r3, .L38+8
 539              		.loc 1 347 17
 540 0014 1B68     		ldr	r3, [r3]
 541 0016 7B60     		str	r3, [r7, #4]
 348:Src/usbd_desc.c **** 
 349:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 542              		.loc 1 349 17
 543 0018 FA68     		ldr	r2, [r7, #12]
 544 001a 7B68     		ldr	r3, [r7, #4]
 545 001c 1344     		add	r3, r3, r2
 546 001e FB60     		str	r3, [r7, #12]
 350:Src/usbd_desc.c **** 
 351:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 547              		.loc 1 351 6
 548 0020 FB68     		ldr	r3, [r7, #12]
 549 0022 002B     		cmp	r3, #0
 550 0024 09D0     		beq	.L37
 352:Src/usbd_desc.c ****   {
 353:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 551              		.loc 1 353 5
 552 0026 0822     		movs	r2, #8
 553 0028 0949     		ldr	r1, .L38+12
 554 002a F868     		ldr	r0, [r7, #12]
 555 002c FFF7FEFF 		bl	IntToUnicode
 354:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 556              		.loc 1 354 5
 557 0030 0422     		movs	r2, #4
 558 0032 0849     		ldr	r1, .L38+16
 559 0034 B868     		ldr	r0, [r7, #8]
 560 0036 FFF7FEFF 		bl	IntToUnicode
 561              	.L37:
 355:Src/usbd_desc.c ****   }
 356:Src/usbd_desc.c **** }
 562              		.loc 1 356 1
 563 003a 00BF     		nop
 564 003c 1037     		adds	r7, r7, #16
 565              	.LCFI40:
 566              		.cfi_def_cfa_offset 8
 567 003e BD46     		mov	sp, r7
ARM GAS  /tmp/ccsCBbpd.s 			page 17


 568              	.LCFI41:
 569              		.cfi_def_cfa_register 13
 570              		@ sp needed
 571 0040 80BD     		pop	{r7, pc}
 572              	.L39:
 573 0042 00BF     		.align	2
 574              	.L38:
 575 0044 9075FF1F 		.word	536835472
 576 0048 9475FF1F 		.word	536835476
 577 004c 9875FF1F 		.word	536835480
 578 0050 02000000 		.word	USBD_StringSerial+2
 579 0054 12000000 		.word	USBD_StringSerial+18
 580              		.cfi_endproc
 581              	.LFE335:
 583              		.section	.text.IntToUnicode,"ax",%progbits
 584              		.align	1
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	IntToUnicode:
 591              	.LFB336:
 357:Src/usbd_desc.c **** 
 358:Src/usbd_desc.c **** /**
 359:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char 
 360:Src/usbd_desc.c ****   * @param  value: value to convert
 361:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer 
 362:Src/usbd_desc.c ****   * @param  len: buffer length
 363:Src/usbd_desc.c ****   * @retval None
 364:Src/usbd_desc.c ****   */
 365:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
 366:Src/usbd_desc.c **** {
 592              		.loc 1 366 1
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 24
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597 0000 80B4     		push	{r7}
 598              	.LCFI42:
 599              		.cfi_def_cfa_offset 4
 600              		.cfi_offset 7, -4
 601 0002 87B0     		sub	sp, sp, #28
 602              	.LCFI43:
 603              		.cfi_def_cfa_offset 32
 604 0004 00AF     		add	r7, sp, #0
 605              	.LCFI44:
 606              		.cfi_def_cfa_register 7
 607 0006 F860     		str	r0, [r7, #12]
 608 0008 B960     		str	r1, [r7, #8]
 609 000a 1346     		mov	r3, r2
 610 000c FB71     		strb	r3, [r7, #7]
 367:Src/usbd_desc.c ****   uint8_t idx = 0;
 611              		.loc 1 367 11
 612 000e 0023     		movs	r3, #0
 613 0010 FB75     		strb	r3, [r7, #23]
 368:Src/usbd_desc.c **** 
 369:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
ARM GAS  /tmp/ccsCBbpd.s 			page 18


 614              		.loc 1 369 12
 615 0012 0023     		movs	r3, #0
 616 0014 FB75     		strb	r3, [r7, #23]
 617              		.loc 1 369 3
 618 0016 27E0     		b	.L41
 619              	.L44:
 370:Src/usbd_desc.c ****   {
 371:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 620              		.loc 1 371 17
 621 0018 FB68     		ldr	r3, [r7, #12]
 622 001a 1B0F     		lsrs	r3, r3, #28
 623              		.loc 1 371 8
 624 001c 092B     		cmp	r3, #9
 625 001e 0BD8     		bhi	.L42
 372:Src/usbd_desc.c ****     {
 373:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 626              		.loc 1 373 30
 627 0020 FB68     		ldr	r3, [r7, #12]
 628 0022 1B0F     		lsrs	r3, r3, #28
 629              		.loc 1 373 37
 630 0024 DAB2     		uxtb	r2, r3
 631              		.loc 1 373 14
 632 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 633 0028 5B00     		lsls	r3, r3, #1
 634 002a 1946     		mov	r1, r3
 635              		.loc 1 373 11
 636 002c BB68     		ldr	r3, [r7, #8]
 637 002e 0B44     		add	r3, r3, r1
 638              		.loc 1 373 37
 639 0030 3032     		adds	r2, r2, #48
 640 0032 D2B2     		uxtb	r2, r2
 641              		.loc 1 373 21
 642 0034 1A70     		strb	r2, [r3]
 643 0036 0AE0     		b	.L43
 644              	.L42:
 374:Src/usbd_desc.c ****     }
 375:Src/usbd_desc.c ****     else
 376:Src/usbd_desc.c ****     {
 377:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 645              		.loc 1 377 30
 646 0038 FB68     		ldr	r3, [r7, #12]
 647 003a 1B0F     		lsrs	r3, r3, #28
 648              		.loc 1 377 43
 649 003c DAB2     		uxtb	r2, r3
 650              		.loc 1 377 14
 651 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 652 0040 5B00     		lsls	r3, r3, #1
 653 0042 1946     		mov	r1, r3
 654              		.loc 1 377 11
 655 0044 BB68     		ldr	r3, [r7, #8]
 656 0046 0B44     		add	r3, r3, r1
 657              		.loc 1 377 43
 658 0048 3732     		adds	r2, r2, #55
 659 004a D2B2     		uxtb	r2, r2
 660              		.loc 1 377 21
 661 004c 1A70     		strb	r2, [r3]
 662              	.L43:
ARM GAS  /tmp/ccsCBbpd.s 			page 19


 378:Src/usbd_desc.c ****     }
 379:Src/usbd_desc.c **** 
 380:Src/usbd_desc.c ****     value = value << 4;
 663              		.loc 1 380 11 discriminator 2
 664 004e FB68     		ldr	r3, [r7, #12]
 665 0050 1B01     		lsls	r3, r3, #4
 666 0052 FB60     		str	r3, [r7, #12]
 381:Src/usbd_desc.c **** 
 382:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 667              		.loc 1 382 12 discriminator 2
 668 0054 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 669 0056 5B00     		lsls	r3, r3, #1
 670              		.loc 1 382 9 discriminator 2
 671 0058 0133     		adds	r3, r3, #1
 672 005a BA68     		ldr	r2, [r7, #8]
 673 005c 1344     		add	r3, r3, r2
 674              		.loc 1 382 23 discriminator 2
 675 005e 0022     		movs	r2, #0
 676 0060 1A70     		strb	r2, [r3]
 369:Src/usbd_desc.c ****   {
 677              		.loc 1 369 31 discriminator 2
 678 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 679 0064 0133     		adds	r3, r3, #1
 680 0066 FB75     		strb	r3, [r7, #23]
 681              	.L41:
 369:Src/usbd_desc.c ****   {
 682              		.loc 1 369 3 discriminator 1
 683 0068 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 684 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 685 006c 9A42     		cmp	r2, r3
 686 006e D3D3     		bcc	.L44
 383:Src/usbd_desc.c ****   }
 384:Src/usbd_desc.c **** }
 687              		.loc 1 384 1
 688 0070 00BF     		nop
 689 0072 1C37     		adds	r7, r7, #28
 690              	.LCFI45:
 691              		.cfi_def_cfa_offset 4
 692 0074 BD46     		mov	sp, r7
 693              	.LCFI46:
 694              		.cfi_def_cfa_register 13
 695              		@ sp needed
 696 0076 5DF8047B 		ldr	r7, [sp], #4
 697              	.LCFI47:
 698              		.cfi_restore 7
 699              		.cfi_def_cfa_offset 0
 700 007a 7047     		bx	lr
 701              		.cfi_endproc
 702              	.LFE336:
 704              		.text
 705              	.Letext0:
 706              		.file 2 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_types.h"
 707              		.file 3 "/opt/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.3.1/include/stddef.h"
 708              		.file 4 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_types.h"
 709              		.file 5 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/reent.h"
 710              		.file 6 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/lock.h"
 711              		.file 7 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/ccsCBbpd.s 			page 20


 712              		.file 8 "/opt/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/stdlib.h"
 713              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 714              		.file 10 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 715              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 716              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 717              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 718              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 719              		.file 15 "Inc/usbd_desc.h"
ARM GAS  /tmp/ccsCBbpd.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/ccsCBbpd.s:22     .data.CDC_Desc:0000000000000000 CDC_Desc
     /tmp/ccsCBbpd.s:19     .data.CDC_Desc:0000000000000000 $d
     /tmp/ccsCBbpd.s:83     .text.USBD_CDC_DeviceDescriptor:0000000000000000 USBD_CDC_DeviceDescriptor
     /tmp/ccsCBbpd.s:139    .text.USBD_CDC_LangIDStrDescriptor:0000000000000000 USBD_CDC_LangIDStrDescriptor
     /tmp/ccsCBbpd.s:267    .text.USBD_CDC_ManufacturerStrDescriptor:0000000000000000 USBD_CDC_ManufacturerStrDescriptor
     /tmp/ccsCBbpd.s:198    .text.USBD_CDC_ProductStrDescriptor:0000000000000000 USBD_CDC_ProductStrDescriptor
     /tmp/ccsCBbpd.s:320    .text.USBD_CDC_SerialStrDescriptor:0000000000000000 USBD_CDC_SerialStrDescriptor
     /tmp/ccsCBbpd.s:377    .text.USBD_CDC_ConfigStrDescriptor:0000000000000000 USBD_CDC_ConfigStrDescriptor
     /tmp/ccsCBbpd.s:446    .text.USBD_CDC_InterfaceStrDescriptor:0000000000000000 USBD_CDC_InterfaceStrDescriptor
     /tmp/ccsCBbpd.s:35     .data.USBD_CDC_DeviceDesc:0000000000000000 USBD_CDC_DeviceDesc
     /tmp/ccsCBbpd.s:32     .data.USBD_CDC_DeviceDesc:0000000000000000 $d
     /tmp/ccsCBbpd.s:59     .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccsCBbpd.s:56     .data.USBD_LangIDDesc:0000000000000000 $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/ccsCBbpd.s:70     .data.USBD_StringSerial:0000000000000000 USBD_StringSerial
     /tmp/ccsCBbpd.s:67     .data.USBD_StringSerial:0000000000000000 $d
     /tmp/ccsCBbpd.s:75     .text.USBD_CDC_DeviceDescriptor:0000000000000000 $t
     /tmp/ccsCBbpd.s:127    .text.USBD_CDC_DeviceDescriptor:0000000000000020 $d
     /tmp/ccsCBbpd.s:132    .text.USBD_CDC_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccsCBbpd.s:182    .text.USBD_CDC_LangIDStrDescriptor:0000000000000020 $d
     /tmp/ccsCBbpd.s:187    .rodata:0000000000000000 $d
     /tmp/ccsCBbpd.s:191    .text.USBD_CDC_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccsCBbpd.s:250    .text.USBD_CDC_ProductStrDescriptor:0000000000000034 $d
     /tmp/ccsCBbpd.s:260    .text.USBD_CDC_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccsCBbpd.s:307    .text.USBD_CDC_ManufacturerStrDescriptor:0000000000000020 $d
     /tmp/ccsCBbpd.s:313    .text.USBD_CDC_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccsCBbpd.s:510    .text.Get_SerialNum:0000000000000000 Get_SerialNum
     /tmp/ccsCBbpd.s:361    .text.USBD_CDC_SerialStrDescriptor:0000000000000020 $d
     /tmp/ccsCBbpd.s:370    .text.USBD_CDC_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccsCBbpd.s:429    .text.USBD_CDC_ConfigStrDescriptor:0000000000000034 $d
     /tmp/ccsCBbpd.s:439    .text.USBD_CDC_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccsCBbpd.s:498    .text.USBD_CDC_InterfaceStrDescriptor:0000000000000034 $d
     /tmp/ccsCBbpd.s:504    .text.Get_SerialNum:0000000000000000 $t
     /tmp/ccsCBbpd.s:590    .text.IntToUnicode:0000000000000000 IntToUnicode
     /tmp/ccsCBbpd.s:575    .text.Get_SerialNum:0000000000000044 $d
     /tmp/ccsCBbpd.s:584    .text.IntToUnicode:0000000000000000 $t

UNDEFINED SYMBOLS
USBD_GetString
